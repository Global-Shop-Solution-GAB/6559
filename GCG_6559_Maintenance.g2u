Program.Sub.ScreenSU.Start
Gui.Form..Create(DashForm)
Gui.Form..Caption("Galvaware 2.0 Maintenance Menu 6559 v.2023.6.12.00")
Gui.Form..Size(1276,720)
Gui.Form..MinX(0)
Gui.Form..MinY(0)
Gui.Form..Position(0,0)
Gui.Form..AlwaysOnTop(False)
Gui.Form..FontName("Tahoma")
Gui.Form..FontSize(8.25)
Gui.Form..ControlBox(True)
Gui.Form..MaxButton(True)
Gui.Form..MinButton(True)
Gui.Form..MousePointer(0)
Gui.Form..Moveable(True)
Gui.Form..Sizeable(True)
Gui.Form..ShowInTaskBar(True)
Gui.Form..TitleBar(True)
Gui.Form..BarHelpButton(True,"","Galvaware 2.0 Maintenance Menu 6559","",2.0.1,"6/12/2023 12:00:00 AM","",0,0,False)
Gui.Form..BarRefreshButton(False)
Gui.Form..BarExportButton(True)
Gui.Form..Event(UnLoad,Form_UnLoad)
Gui.Form..AccentColor(3)
Gui.Form..Event(ExportClick,Form_ExportClick)
Gui.Form..Event(UserButtonClicked,Form_UserButtonClicked)
Gui.Form.ac7.Create(AccordionControl)
Gui.Form.ac7.Enabled(True)
Gui.Form.ac7.Visible(True)
Gui.Form.ac7.Size(130,654)
Gui.Form.ac7.Position(8,8)
Gui.Form.ac7.Dock(3)
Gui.Form.ac7.Minimized(False)
Gui.Form.ac7.Event(ElementClick,ac7_ElementClick)
Gui.Form.ac6.Create(AccordionControl)
Gui.Form.ac6.Enabled(True)
Gui.Form.ac6.Visible(True)
Gui.Form.ac6.Size(130,654)
Gui.Form.ac6.Position(8,8)
Gui.Form.ac6.Dock(3)
Gui.Form.ac6.Minimized(False)
Gui.Form.ac6.Event(ElementClick,ac6_ElementClick)
Gui.Form.ac5.Create(AccordionControl)
Gui.Form.ac5.Enabled(True)
Gui.Form.ac5.Visible(True)
Gui.Form.ac5.Size(130,654)
Gui.Form.ac5.Position(0,0)
Gui.Form.ac5.Dock(3)
Gui.Form.ac5.Minimized(False)
Gui.Form.ac5.Event(ElementClick,ac5_ElementClick)
Gui.Form.ac4.Create(AccordionControl)
Gui.Form.ac4.Enabled(True)
Gui.Form.ac4.Visible(True)
Gui.Form.ac4.Size(130,654)
Gui.Form.ac4.Position(0,0)
Gui.Form.ac4.Minimized(False)
Gui.Form.ac4.Dock(3)
Gui.Form.ac4.Event(ElementClick,ac4_ElementClick)
Gui.Form.ac3.Create(AccordionControl)
Gui.Form.ac3.Enabled(True)
Gui.Form.ac3.Visible(True)
Gui.Form.ac3.Size(130,654)
Gui.Form.ac3.Position(0,0)
Gui.Form.ac3.Dock(3)
Gui.Form.ac3.Minimized(False)
Gui.Form.ac3.Event(ElementClick,ac3_ElementClick)
Gui.Form.ac2.Create(AccordionControl)
Gui.Form.ac2.Enabled(True)
Gui.Form.ac2.Visible(False)
Gui.Form.ac2.Size(130,654)
Gui.Form.ac2.Position(130,0)
Gui.Form.ac2.Dock(3)
Gui.Form.ac2.Minimized(False)
Gui.Form.ac2.Event(ElementClick,ac2_ElementClick)
Gui.Form.ac1.Create(AccordionControl)
Gui.Form.ac1.Enabled(True)
Gui.Form.ac1.Visible(True)
Gui.Form.ac1.Size(130,654)
Gui.Form.ac1.Position(650,0)
Gui.Form.ac1.Minimized(False)
Gui.Form.ac1.Dock(3)
Gui.Form.ac1.Event(ElementClick,ac1_ElementClick)
Gui.Form.SplitContainer1.Create(SplitContainer)
Gui.Form.SplitContainer1.Enabled(True)
Gui.Form.SplitContainer1.Visible(True)
Gui.Form.SplitContainer1.Zorder(0)
Gui.Form.SplitContainer1.Size(366,654)
Gui.Form.SplitContainer1.Position(910,0)
Gui.Form.SplitContainer1.Orientation(1)
Gui.Form.SplitContainer1.SplitterPosition(55)
Gui.Form.SplitContainer1.Collapsed(False)
Gui.Form.SplitContainer1.CollapsiblePanel(0)
Gui.Form.SplitContainer1.Dock(5)
Gui.Form.SplitContainer1.FixedPanel(0)
Gui.Form.tab5.Create(Tab)
Gui.Form.tab5.Enabled(True)
Gui.Form.tab5.Visible(False)
Gui.Form.tab5.Zorder(0)
Gui.Form.tab5.Size(244,607)
Gui.Form.tab5.Position(0,0)
Gui.Form.tab5.Dock(5)
Gui.Form.tab5.FontName("Tahoma")
Gui.Form.tab5.FontSize(8.25)
Gui.Form.tab5.Parent("SplitContainer1",1)
Gui.Form.tab5.Event(Click,tab5_Click)
Gui.Form.tab5.Tabs(2)
Gui.Form.tab5.SetTab(0)
Gui.Form.tab5.Caption("Employee Maint.")
Gui.Form.tab5.SetTab(1)
Gui.Form.tab5.Caption("Org Division Maint.")
Gui.Form.gsOrg.Create(GsGridControl)
Gui.Form.gsOrg.Enabled(True)
Gui.Form.gsOrg.Visible(True)
Gui.Form.gsOrg.Zorder(0)
Gui.Form.gsOrg.Size(372,578)
Gui.Form.gsOrg.Position(0,0)
Gui.Form.gsOrg.Parent("tab5",1)
Gui.Form.gsOrg.Dock(5)
Gui.Form.gsOrg.Event(CellValueChanged,gsOrg_CellValueChanged)
Gui.Form.gsEmployee.Create(GsGridControl)
Gui.Form.gsEmployee.Enabled(True)
Gui.Form.gsEmployee.Visible(True)
Gui.Form.gsEmployee.Zorder(0)
Gui.Form.gsEmployee.Size(242,578)
Gui.Form.gsEmployee.Position(0,0)
Gui.Form.gsEmployee.Dock(5)
Gui.Form.gsEmployee.Parent("tab5",0)
Gui.Form.gsEmployee.Event(CellValueChanged,gsEmployee_CellValueChanged)
Gui.Form.tab4.Create(Tab)
Gui.Form.tab4.Enabled(True)
Gui.Form.tab4.Visible(False)
Gui.Form.tab4.Zorder(0)
Gui.Form.tab4.Size(634,607)
Gui.Form.tab4.Position(8,8)
Gui.Form.tab4.Dock(5)
Gui.Form.tab4.FontName("Tahoma")
Gui.Form.tab4.FontSize(8.25)
Gui.Form.tab4.Parent("SplitContainer1",1)
Gui.Form.tab4.Tabs(1)
Gui.Form.tab4.SetTab(0)
Gui.Form.tab4.Caption("Quotes")
Gui.Form.gsQuote.Create(GsGridControl)
Gui.Form.gsQuote.Enabled(True)
Gui.Form.gsQuote.Visible(True)
Gui.Form.gsQuote.Zorder(0)
Gui.Form.gsQuote.Size(502,578)
Gui.Form.gsQuote.Position(0,0)
Gui.Form.gsQuote.Parent("tab4",0)
Gui.Form.gsQuote.Dock(5)
Gui.Form.gsQuote.Event(RowCellClick,gsQuote_RowCellClick)
Gui.Form.frTop.Create(Frame)
Gui.Form.frTop.Enabled(True)
Gui.Form.frTop.Visible(True)
Gui.Form.frTop.Zorder(0)
Gui.Form.frTop.Size(366,55)
Gui.Form.frTop.Position(0,0)
Gui.Form.frTop.Caption("")
Gui.Form.frTop.FontName("Tahoma")
Gui.Form.frTop.FontSize(8.25)
Gui.Form.frTop.Parent("SplitContainer1",0)
Gui.Form.frTop.Dock(5)
Gui.Form.frTop.Anchor(15)
Gui.Form.ddlPriceTo.Create(DropDownList)
Gui.Form.ddlPriceTo.Enabled(True)
Gui.Form.ddlPriceTo.Visible(False)
Gui.Form.ddlPriceTo.Zorder(0)
Gui.Form.ddlPriceTo.Size(100,20)
Gui.Form.ddlPriceTo.Position(242,27)
Gui.Form.ddlPriceTo.FontName("Tahoma")
Gui.Form.ddlPriceTo.FontSize(8.25)
Gui.Form.ddlPriceTo.Parent("frTop")
Gui.Form.cmdMassUpdatePG.Create(Button)
Gui.Form.cmdMassUpdatePG.Enabled(True)
Gui.Form.cmdMassUpdatePG.Visible(False)
Gui.Form.cmdMassUpdatePG.Zorder(0)
Gui.Form.cmdMassUpdatePG.Size(75,23)
Gui.Form.cmdMassUpdatePG.Position(354,25)
Gui.Form.cmdMassUpdatePG.Caption("Mass Update")
Gui.Form.cmdMassUpdatePG.FontName("Tahoma")
Gui.Form.cmdMassUpdatePG.FontSize(8.25)
Gui.Form.cmdMassUpdatePG.Parent("frTop")
Gui.Form.cmdMassUpdatePG.Event(Click,cmdMassUpdatePG_Click)
Gui.Form.lblTo.Create(Label,"To:",False,16,13,0,220,31,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lblTo.BorderStyle(0)
Gui.Form.lblTo.Parent("frTop")
Gui.Form.lblFrom.Create(Label,"Price Group From:",False,86,13,0,11,31,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lblFrom.BorderStyle(0)
Gui.Form.lblFrom.Parent("frTop")
Gui.Form.ddlPriceFrom.Create(DropDownList)
Gui.Form.ddlPriceFrom.Enabled(True)
Gui.Form.ddlPriceFrom.Visible(False)
Gui.Form.ddlPriceFrom.Zorder(0)
Gui.Form.ddlPriceFrom.Size(100,20)
Gui.Form.ddlPriceFrom.Position(105,27)
Gui.Form.ddlPriceFrom.FontName("Tahoma")
Gui.Form.ddlPriceFrom.FontSize(8.25)
Gui.Form.ddlPriceFrom.Parent("frTop")
Gui.Form.lbl1.Create(Label,"Last Refresh:",True,65,13,0,12,4,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lbl1.BorderStyle(0)
Gui.Form.lbl1.Parent("frTop")
Gui.Form.lblPleaseWait.Create(Label,"Please wait...",False,66,13,0,501,3,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lblPleaseWait.BorderStyle(0)
Gui.Form.lblPleaseWait.ForeColor(7504122)
Gui.Form.lblPleaseWait.Parent("frTop")
Gui.Form.lblPleaseWait.Dock(0)
Gui.Form.lblPleaseWait.Anchor(1)
Gui.Form.lblLastRefresh.Create(Label,"",True,1,13,0,100,4,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lblLastRefresh.BorderStyle(0)
Gui.Form.lblLastRefresh.Parent("frTop")
Gui.Form.proBar1.Create(ProgressBar)
Gui.Form.proBar1.Visible(False)
Gui.Form.proBar1.Size(65,9)
Gui.Form.proBar1.Position(577,5)
Gui.Form.proBar1.Parent("frTop")
Gui.Form.proBar1.Anchor(1)
Gui.Form.lblFrom2.Create(Label,"New PayPeriod Date:",False,102,13,0,10,32,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lblFrom2.BorderStyle(0)
Gui.Form.lblFrom2.Parent("frTop")
Gui.Form.dtpPayPeriod.Create(DatePicker)
Gui.Form.dtpPayPeriod.Enabled(True)
Gui.Form.dtpPayPeriod.Visible(False)
Gui.Form.dtpPayPeriod.Zorder(0)
Gui.Form.dtpPayPeriod.Size(100,20)
Gui.Form.dtpPayPeriod.Position(117,28)
Gui.Form.dtpPayPeriod.CheckBox(False)
Gui.Form.dtpPayPeriod.FontName("Tahoma")
Gui.Form.dtpPayPeriod.FontSize(8.25)
Gui.Form.dtpPayPeriod.Parent("frTop")
Gui.Form.tab1.Create(Tab)
Gui.Form.tab1.Enabled(True)
Gui.Form.tab1.Visible(True)
Gui.Form.tab1.Zorder(0)
Gui.Form.tab1.Size(374,607)
Gui.Form.tab1.Position(0,0)
Gui.Form.tab1.FontName("Tahoma")
Gui.Form.tab1.FontSize(8.25)
Gui.Form.tab1.Parent("SplitContainer1",1)
Gui.Form.tab1.Dock(5)
Gui.Form.tab1.Event(Click,tab1_Click)
Gui.Form.tab1.Tabs(2)
Gui.Form.tab1.SetTab(0)
Gui.Form.tab1.Caption("Service Lines")
Gui.Form.tab1.SetTab(1)
Gui.Form.tab1.Caption("Service Categories")
Gui.Form.gsService.Create(GsGridControl)
Gui.Form.gsService.Enabled(True)
Gui.Form.gsService.Visible(True)
Gui.Form.gsService.Zorder(0)
Gui.Form.gsService.Size(892,578)
Gui.Form.gsService.Position(0,0)
Gui.Form.gsService.Parent("tab1",0)
Gui.Form.gsService.Dock(5)
Gui.Form.gsService.Event(CellValueChanged,gsService_CellValueChanged)
Gui.Form.gsCategory.Create(GsGridControl)
Gui.Form.gsCategory.Enabled(True)
Gui.Form.gsCategory.Visible(True)
Gui.Form.gsCategory.Zorder(0)
Gui.Form.gsCategory.Size(372,578)
Gui.Form.gsCategory.Position(0,0)
Gui.Form.gsCategory.Parent("tab1",1)
Gui.Form.gsCategory.Dock(5)
Gui.Form.gsCategory.Event(CellValueChanged,gsCategory_CellValueChanged)
Gui.Form.tab7.Create(Tab)
Gui.Form.tab7.Enabled(True)
Gui.Form.tab7.Visible(False)
Gui.Form.tab7.Zorder(0)
Gui.Form.tab7.Size(366,587)
Gui.Form.tab7.Position(0,0)
Gui.Form.tab7.Dock(5)
Gui.Form.tab7.FontName("Tahoma")
Gui.Form.tab7.FontSize(8.25)
Gui.Form.tab7.Parent("SplitContainer1",1)
Gui.Form.tab7.Tabs(1)
Gui.Form.tab7.SetTab(0)
Gui.Form.tab7.Caption("KPI Hours")
Gui.Form.gsKPI.Create(GsGridControl)
Gui.Form.gsKPI.Enabled(True)
Gui.Form.gsKPI.Visible(True)
Gui.Form.gsKPI.Zorder(0)
Gui.Form.gsKPI.Size(364,558)
Gui.Form.gsKPI.Position(0,0)
Gui.Form.gsKPI.Event(CellValueChanged,gsKPI_CellValueChanged)
Gui.Form.gsKPI.Parent("tab7",0)
Gui.Form.gsKPI.Dock(5)
Gui.Form.tab3.Create(Tab)
Gui.Form.tab3.Enabled(True)
Gui.Form.tab3.Visible(False)
Gui.Form.tab3.Zorder(0)
Gui.Form.tab3.Size(634,607)
Gui.Form.tab3.Position(0,0)
Gui.Form.tab3.Dock(5)
Gui.Form.tab3.FontName("Tahoma")
Gui.Form.tab3.FontSize(8.25)
Gui.Form.tab3.Parent("SplitContainer1",1)
Gui.Form.tab3.Event(Click,tab3_Click)
Gui.Form.tab3.Tabs(2)
Gui.Form.tab3.SetTab(0)
Gui.Form.tab3.Caption("Customer")
Gui.Form.tab3.SetTab(1)
Gui.Form.tab3.Caption("Location Maint.")
Gui.Form.gsLocation.Create(GsGridControl)
Gui.Form.gsLocation.Enabled(True)
Gui.Form.gsLocation.Visible(True)
Gui.Form.gsLocation.Zorder(0)
Gui.Form.gsLocation.Size(364,558)
Gui.Form.gsLocation.Position(0,0)
Gui.Form.gsLocation.Parent("tab3",1)
Gui.Form.gsLocation.Dock(5)
Gui.Form.gsLocation.Event(CellValueChanged,gsLocation_CellValueChanged)
Gui.Form.gsLocation.Event(RowCellClick,gsLocation_RowCellClick)
Gui.Form.gsCustomer.Create(GsGridControl)
Gui.Form.gsCustomer.Enabled(True)
Gui.Form.gsCustomer.Visible(True)
Gui.Form.gsCustomer.Zorder(0)
Gui.Form.gsCustomer.Size(364,558)
Gui.Form.gsCustomer.Position(0,0)
Gui.Form.gsCustomer.Parent("tab3",0)
Gui.Form.gsCustomer.Dock(5)
Gui.Form.gsCustomer.Event(CellValueChanged,gsCustomer_CellValueChanged)
Gui.Form.gsCustomer.Event(RowCellClick,gsCustomer_RowCellClick)
Gui.Form.tab2.Create(Tab)
Gui.Form.tab2.Enabled(True)
Gui.Form.tab2.Visible(False)
Gui.Form.tab2.Zorder(0)
Gui.Form.tab2.Size(634,607)
Gui.Form.tab2.Position(0,0)
Gui.Form.tab2.Dock(5)
Gui.Form.tab2.FontName("Tahoma")
Gui.Form.tab2.FontSize(8.25)
Gui.Form.tab2.Parent("SplitContainer1",1)
Gui.Form.tab2.Tabs(1)
Gui.Form.tab2.SetTab(0)
Gui.Form.tab2.Caption("Pricing")
Gui.Form.gsPricing.Create(GsGridControl)
Gui.Form.gsPricing.Enabled(True)
Gui.Form.gsPricing.Visible(True)
Gui.Form.gsPricing.Zorder(0)
Gui.Form.gsPricing.Size(494,558)
Gui.Form.gsPricing.Position(0,0)
Gui.Form.gsPricing.Parent("tab2",0)
Gui.Form.gsPricing.Dock(5)
Gui.Form.gsPricing.Event(CellValueChanged,gsPricing_CellValueChanged)
Gui.Form.gsPricing.Event(RowCellClick,gsPricing_RowCellClick)
Gui.Form.tab6.Create(Tab)
Gui.Form.tab6.Enabled(True)
Gui.Form.tab6.Visible(False)
Gui.Form.tab6.Zorder(0)
Gui.Form.tab6.Size(366,587)
Gui.Form.tab6.Position(0,0)
Gui.Form.tab6.Dock(5)
Gui.Form.tab6.FontName("Tahoma")
Gui.Form.tab6.FontSize(8.25)
Gui.Form.tab6.Parent("SplitContainer1",1)
Gui.Form.tab6.Event(Click,tab6_Click)
Gui.Form.tab6.Tabs(5)
Gui.Form.tab6.SetTab(0)
Gui.Form.tab6.Caption("Head Rack/Resource Maint.")
Gui.Form.tab6.SetTab(1)
Gui.Form.tab6.Caption("Material Maint.")
Gui.Form.tab6.SetTab(2)
Gui.Form.tab6.Caption("Issue Maint.")
Gui.Form.tab6.SetTab(3)
Gui.Form.tab6.Caption("Rework Maint.")
Gui.Form.tab6.SetTab(4)
Gui.Form.tab6.Caption("Yard Maint.")
Gui.Form.gsYard.Create(GsGridControl)
Gui.Form.gsYard.Enabled(True)
Gui.Form.gsYard.Visible(True)
Gui.Form.gsYard.Zorder(0)
Gui.Form.gsYard.Size(364,558)
Gui.Form.gsYard.Position(0,0)
Gui.Form.gsYard.Parent("tab6",4)
Gui.Form.gsYard.Dock(5)
Gui.Form.gsYard.Event(CellValueChanged,gsYard_CellValueChanged)
Gui.Form.gsRework.Create(GsGridControl)
Gui.Form.gsRework.Enabled(True)
Gui.Form.gsRework.Visible(True)
Gui.Form.gsRework.Zorder(0)
Gui.Form.gsRework.Size(364,558)
Gui.Form.gsRework.Position(0,0)
Gui.Form.gsRework.Parent("tab6",3)
Gui.Form.gsRework.Dock(5)
Gui.Form.gsRework.Event(CellValueChanged,gsRework_CellValueChanged)
Gui.Form.gsIssue.Create(GsGridControl)
Gui.Form.gsIssue.Enabled(True)
Gui.Form.gsIssue.Visible(True)
Gui.Form.gsIssue.Zorder(0)
Gui.Form.gsIssue.Size(100,50)
Gui.Form.gsIssue.Position(0,0)
Gui.Form.gsIssue.Dock(5)
Gui.Form.gsIssue.Parent("tab6",2)
Gui.Form.gsIssue.Event(CellValueChanged,gsIssue_CellValueChanged)
Gui.Form.gsMaterial.Create(GsGridControl)
Gui.Form.gsMaterial.Enabled(True)
Gui.Form.gsMaterial.Visible(True)
Gui.Form.gsMaterial.Zorder(0)
Gui.Form.gsMaterial.Size(100,50)
Gui.Form.gsMaterial.Position(0,0)
Gui.Form.gsMaterial.Dock(5)
Gui.Form.gsMaterial.Parent("tab6",1)
Gui.Form.gsMaterial.Event(CellValueChanged,gsMaterial_CellValueChanged)
Gui.Form.gsResource.Create(GsGridControl)
Gui.Form.gsResource.Enabled(True)
Gui.Form.gsResource.Visible(True)
Gui.Form.gsResource.Zorder(0)
Gui.Form.gsResource.Size(494,558)
Gui.Form.gsResource.Position(0,0)
Gui.Form.gsResource.Parent("tab6",0)
Gui.Form.gsResource.Dock(5)
Gui.Form.gsResource.Event(CellValueChanged,gsResource_CellValueChanged)
Gui.FormAddService..Create(BaseForm)
Gui.FormAddService..Caption("Service - Record Maintenance")
Gui.FormAddService..Size(564,396)
Gui.FormAddService..MinX(0)
Gui.FormAddService..MinY(0)
Gui.FormAddService..Position(0,0)
Gui.FormAddService..AlwaysOnTop(False)
Gui.FormAddService..FontName("Tahoma")
Gui.FormAddService..FontSize(8.25)
Gui.FormAddService..ControlBox(True)
Gui.FormAddService..MaxButton(True)
Gui.FormAddService..MinButton(True)
Gui.FormAddService..MousePointer(0)
Gui.FormAddService..Moveable(True)
Gui.FormAddService..Sizeable(True)
Gui.FormAddService..ShowInTaskBar(True)
Gui.FormAddService..TitleBar(True)
Gui.FormAddService..Event(UnLoad,FormAddService_UnLoad)
Gui.FormAddService.lblService.Create(Label,"Service ID:",True,53,13,0,12,31,True,0,"Tahoma",8.25,,0,0)
Gui.FormAddService.lblService.BorderStyle(0)
Gui.FormAddService.lblService2.Create(Label,"Description:",True,57,13,0,12,51,True,0,"Tahoma",8.25,,0,0)
Gui.FormAddService.lblService2.BorderStyle(0)
Gui.FormAddService.lblService3.Create(Label,"Unit Description:",True,79,13,0,12,71,True,0,"Tahoma",8.25,,0,0)
Gui.FormAddService.lblService3.BorderStyle(0)
Gui.FormAddService.lblService4.Create(Label,"Unit Abbreviation:",True,87,13,0,12,91,True,0,"Tahoma",8.25,,0,0)
Gui.FormAddService.lblService4.BorderStyle(0)
Gui.FormAddService.lblService5.Create(Label,"Dip Allocation:",True,68,13,0,12,111,True,0,"Tahoma",8.25,,0,0)
Gui.FormAddService.lblService5.BorderStyle(0)
Gui.FormAddService.lblService6.Create(Label,"Weight Allocation:",True,87,13,0,12,131,True,0,"Tahoma",8.25,,0,0)
Gui.FormAddService.lblService6.BorderStyle(0)
Gui.FormAddService.lblService7.Create(Label,"Aggreate Allocation:",True,98,13,0,12,151,True,0,"Tahoma",8.25,,0,0)
Gui.FormAddService.lblService7.BorderStyle(0)
Gui.FormAddService.lblService8.Create(Label,"HV (High Volume) Allocation:",True,135,13,0,12,171,True,0,"Tahoma",8.25,,0,0)
Gui.FormAddService.lblService8.BorderStyle(0)
Gui.FormAddService.lblService9.Create(Label,"Production Allocation:",True,104,13,0,12,191,True,0,"Tahoma",8.25,,0,0)
Gui.FormAddService.lblService9.BorderStyle(0)
Gui.FormAddService.lblService10.Create(Label,"Invoice Allocation:",True,88,13,0,12,211,True,0,"Tahoma",8.25,,0,0)
Gui.FormAddService.lblService10.BorderStyle(0)
Gui.FormAddService.lblService11.Create(Label,"Transport Allocation:",True,100,13,0,12,231,True,0,"Tahoma",8.25,,0,0)
Gui.FormAddService.lblService11.BorderStyle(0)
Gui.FormAddService.lblService12.Create(Label,"Standard Weight:",True,85,13,0,12,251,True,0,"Tahoma",8.25,,0,0)
Gui.FormAddService.lblService12.BorderStyle(0)
Gui.FormAddService.lblService13.Create(Label,"Category ID:",True,63,13,0,12,271,True,0,"Tahoma",8.25,,0,0)
Gui.FormAddService.lblService13.BorderStyle(0)
Gui.FormAddService.lblService14.Create(Label,"User Last Access:",False,85,13,0,12,291,True,0,"Tahoma",8.25,,0,0)
Gui.FormAddService.lblService14.BorderStyle(0)
Gui.FormAddService.lblService15.Create(Label,"User Last Access Date Time:",False,136,13,0,12,311,True,0,"Tahoma",8.25,,0,0)
Gui.FormAddService.lblService15.BorderStyle(0)
Gui.FormAddService.lblService16.Create(Label,"Row Update Serial:",False,92,13,0,12,331,True,0,"Tahoma",8.25,,0,0)
Gui.FormAddService.lblService16.BorderStyle(0)
Gui.FormAddService.cmdUpdateService.Create(Button)
Gui.FormAddService.cmdUpdateService.Enabled(True)
Gui.FormAddService.cmdUpdateService.Visible(True)
Gui.FormAddService.cmdUpdateService.Zorder(0)
Gui.FormAddService.cmdUpdateService.Size(75,23)
Gui.FormAddService.cmdUpdateService.Position(12,6)
Gui.FormAddService.cmdUpdateService.Caption("Insert")
Gui.FormAddService.cmdUpdateService.FontName("Tahoma")
Gui.FormAddService.cmdUpdateService.FontSize(8.25)
Gui.FormAddService.cmdUpdateService.Event(Click,cmdUpdateService_Click)
Gui.FormAddService.cmdDeleteService.Create(Button)
Gui.FormAddService.cmdDeleteService.Enabled(True)
Gui.FormAddService.cmdDeleteService.Visible(False)
Gui.FormAddService.cmdDeleteService.Zorder(0)
Gui.FormAddService.cmdDeleteService.Size(75,23)
Gui.FormAddService.cmdDeleteService.Position(95,6)
Gui.FormAddService.cmdDeleteService.Caption("Delete")
Gui.FormAddService.cmdDeleteService.FontName("Tahoma")
Gui.FormAddService.cmdDeleteService.FontSize(8.25)
Gui.FormAddService.cmdDeleteService.Event(Click,cmdDeleteService_Click)
Gui.FormAddService.txtServiceID.Create(TextBox,"",True,100,20,0,180,30,True,0,"Tahoma",8.25,,1)
Gui.FormAddService.txtServiceID.MaxLength(10)
Gui.FormAddService.txtServiceDesc.Create(TextBox,"",True,367,20,0,180,50,True,0,"Tahoma",8.25,,1)
Gui.FormAddService.txtServiceDesc.MaxLength(200)
Gui.FormAddService.txtServiceUnitDesc.Create(TextBox,"",True,100,20,0,180,70,True,0,"Tahoma",8.25,,1)
Gui.FormAddService.txtServiceUnitDesc.MaxLength(100)
Gui.FormAddService.txtServiceUnitAbbrv.Create(TextBox,"",True,100,20,0,180,90,True,0,"Tahoma",8.25,,1)
Gui.FormAddService.txtServiceUnitAbbrv.MaxLength(10)
Gui.FormAddService.chkServiceDip.Create(CheckBox)
Gui.FormAddService.chkServiceDip.Enabled(True)
Gui.FormAddService.chkServiceDip.Visible(True)
Gui.FormAddService.chkServiceDip.Zorder(0)
Gui.FormAddService.chkServiceDip.Size(75,20)
Gui.FormAddService.chkServiceDip.Position(180,110)
Gui.FormAddService.chkServiceDip.Caption("")
Gui.FormAddService.chkServiceDip.FontName("Tahoma")
Gui.FormAddService.chkServiceDip.FontSize(8.25)
Gui.FormAddService.chkServiceWeight.Create(CheckBox)
Gui.FormAddService.chkServiceWeight.Enabled(True)
Gui.FormAddService.chkServiceWeight.Visible(True)
Gui.FormAddService.chkServiceWeight.Zorder(0)
Gui.FormAddService.chkServiceWeight.Size(75,20)
Gui.FormAddService.chkServiceWeight.Position(180,130)
Gui.FormAddService.chkServiceWeight.Caption("")
Gui.FormAddService.chkServiceWeight.FontName("Tahoma")
Gui.FormAddService.chkServiceWeight.FontSize(8.25)
Gui.FormAddService.chkServiceAggregate.Create(CheckBox)
Gui.FormAddService.chkServiceAggregate.Enabled(True)
Gui.FormAddService.chkServiceAggregate.Visible(True)
Gui.FormAddService.chkServiceAggregate.Zorder(0)
Gui.FormAddService.chkServiceAggregate.Size(75,20)
Gui.FormAddService.chkServiceAggregate.Position(180,150)
Gui.FormAddService.chkServiceAggregate.Caption("")
Gui.FormAddService.chkServiceAggregate.FontName("Tahoma")
Gui.FormAddService.chkServiceAggregate.FontSize(8.25)
Gui.FormAddService.chkServiceHV.Create(CheckBox)
Gui.FormAddService.chkServiceHV.Enabled(True)
Gui.FormAddService.chkServiceHV.Visible(True)
Gui.FormAddService.chkServiceHV.Zorder(0)
Gui.FormAddService.chkServiceHV.Size(75,20)
Gui.FormAddService.chkServiceHV.Position(180,170)
Gui.FormAddService.chkServiceHV.Caption("")
Gui.FormAddService.chkServiceHV.FontName("Tahoma")
Gui.FormAddService.chkServiceHV.FontSize(8.25)
Gui.FormAddService.chkServiceProduction.Create(CheckBox)
Gui.FormAddService.chkServiceProduction.Enabled(True)
Gui.FormAddService.chkServiceProduction.Visible(True)
Gui.FormAddService.chkServiceProduction.Zorder(0)
Gui.FormAddService.chkServiceProduction.Size(75,20)
Gui.FormAddService.chkServiceProduction.Position(180,190)
Gui.FormAddService.chkServiceProduction.Caption("")
Gui.FormAddService.chkServiceProduction.FontName("Tahoma")
Gui.FormAddService.chkServiceProduction.FontSize(8.25)
Gui.FormAddService.chkServiceInvoice.Create(CheckBox)
Gui.FormAddService.chkServiceInvoice.Enabled(True)
Gui.FormAddService.chkServiceInvoice.Visible(True)
Gui.FormAddService.chkServiceInvoice.Zorder(0)
Gui.FormAddService.chkServiceInvoice.Size(75,20)
Gui.FormAddService.chkServiceInvoice.Position(180,210)
Gui.FormAddService.chkServiceInvoice.Caption("")
Gui.FormAddService.chkServiceInvoice.FontName("Tahoma")
Gui.FormAddService.chkServiceInvoice.FontSize(8.25)
Gui.FormAddService.chkServiceTransport.Create(CheckBox)
Gui.FormAddService.chkServiceTransport.Enabled(True)
Gui.FormAddService.chkServiceTransport.Visible(True)
Gui.FormAddService.chkServiceTransport.Zorder(0)
Gui.FormAddService.chkServiceTransport.Size(75,20)
Gui.FormAddService.chkServiceTransport.Position(180,230)
Gui.FormAddService.chkServiceTransport.Caption("")
Gui.FormAddService.chkServiceTransport.FontName("Tahoma")
Gui.FormAddService.chkServiceTransport.FontSize(8.25)
Gui.FormAddService.txtServiceStndWeight.Create(TextBox,"0.00",True,100,20,0,180,250,True,0,"Tahoma",8.25,,1)
Gui.FormAddService.txtServiceStndWeight.MaxLength(18)
Gui.FormAddService.txtServiceStndWeight.NumericOnly(1)
Gui.FormAddService.ddlCatID.Create(DropDownList)
Gui.FormAddService.ddlCatID.Enabled(True)
Gui.FormAddService.ddlCatID.Visible(True)
Gui.FormAddService.ddlCatID.Zorder(0)
Gui.FormAddService.ddlCatID.Size(213,20)
Gui.FormAddService.ddlCatID.Position(180,270)
Gui.FormAddService.ddlCatID.FontName("Tahoma")
Gui.FormAddService.ddlCatID.FontSize(8.25)
Gui.FormAddService.txtServiceUserLast.Create(TextBox,"",False,100,20,0,180,290,False,0,"Tahoma",8.25,,1)
Gui.FormAddService.txtServiceUserLast.MaxLength(10)
Gui.FormAddService.txtServiceUserLastdate.Create(TextBox,"",False,100,20,0,180,310,False,0,"Tahoma",8.25,,1)
Gui.FormAddService.txtServiceUserLastdate.MaxLength(10)
Gui.FormAddService.txtRowupdateSerial.Create(TextBox,"",False,100,20,0,180,330,False,0,"Tahoma",8.25,,1)
Gui.FormAddService.txtRowupdateSerial.MaxLength(10)
Gui.FormAddService.chkServiceFreight.Create(CheckBox)
Gui.FormAddService.chkServiceFreight.Enabled(True)
Gui.FormAddService.chkServiceFreight.Visible(True)
Gui.FormAddService.chkServiceFreight.Zorder(0)
Gui.FormAddService.chkServiceFreight.Size(75,20)
Gui.FormAddService.chkServiceFreight.Position(362,110)
Gui.FormAddService.chkServiceFreight.Caption("")
Gui.FormAddService.chkServiceFreight.FontName("Tahoma")
Gui.FormAddService.chkServiceFreight.FontSize(8.25)
Gui.FormAddService.chkServiceQA.Create(CheckBox)
Gui.FormAddService.chkServiceQA.Enabled(True)
Gui.FormAddService.chkServiceQA.Visible(True)
Gui.FormAddService.chkServiceQA.Zorder(0)
Gui.FormAddService.chkServiceQA.Size(75,20)
Gui.FormAddService.chkServiceQA.Position(362,131)
Gui.FormAddService.chkServiceQA.Caption("")
Gui.FormAddService.chkServiceQA.FontName("Tahoma")
Gui.FormAddService.chkServiceQA.FontSize(8.25)
Gui.FormAddService.lblService17.Create(Label,"Freight:",True,38,13,0,321,113,True,0,"Tahoma",8.25,,0,0)
Gui.FormAddService.lblService17.BorderStyle(0)
Gui.FormAddService.lblService18.Create(Label,"QA:",True,19,13,0,339,133,True,0,"Tahoma",8.25,,0,0)
Gui.FormAddService.lblService18.BorderStyle(0)
Gui.FormQuote..Create(DashForm)
Gui.FormQuote..Caption("Add/Update Quote")
Gui.FormQuote..Size(910,656)
Gui.FormQuote..MinX(0)
Gui.FormQuote..MinY(0)
Gui.FormQuote..Position(0,0)
Gui.FormQuote..AlwaysOnTop(False)
Gui.FormQuote..FontName("Tahoma")
Gui.FormQuote..FontSize(8.25)
Gui.FormQuote..ControlBox(True)
Gui.FormQuote..MaxButton(True)
Gui.FormQuote..MinButton(True)
Gui.FormQuote..MousePointer(0)
Gui.FormQuote..Moveable(True)
Gui.FormQuote..Sizeable(True)
Gui.FormQuote..ShowInTaskBar(True)
Gui.FormQuote..TitleBar(True)
Gui.FormQuote..Event(UnLoad,FormQuote_UnLoad)
Gui.FormQuote..Event(UserButtonClicked,FormQuote_UserButtonClicked)
Gui.FormQuote.SplitContainer1.Create(SplitContainer)
Gui.FormQuote.SplitContainer1.Enabled(True)
Gui.FormQuote.SplitContainer1.Visible(True)
Gui.FormQuote.SplitContainer1.Zorder(0)
Gui.FormQuote.SplitContainer1.Size(910,626)
Gui.FormQuote.SplitContainer1.Position(0,0)
Gui.FormQuote.SplitContainer1.Orientation(1)
Gui.FormQuote.SplitContainer1.SplitterPosition(261)
Gui.FormQuote.SplitContainer1.Collapsed(False)
Gui.FormQuote.SplitContainer1.Dock(5)
Gui.FormQuote.SplitContainer1.FixedPanel(0)
Gui.FormQuote.txtContactID.Create(TextBox,"",False,100,20,0,262,106,False,0,"Tahoma",8.25,,1)
Gui.FormQuote.txtContactID.Parent("SplitContainer1",0)
Gui.FormQuote.lbl1.Create(Label,"Quote ID:",True,48,13,0,27,7,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lbl1.BorderStyle(0)
Gui.FormQuote.lbl1.Parent("SplitContainer1",0)
Gui.FormQuote.txtLastAccessUser.Create(TextBox,"",True,145,20,0,546,189,False,0,"Tahoma",8.25,,1)
Gui.FormQuote.txtLastAccessUser.Parent("SplitContainer1",0)
Gui.FormQuote.lblAddressLine2.Create(Label,"Address Line 2",True,70,13,0,80,140,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lblAddressLine2.BorderStyle(0)
Gui.FormQuote.lblAddressLine2.Parent("SplitContainer1",0)
Gui.FormQuote.lblCustName.Create(Label,"CustName",True,49,13,0,188,60,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lblCustName.BorderStyle(0)
Gui.FormQuote.lblCustName.Parent("SplitContainer1",0)
Gui.FormQuote.lbl13.Create(Label,"Accepted Flag:",True,72,13,0,470,167,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lbl13.BorderStyle(0)
Gui.FormQuote.lbl13.Parent("SplitContainer1",0)
Gui.FormQuote.txtEstimate.Create(TextBox,"",True,145,20,0,546,140,True,0,"Tahoma",8.25,,1)
Gui.FormQuote.txtEstimate.Parent("SplitContainer1",0)
Gui.FormQuote.txtEstimate.NumericOnly(2)
Gui.FormQuote.lblTelephoneContact.Create(Label,"Telephone Line 2",True,81,13,0,263,90,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lblTelephoneContact.BorderStyle(0)
Gui.FormQuote.lblTelephoneContact.Parent("SplitContainer1",0)
Gui.FormQuote.dtpValidTo.Create(DatePicker)
Gui.FormQuote.dtpValidTo.Enabled(True)
Gui.FormQuote.dtpValidTo.Visible(True)
Gui.FormQuote.dtpValidTo.Zorder(0)
Gui.FormQuote.dtpValidTo.Size(100,20)
Gui.FormQuote.dtpValidTo.Position(696,110)
Gui.FormQuote.dtpValidTo.CheckBox(False)
Gui.FormQuote.dtpValidTo.Value(V.Ambient.Now)
Gui.FormQuote.dtpValidTo.FontName("Tahoma")
Gui.FormQuote.dtpValidTo.FontSize(8.25)
Gui.FormQuote.dtpValidTo.Parent("SplitContainer1",0)
Gui.FormQuote.txtQuoteID.Create(TextBox,"",True,100,20,0,78,4,False,0,"Tahoma",8.25,,1)
Gui.FormQuote.txtQuoteID.Parent("SplitContainer1",0)
Gui.FormQuote.lbl15.Create(Label,"Reference:",True,54,13,0,21,185,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lbl15.BorderStyle(0)
Gui.FormQuote.lbl15.Parent("SplitContainer1",0)
Gui.FormQuote.txtINTDescription.Create(TextboxM)
Gui.FormQuote.txtINTDescription.Enabled(True)
Gui.FormQuote.txtINTDescription.Visible(True)
Gui.FormQuote.txtINTDescription.Zorder(0)
Gui.FormQuote.txtINTDescription.Size(354,73)
Gui.FormQuote.txtINTDescription.Position(546,28)
Gui.FormQuote.txtINTDescription.FontName("Tahoma")
Gui.FormQuote.txtINTDescription.FontSize(8.25)
Gui.FormQuote.txtINTDescription.Parent("SplitContainer1",0)
Gui.FormQuote.lbl10.Create(Label,"Valid From:",True,53,13,0,489,113,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lbl10.BorderStyle(0)
Gui.FormQuote.lbl10.Parent("SplitContainer1",0)
Gui.FormQuote.cmdUpdate.Create(Button)
Gui.FormQuote.cmdUpdate.Enabled(True)
Gui.FormQuote.cmdUpdate.Visible(False)
Gui.FormQuote.cmdUpdate.Zorder(0)
Gui.FormQuote.cmdUpdate.Size(75,23)
Gui.FormQuote.cmdUpdate.Position(153,0)
Gui.FormQuote.cmdUpdate.Caption("Update")
Gui.FormQuote.cmdUpdate.FontName("Tahoma")
Gui.FormQuote.cmdUpdate.FontSize(8.25)
Gui.FormQuote.cmdUpdate.Parent("SplitContainer1",1)
Gui.FormQuote.cmdUpdate.Event(Click,cmdUpdate_Click)
Gui.FormQuote.cmdAllocate.Create(Button)
Gui.FormQuote.cmdAllocate.Enabled(True)
Gui.FormQuote.cmdAllocate.Visible(True)
Gui.FormQuote.cmdAllocate.Zorder(0)
Gui.FormQuote.cmdAllocate.Size(75,23)
Gui.FormQuote.cmdAllocate.Position(1,0)
Gui.FormQuote.cmdAllocate.Caption("Allocate")
Gui.FormQuote.cmdAllocate.FontName("Tahoma")
Gui.FormQuote.cmdAllocate.FontSize(8.25)
Gui.FormQuote.cmdAllocate.Parent("SplitContainer1",1)
Gui.FormQuote.cmdAllocate.Event(Click,cmdAllocate_Click)
Gui.FormQuote.cmdRemove.Create(Button)
Gui.FormQuote.cmdRemove.Enabled(True)
Gui.FormQuote.cmdRemove.Visible(True)
Gui.FormQuote.cmdRemove.Zorder(0)
Gui.FormQuote.cmdRemove.Size(75,23)
Gui.FormQuote.cmdRemove.Position(76,0)
Gui.FormQuote.cmdRemove.Caption("Remove")
Gui.FormQuote.cmdRemove.FontName("Tahoma")
Gui.FormQuote.cmdRemove.FontSize(8.25)
Gui.FormQuote.cmdRemove.Parent("SplitContainer1",1)
Gui.FormQuote.cmdRemove.Event(Click,cmdRemove_Click)
Gui.FormQuote.tabService.Create(Tab)
Gui.FormQuote.tabService.Enabled(True)
Gui.FormQuote.tabService.Visible(True)
Gui.FormQuote.tabService.Zorder(0)
Gui.FormQuote.tabService.Size(907,313)
Gui.FormQuote.tabService.Position(1,23)
Gui.FormQuote.tabService.FontName("Tahoma")
Gui.FormQuote.tabService.FontSize(8.25)
Gui.FormQuote.tabService.Parent("SplitContainer1",1)
Gui.FormQuote.tabService.Anchor(15)
Gui.FormQuote.tabService.Tabs(1)
Gui.FormQuote.tabService.SetTab(0)
Gui.FormQuote.tabService.Caption("Service")
Gui.FormQuote.GsQuoteLines.Create(GsGridControl)
Gui.FormQuote.GsQuoteLines.Enabled(True)
Gui.FormQuote.GsQuoteLines.Visible(True)
Gui.FormQuote.GsQuoteLines.Zorder(0)
Gui.FormQuote.GsQuoteLines.Size(905,284)
Gui.FormQuote.GsQuoteLines.Position(0,0)
Gui.FormQuote.GsQuoteLines.Parent("tabService",0)
Gui.FormQuote.GsQuoteLines.Dock(5)
Gui.FormQuote.GsQuoteLines.Event(CellValueChanged,GsQuoteLines_CellValueChanged)
Gui.FormQuote.GsQuoteLines.Event(RowCellClick,GsQuoteLines_RowCellClick)
Gui.FormQuote.lbl14.Create(Label,"SysUser Last Access:",True,102,13,0,440,192,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lbl14.BorderStyle(0)
Gui.FormQuote.lbl14.Parent("SplitContainer1",0)
Gui.FormQuote.dtpValidFrom.Create(DatePicker)
Gui.FormQuote.dtpValidFrom.Enabled(True)
Gui.FormQuote.dtpValidFrom.Visible(True)
Gui.FormQuote.dtpValidFrom.Zorder(0)
Gui.FormQuote.dtpValidFrom.Size(100,20)
Gui.FormQuote.dtpValidFrom.Position(546,110)
Gui.FormQuote.dtpValidFrom.CheckBox(False)
Gui.FormQuote.dtpValidFrom.FontName("Tahoma")
Gui.FormQuote.dtpValidFrom.FontSize(8.25)
Gui.FormQuote.dtpValidFrom.Parent("SplitContainer1",0)
Gui.FormQuote.dtpValidFrom.Value(V.Ambient.Now)
Gui.FormQuote.txtShipToID.Create(TextBox,"",True,100,20,0,78,57,False,0,"Tahoma",8.25,,1)
Gui.FormQuote.txtShipToID.Parent("SplitContainer1",0)
Gui.FormQuote.txtQuotedBy.Create(TextBox,"",True,145,20,0,546,4,False,0,"Tahoma",8.25,,1)
Gui.FormQuote.txtQuotedBy.Parent("SplitContainer1",0)
Gui.FormQuote.lbl16.Create(Label,"kg",True,11,13,0,695,143,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lbl16.BorderStyle(0)
Gui.FormQuote.lbl16.Parent("SplitContainer1",0)
Gui.FormQuote.txtLastAccessDateTime.Create(TextBox,"",True,129,20,0,699,189,False,0,"Tahoma",8.25,,1)
Gui.FormQuote.txtLastAccessDateTime.Parent("SplitContainer1",0)
Gui.FormQuote.txtAcceptedFlag.Create(TextBox,"",False,145,20,0,701,164,False,0,"Tahoma",8.25,,1)
Gui.FormQuote.txtAcceptedFlag.Parent("SplitContainer1",0)
Gui.FormQuote.lblAddressLine3.Create(Label,"Address Line 3",True,70,13,0,80,155,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lblAddressLine3.BorderStyle(0)
Gui.FormQuote.lblAddressLine3.Parent("SplitContainer1",0)
Gui.FormQuote.lblAddressLine1.Create(Label,"Address Line 1",True,70,13,0,80,125,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lblAddressLine1.BorderStyle(0)
Gui.FormQuote.lblAddressLine1.Parent("SplitContainer1",0)
Gui.FormQuote.lbl4.Create(Label,"Contact ID:",True,56,13,0,19,89,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lbl4.BorderStyle(0)
Gui.FormQuote.lbl4.Parent("SplitContainer1",0)
Gui.FormQuote.txtCustID.Create(TextBox,"",True,100,20,0,78,30,False,0,"Tahoma",8.25,,1)
Gui.FormQuote.txtCustID.Parent("SplitContainer1",0)
Gui.FormQuote.lbl8.Create(Label,"Description:",True,57,13,0,484,32,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lbl8.BorderStyle(0)
Gui.FormQuote.lbl8.Parent("SplitContainer1",0)
Gui.FormQuote.lbl3.Create(Label,"ShipTo ID:",True,50,13,0,26,60,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lbl3.BorderStyle(0)
Gui.FormQuote.lbl3.Parent("SplitContainer1",0)
Gui.FormQuote.lbl2.Create(Label,"Customer ID:",True,64,13,0,11,32,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lbl2.BorderStyle(0)
Gui.FormQuote.lbl2.Parent("SplitContainer1",0)
Gui.FormQuote.lbl9.Create(Label,"(Internal)",True,46,13,0,491,48,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lbl9.BorderStyle(0)
Gui.FormQuote.lbl9.Parent("SplitContainer1",0)
Gui.FormQuote.lbl7.Create(Label,"Quoted By:",True,55,13,0,487,7,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lbl7.BorderStyle(0)
Gui.FormQuote.lbl7.Parent("SplitContainer1",0)
Gui.FormQuote.lbl6.Create(Label,"Customer",True,46,13,0,21,173,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lbl6.BorderStyle(0)
Gui.FormQuote.lbl6.Parent("SplitContainer1",0)
Gui.FormQuote.ddlAccepted.Create(DropDownList)
Gui.FormQuote.ddlAccepted.Enabled(True)
Gui.FormQuote.ddlAccepted.Visible(True)
Gui.FormQuote.ddlAccepted.Zorder(0)
Gui.FormQuote.ddlAccepted.Size(145,20)
Gui.FormQuote.ddlAccepted.Position(546,164)
Gui.FormQuote.ddlAccepted.FontName("Tahoma")
Gui.FormQuote.ddlAccepted.FontSize(8.25)
Gui.FormQuote.ddlAccepted.Event(Change,ddlAccepted_Change)
Gui.FormQuote.ddlAccepted.Parent("SplitContainer1",0)
Gui.FormQuote.txtCustRef.Create(TextboxM)
Gui.FormQuote.txtCustRef.Enabled(True)
Gui.FormQuote.txtCustRef.Visible(True)
Gui.FormQuote.txtCustRef.Zorder(0)
Gui.FormQuote.txtCustRef.Size(336,73)
Gui.FormQuote.txtCustRef.Position(78,173)
Gui.FormQuote.txtCustRef.FontName("Tahoma")
Gui.FormQuote.txtCustRef.FontSize(8.25)
Gui.FormQuote.txtCustRef.Parent("SplitContainer1",0)
Gui.FormQuote.lbl12.Create(Label,"Estimate:",True,45,13,0,497,143,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lbl12.BorderStyle(0)
Gui.FormQuote.lbl12.Parent("SplitContainer1",0)
Gui.FormQuote.lbl11.Create(Label,"Valid To:",True,41,13,0,651,114,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuote.lbl11.BorderStyle(0)
Gui.FormQuote.lbl11.Parent("SplitContainer1",0)
Gui.FormQuote.txtQID.Create(TextBox,"",False,100,20,0,233,274,True,0,"Tahoma",8.25,,1)
Gui.FormQuote.ddlContact.Create(DropDownList)
Gui.FormQuote.ddlContact.Enabled(True)
Gui.FormQuote.ddlContact.Visible(True)
Gui.FormQuote.ddlContact.Zorder(0)
Gui.FormQuote.ddlContact.Size(177,20)
Gui.FormQuote.ddlContact.Position(78,87)
Gui.FormQuote.ddlContact.FontName("Tahoma")
Gui.FormQuote.ddlContact.FontSize(8.25)
Gui.FormQuote.ddlContact.Event(Change,ddlContact_Change)
Gui.FormPriceGroup..Create(DashForm)
Gui.FormPriceGroup..Caption("Add/Update Price Group 6559")
Gui.FormPriceGroup..Size(920,742)
Gui.FormPriceGroup..MinX(0)
Gui.FormPriceGroup..MinY(0)
Gui.FormPriceGroup..Position(0,0)
Gui.FormPriceGroup..AlwaysOnTop(False)
Gui.FormPriceGroup..FontName("Tahoma")
Gui.FormPriceGroup..FontSize(8.25)
Gui.FormPriceGroup..ControlBox(True)
Gui.FormPriceGroup..MaxButton(True)
Gui.FormPriceGroup..MinButton(True)
Gui.FormPriceGroup..MousePointer(0)
Gui.FormPriceGroup..Moveable(True)
Gui.FormPriceGroup..Sizeable(True)
Gui.FormPriceGroup..ShowInTaskBar(True)
Gui.FormPriceGroup..TitleBar(True)
Gui.FormPriceGroup..Event(ExportClick,FormPriceGroup_ExportClick)
Gui.FormPriceGroup..Event(UnLoad,FormPriceGroup_UnLoad)
Gui.FormPriceGroup..Event(UserButtonClicked,FormPriceGroup_UserButtonClicked)
Gui.FormPriceGroup..BarExportButton(True)
Gui.FormPriceGroup.SplitContainer1.Create(SplitContainer)
Gui.FormPriceGroup.SplitContainer1.Enabled(True)
Gui.FormPriceGroup.SplitContainer1.Visible(True)
Gui.FormPriceGroup.SplitContainer1.Zorder(0)
Gui.FormPriceGroup.SplitContainer1.Size(920,676)
Gui.FormPriceGroup.SplitContainer1.Position(0,0)
Gui.FormPriceGroup.SplitContainer1.Orientation(1)
Gui.FormPriceGroup.SplitContainer1.SplitterPosition(83)
Gui.FormPriceGroup.SplitContainer1.Collapsed(False)
Gui.FormPriceGroup.SplitContainer1.Dock(5)
Gui.FormPriceGroup.SplitContainer1.FixedPanel(0)
Gui.FormPriceGroup.txtPriceGroupID.Create(TextBox,"",True,100,20,0,90,7,False,0,"Tahoma",8.25,,1)
Gui.FormPriceGroup.txtPriceGroupID.Parent("SplitContainer1",0)
Gui.FormPriceGroup.txtPriceGroupDesc.Create(TextBox,"",True,485,20,0,90,32,True,0,"Tahoma",8.25,,1)
Gui.FormPriceGroup.txtPriceGroupDesc.Parent("SplitContainer1",0)
Gui.FormPriceGroup.txtPriceGroupDesc.MaxLength(50)
Gui.FormPriceGroup.txtWOMinCharge.Create(TextBox,"",True,100,20,0,90,57,True,0,"Tahoma",8.25,,1)
Gui.FormPriceGroup.txtWOMinCharge.Parent("SplitContainer1",0)
Gui.FormPriceGroup.txtWOMinCharge.NumericOnly(1)
Gui.FormPriceGroup.txtWOMinCharge.MaxLength(16)
Gui.FormPriceGroup.txtSysUser.Create(TextBox,"",True,155,20,0,703,28,False,0,"Tahoma",8.25,,1)
Gui.FormPriceGroup.txtSysUser.Parent("SplitContainer1",0)
Gui.FormPriceGroup.txtSysUser2.Create(TextBox,"",True,155,20,0,703,55,False,0,"Tahoma",8.25,,1)
Gui.FormPriceGroup.txtSysUser2.Parent("SplitContainer1",0)
Gui.FormPriceGroup.lbl1.Create(Label,"Price Group ID:",True,73,13,0,13,10,True,0,"Tahoma",8.25,,0,0)
Gui.FormPriceGroup.lbl1.BorderStyle(0)
Gui.FormPriceGroup.lbl1.Parent("SplitContainer1",0)
Gui.FormPriceGroup.lbl2.Create(Label,"Description:",True,57,13,0,29,35,True,0,"Tahoma",8.25,,0,0)
Gui.FormPriceGroup.lbl2.BorderStyle(0)
Gui.FormPriceGroup.lbl2.Parent("SplitContainer1",0)
Gui.FormPriceGroup.lbl3.Create(Label,"WO Min Charge:",True,79,13,0,7,60,True,0,"Tahoma",8.25,,0,0)
Gui.FormPriceGroup.lbl3.BorderStyle(0)
Gui.FormPriceGroup.lbl3.Parent("SplitContainer1",0)
Gui.FormPriceGroup.lbl4.Create(Label,"SysUserLastAccess:",True,96,13,0,602,32,True,0,"Tahoma",8.25,,0,0)
Gui.FormPriceGroup.lbl4.BorderStyle(0)
Gui.FormPriceGroup.lbl4.Parent("SplitContainer1",0)
Gui.FormPriceGroup.lbl5.Create(Label,"DateTimeLastAccess:",True,102,13,0,597,58,True,0,"Tahoma",8.25,,0,0)
Gui.FormPriceGroup.lbl5.BorderStyle(0)
Gui.FormPriceGroup.lbl5.Parent("SplitContainer1",0)
Gui.FormPriceGroup.tabPG.Create(Tab)
Gui.FormPriceGroup.tabPG.Enabled(True)
Gui.FormPriceGroup.tabPG.Visible(True)
Gui.FormPriceGroup.tabPG.Zorder(0)
Gui.FormPriceGroup.tabPG.Size(914,548)
Gui.FormPriceGroup.tabPG.Position(3,25)
Gui.FormPriceGroup.tabPG.FontName("Tahoma")
Gui.FormPriceGroup.tabPG.FontSize(8.25)
Gui.FormPriceGroup.tabPG.Parent("SplitContainer1",1)
Gui.FormPriceGroup.tabPG.Event(Click,tabPG_Click)
Gui.FormPriceGroup.tabPG.Anchor(15)
Gui.FormPriceGroup.tabPG.Tabs(2)
Gui.FormPriceGroup.tabPG.SetTab(0)
Gui.FormPriceGroup.tabPG.Caption("Lines")
Gui.FormPriceGroup.tabPG.SetTab(1)
Gui.FormPriceGroup.tabPG.Caption("Available")
Gui.FormPriceGroup.gsPGAvailable.Create(GsGridControl)
Gui.FormPriceGroup.gsPGAvailable.Enabled(True)
Gui.FormPriceGroup.gsPGAvailable.Visible(True)
Gui.FormPriceGroup.gsPGAvailable.Zorder(0)
Gui.FormPriceGroup.gsPGAvailable.Size(912,519)
Gui.FormPriceGroup.gsPGAvailable.Position(0,0)
Gui.FormPriceGroup.gsPGAvailable.Parent("tabPG",1)
Gui.FormPriceGroup.gsPGAvailable.Dock(5)
Gui.FormPriceGroup.gsPGAvailable.Event(CellValueChanged,gsPGAvailable_CellValueChanged)
Gui.FormPriceGroup.gsPGLines.Create(GsGridControl)
Gui.FormPriceGroup.gsPGLines.Enabled(True)
Gui.FormPriceGroup.gsPGLines.Visible(True)
Gui.FormPriceGroup.gsPGLines.Zorder(0)
Gui.FormPriceGroup.gsPGLines.Size(912,519)
Gui.FormPriceGroup.gsPGLines.Position(0,0)
Gui.FormPriceGroup.gsPGLines.Parent("tabPG",0)
Gui.FormPriceGroup.gsPGLines.Dock(5)
Gui.FormPriceGroup.gsPGLines.Event(CellValueChanged,gsPGLines_CellValueChanged)
Gui.FormPriceGroup.cmdRemovePG.Create(Button)
Gui.FormPriceGroup.cmdRemovePG.Enabled(True)
Gui.FormPriceGroup.cmdRemovePG.Visible(True)
Gui.FormPriceGroup.cmdRemovePG.Zorder(0)
Gui.FormPriceGroup.cmdRemovePG.Size(75,23)
Gui.FormPriceGroup.cmdRemovePG.Position(3,0)
Gui.FormPriceGroup.cmdRemovePG.Caption("Remove")
Gui.FormPriceGroup.cmdRemovePG.FontName("Tahoma")
Gui.FormPriceGroup.cmdRemovePG.FontSize(8.25)
Gui.FormPriceGroup.cmdRemovePG.Parent("SplitContainer1",1)
Gui.FormPriceGroup.cmdRemovePG.Event(Click,cmdRemovePG_Click)
Gui.FormPriceGroup.cmdAllocatePG.Create(Button)
Gui.FormPriceGroup.cmdAllocatePG.Enabled(True)
Gui.FormPriceGroup.cmdAllocatePG.Visible(False)
Gui.FormPriceGroup.cmdAllocatePG.Zorder(0)
Gui.FormPriceGroup.cmdAllocatePG.Size(75,23)
Gui.FormPriceGroup.cmdAllocatePG.Position(3,0)
Gui.FormPriceGroup.cmdAllocatePG.Caption("Allocate")
Gui.FormPriceGroup.cmdAllocatePG.FontName("Tahoma")
Gui.FormPriceGroup.cmdAllocatePG.FontSize(8.25)
Gui.FormPriceGroup.cmdAllocatePG.Parent("SplitContainer1",1)
Gui.FormPriceGroup.cmdAllocatePG.Event(Click,cmdAllocatePG_Click)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
v.Global.bPassedFirstLoad.Declare
v.Global.bLoading.Declare
v.Global.bCreatingPO.Declare
v.Global.bResetting.Declare
v.Global.bResetColumn.Declare
v.Global.bExporting.Declare
v.Global.iCurrentRowIndex.Declare
v.Global.bIsInGroup.Declare
v.Global.iRunIDToApprove.Declare
V.Global.bLoadingRunID.Declare
v.Global.iRunIDToView.Declare

V.Global.sPGID.Declare
V.Global.sOldPGID.Declare
V.Global.iQHID.Declare
V.Global.sQuoteID.Declare
V.Global.sShipToID.Declare
V.Global.sCustID.Declare

V.Global.bCashMode.Declare

V.Global.iBIRunID.Declare
v.Global.iBIRptID.Declare
V.Global.iBILogID.Declare
Program.Sub.Preflight.End

Program.Sub.Main.Start
'SS, October 2022
'Customer: Australian Prof Galv 
'Buisness Purpose:Maintenance menu for the Galvaware project 


Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout
f.Intrinsic.Control.Try	
	
	F.Intrinsic.UI.SetBrowserHotTypeAhead(true)
	f.Intrinsic.Control.CallSub(CheckFolder)
	
	
	f.ODBC.Connection!conx.OpenCompanyConnection(300)	
	F.Intrinsic.Task.SetEnvironmentVariable("USEDARKTHEME",False)
	gui.Form..applytheme()
	
	
	F.Intrinsic.Control.CallSub(CheckGroupSecurity)
	F.Intrinsic.Control.CallSub(BarAddButton)
	F.Intrinsic.Control.CallSub(LoadAllAcordionControls)
	f.Intrinsic.Control.CallSub(Create_ContextMenu)
	F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","ServiceMaint")
	Gui.Form..ApplySavedSettings
	gui.Form..Show
	gui.Form.tab1.SetTab(0)
	gui.Form..SetFocus

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Main.End

#Region "UnloadCatch"
Program.Sub.Catching.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	
	F.Intrinsic.String.Build("Project: {5} {0}Subroutine: {1}{0}Error Occurred {2} with description {3}{0}GAB Version: {4}",V.Ambient.Newline,V.Args.SUB,V.Args.errorno,V.Args.errordesc,V.Ambient.GABVersion,v.Caller.ScriptFile,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	
	f.Intrinsic.Control.CallSub(Unload)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.Catching.End

Program.Sub.Form_UnLoad.Start
f.Intrinsic.Control.Try

	F.Intrinsic.Control.If(V.Global.bPassedFirstLoad)
		'F.Intrinsic.Control.CallSub(Serialize)
	F.Intrinsic.Control.EndIf

	f.Intrinsic.Control.CallSub(Unload)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry	
Program.Sub.Form_UnLoad.End

Program.Sub.Unload.Start
F.Intrinsic.Control.Try	

	f.Intrinsic.Control.If(v.ODBC.conx.Exists)
		F.ODBC.Connection!conx.Close
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.ODBC.conSQL.Exists)
		F.ODBC.Connection!conSQL.Close
	f.Intrinsic.Control.EndIf
	
	Gui.Form..SaveSettings
	F.Intrinsic.Control.End 
	
f.Intrinsic.Control.Catch
	F.Intrinsic.Control.End 
f.Intrinsic.Control.EndTry	
Program.Sub.Unload.End


#End Region 'UnloadCatch

#Region "Initialize"
Program.Sub.CheckFolder.Start
f.Intrinsic.Control.Try
	v.Local.sDir.Declare
	v.Local.bExist.Declare
	
	f.Intrinsic.String.Build("{0}\Custom\6559\{1}",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Local.sDir)
	f.Intrinsic.File.DirExists(v.Local.sDir,v.Local.bExist)
	f.Intrinsic.Control.If(v.Local.bExist.Not)
		f.Intrinsic.File.CreateDir(v.Local.sDir)
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.CheckFolder.End

Program.Sub.BarAddButton.Start
f.Intrinsic.Control.Try
	gui.Form..BarAddButton("ServiceMaint","Service")
	gui.Form..BarAddButton("PriceMaint","Price")
	gui.Form..BarAddButton("CustomerMaint","Customer")
	gui.Form..BarAddButton("QuoteMaint","Quote")
	gui.Form..BarAddButton("EmployeeMaint","Employee/Org")
	gui.Form..BarAddButton("ResourceMaint","Head Rack/Resource")
	gui.Form..BarAddButton("KPI","KPI Hours")
	
	gui.FormQuote..BarAddButton("UpdateQuote","Update")
	gui.FormQuote..BarAddButton("DeleteQuote","Delete")
	gui.FormQuote..BarAddButton("CloneQuote","Clone")
	gui.FormQuote..BarAddButton("PreviewQuote","Preview")
	
	gui.FormPriceGroup..BarAddButton("UpdatePG","Update")
	gui.FormPriceGroup..BarAddButton("DeletePG","Delete")
	gui.FormPriceGroup..BarAddButton("ClonePG","Clone")
	gui.FormPriceGroup..BarAddButton("PreviewPG","Preview")
	
	gui.FormQuote.ddlAccepted.AddItem("Accepted",0)
	gui.FormQuote.ddlAccepted.AddItem("Unspecified",1)
	gui.FormQuote.ddlAccepted.AddItem("Rejected",2)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.BarAddButton.End

Program.Sub.LoadAllAcordionControls.Start
f.Intrinsic.Control.Try
	'Add Item to ac1 (Service)
	Gui.Form.ac1.Visible(False)
	Gui.Form.ac1.AddElement(ServiceWeb,"Service Web","logo_g_green_32",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac1.AddElement(AddLine,"Add New Service","icon_insert_above_color",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac1.AddElement(DeleteLine,"Delete Service Lines","icon_delete_black",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac1.AddElement(AddCat,"Add New Category","icon_insert_above_color",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac1.AddElement(DeleteCat,"Delete Category","icon_delete_black",16,16,,-1,0,"",True,True,False,1)
	'Gui.Form.ac1.AddElement(EditLine,"Edit Line","icon_functions_black",16,16,,-1,0,"",True,True,False,1)
	
	'Add Item to ac2 (Pricing)
	Gui.Form.ac2.AddElement(ServiceWeb,"Service Web","logo_g_green_32",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac2.AddElement(AddLine,"Add New Price Group","icon_insert_above_color",16,16,,-1,0,"",True,True,False,1)
	
	
	'Add Item to ac3 (Customer)
	Gui.Form.ac3.AddElement(ServiceWeb,"Service Web","logo_g_green_32",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac3.AddElement(AddLocation,"New Location","icon_insert_above_color",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac3.AddElement(DeleteLocation,"Delete Location","icon_delete_black",16,16,,-1,0,"",True,True,False,1)
	
	'Add Item to ac4 (Quote)
	Gui.Form.ac4.AddElement(ServiceWeb,"Service Web","logo_g_green_32",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac4.AddElement(AddLine,"Add New Quote","icon_insert_above_color",16,16,,-1,0,"",True,True,False,1)
	'Gui.Form.ac4.AddElement(DuplicateLine,"Duplicate Quote","icon_functions_black",16,16,,-1,0,"",True,True,False,1)
	'Gui.Form.ac4.AddElement(DeleteLine,"Delete Quote","icon_functions_black",16,16,,-1,0,"",True,True,False,1)
	
	'Add Item to ac5 (Employee)
	Gui.Form.ac5.AddElement(ServiceWeb,"Service Web","logo_g_green_32",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac5.AddElement(AddLine,"New Employee","icon_insert_above_color",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac5.AddElement(AddOrg,"New Org/Division","icon_insert_above_color",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac5.AddElement(DeleteOrg,"Delete Org/Division","icon_delete_black",16,16,,-1,0,"",True,True,False,1)
	
	'Add Item to ac6 (Resource/headrack)
	Gui.Form.ac6.AddElement(ServiceWeb,"Service Web","logo_g_green_32",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac6.AddElement(AddLine,"New Resource","icon_insert_above_color",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac6.AddElement(DeleteLine,"Delete Resource","icon_delete_black",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac6.AddElement(AddMat,"New Material Type","icon_insert_above_color",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac6.AddElement(DeleteMat,"Delete Material","icon_delete_black",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac6.AddElement(AddIssue,"New Issue Type","icon_insert_above_color",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac6.AddElement(DeleteIssue,"Delete Issue","icon_delete_black",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac6.AddElement(AddRework,"New Rework Type","icon_insert_above_color",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac6.AddElement(DeleteRework,"Delete Rework","icon_delete_black",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac6.AddElement(AddYard,"New Yard","icon_insert_above_color",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac6.AddElement(DeleteYard,"Delete Yard","icon_delete_black",16,16,,-1,0,"",True,True,False,1)
	
	'Add Item to ac7 (KPI hours and Dollars)
	Gui.Form.ac7.AddElement(ServiceWeb,"Service Web","logo_g_green_32",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac7.AddElement(AddLine,"New Line","icon_insert_above_color",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac7.AddElement(DeleteLine,"Delete Line","icon_delete_black",16,16,,-1,0,"",True,True,False,1)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.LoadAllAcordionControls.End

Program.Sub.Form_UserButtonClicked.Start
f.Intrinsic.Control.Try	

	'Disable form
	F.Intrinsic.Control.BlockEvents
	gui.Form.tab1.Visible(False)
	gui.Form.tab2.Visible(False)
	gui.Form.tab3.Visible(False)
	gui.Form.tab4.Visible(False)
	gui.Form.tab5.Visible(False)
	gui.Form.tab6.Visible(False)
	gui.Form.tab7.Visible(False)
	
'Moved this to inse the select case to reduce the amount of screenflashing from the accordion controls
	'For customer grid view
'	gui.Form.ddlPriceFrom.Visible(False)
'	gui.Form.ddlPriceTo.Visible(False)
'	gui.Form.lblFrom.Visible(False)
'	gui.Form.lblTo.Visible(False)
'	gui.Form.cmdMassUpdatePG.Visible(False)
'	
'	'For KPI Grid View
'	gui.Form.dtpPayPeriod.Visible(False)
'	gui.Form.lblFrom2.Visible(False)
	
	F.Intrinsic.Control.SelectCase(V.Args.Button)			

		
		F.Intrinsic.Control.Case("ServiceMaint")
			'Gui.Form.ac1.Visible(True)
		
			gui.Form.ddlPriceFrom.Visible(False)
			gui.Form.ddlPriceTo.Visible(False)
			gui.Form.lblFrom.Visible(False)
			gui.Form.lblTo.Visible(False)
			gui.Form.cmdMassUpdatePG.Visible(False)
			gui.Form.dtpPayPeriod.Visible(False)
			gui.Form.lblFrom2.Visible(False)
			'Gui.Form.ac1.Visible(False)
			Gui.Form.ac2.Visible(False)
			Gui.Form.ac3.Visible(False)
			Gui.Form.ac4.Visible(False)
			Gui.Form.ac5.Visible(False)
			Gui.Form.ac6.Visible(False)
			Gui.Form.ac7.Visible(False)
			'Load DT -> GV
			F.Intrinsic.Control.CallSub(Load_Service)
			F.Intrinsic.Control.CallSub(Load_Category)
			'Show Accordion control
			Gui.Form.ac1.Visible(True)
			gui.Form.tab1.Visible(True)
			gui.Form.tab1.SetTab(0)
			
		F.Intrinsic.Control.Case("PriceMaint")
			'gui.Form.ac2.Visible(True)
		
			gui.Form.ddlPriceFrom.Visible(False)
			gui.Form.ddlPriceTo.Visible(False)
			gui.Form.lblFrom.Visible(False)
			gui.Form.lblTo.Visible(False)
			gui.Form.cmdMassUpdatePG.Visible(False)
			gui.Form.dtpPayPeriod.Visible(False)
			gui.Form.lblFrom2.Visible(False)
			Gui.Form.ac1.Visible(False)
			'Gui.Form.ac2.Visible(False)
			Gui.Form.ac3.Visible(False)
			Gui.Form.ac4.Visible(False)
			Gui.Form.ac5.Visible(False)
			Gui.Form.ac6.Visible(False)
			Gui.Form.ac7.Visible(False)
			F.Intrinsic.Control.CallSub(Load_Pricing)
			gui.Form.ac2.Visible(True)
			gui.Form.tab2.Visible(True)
		
		F.Intrinsic.Control.Case("CustomerMaint")
			'gui.Form.ac3.Visible(True)
		
			'gui.Form.ddlPriceFrom.Visible(False)
			'gui.Form.ddlPriceTo.Visible(False)
			'gui.Form.lblFrom.Visible(False)
			'gui.Form.lblTo.Visible(False)
			'gui.Form.cmdMassUpdatePG.Visible(False)
			gui.Form.dtpPayPeriod.Visible(False)
			gui.Form.lblFrom2.Visible(False)
			Gui.Form.ac1.Visible(False)
			Gui.Form.ac2.Visible(False)
			'Gui.Form.ac3.Visible(False)
			Gui.Form.ac4.Visible(False)
			Gui.Form.ac5.Visible(False)
			Gui.Form.ac6.Visible(False)
			Gui.Form.ac7.Visible(False)
			F.Intrinsic.Control.CallSub(Load_Customer)
			gui.Form.ac3.Visible(True)
			gui.Form.tab3.Visible(True)
			gui.Form.ddlPriceFrom.Visible(True)
			gui.Form.ddlPriceTo.Visible(True)
			gui.Form.lblFrom.Visible(True)
			gui.Form.lblTo.Visible(True)
			gui.Form.cmdMassUpdatePG.Visible(True)
			gui.Form.tab3.SetTab(0)
				
		F.Intrinsic.Control.Case("QuoteMaint")
			'gui.Form.ac4.Visible(True)
		
			gui.Form.ddlPriceFrom.Visible(False)
			gui.Form.ddlPriceTo.Visible(False)
			gui.Form.lblFrom.Visible(False)
			gui.Form.lblTo.Visible(False)
			gui.Form.cmdMassUpdatePG.Visible(False)
			gui.Form.dtpPayPeriod.Visible(False)
			gui.Form.lblFrom2.Visible(False)
			Gui.Form.ac1.Visible(False)
			Gui.Form.ac2.Visible(False)
			Gui.Form.ac3.Visible(False)
			'Gui.Form.ac4.Visible(False)
			Gui.Form.ac5.Visible(False)
			Gui.Form.ac6.Visible(False)
			Gui.Form.ac7.Visible(False)
			F.Intrinsic.Control.CallSub(Load_Quote)
			gui.Form.ac4.Visible(True)
			gui.Form.tab4.Visible(True)
			
		F.Intrinsic.Control.Case("EmployeeMaint")
			'gui.Form.ac5.Visible(True)
		
			gui.Form.ddlPriceFrom.Visible(False)
			gui.Form.ddlPriceTo.Visible(False)
			gui.Form.lblFrom.Visible(False)
			gui.Form.lblTo.Visible(False)
			gui.Form.cmdMassUpdatePG.Visible(False)
			gui.Form.dtpPayPeriod.Visible(False)
			gui.Form.lblFrom2.Visible(False)
			Gui.Form.ac1.Visible(False)
			Gui.Form.ac2.Visible(False)
			Gui.Form.ac3.Visible(False)
			Gui.Form.ac4.Visible(False)
			'Gui.Form.ac5.Visible(False)
			Gui.Form.ac6.Visible(False)
			Gui.Form.ac7.Visible(False)
			F.Intrinsic.Control.CallSub(Load_Employee)
			gui.Form.ac5.Visible(True)
			gui.Form.tab5.Visible(True)
			gui.Form.tab5.SetTab(0)
			
		F.Intrinsic.Control.Case("ResourceMaint")
			'gui.Form.ac6.Visible(True)
		
			gui.Form.ddlPriceFrom.Visible(False)
			gui.Form.ddlPriceTo.Visible(False)
			gui.Form.lblFrom.Visible(False)
			gui.Form.lblTo.Visible(False)
			gui.Form.cmdMassUpdatePG.Visible(False)
			gui.Form.dtpPayPeriod.Visible(False)
			gui.Form.lblFrom2.Visible(False)
			Gui.Form.ac1.Visible(False)
			Gui.Form.ac2.Visible(False)
			Gui.Form.ac3.Visible(False)
			Gui.Form.ac4.Visible(False)
			Gui.Form.ac5.Visible(False)
			'Gui.Form.ac6.Visible(False)
			Gui.Form.ac7.Visible(False)		
			F.Intrinsic.Control.CallSub(Load_Resource)
			gui.Form.ac6.Visible(True)
			gui.Form.tab6.Visible(True)
			
		F.Intrinsic.Control.Case("KPI")
			'gui.Form.ac7.Visible(True)
		
			gui.Form.ddlPriceFrom.Visible(False)
			gui.Form.ddlPriceTo.Visible(False)
			gui.Form.lblFrom.Visible(False)
			gui.Form.lblTo.Visible(False)
			gui.Form.cmdMassUpdatePG.Visible(False)
			'gui.Form.dtpPayPeriod.Visible(False)
			'gui.Form.lblFrom2.Visible(False)
			Gui.Form.ac1.Visible(False)
			Gui.Form.ac2.Visible(False)
			Gui.Form.ac3.Visible(False)
			Gui.Form.ac4.Visible(False)
			Gui.Form.ac5.Visible(False)
			Gui.Form.ac6.Visible(False)
			'Gui.Form.ac7.Visible(False)
			F.Intrinsic.Control.CallSub(Load_KPI)
			gui.Form.ac7.Visible(True)
			gui.Form.tab7.Visible(True)	
			gui.Form.dtpPayPeriod.Visible(True)
			gui.Form.lblFrom2.Visible(True)
			
	F.Intrinsic.Control.EndSelect
	
	gui.Form.lblLastRefresh.Text(v.Ambient.Now)
	
	'Enable form
	F.Intrinsic.Control.UnBlockEvents
	
'		
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Form_UserButtonClicked.End

'Currently dont want to use context menus (Leaving it here for possible future features)
Program.Sub.Create_ContextMenu.Start
f.Intrinsic.Control.Try
	
	'Service grid
	Gui.Form..ContextMenuCreate("ctxService")
	gui.Form.gsService.ContextMenuAttach("ctxService")
	Gui.Form..ContextMenuAddItem("ctxService","SelectAll",0,"Select All")
	Gui.Form..ContextMenuSetItemEventHandler("ctxService","SelectAll","SelectAll")
	
	Gui.Form..ContextMenuAddItem("ctxService","DeselectAll",0,"Deselect All")
	Gui.Form..ContextMenuSetItemEventHandler("ctxService","DeselectAll","DeselectAll")
	
	'Category grid
	Gui.Form..ContextMenuCreate("ctxCategory")
	gui.Form.gsCategory.ContextMenuAttach("ctxCategory")
	Gui.Form..ContextMenuAddItem("ctxCategory","SelectAll",0,"Select All")
	Gui.Form..ContextMenuSetItemEventHandler("ctxCategory","SelectAll","SelectAll")
	
	Gui.Form..ContextMenuAddItem("ctxCategory","DeselectAll",0,"Deselect All")
	Gui.Form..ContextMenuSetItemEventHandler("ctxCategory","DeselectAll","DeselectAll")
	
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.Create_ContextMenu.End


Program.Sub.CheckGroupSecurity.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	V.Local.sGroup.Declare(String,"6559Cash")
	
	F.Global.Security.IsInGroup(V.Caller.User, V.Local.sGroup, V.Caller.CompanyCode, V.Global.bCashMode)


F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.CheckGroupSecurity.End
#End Region 'Initialize

Program.Sub.SelectAll.Start
f.Intrinsic.Control.Try

	F.Intrinsic.Control.SelectCase(V.Screen.Form!tab1.Tab)
	F.Intrinsic.Control.Case(0)
		'Service Tab
		f.Intrinsic.Control.If(v.DataTable.dtService.Exists)
			F.Data.DataTable.SetValue("dtService",-1,"Select",true)
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Case(1)
		'Category Tab
		f.Intrinsic.Control.If(v.DataTable.dtCategory.Exists)
			F.Data.DataTable.SetValue("dtCategory",-1,"Select",true)
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndSelect

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.SelectAll.End

Program.Sub.DeselectAll.Start
f.Intrinsic.Control.Try

	F.Intrinsic.Control.SelectCase(V.Screen.Form!tab1.Tab)
	F.Intrinsic.Control.Case(0)
		'Service Tab
		f.Intrinsic.Control.If(v.DataTable.dtService.Exists)
			F.Data.Datatable.SetValue("dtService",-1,"Select",False)
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.Case(1)
		'Category Tab
		f.Intrinsic.Control.If(v.DataTable.dtCategory.Exists)
			F.Data.Datatable.SetValue("dtCategory",-1,"Select",False)
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndSelect

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.DeselectAll.End

'Why isnt this flushed out? need to flush it out
Program.Sub.Form_ExportClick.Start
F.Intrinsic.Control.Try	
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.sMsg.Declare
	V.Local.sControl.Declare
	V.Local.sForm.Declare(String, "Form")
	V.Local.sDate.Declare
	V.Local.sTime.Declare
	V.Local.bFileLocked.Declare
	V.Local.sExportString.Declare
	
	F.Intrinsic.Control.If(V.Screen.Form!Ac1.Visible)
		F.Intrinsic.Control.If(V.Screen.Form!tab1.Tab,=,0)
			V.Local.sControl.Set("gsService")
		F.Intrinsic.Control.Else
			V.Local.sControl.Set("gsCategory")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.ElseIf(V.Screen.Form!Ac2.Visible)
		V.Local.sControl.Set("gsPricing")
	F.Intrinsic.Control.ElseIf(V.Screen.Form!Ac3.Visible)
		V.Local.sControl.Set("gsCustomer")
	F.Intrinsic.Control.ElseIf(V.Screen.Form!Ac4.Visible)
		V.Local.sControl.Set("gsQuote")
	F.Intrinsic.Control.ElseIf(V.Screen.Form!Ac5.Visible)
		F.Intrinsic.Control.If(V.Screen.Form!tab5.Tab,=,0)
			V.Local.sControl.Set("gsEmployee")
		F.Intrinsic.Control.Else
			V.Local.sControl.Set("gsOrg")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.ElseIf(V.Screen.Form!Ac6.Visible)
		V.Local.sControl.Set("gsResource")
	F.Intrinsic.Control.EndIf
	
'	f.Intrinsic.Control.If(v.Global.bPassedFirstLoad.Not)
'		f.Intrinsic.Control.ExitSub
'	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Global.bExporting)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bExporting.Set(True)


	'Arc Number - 6559
	F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
	F.Intrinsic.String.DateString(V.Ambient.Date,V.Local.sDate)
	F.Intrinsic.String.TimeString(V.Ambient.Time,V.Local.sTime)
	F.Intrinsic.Control.If(V.Local.bExcel)
		F.Intrinsic.String.Build("{0}\GCG_6559_{1}_Export_{2}_{3}.xlsx",V.Caller.LocalGSSTempDir,V.Local.sControl,V.Local.sDate,V.Local.sTime,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File : {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.Form.[V.Local.sControl].Export(V.Local.sFileExport,"xlsx")
		
			'Gui.[V.Local.sForm].[V.Local.sControl].Export(V.Local.sFileExport,"xlsx")
			'Gui.[V.Local.sForm].[V.Local.sControl].ExportDetails("xlsx", V.Local.sFileExport,1)

			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}\GCG_6559_{1}_Export_{2}_{3}.csv",V.Caller.LocalGssTempDir,V.Local.sControl,V.Local.sDate,V.Local.sTime,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.[V.Local.sForm].[V.Local.sControl].Export(V.Local.sFileExport,"csv")
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
	F.Intrinsic.Control.EndIf
	
	v.Global.bExporting.Set(False)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.Form_ExportClick.End

Program.Sub.FormPriceGroup_ExportClick.Start
F.Intrinsic.Control.Try	
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.sMsg.Declare
	V.Local.sControl.Declare
	V.Local.sForm.Declare(String, "FormPriceGroup")
	V.Local.sDate.Declare
	V.Local.sTime.Declare
	V.Local.bFileLocked.Declare
	V.Local.sExportString.Declare
	

	V.Local.sControl.Set("gsPGLines")
	
'	f.Intrinsic.Control.If(v.Global.bPassedFirstLoad.Not)
'		f.Intrinsic.Control.ExitSub
'	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Global.bExporting)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bExporting.Set(True)

	'Arc Number - 6559
	F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
	F.Intrinsic.String.DateString(V.Ambient.Date,V.Local.sDate)
	F.Intrinsic.String.TimeString(V.Ambient.Time,V.Local.sTime)
	F.Intrinsic.Control.If(V.Local.bExcel)
		F.Intrinsic.String.Build("{0}\GCG_6559_{1}_Export_{2}_{3}.xlsx",V.Caller.LocalGSSTempDir,V.Local.sControl,V.Local.sDate,V.Local.sTime,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File : {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.[V.Local.sForm].[V.Local.sControl].Export(V.Local.sFileExport,"xlsx")
		
			'Gui.[V.Local.sForm].[V.Local.sControl].Export(V.Local.sFileExport,"xlsx")
			'Gui.[V.Local.sForm].[V.Local.sControl].ExportDetails("xlsx", V.Local.sFileExport,1)

			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}\GCG_6559_{1}_Export_{2}_{3}.csv",V.Caller.LocalGssTempDir,V.Local.sControl,V.Local.sDate,V.Local.sTime,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.[V.Local.sForm].[V.Local.sControl].Export(V.Local.sFileExport,"csv")
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
	F.Intrinsic.Control.EndIf
	
	v.Global.bExporting.Set(False)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.FormPriceGroup_ExportClick.End

#Region "Tab Service"
Program.Sub.FormAddService_UnLoad.Start
gui.FormAddService..Visible(False)
F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","ServiceMaint")
gui.Form..WindowState(2)
gui.Form..SetFocus
gui.Form..Enabled(True)

Program.Sub.FormAddService_UnLoad.End

Program.Sub.Load_Service.Start
f.Intrinsic.Control.Try
	V.Local.sBegDate.Declare
	V.Local.sEndDate.Declare
	V.Local.dBegDate.Declare
	V.Local.dEndDate.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.local.iCnt.Declare
	v.Local.sSerialize.Declare
	v.Local.sProgrammedBy.Declare
	V.Local.bExists.Declare
	
	f.Intrinsic.Control.If(v.DataTable.dtService.Exists)
		f.Data.DataTable.Close("dtService")
		gui.Form.gsService.ClearRows("gvService")		
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictCategory",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictCategory")
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictCategoryDesc",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictCategoryDesc")
	f.Intrinsic.Control.EndIf
	
	
	F.Intrinsic.String.Build("Select RTRIM(SERVICEID) as SERVICEID, RTRIM(DESCRIPTION) as DESCRIPTION, RTRIM(UNITDESCRIPTION) as UNITDESCRIPTION, RTRIM(UNITABBREVIATION) as UNITABBREVIATION, DIPALLOCATION, WEIGHTALLOCATION, AGGREGATEALLOCATION, PRODUCTIONALLOCATION, STANDARDWEIGHT, '' as CATEGORYID, '' as CATDESC, RTRIM(SYSUSERLASTACCESS) as SYSUSERLASTACCESS, SYSUSERLASTACCESSDATETIME, SYSROWUPDATESERIAL, INVOICEALLOCATION, TRANSPORTALLOCATION, HVALLOCATION, Freight, QA, CID FROM GAB_6559_SERVICE",v.Local.sProgrammedBy,V.Local.sSQL)
	F.Data.Datatable.CreateFromSQL("dtService","conx",V.Local.sSQL,True)
	
	F.Data.Datatable.AddColumn("dtService","SELECT","Boolean",False)
	
	F.Data.Dictionary.CreateFromSQL("dictCategory","Conx","Select CID, RTRIM(CATEGORYID) as CATEGORYID FROM GAB_6559_Serv_Cat")
	F.Data.Dictionary.SetDefaultReturn("dictCategory","")
	F.Data.DataTable.FillFromDictionary("dtService","dictCategory","CID","CATEGORYID")
	
	F.Data.Dictionary.CreateFromSQL("dictCategoryDesc","Conx","Select CID, RTRIM(DESCRIPTION) as DESCRIPTION FROM GAB_6559_Serv_Cat")
	F.Data.Dictionary.SetDefaultReturn("dictCategoryDesc","")
	F.Data.DataTable.FillFromDictionary("dtService","dictCategoryDesc","CID","CATDESC")
	
	gui.Form.gsService.AddGridviewFromDatatable("gvService","dtService")
	
	f.Intrinsic.Control.CallSub(Format_Service)
	
	gui.Form.gsService.MainView("gvService")	
	gui.Form.tab1.SetTab(0)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Load_Service.End

Program.Sub.Format_Service.Start
	V.Local.sProp.Declare
	v.Local.sValue.Declare	
	V.Local.iRet.Declare
	V.Local.iCnt.Declare
	v.Local.sValue2.Declare
	v.Local.sValue3.Declare
	V.Local.sSQL.Declare
	
	gui.Form.gsService.SuspendLayout()
	
	gui.Form.gsService.SetGridViewProperty("gvService","MultiSelect",True)
	gui.Form.gsService.SetGridViewProperty("gvService","AllowSort",True)
	gui.Form.gsService.SetGridViewProperty("gvService","AllowFilter",True)
	gui.Form.gsService.SetGridViewProperty("gvService","OptionsDetailShowDetailTabs",False)
	gui.Form.gsService.SetGridViewProperty("gvService","OptionsViewShowGroupPanel",True)
	gui.Form.gsService.SetGridViewProperty("gvService","EnableAppearanceOddRow",True)
	gui.Form.gsService.SetGridviewProperty("gvService",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.gsService.SetGridviewProperty("gvService","OptionsViewColumnAutoWidth",False)
	gui.Form.gsService.SetGridviewProperty("gvService","AllowColumnResizing",True)	
	gui.Form.gsService.SetGridviewProperty("gvService","ColumnPanelRowHeight","50")
	gui.Form.gsService.SetGridviewProperty("gvService",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)	
	gui.Form.gsService.SetGridviewProperty("gvService", "ShowConditionalFormattingItem", True)
	
	f.Intrinsic.Control.CallSub(Bulk_Format_Service,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Service,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Service,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_Service,"sProp","HeaderVAlignment","sValue","Top")	
	
	gui.Form.gsService.SetColumnProperty("gvService","CID","Visible",False)
	gui.Form.gsService.SetColumnProperty("gvService","SYSROWUPDATESERIAL","Visible",False)
	
	v.Local.sProp.Set("VisibleIndex")
	v.Local.iCnt.Set(-1)	
	gui.Form.gsService.SetColumnProperty("gvService","SELECT",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsService.SetColumnProperty("gvService","SERVICEID",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsService.SetColumnProperty("gvService","DESCRIPTION",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsService.SetColumnProperty("gvService","UNITDESCRIPTION",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsService.SetColumnProperty("gvService","UNITABBREVIATION",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsService.SetColumnProperty("gvService","DIPALLOCATION",v.Local.sProp,v.Local.iCnt.++)	
	gui.Form.gsService.SetColumnProperty("gvService","WEIGHTALLOCATION",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsService.SetColumnProperty("gvService","AGGREGATEALLOCATION",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsService.SetColumnProperty("gvService","PRODUCTIONALLOCATION",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsService.SetColumnProperty("gvService","STANDARDWEIGHT",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsService.SetColumnProperty("gvService","CATEGORYID",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsService.SetColumnProperty("gvService","CATDESC",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsService.SetColumnProperty("gvService","INVOICEALLOCATION",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsService.SetColumnProperty("gvService","TRANSPORTALLOCATION",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsService.SetColumnProperty("gvService","HVALLOCATION",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsService.SetColumnProperty("gvService","FREIGHT",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsService.SetColumnProperty("gvService","QA",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsService.SetColumnProperty("gvService","SYSUSERLASTACCESS",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsService.SetColumnProperty("gvService","SYSUSERLASTACCESSDATETIME",v.Local.sProp,v.Local.iCnt.++)

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.Form.gsService.SetColumnProperty("gvService","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsService.SetColumnProperty("gvService","SERVICEID",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","DESCRIPTION",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","UNITDESCRIPTION",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","UNITABBREVIATION",v.Local.sProp,v.Local.sValue)	
	gui.Form.gsService.SetColumnProperty("gvService","DIPALLOCATION",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsService.SetColumnProperty("gvService","WEIGHTALLOCATION",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsService.SetColumnProperty("gvService","AGGREGATEALLOCATION",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsService.SetColumnProperty("gvService","PRODUCTIONALLOCATION",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsService.SetColumnProperty("gvService","STANDARDWEIGHT",v.Local.sProp,v.Local.sValue3)
	gui.Form.gsService.SetColumnProperty("gvService","CATEGORYID",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","CATDESC",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","SYSUSERLASTACCESS",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","SYSUSERLASTACCESSDATETIME",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","SYSROWUPDATESERIAL",v.Local.sProp,v.Local.sValue3)
	gui.Form.gsService.SetColumnProperty("gvService","INVOICEALLOCATION",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsService.SetColumnProperty("gvService","TRANSPORTALLOCATION",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsService.SetColumnProperty("gvService","HVALLOCATION",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsService.SetColumnProperty("gvService","FREIGHT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsService.SetColumnProperty("gvService","QA",v.Local.sProp,v.Local.sValue2)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.Form.gsService.SetColumnProperty("gvService","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsService.SetColumnProperty("gvService","SERVICEID",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","DESCRIPTION",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","UNITDESCRIPTION",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","UNITABBREVIATION",v.Local.sProp,v.Local.sValue)	
	gui.Form.gsService.SetColumnProperty("gvService","DIPALLOCATION",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsService.SetColumnProperty("gvService","WEIGHTALLOCATION",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsService.SetColumnProperty("gvService","AGGREGATEALLOCATION",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsService.SetColumnProperty("gvService","PRODUCTIONALLOCATION",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsService.SetColumnProperty("gvService","STANDARDWEIGHT",v.Local.sProp,v.Local.sValue3)
	gui.Form.gsService.SetColumnProperty("gvService","CATEGORYID",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","CATDESC",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","SYSUSERLASTACCESS",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","SYSUSERLASTACCESSDATETIME",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","SYSROWUPDATESERIAL",v.Local.sProp,v.Local.sValue3)
	gui.Form.gsService.SetColumnProperty("gvService","INVOICEALLOCATION",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsService.SetColumnProperty("gvService","TRANSPORTALLOCATION",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsService.SetColumnProperty("gvService","HVALLOCATION",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsService.SetColumnProperty("gvService","FREIGHT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsService.SetColumnProperty("gvService","QA",v.Local.sProp,v.Local.sValue2)
	
	v.Local.sProp.Set("Caption")
	gui.Form.gsService.SetColumnProperty("gvService","SELECT",v.Local.sProp,"Select")
	gui.Form.gsService.SetColumnProperty("gvService","SERVICEID",v.Local.sProp,"Service ID")
	gui.Form.gsService.SetColumnProperty("gvService","DESCRIPTION",v.Local.sProp,"Description")
	gui.Form.gsService.SetColumnProperty("gvService","UNITDESCRIPTION",v.Local.sProp,"Unit")
	gui.Form.gsService.SetColumnProperty("gvService","UNITABBREVIATION",v.Local.sProp,"Abbrv Unit")	
	gui.Form.gsService.SetColumnProperty("gvService","DIPALLOCATION",v.Local.sProp,"Dip")
	gui.Form.gsService.SetColumnProperty("gvService","WEIGHTALLOCATION",v.Local.sProp,"Weight")
	gui.Form.gsService.SetColumnProperty("gvService","AGGREGATEALLOCATION",v.Local.sProp,"Aggregate")
	gui.Form.gsService.SetColumnProperty("gvService","PRODUCTIONALLOCATION",v.Local.sProp,"Production")
	gui.Form.gsService.SetColumnProperty("gvService","STANDARDWEIGHT",v.Local.sProp,"Standard Weight")
	gui.Form.gsService.SetColumnProperty("gvService","CATEGORYID",v.Local.sProp,"Category ID")
	gui.Form.gsService.SetColumnProperty("gvService","CATDESC",v.Local.sProp,"Category Desc")
	gui.Form.gsService.SetColumnProperty("gvService","SYSUSERLASTACCESS",v.Local.sProp,"Last User")
	gui.Form.gsService.SetColumnProperty("gvService","SYSUSERLASTACCESSDATETIME",v.Local.sProp,"Change Date/Time")
	gui.Form.gsService.SetColumnProperty("gvService","SYSROWUPDATESERIAL",v.Local.sProp,"Row Serial")
	gui.Form.gsService.SetColumnProperty("gvService","INVOICEALLOCATION",v.Local.sProp,"Invoice")
	gui.Form.gsService.SetColumnProperty("gvService","TRANSPORTALLOCATION",v.Local.sProp,"Transport")
	gui.Form.gsService.SetColumnProperty("gvService","HVALLOCATION",v.Local.sProp,"HV")
	gui.Form.gsService.SetColumnProperty("gvService","FREIGHT",v.Local.sProp,"Freight")
	gui.Form.gsService.SetColumnProperty("gvService","QA",v.Local.sProp,"QA")
			
	
	v.Local.sProp.Set("Width")
	gui.Form.gsService.SetColumnProperty("gvService","SELECT",v.Local.sProp,"70")
	gui.Form.gsService.SetColumnProperty("gvService","SERVICEID",v.Local.sProp,"70")
	gui.Form.gsService.SetColumnProperty("gvService","DESCRIPTION",v.Local.sProp,"250")
	gui.Form.gsService.SetColumnProperty("gvService","UNITDESCRIPTION",v.Local.sProp,"90")
	gui.Form.gsService.SetColumnProperty("gvService","UNITABBREVIATION",v.Local.sProp,"50")	
	gui.Form.gsService.SetColumnProperty("gvService","DIPALLOCATION",v.Local.sProp,"70")
	gui.Form.gsService.SetColumnProperty("gvService","WEIGHTALLOCATION",v.Local.sProp,"70")
	gui.Form.gsService.SetColumnProperty("gvService","AGGREGATEALLOCATION",v.Local.sProp,"70")
	gui.Form.gsService.SetColumnProperty("gvService","PRODUCTIONALLOCATION",v.Local.sProp,"70")
	gui.Form.gsService.SetColumnProperty("gvService","STANDARDWEIGHT",v.Local.sProp,"100")
	gui.Form.gsService.SetColumnProperty("gvService","CATEGORYID",v.Local.sProp,"100")
	gui.Form.gsService.SetColumnProperty("gvService","CATDESC",v.Local.sProp,"150")
	gui.Form.gsService.SetColumnProperty("gvService","SYSUSERLASTACCESS",v.Local.sProp,"100")
	gui.Form.gsService.SetColumnProperty("gvService","SYSUSERLASTACCESSDATETIME",v.Local.sProp,"100")
	gui.Form.gsService.SetColumnProperty("gvService","SYSROWUPDATESERIAL",v.Local.sProp,"100")
	gui.Form.gsService.SetColumnProperty("gvService","INVOICEALLOCATION",v.Local.sProp,"70")
	gui.Form.gsService.SetColumnProperty("gvService","TRANSPORTALLOCATION",v.Local.sProp,"70")
	gui.Form.gsService.SetColumnProperty("gvService","HVALLOCATION",v.Local.sProp,"70")
	gui.Form.gsService.SetColumnProperty("gvService","FREIGHT",v.Local.sProp,"70")
	gui.Form.gsService.SetColumnProperty("gvService","QA",v.Local.sProp,"70")
	
	
'	For RowCellClick and CellValueChanged
	v.Local.sProp.Set("AllowEdit")
	gui.Form.gsService.SetColumnProperty("gvService","SELECT",v.Local.sProp,True)
	gui.Form.gsService.SetColumnProperty("gvService","SERVICEID",v.Local.sProp,False)
	gui.Form.gsService.SetColumnProperty("gvService","DESCRIPTION",v.Local.sProp,True)
	gui.Form.gsService.SetColumnProperty("gvService","UNITDESCRIPTION",v.Local.sProp,True)
	gui.Form.gsService.SetColumnProperty("gvService","UNITABBREVIATION",v.Local.sProp,True)	
	gui.Form.gsService.SetColumnProperty("gvService","DIPALLOCATION",v.Local.sProp,True)
	gui.Form.gsService.SetColumnProperty("gvService","WEIGHTALLOCATION",v.Local.sProp,True)
	gui.Form.gsService.SetColumnProperty("gvService","AGGREGATEALLOCATION",v.Local.sProp,True)
	gui.Form.gsService.SetColumnProperty("gvService","PRODUCTIONALLOCATION",v.Local.sProp,True)
	gui.Form.gsService.SetColumnProperty("gvService","STANDARDWEIGHT",v.Local.sProp,True)
	gui.Form.gsService.SetColumnProperty("gvService","CATEGORYID",v.Local.sProp,False)
	gui.Form.gsService.SetColumnProperty("gvService","CATDESC",v.Local.sProp,True)
	gui.Form.gsService.SetColumnProperty("gvService","SYSUSERLASTACCESS",v.Local.sProp,False)
	gui.Form.gsService.SetColumnProperty("gvService","SYSUSERLASTACCESSDATETIME",v.Local.sProp,False)
	gui.Form.gsService.SetColumnProperty("gvService","SYSROWUPDATESERIAL",v.Local.sProp,False)
	gui.Form.gsService.SetColumnProperty("gvService","INVOICEALLOCATION",v.Local.sProp,True)
	gui.Form.gsService.SetColumnProperty("gvService","TRANSPORTALLOCATION",v.Local.sProp,True)
	gui.Form.gsService.SetColumnProperty("gvService","HVALLOCATION",v.Local.sProp,True)
	gui.Form.gsService.SetColumnProperty("gvService","FREIGHT",v.Local.sProp,True)
	gui.Form.gsService.SetColumnProperty("gvService","QA",v.Local.sProp,True)

	v.Local.sProp.Set("ReadOnly")
	gui.Form.gsService.SetColumnProperty("gvService","SELECT",v.Local.sProp,False)
	gui.Form.gsService.SetColumnProperty("gvService","SERVICEID",v.Local.sProp,True)
	gui.Form.gsService.SetColumnProperty("gvService","DESCRIPTION",v.Local.sProp,False)
	gui.Form.gsService.SetColumnProperty("gvService","UNITDESCRIPTION",v.Local.sProp,False)
	gui.Form.gsService.SetColumnProperty("gvService","UNITABBREVIATION",v.Local.sProp,False)	
	gui.Form.gsService.SetColumnProperty("gvService","DIPALLOCATION",v.Local.sProp,False)
	gui.Form.gsService.SetColumnProperty("gvService","WEIGHTALLOCATION",v.Local.sProp,False)
	gui.Form.gsService.SetColumnProperty("gvService","AGGREGATEALLOCATION",v.Local.sProp,False)
	gui.Form.gsService.SetColumnProperty("gvService","PRODUCTIONALLOCATION",v.Local.sProp,False)
	gui.Form.gsService.SetColumnProperty("gvService","STANDARDWEIGHT",v.Local.sProp,False)
	gui.Form.gsService.SetColumnProperty("gvService","CATEGORYID",v.Local.sProp,True)
	gui.Form.gsService.SetColumnProperty("gvService","CATDESC",v.Local.sProp,False)
	gui.Form.gsService.SetColumnProperty("gvService","SYSUSERLASTACCESS",v.Local.sProp,True)
	gui.Form.gsService.SetColumnProperty("gvService","SYSUSERLASTACCESSDATETIME",v.Local.sProp,True)
	gui.Form.gsService.SetColumnProperty("gvService","SYSROWUPDATESERIAL",v.Local.sProp,True)
	gui.Form.gsService.SetColumnProperty("gvService","INVOICEALLOCATION",v.Local.sProp,False)
	gui.Form.gsService.SetColumnProperty("gvService","TRANSPORTALLOCATION",v.Local.sProp,False)
	gui.Form.gsService.SetColumnProperty("gvService","HVALLOCATION",v.Local.sProp,False)
	gui.Form.gsService.SetColumnProperty("gvService","FREIGHT",v.Local.sProp,False)
	gui.Form.gsService.SetColumnProperty("gvService","QA",v.Local.sProp,False)
	
	
	'BackForeColor
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("LightYellow")
	gui.Form.gsService.SetColumnProperty("gvService","DESCRIPTION",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","UNITDESCRIPTION",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","UNITABBREVIATION",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","DIPALLOCATION",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","WEIGHTALLOCATION",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","AGGREGATEALLOCATION",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","PRODUCTIONALLOCATION",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","STANDARDWEIGHT",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","CATDESC",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","INVOICEALLOCATION",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","TRANSPORTALLOCATION",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","HVALLOCATION",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","FREIGHT",v.Local.sProp,v.Local.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","QA",v.Local.sProp,v.Local.sValue)
	
	
	'Making CATDESC a DDL
	V.Local.sSql.Set("Select RTRIM(Description) as Description FROM GAB_6559_Serv_Cat")
	F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSql,V.Local.sSql)
	F.Intrinsic.String.Replace(V.Local.sSql,"#$#","*!*",V.Local.sSql)
	Gui.Form.gsService.ColumnEdit("gvService","CATDESC","Dropdownlist",V.Local.sSql)
	
'	v.Local.sProp.Set("DisplayCustomDatetime")
'	v.Local.sValue.Set("d")	
'	gui.Form.gsService.SetColumnProperty("gvService","DueDate",v.Local.sProp,v.Local.sValue)
'	
'	gui.Form.gsService.AddStyleFormatCondition("gvService","NEW_PART","NEW_PART","Expression","[NEW_PART] = 0")
'	gui.Form.gsService.SetStyleFormatConditionProperty("gvService","NEW_PART","NEW_PART","backcolor","Red")
	
	gui.Form.gsService.ResumeLayout()

Program.Sub.Format_Service.End

Program.Sub.Bulk_Format_Service.Start
	gui.Form.gsService.SetColumnProperty("gvService","SELECT",v.Args.sProp,v.Args.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","SERVICEID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","DESCRIPTION",v.Args.sProp,v.Args.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","UNITDESCRIPTION",v.Args.sProp,v.Args.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","UNITABBREVIATION",v.Args.sProp,v.Args.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","DIPALLOCATION",v.Args.sProp,v.Args.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","WEIGHTALLOCATION",v.Args.sProp,v.Args.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","AGGREGATEALLOCATION",v.Args.sProp,v.Args.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","PRODUCTIONALLOCATION",v.Args.sProp,v.Args.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","STANDARDWEIGHT",v.Args.sProp,v.Args.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","CATEGORYID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","CATDESC",v.Args.sProp,v.Args.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","SYSUSERLASTACCESS",v.Args.sProp,v.Args.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","SYSUSERLASTACCESSDATETIME",v.Args.sProp,v.Args.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","SYSROWUPDATESERIAL",v.Args.sProp,v.Args.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","INVOICEALLOCATION",v.Args.sProp,v.Args.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","TRANSPORTALLOCATION",v.Args.sProp,v.Args.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","HVALLOCATION",v.Args.sProp,v.Args.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","Freight",v.Args.sProp,v.Args.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","QA",v.Args.sProp,v.Args.sValue)
	gui.Form.gsService.SetColumnProperty("gvService","CID",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_Service.End

Program.Sub.ac1_ElementClick.Start
f.Intrinsic.Control.Try
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sNow.Declare
V.Local.sMsg.Declare
V.Local.iCnt.Declare
V.Local.sServiceID.Declare
V.Local.iCID.Declare

F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
	
	'This will prevent from multi-clicking too fast the button
	f.Intrinsic.Control.If(v.Global.bLoading)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bLoading.Set(True)	
	
	gui.Form.lblPleasewait.Visible(True)
	gui.Form.lblpleasewait.Text("Please wait ...")		
	
	f.Intrinsic.Control.SelectCase(v.Args.ElementID.UCase)
		f.Intrinsic.Control.Case("SERVICEWEB")
			F.Intrinsic.Task.ShellExec(0,"Open","https://www.gss-service.com/","","",0)	
	
		f.Intrinsic.Control.Case("ADDLINE")
			'Create New Service Record
			gui.Form..Enabled(False)
			gui.FormAddService.ddlCatID.ClearItems
			gui.FormAddService.ddlCatID.AddItems("Dictionary","dictCategoryDesc")
			gui.FormAddService..Visible(True)
			
		f.Intrinsic.Control.Case("ADDCAT")
			F.Intrinsic.String.Build("Are you sure you would like to create a new Service Category?{0}A new line will apear at the bottom of the grid.",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"New Category","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				gui.Form.lblPleasewait.Visible(False)
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.String.Build("Insert Into GAB_6559_Serv_Cat (CategoryID,Description,AccountingInterfaceCode) Values ('{0}','{1}','NA')",V.Caller.User,V.Local.sNow,V.Local.sSQL)
			F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			F.Intrinsic.Control.CallSub(Load_Category)
			
		f.Intrinsic.Control.Case("DELETELINE")
			'Make sure the user actually wants to delete.
			F.Intrinsic.String.Build("Are you sure you would like to delete the selected service lines?{0}You will only be able to delete the serviceIDs not in use on a Work Order",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"Delete ServiceID","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				gui.Form.lblPleasewait.Visible(False)
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'Filter down to selected rows.
			F.Data.DataView.Create("dtService","dvService",22,"SELECT = True","")
			F.Data.DataView.ToDataTable("dtService","dvService","dtDelete",True)
			F.Data.DataView.Close("dtService","dvService")
			
			'Find serviceIDs that are in use
			F.Data.Datatable.AddColumn("dtDelete","Inuse","Boolean",False)
			F.Data.Dictionary.CreateFromSQL("dictInUse","conx","select RTRIM(ServiceID) as ServiceID, Cast(1 as bit) From GAB_6559_Lines")
			F.Data.DataTable.FillFromDictionary("dtDelete","dictInUse","ServiceID","Inuse")
			F.Data.Dictionary.Close("dictInUse")
			
			'Check if serviceID is in use then delete...
			F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtDelete.RowCount--,1)
				V.Local.sServiceID.Set(V.DataTable.dtDelete(v.Local.iCnt).ServiceID!FieldVal)
				F.Intrinsic.Control.If(V.DataTable.dtDelete(v.Local.iCnt).Inuse!FieldVal)
					F.Intrinsic.String.Build("ServiceID in use on a WO, cannot delete!{0}{1}",V.Ambient.NewLine,V.Local.sServiceID,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("Delete From GAB_6559_Service where ServiceID = '{0}'",V.Local.sServiceID.PSQLFriendly,V.Local.sSQL)
					F.ODBC.Connection!conx.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.iCnt)
			F.Data.Datatable.Close("dtDelete")
			F.Intrinsic.Control.CallSub(Load_Service)
			
		f.Intrinsic.Control.Case("DELETECAT")
			'Make sure the user actually wants to delete.
			F.Intrinsic.String.Build("Are you sure you would like to delete the selected service Categories?{0}You will only be able to delete the Categories not in use on a ServiceID",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"Delete Categories","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				gui.Form.lblPleasewait.Visible(False)
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'Filter down to selected rows.
			F.Data.DataView.Create("dtCategory","dvCategory",22,"SELECT = True","")
			F.Data.DataView.ToDataTable("dtCategory","dvCategory","dtDelete",True)
			F.Data.DataView.Close("dtCategory","dvCategory")
			
			'Find serviceIDs that are in use
			F.Data.Datatable.AddColumn("dtDelete","Inuse","Boolean",False)
			F.Data.Dictionary.CreateFromSQL("dictInUse","conx","select CID, Cast(1 as bit) From GAB_6559_Service")
			F.Data.DataTable.FillFromDictionary("dtDelete","dictInUse","CID","Inuse")
			F.Data.Dictionary.Close("dictInUse")
			
			'Check if serviceID is in use then delete...
			F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtDelete.RowCount--,1)
				V.Local.iCID.Set(V.DataTable.dtDelete(v.Local.iCnt).CID!FieldVal)
				F.Intrinsic.Control.If(V.DataTable.dtDelete(v.Local.iCnt).Inuse!FieldVal)
					F.Intrinsic.String.Build("Category in use on a Service Line, cannot delete!{0}{1}",V.Ambient.NewLine,V.Local.iCID,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("Delete From GAB_6559_Serv_Cat where CID = '{0}'",V.Local.iCID,V.Local.sSQL)
					F.ODBC.Connection!conx.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.iCnt)
			F.Data.Datatable.Close("dtDelete")
			F.Intrinsic.Control.CallSub(Load_Category)
			
	f.Intrinsic.Control.EndSelect
	
	v.Global.bPassedFirstLoad.Set(True)
	gui.Form.lblPleasewait.Visible(False)	
	
	v.Global.bLoading.Set(False)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ac1_ElementClick.End

Program.Sub.cmdUpdateService_Click.Start
f.Intrinsic.Control.Try
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sServiceID.Declare
V.Local.sDesc.Declare
V.Local.sUnitDesc.Declare
V.Local.sUnitAbbrv.Declare
V.Local.bDip.Declare
V.Local.bWeight.Declare
V.Local.bAggregate.Declare
V.Local.bHV.Declare
V.Local.bProduction.Declare
V.Local.bInvoice.Declare
V.Local.bTransport.Declare
V.Local.sDip.Declare
V.Local.sWeight.Declare
V.Local.sAggregate.Declare
V.Local.sHV.Declare
V.Local.sProduction.Declare
V.Local.sInvoice.Declare
V.Local.sTransport.Declare
V.Local.fWeight.Declare
V.Local.sCategory.Declare
V.Local.iCID.Declare
V.Local.sNow.Declare
V.Local.sFreight.Declare
V.Local.sQA.Declare
V.Local.bFreight.Declare
V.Local.bQA.Declare
V.Local.sCatSmallDesc.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)

V.Local.sServiceID.Set(V.Screen.FormAddService!txtServiceID.Text)
F.Intrinsic.String.Trim(V.Local.sServiceID,V.Local.sServiceID)
V.Local.sDesc.Set(V.Screen.FormAddService!txtServiceDesc.Text)
F.Intrinsic.String.Trim(V.Local.sDesc,V.Local.sDesc)
V.Local.sUnitDesc.Set(V.Screen.FormAddService!txtServiceUnitDesc.Text)
F.Intrinsic.String.Trim(V.Local.sUnitDesc,V.Local.sUnitDesc)
V.Local.sUnitAbbrv.Set(V.Screen.FormAddService!txtServiceUnitAbbrv.Text)
F.Intrinsic.String.Trim(V.Local.sUnitAbbrv,V.Local.sUnitAbbrv)
V.Local.bDip.Set(V.Screen.FormAddService!chkServiceDip.CheckedAsBoolean)
V.Local.bWeight.Set(V.Screen.FormAddService!chkServiceWeight.CheckedAsBoolean)
V.Local.bAggregate.Set(V.Screen.FormAddService!chkServiceAggregate.CheckedAsBoolean)
V.Local.bHV.Set(V.Screen.FormAddService!chkServiceHV.CheckedAsBoolean)
V.Local.bProduction.Set(V.Screen.FormAddService!chkServiceProduction.CheckedAsBoolean)
V.Local.bInvoice.Set(V.Screen.FormAddService!chkServiceInvoice.CheckedAsBoolean)
V.Local.bTransport.Set(V.Screen.FormAddService!chkServiceTransport.CheckedAsBoolean)
V.Local.bFreight.Set(V.Screen.FormAddService!chkServiceFreight.CheckedAsBoolean)
V.Local.bQA.Set(V.Screen.FormAddService!chkServiceQA.CheckedAsBoolean)
F.Intrinsic.Control.If(V.Local.bDip)
	V.Local.sDip.Set("1")
F.Intrinsic.Control.Else
	V.Local.sDip.Set("0")
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.If(V.Local.bWeight)
	V.Local.sWeight.Set("1")
F.Intrinsic.Control.Else
	V.Local.sWeight.Set("0")
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.If(V.Local.bAggregate)
	V.Local.sAggregate.Set("1")
F.Intrinsic.Control.Else
	V.Local.sAggregate.Set("0")
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.If(V.Local.bHV)
	V.Local.sHV.Set("1")
F.Intrinsic.Control.Else
	V.Local.sHV.Set("0")
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.If(V.Local.bProduction)
	V.Local.sProduction.Set("1")
F.Intrinsic.Control.Else
	V.Local.sProduction.Set("0")
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.If(V.Local.bTransport)
	V.Local.sTransport.Set("1")
F.Intrinsic.Control.Else
	V.Local.sTransport.Set("0")
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.If(V.Local.bInvoice)
	V.Local.sInvoice.Set("1")
F.Intrinsic.Control.Else
	V.Local.sInvoice.Set("0")
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.If(V.Local.bFreight)
	V.Local.sFreight.Set("1")
F.Intrinsic.Control.Else
	V.Local.sFreight.Set("0")
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.If(V.Local.bQA)
	V.Local.sQA.Set("1")
F.Intrinsic.Control.Else
	V.Local.sQA.Set("0")
F.Intrinsic.Control.EndIf

V.Local.fWeight.Set(v.Screen.FormAddService!txtServiceStndWeight.Text)
V.Local.sCategory.Set(v.Screen.FormAddService!ddlCatID.Value)
F.Data.Dictionary.ReturnKeyFromValue("dictCategoryDesc",V.Local.sCategory,V.Local.iCID)
V.Local.sCatSmallDesc.Set(V.Dictionary.dictCategory![V.Local.iCID])


'Check if user filled out service ID
F.Intrinsic.Control.If(V.Local.sServiceID,=,"")
	F.Intrinsic.UI.Msgbox("Please Enter a Service ID")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf
'Check if user filled out Category
F.Intrinsic.Control.If(V.Local.sCategory,=,"")
	F.Intrinsic.UI.Msgbox("Please Enter a Service Category")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.String.Build("Select 1 from GAB_6559_Service where SERVICEID = '{0}'",V.Local.sServiceID.PSQLFriendly,V.Local.sSQL)
F.ODBC.Connection!conx.ExecuteAndReturn(v.Local.sSQL,v.Local.sSQL)
F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.not)
	F.Intrinsic.UI.Msgbox("ServiceID already exists")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("Insert into GAB_6559_Service (SERVICEID, DESCRIPTION, UNITDESCRIPTION, UNITABBREVIATION, DIPALLOCATION, WEIGHTALLOCATION, AGGREGATEALLOCATION, PRODUCTIONALLOCATION, INVOICEALLOCATION, TRANSPORTALLOCATION, HVALLOCATION, STANDARDWEIGHT, CATEGORYID, CID, SYSUSERLASTACCESS, SYSUSERLASTACCESSDATETIME,FREIGHT,QA) Values ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','{14}','{15}','{16}','{17}')",V.Local.sServiceID.PSQLFriendly,V.Local.sDesc.PSQLFriendly,V.Local.sUnitDesc.PSQLFriendly,V.Local.sUnitAbbrv.PSQLFriendly,V.Local.sDip,V.Local.sWeight,V.Local.sAggregate,V.Local.sHV,V.Local.sProduction,V.Local.sInvoice,V.Local.sTransport,V.Local.fWeight,V.Local.sCatSmallDesc,V.Local.iCID,V.Caller.User,V.Local.sNow,V.Local.sFreight,V.Local.sQA,V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(v.Local.sSQL)
	F.Intrinsic.ui.Msgbox("Update complete")
	
	'Clear screen
	Gui.FormAddService.txtServiceID.Text("")
	Gui.FormAddService.txtServiceDesc.Text("")
	Gui.FormAddService.txtServiceStndWeight.Text("0.00")
	Gui.FormAddService.txtServiceUnitAbbrv.Text("")
	Gui.FormAddService.txtServiceUnitDesc.Text("")
	Gui.FormAddService.chkServiceDip.Value(False)
	Gui.FormAddService.chkServiceFreight.Value(False)
	Gui.FormAddService.chkServiceQA.Value(False)
	Gui.FormAddService.chkServiceWeight.Value(False)
	Gui.FormAddService.chkServiceAggregate.Value(False)
	Gui.FormAddService.chkServiceHV.Value(False)
	Gui.FormAddService.chkServiceProduction.Value(False)
	Gui.FormAddService.chkServiceInvoice.Value(False)
	Gui.FormAddService.chkServiceTransport.Value(False)
F.Intrinsic.Control.EndIf

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdUpdateService_Click.End

'Prolly wont use this sub
Program.Sub.cmdDeleteService_Click.Start
f.Intrinsic.Control.Try
'V.Local.sServiceID.Declare
'V.Local.sServiceID.Set(V.Screen.FormAddService!txtServiceID.Text)

'F.Intrinsic.Control.If(V.Local.sServiceID,=,"")
'	F.Intrinsic.UI.Msgbox("Please Enter a Service ID")
'	F.Intrinsic.Control.ExitSub
'F.Intrinsic.Control.EndIf

'F.Intrinsic.ui.Msgbox("Are you sure you would like to delete this service record?","Delete","4",V.Local.sRet)
'F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
'	F.Intrinsic.Control.ExitSub
'F.Intrinsic.Control.EndIf


'F.Intrinsic.String.Build("Delete from GAB_6559_Service where SERVICEID = '{0}'",V.Local.sServiceID.PSQLFriendly,V.Local.sSQL)
'F.ODBC.Connection!conx.Execute(v.Local.sSQL)
'F.Intrinsic.ui.Msgbox("Deletion complete")


f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdDeleteService_Click.End

Program.Sub.tab1_Click.Start
v.Local.sValue.Declare
v.Local.sValue.Set(v.Screen.Form!tab1.tab)

'This will prevent from multi-clicking too fast the button
f.Intrinsic.Control.If(v.Global.bLoading)
	f.Intrinsic.Control.ExitSub
f.Intrinsic.Control.EndIf
v.Global.bLoading.Set(True)

F.Intrinsic.Control.SelectCase(V.Local.sValue)
F.Intrinsic.Control.Case("0")
	'Load Service Tab
	F.Intrinsic.Control.CallSub(Load_Service)
	
F.Intrinsic.Control.Case("1")
	'Load Service Category tab
	F.Intrinsic.Control.CallSub(Load_Category)
	
F.Intrinsic.Control.EndSelect

v.Global.bLoading.Set(False)
Program.Sub.tab1_Click.End

Program.Sub.gsService_CellValueChanged.Start
F.Intrinsic.Control.Try
V.Local.sServiceID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sValue.Declare
V.Local.iCID.Declare
V.Local.sCATShort.Declare
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)

F.Intrinsic.Control.BlockEvents
Gui.Form.gsService.GetCellValueByColumnName("gvService","ServiceID",V.Args.RowIndex,V.Local.sServiceID)

F.Intrinsic.Control.SelectCase(V.Args.column.UCase)
		
	F.Intrinsic.Control.Case("DESCRIPTION")
		V.Local.sValue.Set(V.Args.Value)
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Service set Description = '{0}', SysUserLastAccess = '{1}', SysUserLastAccessDateTime = '{2}'  where ServiceID = '{3}'",V.Local.sValue.PSQLFriendly,V.Caller.User,V.Local.sNow,V.Local.sServiceID.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	
	F.Intrinsic.Control.Case("UNITDESCRIPTION")
		V.Local.sValue.Set(V.Args.Value)
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Service set UNITDESCRIPTION = '{0}', SysUserLastAccess = '{1}', SysUserLastAccessDateTime = '{2}'  where ServiceID = '{3}'",V.Local.sValue.PSQLFriendly,V.Caller.User,V.Local.sNow,V.Local.sServiceID.PSQLFriendly,V.Local.sSQL)
		
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("UNITABBREVIATION")
		V.Local.sValue.Set(V.Args.Value)
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Service set UNITABBREVIATION = '{0}', SysUserLastAccess = '{1}', SysUserLastAccessDateTime = '{2}'  where ServiceID = '{3}'",V.Local.sValue.PSQLFriendly,V.Caller.User,V.Local.sNow,V.Local.sServiceID.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	
	F.Intrinsic.Control.Case("STANDARDWEIGHT")
		V.Local.sValue.Set(V.Args.Value)
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Service set STANDARDWEIGHT = '{0}', SysUserLastAccess = '{1}', SysUserLastAccessDateTime = '{2}'  where ServiceID = '{3}'",V.Local.sValue.PSQLFriendly,V.Caller.User,V.Local.sNow,V.Local.sServiceID.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)	
		
	F.Intrinsic.Control.Case("DIPALLOCATION")
		F.Intrinsic.Control.If(V.Args.value)
			V.Local.sValue.Set("1")
		F.Intrinsic.Control.Else
			V.Local.sValue.Set("0")
		F.Intrinsic.Control.EndIf
		
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Service set DIPALLOCATION = '{0}', SysUserLastAccess = '{1}', SysUserLastAccessDateTime = '{2}'  where ServiceID = '{3}'",V.Local.sValue.PSQLFriendly,V.Caller.User,V.Local.sNow,V.Local.sServiceID.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)	

	F.Intrinsic.Control.Case("WEIGHTALLOCATION")
		F.Intrinsic.Control.If(V.Args.value)
			V.Local.sValue.Set("1")
		F.Intrinsic.Control.Else
			V.Local.sValue.Set("0")
		F.Intrinsic.Control.EndIf
		
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Service set WEIGHTALLOCATION = '{0}', SysUserLastAccess = '{1}', SysUserLastAccessDateTime = '{2}'  where ServiceID = '{3}'",V.Local.sValue.PSQLFriendly,V.Caller.User,V.Local.sNow,V.Local.sServiceID.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("AGGREGATEALLOCATION")
		F.Intrinsic.Control.If(V.Args.value)
			V.Local.sValue.Set("1")
		F.Intrinsic.Control.Else
			V.Local.sValue.Set("0")
		F.Intrinsic.Control.EndIf
		
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Service set AGGREGATEALLOCATION = '{0}', SysUserLastAccess = '{1}', SysUserLastAccessDateTime = '{2}'  where ServiceID = '{3}'",V.Local.sValue.PSQLFriendly,V.Caller.User,V.Local.sNow,V.Local.sServiceID.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("PRODUCTIONALLOCATION")
		F.Intrinsic.Control.If(V.Args.value)
			V.Local.sValue.Set("1")
		F.Intrinsic.Control.Else
			V.Local.sValue.Set("0")
		F.Intrinsic.Control.EndIf
		
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Service set PRODUCTIONALLOCATION = '{0}', SysUserLastAccess = '{1}', SysUserLastAccessDateTime = '{2}'  where ServiceID = '{3}'",V.Local.sValue.PSQLFriendly,V.Caller.User,V.Local.sNow,V.Local.sServiceID.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("INVOICEALLOCATION")
		F.Intrinsic.Control.If(V.Args.value)
			V.Local.sValue.Set("1")
		F.Intrinsic.Control.Else
			V.Local.sValue.Set("0")
		F.Intrinsic.Control.EndIf
		
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Service set INVOICEALLOCATION = '{0}', SysUserLastAccess = '{1}', SysUserLastAccessDateTime = '{2}'  where ServiceID = '{3}'",V.Local.sValue.PSQLFriendly,V.Caller.User,V.Local.sNow,V.Local.sServiceID.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("TRANSPORTALLOCATION")
		F.Intrinsic.Control.If(V.Args.value)
			V.Local.sValue.Set("1")
		F.Intrinsic.Control.Else
			V.Local.sValue.Set("0")
		F.Intrinsic.Control.EndIf
		
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Service set TRANSPORTALLOCATION = '{0}', SysUserLastAccess = '{1}', SysUserLastAccessDateTime = '{2}'  where ServiceID = '{3}'",V.Local.sValue.PSQLFriendly,V.Caller.User,V.Local.sNow,V.Local.sServiceID.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("HVALLOCATION")
		F.Intrinsic.Control.If(V.Args.value)
			V.Local.sValue.Set("1")
		F.Intrinsic.Control.Else
			V.Local.sValue.Set("0")
		F.Intrinsic.Control.EndIf
		
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Service set HVALLOCATION = '{0}', SysUserLastAccess = '{1}', SysUserLastAccessDateTime = '{2}'  where ServiceID = '{3}'",V.Local.sValue.PSQLFriendly,V.Caller.User,V.Local.sNow,V.Local.sServiceID.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("FREIGHT")
		F.Intrinsic.Control.If(V.Args.value)
			V.Local.sValue.Set("1")
		F.Intrinsic.Control.Else
			V.Local.sValue.Set("0")
		F.Intrinsic.Control.EndIf
		
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Service set FREIGHT = '{0}', SysUserLastAccess = '{1}', SysUserLastAccessDateTime = '{2}'  where ServiceID = '{3}'",V.Local.sValue.PSQLFriendly,V.Caller.User,V.Local.sNow,V.Local.sServiceID.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("QA")
		F.Intrinsic.Control.If(V.Args.value)
			V.Local.sValue.Set("1")
		F.Intrinsic.Control.Else
			V.Local.sValue.Set("0")
		F.Intrinsic.Control.EndIf
		
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Service set QA = '{0}', SysUserLastAccess = '{1}', SysUserLastAccessDateTime = '{2}'  where ServiceID = '{3}'",V.Local.sValue.PSQLFriendly,V.Caller.User,V.Local.sNow,V.Local.sServiceID.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("CATDESC")
		F.Data.Dictionary.ReturnKeyFromValue("dictCategoryDesc",V.Args.Value,V.Local.iCID)
		V.Local.sCATShort.Set(V.Dictionary.dictCategory![V.Local.iCID])
		'Update CID on DT
		F.Data.DataTable.SetValue("dtService",V.Args.rowindex,"CID",V.Local.iCID,"CategoryID",V.Local.sCATShort)
		'F.Data.DataTable.FillFromDictionary("dtService","dictCategory","CID","CategoryID")
		
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Service set CID = '{0}', CategoryID = '{1}', SysUserLastAccess = '{2}', SysUserLastAccessDateTime = '{3}'  where ServiceID = '{4}'",V.Local.iCID,V.Local.sCATShort.PSQLFriendly,V.Caller.User,V.Local.sNow,V.Local.sServiceID.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.UnBlockEvents
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsService_CellValueChanged.End

#End Region 'Tab Service

#Region "Tab Category"
Program.Sub.Load_Category.Start
f.Intrinsic.Control.Try
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.Local.iCnt.Declare

	f.Intrinsic.Control.If(v.DataTable.dtCategory.Exists)
		f.Data.DataTable.Close("dtCategory")
		gui.Form.gsCategory.ClearRows("gvCategory")
	f.Intrinsic.Control.EndIf
	
	
	'Find the rows that are selected and put them into the dtPart table
	F.Data.DataTable.CreateFromSQL("dtCategory","conx","Select CID, RTRIM(CategoryID) as CategoryID, RTRIM(Description) as Description, RTRIM(AccountingInterfaceCode) as AccountingInterfaceCode FROM GAB_6559_SERV_CAT",True)
	F.Data.Datatable.AddColumn("dtCategory","SELECT","Boolean",False)
	
	gui.Form.gsCategory.AddGridviewFromDatatable("gvCategory","dtCategory")	
	f.Intrinsic.Control.CallSub(Format_Category)	
	
	gui.Form.gsCategory.MainView("gvCategory")
	gui.Form.tab1.SetTab(1)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Load_Category.End

Program.Sub.Format_Category.Start
	V.Local.sProp.Declare
	v.Local.sValue.Declare	
	V.Local.iRet.Declare
	V.Local.iCnt.Declare
	v.Local.sValue2.Declare
	v.Local.sValue3.Declare
	
	gui.Form.gsCategory.SuspendLayout()
	
	gui.Form.gsCategory.SetGridViewProperty("gvCategory","MultiSelect",True)
	gui.Form.gsCategory.SetGridViewProperty("gvCategory","AllowSort",True)
	gui.Form.gsCategory.SetGridViewProperty("gvCategory","AllowFilter",True)
	gui.Form.gsCategory.SetGridViewProperty("gvCategory","OptionsDetailShowDetailTabs",False)
	gui.Form.gsCategory.SetGridViewProperty("gvCategory","OptionsViewShowGroupPanel",True)
	gui.Form.gsCategory.SetGridViewProperty("gvCategory","EnableAppearanceOddRow",True)
	gui.Form.gsCategory.SetGridviewProperty("gvCategory",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.gsCategory.SetGridviewProperty("gvCategory","OptionsViewColumnAutoWidth",False)
	gui.Form.gsCategory.SetGridviewProperty("gvCategory","AllowColumnResizing",True)	
	gui.Form.gsCategory.SetGridviewProperty("gvCategory","ColumnPanelRowHeight","50")
	gui.Form.gsCategory.SetGridviewProperty("gvCategory",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)	
	gui.Form.gsCategory.SetGridviewProperty("gvCategory", "ShowConditionalFormattingItem", True)
	
	f.Intrinsic.Control.CallSub(Bulk_Format_PartToCount,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_PartToCount,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_PartToCount,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_PartToCount,"sProp","HeaderVAlignment","sValue","Top")	
	
	'gui.Form.gsCategory.SetColumnProperty("gvCategory","SELECT","Visible",False)
	
	v.Local.sProp.Set("VisibleIndex")
	v.Local.iCnt.Set(-1)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","SELECT",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","CID",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","CategoryID",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","Description",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","AccountingInterfaceCode",v.Local.sProp,v.Local.iCnt.++)

	
	v.Local.sProp.Set("Caption")
	gui.Form.gsCategory.SetColumnProperty("gvCategory","CID",v.Local.sProp,"CID")
	gui.Form.gsCategory.SetColumnProperty("gvCategory","SELECT",v.Local.sProp,"Select")
	gui.Form.gsCategory.SetColumnProperty("gvCategory","CategoryID",v.Local.sProp,"Category ID")
	gui.Form.gsCategory.SetColumnProperty("gvCategory","Description",v.Local.sProp,"Description")
	gui.Form.gsCategory.SetColumnProperty("gvCategory","AccountingInterfaceCode",v.Local.sProp,"Accounting Interface Code")

	
	v.Local.sProp.Set("Width")
	gui.Form.gsCategory.SetColumnProperty("gvCategory","CID",v.Local.sProp,"75")
	gui.Form.gsCategory.SetColumnProperty("gvCategory","SELECT",v.Local.sProp,"40")
	gui.Form.gsCategory.SetColumnProperty("gvCategory","CategoryID",v.Local.sProp,"140")
	gui.Form.gsCategory.SetColumnProperty("gvCategory","Description",v.Local.sProp,"150")
	gui.Form.gsCategory.SetColumnProperty("gvCategory","AccountingInterfaceCode",v.Local.sProp,"90")
	
	
	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.Form.gsCategory.SetColumnProperty("gvCategory","CID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","CategoryID",v.Local.sProp,v.Local.sValue)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","Description",v.Local.sProp,v.Local.sValue)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","AccountingInterfaceCode",v.Local.sProp,v.Local.sValue)

	
	v.Local.sProp.Set("CellHAlignment")
	gui.Form.gsCategory.SetColumnProperty("gvCategory","CID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","CategoryID",v.Local.sProp,v.Local.sValue)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","Description",v.Local.sProp,v.Local.sValue)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","AccountingInterfaceCode",v.Local.sProp,v.Local.sValue)

	
	gui.Form.gsCategory.SetColumnProperty("gvCategory","CID","AllowEdit",False)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","Select","AllowEdit",True)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","CategoryID","AllowEdit",True)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","Description","AllowEdit",True)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","AccountingInterfaceCode","AllowEdit",True)
	
	gui.Form.gsCategory.SetColumnProperty("gvCategory","CID","ReadOnly",True)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","Select","ReadOnly",False)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","CategoryID","ReadOnly",False)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","Description","ReadOnly",False)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","AccountingInterfaceCode","ReadOnly",False)
	
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("LightYellow")
	gui.Form.gsCategory.SetColumnProperty("gvCategory","CategoryID",v.Local.sProp,v.Local.sValue)	
	gui.Form.gsCategory.SetColumnProperty("gvCategory","Description",v.Local.sProp,v.Local.sValue)	
	gui.Form.gsCategory.SetColumnProperty("gvCategory","AccountingInterfaceCode",v.Local.sProp,v.Local.sValue)	

	
	gui.Form.gsCategory.ResumeLayout()

Program.Sub.Format_Category.End

Program.Sub.Bulk_Format_PartToCount.Start
	gui.Form.gsCategory.SetColumnProperty("gvCategory","CID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","SELECT",v.Args.sProp,v.Args.sValue)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","CategoryID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","Description",v.Args.sProp,v.Args.sValue)
	gui.Form.gsCategory.SetColumnProperty("gvCategory","AccountingInterfaceCode",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_PartToCount.End

Program.Sub.gsCategory_CellValueChanged.Start
F.Intrinsic.Control.Try
V.Local.iCID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sValue.Declare
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)

F.Intrinsic.Control.BlockEvents
Gui.Form.gsCategory.GetCellValueByColumnName("gvCategory","CID",V.Args.RowIndex,V.Local.iCID)

F.Intrinsic.Control.SelectCase(V.Args.column.UCase)
	F.Intrinsic.Control.Case("CATEGORYID")
		V.Local.sValue.Set(V.Args.Value)
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Serv_Cat set CategoryID = '{0}' where CID = '{1}'",V.Local.sValue.PSQLFriendly,V.Local.iCID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("DESCRIPTION")
		V.Local.sValue.Set(V.Args.Value)
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Serv_Cat set Description = '{0}' where CID = '{1}'",V.Local.sValue.PSQLFriendly,V.Local.iCID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	
	F.Intrinsic.Control.Case("ACCOUNTINGINTERFACECODE")
		V.Local.sValue.Set(V.Args.Value)
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Serv_Cat set AccountingInterfaceCode = '{0}' where CID = '{1}'",V.Local.sValue.PSQLFriendly,V.Local.iCID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.UnBlockEvents

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsCategory_CellValueChanged.End
#End Region 'Tab Category

#Region "Tab Pricing"

Program.Sub.Load_Pricing.Start
f.Intrinsic.Control.Try
	V.Local.sBegDate.Declare
	V.Local.sEndDate.Declare
	V.Local.dBegDate.Declare
	V.Local.dEndDate.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.local.iCnt.Declare
	v.Local.sSerialize.Declare
	v.Local.sProgrammedBy.Declare
	
	f.Intrinsic.Control.If(v.DataTable.dtPricing.Exists)
		f.Data.DataTable.Close("dtPricing")
		gui.Form.gsPricing.ClearRows("gvPricing")		
	f.Intrinsic.Control.EndIf

	F.Intrinsic.String.Build("Select '' as PLUS, RTRIM(PriceGroupID) as PriceGroupID, RTRIM(Description) as Description, WorkOrderMinCharge, RTRIM(SysUserLastAccess) as SysUserLastAccess, SysUserLastAccessDateTime FROM GAB_6559_Price_Group Order by PriceGroupID Desc",v.Local.sProgrammedBy,V.Local.sSQL)
	F.Data.Datatable.CreateFromSQL("dtPricing","conx",V.Local.sSQL,True)
	F.Data.Datatable.AddColumn("dtPricing","SELECT","Boolean",False)
	
	gui.Form.gsPricing.AddGridviewFromDatatable("gvPricing","dtPricing")
	f.Intrinsic.Control.CallSub(Format_Pricing)
	gui.Form.gsPricing.MainView("gvPricing")	
	gui.Form.tab1.SetTab(0)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Load_Pricing.End

Program.Sub.Format_Pricing.Start
	V.Local.sProp.Declare
	v.Local.sValue.Declare	
	V.Local.iRet.Declare
	V.Local.iCnt.Declare
	v.Local.sValue2.Declare
	v.Local.sValue3.Declare
	
	gui.Form.gsPricing.SuspendLayout()
	
	gui.Form.gsPricing.SetGridViewProperty("gvPricing","MultiSelect",True)
	gui.Form.gsPricing.SetGridViewProperty("gvPricing","AllowSort",True)
	gui.Form.gsPricing.SetGridViewProperty("gvPricing","AllowFilter",True)
	gui.Form.gsPricing.SetGridViewProperty("gvPricing","OptionsDetailShowDetailTabs",False)
	gui.Form.gsPricing.SetGridViewProperty("gvPricing","OptionsViewShowGroupPanel",True)
	gui.Form.gsPricing.SetGridViewProperty("gvPricing","EnableAppearanceOddRow",True)
	gui.Form.gsPricing.SetGridviewProperty("gvPricing",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.gsPricing.SetGridviewProperty("gvPricing","OptionsViewColumnAutoWidth",False)
	gui.Form.gsPricing.SetGridviewProperty("gvPricing","AllowColumnResizing",True)	
	gui.Form.gsPricing.SetGridviewProperty("gvPricing","ColumnPanelRowHeight","50")
	gui.Form.gsPricing.SetGridviewProperty("gvPricing",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.Form.gsPricing.SetGridviewProperty("gvPricing", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_Pricing,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Pricing,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Pricing,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_Pricing,"sProp","HeaderVAlignment","sValue","Top")	

	gui.Form.gsPricing.SetColumnProperty("gvPricing","PLUS",v.Enum.ColumnPropertyNames!ShowCaption,False)

	v.Local.sProp.Set("VisibleIndex")
	v.Local.iCnt.Set(-1)	
	gui.Form.gsPricing.SetColumnProperty("gvPricing","PLUS",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SELECT",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","PriceGroupID",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","Description",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","WorkOrderMinCharge",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SysUserLastAccess",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SysUserLastAccessDateTime",v.Local.sProp,v.Local.iCnt.++)


	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","PriceGroupID",v.Local.sProp,v.Local.sValue)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","Description",v.Local.sProp,v.Local.sValue)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","WorkOrderMinCharge",v.Local.sProp,v.Local.sValue)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SysUserLastAccess",v.Local.sProp,v.Local.sValue)	
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)

	
	v.Local.sProp.Set("CellHAlignment")
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","PriceGroupID",v.Local.sProp,v.Local.sValue)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","Description",v.Local.sProp,v.Local.sValue)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","WorkOrderMinCharge",v.Local.sProp,v.Local.sValue)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SysUserLastAccess",v.Local.sProp,v.Local.sValue)	
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)

	
	v.Local.sProp.Set("Caption")
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SELECT",v.Local.sProp,"Select")
	gui.Form.gsPricing.SetColumnProperty("gvPricing","PriceGroupID",v.Local.sProp,"PriceGroup ID")
	gui.Form.gsPricing.SetColumnProperty("gvPricing","Description",v.Local.sProp,"Description")
	gui.Form.gsPricing.SetColumnProperty("gvPricing","WorkOrderMinCharge",v.Local.sProp,"WO Min Charge")
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SysUserLastAccess",v.Local.sProp,"User Last Access")	
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SysUserLastAccessDateTime",v.Local.sProp,"Last Access Time")

			
	
	v.Local.sProp.Set("Width")
	gui.Form.gsPricing.SetColumnProperty("gvPricing","PLUS",v.Local.sProp,"40")
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SELECT",v.Local.sProp,"70")
	gui.Form.gsPricing.SetColumnProperty("gvPricing","PriceGroupID",v.Local.sProp,"100")
	gui.Form.gsPricing.SetColumnProperty("gvPricing","Description",v.Local.sProp,"250")
	gui.Form.gsPricing.SetColumnProperty("gvPricing","WorkOrderMinCharge",v.Local.sProp,"90")
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SysUserLastAccess",v.Local.sProp,"110")	
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SysUserLastAccessDateTime",v.Local.sProp,"120")
	
	
	
'	For RowCellClick and CellValueChanged
	v.Local.sProp.Set("AllowEdit")
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SELECT",v.Local.sProp,True)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","PriceGroupID",v.Local.sProp,False)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","Description",v.Local.sProp,False)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","WorkOrderMinCharge",v.Local.sProp,False)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SysUserLastAccess",v.Local.sProp,False)	
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SysUserLastAccessDateTime",v.Local.sProp,False)

	v.Local.sProp.Set("ReadOnly")
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SELECT",v.Local.sProp,False)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","PriceGroupID",v.Local.sProp,False)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","Description",v.Local.sProp,True)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","WorkOrderMinCharge",v.Local.sProp,True)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SysUserLastAccess",v.Local.sProp,True)	
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SysUserLastAccessDateTime",v.Local.sProp,True)

	gui.Form.gsPricing.SetColumnProperty("gvPricing","PriceGroupID",V.Enum.ColumnPropertyNames!IsHyperlink,True)
	
	'BackForeColor
'	v.Local.sProp.Set("CellBackColor")
'	v.Local.sValue.Set("LightYellow")
	'gui.Form.gsPricing.SetColumnProperty("gvPricing","Note",v.Local.sProp,v.Local.sValue)
	
'	v.Local.sProp.Set("DisplayCustomDatetime")
'	v.Local.sValue.Set("d")	
'	gui.Form.gsPricing.SetColumnProperty("gvPricing","DueDate",v.Local.sProp,v.Local.sValue)
'	
'	gui.Form.gsPricing.AddStyleFormatCondition("gvPricing","NEW_PART","NEW_PART","Expression","[NEW_PART] = 0")
'	gui.Form.gsPricing.SetStyleFormatConditionProperty("gvPricing","NEW_PART","NEW_PART","backcolor","Red")
	
	gui.Form.gsPricing.ResumeLayout()

Program.Sub.Format_Pricing.End

Program.Sub.Bulk_Format_Pricing.Start
	gui.Form.gsPricing.SetColumnProperty("gvPricing","PLUS",v.Args.sProp,v.Args.sValue)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SELECT",v.Args.sProp,v.Args.sValue)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","PriceGroupID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","Description",v.Args.sProp,v.Args.sValue)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","WorkOrderMinCharge",v.Args.sProp,v.Args.sValue)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SysUserLastAccess",v.Args.sProp,v.Args.sValue)
	gui.Form.gsPricing.SetColumnProperty("gvPricing","SysUserLastAccessDateTime",v.Args.sProp,v.Args.sValue)

Program.Sub.Bulk_Format_Pricing.End

Program.Sub.ac2_ElementClick.Start
f.Intrinsic.Control.Try
	v.Local.iRet.Declare
	v.Local.bAuth.Declare
	V.Local.sRet.Declare
	V.Local.sSQL.Declare
	V.Local.sNewPGID.Declare
	V.Local.sNow.Declare
	F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
	
	'This will prevent from multi-clicking too fast the button
	f.Intrinsic.Control.If(v.Global.bLoading)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bLoading.Set(True)	
	
	gui.Form.lblPleasewait.Visible(True)
	gui.Form.lblpleasewait.Text("Please wait ...")		
	
	f.Intrinsic.Control.SelectCase(v.Args.ElementID.UCase)
		f.Intrinsic.Control.Case("SERVICEWEB")
			F.Intrinsic.Task.ShellExec(0,"Open","https://www.gss-service.com/","","",0)	
	
		f.Intrinsic.Control.Case("ADDLINE")
			'Allow user to pick new PriceGroupID Name.
			F.Intrinsic.UI.Inputbox("Price Group ID","Char(5)","",V.Local.sRet)
			'Check if User canceled
			f.Intrinsic.Control.If(V.Local.sRet.IsCancel, =, True)
				F.Intrinsic.Control.UnBlockEvents
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			V.Local.sNewPGID.Set(V.Local.sRet)
			'Check if the ret is blank
			F.Intrinsic.Control.If(V.Local.sNewPGID,=,"")
				F.Intrinsic.UI.Msgbox("New Price Group ID cannot be blank! Please try again.")
				F.Intrinsic.Control.UnBlockEvents
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'Check if the ret is too long
			F.Intrinsic.Control.If(V.Local.sNewPGID.Length,>,5)
				F.Intrinsic.UI.Msgbox("New Price Group ID cannot be greater than 5 characters long! Please try again.")
				F.Intrinsic.Control.UnBlockEvents
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'Check if the Pricegroup the user input already exists.
			F.Intrinsic.String.Build("Select PriceGroupID from GAB_6559_Price_Group where PriceGroupID = '{0}'",V.Local.sNewPGID,V.Local.sSQL)
			F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.Not)
				F.Intrinsic.UI.Msgbox("PriceGroupID already Exists! Please try again.")
				F.Intrinsic.Control.UnBlockEvents
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'we passed all our checks, lets set the global varriable and duplicate this thing
			V.Global.sPGID.Set(V.Local.sNewPGID)
			
			gui.FormPriceGroup..Visible(False)
			gui.Form..Enabled(False)
			F.Intrinsic.String.Build("Insert Into GAB_6559_Price_Group (PriceGroupID,Description,SysUserLastAccess,SysUserLastAccessDateTime) Values ('{0}','{1}','{2}','{3}')",V.Global.sPGID.PSQLFriendly,"Description",V.Caller.User,V.Local.sNow,V.Local.sSQL)
			F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			
			'load in New Pricegroup
			F.Intrinsic.Control.CallSub(LoadFormPriceGroupHeader)
			F.Intrinsic.Control.CallSub(Load_PGLines)
			gui.Form..Enabled(True)
			gui.FormPriceGroup..Visible(True)
			gui.FormPriceGroup..WindowState(0)
			gui.FormPriceGroup..SetFocus
		
	f.Intrinsic.Control.EndSelect
	
	v.Global.bPassedFirstLoad.Set(True)
	gui.Form.lblPleasewait.Visible(False)	
	
	v.Global.bLoading.Set(False)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ac2_ElementClick.End

Program.Sub.gsPricing_CellValueChanged.Start
Program.Sub.gsPricing_CellValueChanged.End

Program.Sub.gsPricing_RowCellClick.Start
'Row cell click to the Pricegroup Form.
F.Intrinsic.Control.Try
	v.Local.iRowIndex.Declare
	V.Local.sPGID.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	
	F.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
	F.Intrinsic.Control.Case("PRICEGROUPID")
		Gui.Form.gsPricing.GetCellValueByColumnName("gvPricing","PriceGroupID",V.Args.RowIndex,V.Local.sPGID)
			V.Global.sPGID.Set(V.Local.sPGID)
			F.Intrinsic.Control.CallSub(LoadFormPriceGroupHeader)
			F.Intrinsic.Control.CallSub(Load_PGLines)
			gui.FormPriceGroup.cmdRemovePG.Visible(True)
			gui.FormPriceGroup.cmdAllocatePG.Visible(False)
			gui.FormPriceGroup..Visible(True)
			gui.FormPriceGroup..WindowState(0)
			gui.FormPriceGroup..SetFocus
	F.Intrinsic.Control.EndSelect
	F.Intrinsic.Control.UnBlockEvents
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!conx.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.gsPricing_RowCellClick.End

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'FormPriceGroup

Program.Sub.FormPriceGroup_UnLoad.Start
gui.FormPriceGroup..Visible(False)
'F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","PriceMaint")
gui.Form..WindowState(2)
gui.Form..SetFocus
Program.Sub.FormPriceGroup_UnLoad.End

Program.Sub.FormPriceGroup_UserButtonClicked.Start
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.local.iCnt.Declare
V.Local.sMsg.Declare
v.Local.sReportID.Declare
v.Local.sPrm.Declare
v.Local.sval.Declare
V.Local.sNewPGID.Declare
V.Local.bRet.Declare

f.Intrinsic.Control.Try	

	'Disable form
	F.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.SelectCase(V.Args.Button)			
		F.Intrinsic.Control.Case("UpdatePG")
			'Update DB
			F.Intrinsic.Control.CallSub(SaveFormPriceGroupHeader)
			
		F.Intrinsic.Control.Case("DeletePG")
			'Check to see if Pricegroup has any Customer with it yet.
			F.Intrinsic.String.Build("Select SHIP_KEY from GAB_6559_Customer_Xref Where PriceGroupID = '{0}'",V.Global.sPGID.PSQLFriendly,V.Local.sSQL)
			F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.not)
				'We found an order line that has this quote on it. need to tell the user which ones.
				F.Intrinsic.String.Split(V.Local.sRet,"#$#",V.local.sRet)
				F.Intrinsic.String.Build("This PriceGroup is on one or more Customers:{0}",V.Ambient.NewLine,V.Local.sMsg)
				F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sRet.UBound,1)
					F.Intrinsic.String.Build("{0}, {1}",V.Local.sMsg,V.Local.sRet(V.Local.iCnt),V.Local.sMSG)
				F.Intrinsic.Control.Next(V.local.iCnt)
				F.Intrinsic.UI.Msgbox(V.Local.sMsg)
				F.Intrinsic.Control.UnBlockEvents
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.String.IsInString(V.Screen.FormPriceGroup!txtPriceGroupDesc.Text,"ZARCHIVE",True,V.Local.bRet)
			F.Intrinsic.Control.If(V.Local.bRet)
				F.Intrinsic.String.Build("This PriceGroup is Archived and cannot be deleted!",V.Ambient.NewLine,V.Local.sMsg)
				F.Intrinsic.UI.Msgbox(V.Local.sMsg)
				F.Intrinsic.Control.UnBlockEvents
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'Warning Message
			F.Intrinsic.ui.Msgbox("Are you sure you would like to delete this PriceGroup and its lines?","Delete","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				F.Intrinsic.Control.UnBlockEvents
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf

			'Delete PriceGroup
			F.Intrinsic.String.Build("Delete From GAB_6559_Price_Group Where PriceGroupID = '{0}'",V.Global.sPGID.PSQLFriendly,V.Local.sSQL)
			F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			F.Intrinsic.String.Build("Delete From GAB_6559_Price_Code Where PriceGroupID = '{0}'",V.Global.sPGID.PSQLFriendly,V.Local.sSQL)
			F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			F.Intrinsic.Control.CallSub(FormPriceGroup_UnLoad)			
			
		F.Intrinsic.Control.Case("ClonePG")
			'Allow user to pick new PriceGroupID Name.
			F.Intrinsic.UI.Inputbox("Price Group ID","Char(5)",V.Global.sPGID,V.Local.sRet)
			'Check if User canceled
			f.Intrinsic.Control.If(V.Local.sRet.IsCancel, =, True)
				F.Intrinsic.Control.UnBlockEvents
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			V.Local.sNewPGID.Set(V.Local.sRet)
			'Check if the ret is blank
			F.Intrinsic.Control.If(V.Local.sNewPGID,=,"")
				F.Intrinsic.UI.Msgbox("New Price Group ID cannot be blank! Please try again.")
				F.Intrinsic.Control.UnBlockEvents
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'Check if the ret is too long
			F.Intrinsic.Control.If(V.Local.sNewPGID.Length,>,5)
				F.Intrinsic.UI.Msgbox("New Price Group ID cannot be greater than 5 characters long! Please try again.")
				F.Intrinsic.Control.UnBlockEvents
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'Check if the Pricegroup the user input already exists.
			F.Intrinsic.String.Build("Select PriceGroupID from GAB_6559_Price_Group where PriceGroupID = '{0}'",V.Local.sNewPGID,V.Local.sSQL)
			F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.Not)
				F.Intrinsic.UI.Msgbox("PriceGroupID already Exists! Please try again.")
				F.Intrinsic.Control.UnBlockEvents
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'we passed all our checks, lets set the global varriable and duplicate this thing
			V.Global.sOldPGID.Set(V.Global.sPGID)
			V.Global.sPGID.Set(V.Local.sNewPGID)
			
			gui.FormPriceGroup..Visible(False)
			gui.Form..Enabled(False)
			'duplicate Pricegroup header
			F.Intrinsic.Control.CallSub(DuplicatePGHeader)
			'duplicate Pricegroup Lines
			F.Intrinsic.Control.CallSub(DuplicatePGLines)
			'load in New Pricegroup
			F.Intrinsic.Control.CallSub(LoadFormPriceGroupHeader)
			F.Intrinsic.Control.CallSub(Load_PGLines)
			gui.Form..Enabled(True)
			gui.FormPriceGroup..Visible(True)
			gui.FormPriceGroup..WindowState(0)
			gui.FormPriceGroup..SetFocus			
			
		F.Intrinsic.Control.Case("PreviewPG")
		
			'Create Crystal report
'			V.Local.sCust.Set(V.Screen.FormQuote!txtCustID.Text)
'			F.Intrinsic.String.Build("Select RTRIM(B.TERMS_MESSAGE) as TERMS_MESSAGE From V_CUSTOMER_SALES A Left join V_AR_TERMS B on A.PAYMENT_TERMS = B.TERMS_CODE where A.CUSTOMER = '{0}'",V.Local.sCust.PSQLFriendly,V.Local.sSQL)
'			F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sARTerms)
'			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
'				F.Intrinsic.UI.Msgbox("Missing AR Terms on Customer Master")
'				V.Local.sARTerms.Set("")
'			F.Intrinsic.Control.EndIf
			
			f.Global.BI.GetIDFromName("GAB_6559_PriceGroup.rpt",v.Local.sReportID)
			f.Intrinsic.String.Split("PGID*!*","*!*",v.Local.sPrm)
			f.Intrinsic.String.Concat(V.Global.sPGID,"*!*","",v.Local.sval)
			f.Intrinsic.String.Split(v.Local.sval,"*!*",v.Local.sval)
			'V.Local.sval.Set(V.Global.iQHID.String)
			f.Global.BI.PrintReport(v.Local.sReportID,0,v.Local.sPrm,v.Local.sval,"",true)
			
	F.Intrinsic.Control.EndSelect
	
	'Enable form
	F.Intrinsic.Control.UnBlockEvents
	
'		
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry

Program.Sub.FormPriceGroup_UserButtonClicked.End

Program.Sub.LoadFormPriceGroupHeader.Start
V.Local.sPGID.Declare
V.Local.sPGID.Set(v.Global.sPGID)
V.Local.sSQL.Declare
V.Local.sRet.Declare

F.Intrinsic.Control.Try
'Load PG header values into the Form text boxes

	F.Intrinsic.String.Build("Select RTRIM(Description) as Description, WorkOrderMinCharge, RTRIM(SysUserLastAccess) as SysUserLastAccess, RTRIM(SysUserLastAccessDateTime) as SysUserLastAccessDateTime from GAB_6559_Price_Group where PriceGroupID = '{0}';",V.Local.sPGID.PSQLFriendly,V.Local.sSQL)
	F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	
	gui.FormPriceGroup.txtPriceGroupID.Text(V.Local.sPGID)
	gui.FormPriceGroup.txtPriceGroupDesc.Text(V.Local.sRet(0))
	gui.FormPriceGroup.txtWOMinCharge.Text(V.Local.sRet(1))
	gui.FormPriceGroup.txtSysUser.Text(V.Local.sRet(2))
	gui.FormPriceGroup.txtSysUser2.Text(V.Local.sRet(3))
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadFormPriceGroupHeader.End

Program.Sub.SaveFormPriceGroupHeader.Start
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
V.Local.sDesc.Declare
V.Local.sWOMinCharge.Declare
V.Local.sPGID.Declare
V.Local.sPGID.Set(v.Global.sPGID)
V.Local.sSQL.Declare

F.Intrinsic.Control.Try
'Save PG header values from Form text boxes into the Table GAB_6559_Price_Group

	V.Local.sDesc.Set(V.Screen.FormPriceGroup!txtPriceGroupDesc.Text)
	V.Local.sWOMinCharge.Set(V.Screen.FormPriceGroup!txtWOMinCharge.Text)
	F.Intrinsic.String.RTrim(V.Local.sDesc,V.Local.sDesc)
	
	F.Intrinsic.String.Build("Update GAB_6559_Price_Group Set Description = '{0}', WorkOrderMinCharge = '{1}', SysUserLastAccess = '{2}', SysUserLastAccessDateTime = '{3}' where PriceGroupID = '{4}'",V.Local.sDesc.PSQLFriendly,V.Local.sWOMinCharge,V.Caller.User,V.Local.sNow,V.Global.sPGID.PSQLFriendly,V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.SaveFormPriceGroupHeader.End

Program.Sub.Load_PGLines.Start
V.Local.sPGID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.bRet.Declare

F.Intrinsic.Control.Try

	f.Intrinsic.Control.If(v.DataTable.dtPGLines.Exists)
		f.Data.DataTable.Close("dtPGLines")
		gui.FormPriceGroup.gsPGLines.ClearRows("gvPGLines")		
	f.Intrinsic.Control.EndIf
	
	f.Data.Dictionary.Exists("dictServiceDesc",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictServiceDesc")
	F.Intrinsic.Control.EndIf

	F.Intrinsic.String.Build("select RTRIM(ServiceID) as ServiceID, '' as ServiceDesc, '' as Unit, Price, PriceMinCharge, PricePriority, ItemQuantityBasedFlag, '' as Weight, RTRIM(SysUserLastAccess) as SysUserLastAccess, RTRIM(SysUserLastAccessDateTime) as SysUserLastAccessDateTime from GAB_6559_Price_Code where PriceGroupID = '{0}' order by ItemQuantityBasedFlag ASC, ServiceID ASC",V.Global.sPGID.PSQLFriendly,V.Local.sSQL)
	F.Data.Datatable.CreateFromSQL("dtPGLines","conx",V.Local.sSQL,True)
	
	F.Data.DataTable.AddColumn("dtPGLines","SELECT","Boolean",False)
	'Dictionary for Service ID, Service Description from GAB_6559_Service
	F.Data.Dictionary.CreatefromSQL("dictServiceDesc","conx","Select RTRIM(SERVICEID), RTRIM(DESCRIPTION) From GAB_6559_Service")
	F.Data.Dictionary.SetDefaultReturn("dictServiceDesc","")
	F.Data.DataTable.FillFromDictionary("dtPGLines","dictServiceDesc","ServiceID","ServiceDesc")
	
	F.Data.Dictionary.CreatefromSQL("dictUnit","conx","Select RTRIM(SERVICEID), RTRIM(UnitAbbreviation) From GAB_6559_Service")
	F.Data.Dictionary.SetDefaultReturn("dictUnit","")
	F.Data.DataTable.FillFromDictionary("dtPGLines","dictUnit","ServiceID","Unit")
	F.Data.Dictionary.Close("dictUnit")
	
	F.Data.Dictionary.CreatefromSQL("dictWeight","conx","Select RTRIM(SERVICEID), RTRIM(StandardWeight) From GAB_6559_Service")
	F.Data.Dictionary.SetDefaultReturn("dictWeight","")
	F.Data.DataTable.FillFromDictionary("dtPGLines","dictWeight","ServiceID","Weight")
	F.Data.Dictionary.Close("dictWeight")
	
	gui.FormPriceGroup.gsPGLines.AddGridviewFromDatatable("gvPGLines","dtPGLines")
	f.Intrinsic.Control.CallSub(Format_PGLines)
	gui.FormPriceGroup.gsPGLines.MainView("gvPGLines")		
	gui.FormPriceGroup.tabPG.SetTab(0)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Load_PGLines.End

Program.Sub.Format_PGLines.Start
V.Local.sSql.Declare
V.Local.sProp.Declare
v.Local.sValue.Declare	
V.Local.iRet.Declare
V.Local.iCnt.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare
F.Intrinsic.Control.Try

	
	
	gui.FormPriceGroup.gsPGLines.SuspendLayout()
	
	gui.FormPriceGroup.gsPGLines.SetGridViewProperty("gvPGLines","MultiSelect",False)
	gui.FormPriceGroup.gsPGLines.SetGridViewProperty("gvPGLines","AllowSort",True)
	gui.FormPriceGroup.gsPGLines.SetGridViewProperty("gvPGLines","AllowFilter",True)
	gui.FormPriceGroup.gsPGLines.SetGridViewProperty("gvPGLines","OptionsDetailShowDetailTabs",False)
	gui.FormPriceGroup.gsPGLines.SetGridViewProperty("gvPGLines","OptionsViewShowGroupPanel",True)
	gui.FormPriceGroup.gsPGLines.SetGridViewProperty("gvPGLines","EnableAppearanceOddRow",True)
	gui.FormPriceGroup.gsPGLines.SetGridviewProperty("gvPGLines",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.FormPriceGroup.gsPGLines.SetGridviewProperty("gvPGLines","OptionsViewColumnAutoWidth",False)
	gui.FormPriceGroup.gsPGLines.SetGridviewProperty("gvPGLines","AllowColumnResizing",True)	
	gui.FormPriceGroup.gsPGLines.SetGridviewProperty("gvPGLines","ColumnPanelRowHeight","50")
	gui.FormPriceGroup.gsPGLines.SetGridviewProperty("gvPGLines",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.FormPriceGroup.gsPGLines.SetGridviewProperty("gvPGLines", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_PGLines,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_PGLines,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_PGLines,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_PGLines,"sProp","HeaderVAlignment","sValue","Top")
	

	v.Local.sProp.Set("VisibleIndex")
	v.Local.iCnt.Set(-1)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SELECT",v.Local.sProp,v.Local.iCnt.++)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ServiceID",v.Local.sProp,v.Local.iCnt.++)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ServiceDesc",v.Local.sProp,v.Local.iCnt.++)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Unit",v.Local.sProp,v.Local.iCnt.++)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Price",v.Local.sProp,v.Local.iCnt.++)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","PriceMinCharge",v.Local.sProp,v.Local.iCnt.++)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","PricePriority",v.Local.sProp,v.Local.iCnt.++)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ItemQuantityBasedFlag",v.Local.sProp,v.Local.iCnt.++)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Weight",v.Local.sProp,v.Local.iCnt.++)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SysUserLastAccess",v.Local.sProp,v.Local.iCnt.++)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SysUserLastAccessDateTime",v.Local.sProp,v.Local.iCnt.++)
	
	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ServiceID",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ServiceDesc",v.Local.sProp,v.Local.sValue)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Unit",v.Local.sProp,v.Local.sValue)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Price",v.Local.sProp,v.Local.sValue3)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","PriceMinCharge",v.Local.sProp,v.Local.sValue3)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","PricePriority",v.Local.sProp,v.Local.sValue3)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ItemQuantityBasedFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Weight",v.Local.sProp,v.Local.sValue3)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SysUserLastAccess",v.Local.sProp,v.Local.sValue)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ServiceID",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ServiceDesc",v.Local.sProp,v.Local.sValue)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Unit",v.Local.sProp,v.Local.sValue)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Price",v.Local.sProp,v.Local.sValue3)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","PriceMinCharge",v.Local.sProp,v.Local.sValue3)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","PricePriority",v.Local.sProp,v.Local.sValue3)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ItemQuantityBasedFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Weight",v.Local.sProp,v.Local.sValue3)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SysUserLastAccess",v.Local.sProp,v.Local.sValue)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)

	
	v.Local.sProp.Set("Caption")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SELECT",v.Local.sProp,"Select")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ServiceID",v.Local.sProp,"Service ID")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ServiceDesc",v.Local.sProp,"Service Desc")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Unit",v.Local.sProp,"Unit")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Price",v.Local.sProp,"Unit Price ($)")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","PriceMinCharge",v.Local.sProp,"Price Min Charge ($)")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","PricePriority",v.Local.sProp,"Unit Price Priority ($)")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ItemQuantityBasedFlag",v.Local.sProp,"Item Qty Based Flag")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Weight",v.Local.sProp,"Weight")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SysUserLastAccess",v.Local.sProp,"SysUser LastAccess")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SysUserLastAccessDateTime",v.Local.sProp,"SysUser LastAccess DateTime")
	
	v.Local.sProp.Set("Width")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SELECT",v.Local.sProp,"50")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ServiceID",v.Local.sProp,"75")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ServiceDesc",v.Local.sProp,"250")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Unit",v.Local.sProp,"75")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Price",v.Local.sProp,"75")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","PriceMinCharge",v.Local.sProp,"75")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","PricePriority",v.Local.sProp,"75")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ItemQuantityBasedFlag",v.Local.sProp,"85")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Weight",v.Local.sProp,"75")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SysUserLastAccess",v.Local.sProp,"150")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SysUserLastAccessDateTime",v.Local.sProp,"175")
	
	
'	For RowCellClick and CellValueChanged
	v.Local.sProp.Set("AllowEdit")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SELECT",v.Local.sProp,True)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ServiceID",v.Local.sProp,False)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ServiceDesc",v.Local.sProp,False)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Unit",v.Local.sProp,False)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Price",v.Local.sProp,True)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","PriceMinCharge",v.Local.sProp,True)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","PricePriority",v.Local.sProp,True)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ItemQuantityBasedFlag",v.Local.sProp,True)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Weight",v.Local.sProp,False)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SysUserLastAccess",v.Local.sProp,False)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SysUserLastAccessDateTime",v.Local.sProp,False)
		

	v.Local.sProp.Set("ReadOnly")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SELECT",v.Local.sProp,False)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ServiceID",v.Local.sProp,True)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ServiceDesc",v.Local.sProp,True)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Unit",v.Local.sProp,True)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Price",v.Local.sProp,False)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","PriceMinCharge",v.Local.sProp,False)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","PricePriority",v.Local.sProp,False)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ItemQuantityBasedFlag",v.Local.sProp,False)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Weight",v.Local.sProp,True)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SysUserLastAccess",v.Local.sProp,True)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SysUserLastAccessDateTime",v.Local.sProp,True)
		
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("LightYellow")
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Price",v.Local.sProp,v.Local.sValue)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","PriceMinCharge",v.Local.sProp,v.Local.sValue)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","PricePriority",v.Local.sProp,v.Local.sValue)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ItemQuantityBasedFlag",v.Local.sProp,v.Local.sValue)
	
	'Gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SysUserLastAccessDateTime",V.Enum.ColumnPropertyNames!DisplayCustomDateTime,"###,###,##0.00")
	Gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Weight",V.Enum.ColumnPropertyNames!DisplayCustomNumeric,"###,###,##0.00")
	Gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Price",V.Enum.ColumnPropertyNames!DisplayCustomNumeric,"###,###,##0.000")
	Gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","PriceMinCharge",V.Enum.ColumnPropertyNames!DisplayCustomNumeric,"###,###,##0.000")
	Gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","PricePriority",V.Enum.ColumnPropertyNames!DisplayCustomNumeric,"###,###,##0.000")

	gui.FormPriceGroup.gsPGLines.ResumeLayout()

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Format_PGLines.End

Program.Sub.Bulk_Format_PGLines.Start
F.Intrinsic.Control.Try
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SELECT",v.Args.sProp,v.Args.sValue)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ServiceID",v.Args.sProp,v.Args.sValue)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ServiceDesc",v.Args.sProp,v.Args.sValue)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Unit",v.Args.sProp,v.Args.sValue)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Price",v.Args.sProp,v.Args.sValue)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","PriceMinCharge",v.Args.sProp,v.Args.sValue)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","PricePriority",v.Args.sProp,v.Args.sValue)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","ItemQuantityBasedFlag",v.Args.sProp,v.Args.sValue)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","Weight",v.Args.sProp,v.Args.sValue)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SysUserLastAccess",v.Args.sProp,v.Args.sValue)
	gui.FormPriceGroup.gsPGLines.SetColumnProperty("gvPGLines","SysUserLastAccessDateTime",v.Args.sProp,v.Args.sValue)
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Bulk_Format_PGLines.End

Program.Sub.Load_PGAvailable.Start
V.Local.sPGID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.bRet.Declare

F.Intrinsic.Control.Try

	f.Intrinsic.Control.If(v.DataTable.dtPGAvailable.Exists)
		f.Data.DataTable.Close("dtPGAvailable")
		gui.FormPriceGroup.gsPGAvailable.ClearRows("gvPGAvailable")		
	f.Intrinsic.Control.EndIf
	
	'SELECT
	'ServiceID
	'ServiceDesc
	'UnitDescription
	'DipAllocation
	'WeightAllocation
	'AggregateAllocation
	'ProductionAllocation
	'StandardWeight
	'CategoryID
	'InvoiceAllocation
	'TransportAllocation
	'HVAllocation
	
	F.Intrinsic.String.Build("Select RTRIM(ServiceID) as ServiceID, RTRIM(Description) as ServiceDesc, RTRIM(UnitAbbreviation) as Unit, DipAllocation, WeightAllocation, AggregateAllocation, ProductionAllocation, StandardWeight, CategoryID, InvoiceAllocation, TransportAllocation, HVAllocation from GAB_6559_Service Where ServiceID Not In (Select ServiceID From GAB_6559_Price_Code where PriceGroupID = '{0}') order by ServiceID ASC",V.Global.sPGID.PSQLFriendly,V.Local.sSQL)
	F.Data.Datatable.CreateFromSQL("dtPGAvailable","conx",V.Local.sSQL,True)
	F.Data.DataTable.AddColumn("dtPGAvailable","SELECT","Boolean",False)
	
	gui.FormPriceGroup.gsPGAvailable.AddGridviewFromDatatable("gvPGAvailable","dtPGAvailable")
	f.Intrinsic.Control.CallSub(Format_PGAvailable)
	gui.FormPriceGroup.gsPGAvailable.MainView("gvPGAvailable")		
	gui.FormPriceGroup.tabPG.SetTab(1)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry

Program.Sub.Load_PGAvailable.End

Program.Sub.Format_PGAvailable.Start
V.Local.sSql.Declare
V.Local.sProp.Declare
v.Local.sValue.Declare	
V.Local.iRet.Declare
V.Local.iCnt.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare
F.Intrinsic.Control.Try

	
	
	gui.FormPriceGroup.gsPGAvailable.SuspendLayout()
	
	gui.FormPriceGroup.gsPGAvailable.SetGridViewProperty("gvPGAvailable","MultiSelect",False)
	gui.FormPriceGroup.gsPGAvailable.SetGridViewProperty("gvPGAvailable","AllowSort",True)
	gui.FormPriceGroup.gsPGAvailable.SetGridViewProperty("gvPGAvailable","AllowFilter",True)
	gui.FormPriceGroup.gsPGAvailable.SetGridViewProperty("gvPGAvailable","OptionsDetailShowDetailTabs",False)
	gui.FormPriceGroup.gsPGAvailable.SetGridViewProperty("gvPGAvailable","OptionsViewShowGroupPanel",True)
	gui.FormPriceGroup.gsPGAvailable.SetGridViewProperty("gvPGAvailable","EnableAppearanceOddRow",True)
	gui.FormPriceGroup.gsPGAvailable.SetGridviewProperty("gvPGAvailable",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.FormPriceGroup.gsPGAvailable.SetGridviewProperty("gvPGAvailable","OptionsViewColumnAutoWidth",False)
	gui.FormPriceGroup.gsPGAvailable.SetGridviewProperty("gvPGAvailable","AllowColumnResizing",True)	
	gui.FormPriceGroup.gsPGAvailable.SetGridviewProperty("gvPGAvailable","ColumnPanelRowHeight","50")
	gui.FormPriceGroup.gsPGAvailable.SetGridviewProperty("gvPGAvailable",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.FormPriceGroup.gsPGAvailable.SetGridviewProperty("gvPGAvailable", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_PGAvailable,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_PGAvailable,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_PGAvailable,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_PGAvailable,"sProp","HeaderVAlignment","sValue","Top")
	
	'SELECT
	'ServiceID
	'ServiceDesc
	'UnitDescription
	'DipAllocation
	'WeightAllocation
	'AggregateAllocation
	'ProductionAllocation
	'StandardWeight
	'CategoryID
	'InvoiceAllocation
	'TransportAllocation
	'HVAllocation

	v.Local.sProp.Set("VisibleIndex")
	v.Local.iCnt.Set(-1)	
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","SELECT",v.Local.sProp,v.Local.iCnt.++)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ServiceID",v.Local.sProp,v.Local.iCnt.++)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ServiceDesc",v.Local.sProp,v.Local.iCnt.++)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","Unit",v.Local.sProp,v.Local.iCnt.++)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","DipAllocation",v.Local.sProp,v.Local.iCnt.++)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","WeightAllocation",v.Local.sProp,v.Local.iCnt.++)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","AggregateAllocation",v.Local.sProp,v.Local.iCnt.++)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ProductionAllocation",v.Local.sProp,v.Local.iCnt.++)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","StandardWeight",v.Local.sProp,v.Local.iCnt.++)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","CategoryID",v.Local.sProp,v.Local.iCnt.++)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","InvoiceAllocation",v.Local.sProp,v.Local.iCnt.++)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","TransportAllocation",v.Local.sProp,v.Local.iCnt.++)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","HVAllocation",v.Local.sProp,v.Local.iCnt.++)
	
	
	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ServiceID",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ServiceDesc",v.Local.sProp,v.Local.sValue)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","Unit",v.Local.sProp,v.Local.sValue)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","DipAllocation",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","WeightAllocation",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","AggregateAllocation",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ProductionAllocation",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","StandardWeight",v.Local.sProp,v.Local.sValue3)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","CategoryID",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","InvoiceAllocation",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","TransportAllocation",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","HVAllocation",v.Local.sProp,v.Local.sValue2)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ServiceID",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ServiceDesc",v.Local.sProp,v.Local.sValue)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","Unit",v.Local.sProp,v.Local.sValue)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","DipAllocation",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","WeightAllocation",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","AggregateAllocation",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ProductionAllocation",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","StandardWeight",v.Local.sProp,v.Local.sValue3)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","CategoryID",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","InvoiceAllocation",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","TransportAllocation",v.Local.sProp,v.Local.sValue2)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","HVAllocation",v.Local.sProp,v.Local.sValue2)

	
	v.Local.sProp.Set("Caption")	
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","SELECT",v.Local.sProp,"Select")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ServiceID",v.Local.sProp,"Service ID")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ServiceDesc",v.Local.sProp,"Service Desc")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","Unit",v.Local.sProp,"Unit")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","DipAllocation",v.Local.sProp,"Dip Alloc.")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","WeightAllocation",v.Local.sProp,"Weight Alloc.")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","AggregateAllocation",v.Local.sProp,"Aggregate Alloc.")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ProductionAllocation",v.Local.sProp,"Production Alloc.")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","StandardWeight",v.Local.sProp,"Standard Weight")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","CategoryID",v.Local.sProp,"Category")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","InvoiceAllocation",v.Local.sProp,"Invoice Alloc.")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","TransportAllocation",v.Local.sProp,"Transport Alloc.")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","HVAllocation",v.Local.sProp,"HV Alloc.")
	
	v.Local.sProp.Set("Width")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","SELECT",v.Local.sProp,"50")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ServiceID",v.Local.sProp,"75")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ServiceDesc",v.Local.sProp,"250")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","Unit",v.Local.sProp,"75")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","DipAllocation",v.Local.sProp,"75")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","WeightAllocation",v.Local.sProp,"75")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","AggregateAllocation",v.Local.sProp,"75")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ProductionAllocation",v.Local.sProp,"75")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","StandardWeight",v.Local.sProp,"80")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","CategoryID",v.Local.sProp,"80")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","InvoiceAllocation",v.Local.sProp,"75")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","TransportAllocation",v.Local.sProp,"75")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","HVAllocation",v.Local.sProp,"75")
	
'	For RowCellClick and CellValueChanged
	v.Local.sProp.Set("AllowEdit")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","SELECT",v.Local.sProp,True)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ServiceID",v.Local.sProp,False)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ServiceDesc",v.Local.sProp,False)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","Unit",v.Local.sProp,False)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","DipAllocation",v.Local.sProp,False)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","WeightAllocation",v.Local.sProp,False)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","AggregateAllocation",v.Local.sProp,False)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ProductionAllocation",v.Local.sProp,False)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","StandardWeight",v.Local.sProp,False)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","CategoryID",v.Local.sProp,False)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","InvoiceAllocation",v.Local.sProp,False)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","TransportAllocation",v.Local.sProp,False)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","HVAllocation",v.Local.sProp,False)
	
	v.Local.sProp.Set("ReadOnly")
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","SELECT",v.Local.sProp,False)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ServiceID",v.Local.sProp,True)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ServiceDesc",v.Local.sProp,True)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","Unit",v.Local.sProp,True)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","DipAllocation",v.Local.sProp,True)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","WeightAllocation",v.Local.sProp,True)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","AggregateAllocation",v.Local.sProp,True)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ProductionAllocation",v.Local.sProp,True)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","StandardWeight",v.Local.sProp,True)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","CategoryID",v.Local.sProp,True)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","InvoiceAllocation",v.Local.sProp,True)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","TransportAllocation",v.Local.sProp,True)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","HVAllocation",v.Local.sProp,True)
	
	Gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","StandardWeight",V.Enum.ColumnPropertyNames!DisplayCustomNumeric,"###,###,##0.00")
	
	'v.Local.sProp.Set("CellBackColor")
	'v.Local.sValue.Set("LightYellow")
	'gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","Price",v.Local.sProp,v.Local.sValue)

	gui.FormPriceGroup.gsPGAvailable.ResumeLayout()

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Format_PGAvailable.End

Program.Sub.Bulk_Format_PGAvailable.Start
F.Intrinsic.Control.Try
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","SELECT",v.Args.sProp,v.Args.sValue)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ServiceID",v.Args.sProp,v.Args.sValue)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ServiceDesc",v.Args.sProp,v.Args.sValue)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","Unit",v.Args.sProp,v.Args.sValue)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","DipAllocation",v.Args.sProp,v.Args.sValue)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","WeightAllocation",v.Args.sProp,v.Args.sValue)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","AggregateAllocation",v.Args.sProp,v.Args.sValue)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","ProductionAllocation",v.Args.sProp,v.Args.sValue)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","StandardWeight",v.Args.sProp,v.Args.sValue)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","CategoryID",v.Args.sProp,v.Args.sValue)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","InvoiceAllocation",v.Args.sProp,v.Args.sValue)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","TransportAllocation",v.Args.sProp,v.Args.sValue)
	gui.FormPriceGroup.gsPGAvailable.SetColumnProperty("gvPGAvailable","HVAllocation",v.Args.sProp,v.Args.sValue)
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Bulk_Format_PGAvailable.End


Program.Sub.cmdRemovePG_Click.Start
V.Local.sRet.Declare
V.Local.iCnt.Declare
v.Local.sServiceID.Declare
V.Local.sSQL.Declare

F.Intrinsic.Control.Try

'Warn the user with a msgbox the delete from the  
F.Intrinsic.ui.Msgbox("Are you sure you would like to delete the selected Price Group lines?","Delete","4",V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

'loop backwards through dtPGlines and delete formt the DB table and the local DT
F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtPGLines.RowCount--,1)
	F.Intrinsic.Control.If(V.DataTable.dtPGLines(V.Local.iCnt).Select!fieldval,=,"True")
		v.Local.sServiceID.Set(V.DataTable.dtPGLines(V.Local.iCnt).ServiceID!FieldvalTrim)
		F.Intrinsic.String.Build("Delete from GAB_6559_Price_Code where PriceGroupID = '{0}' and ServiceID = '{1}'",V.Global.sPGID,V.Local.sServiceID.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iCnt)

F.Intrinsic.Control.CallSub(Load_PGLines)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdRemovePG_Click.End

Program.Sub.cmdAllocatePG_Click.Start
F.Intrinsic.Control.Try
V.Local.sSQL.Declare(String)
V.Local.iCnt.Declare
V.Local.sIOP.Declare
V.Local.sServiceID.Declare
V.Local.sLID.Declare
V.Local.sColumn.Declare
V.Local.iRet.Declare
V.Local.iItemQty.Declare
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)


'Allocate selected lines
F.Data.DataView.Create("dtPGAvailable","dvPGAvailable",22,"SELECT = True","")

'insert into, or update GAB_6559_Price_Code
F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataView.dtPGAvailable!dvPGAvailable.RowCount--,1)
	V.Local.sServiceID.Set(V.DataView.dtPGAvailable!dvPGAvailable(V.Local.iCnt).ServiceID!FieldVal)
	F.Intrinsic.String.Build("Insert Into GAB_6559_Price_Code (PriceGroupID,ServiceID,ItemQuantityBasedFlag,SysUserLastAccess,SysUserLastAccessDateTime) Values ('{0}','{1}','0','{2}','{3}')",V.Global.sPGID.PSQLFriendly,V.Local.sServiceID,V.Caller.User,V.Local.sNow,V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)
F.Intrinsic.Control.Next(V.Local.iCnt)
F.Data.DataView.Close("dtPGAvailable","dvPGAvailable")
'reload PGAvailable tab
F.Intrinsic.Control.CallSub(Load_PGAvailable)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdAllocatePG_Click.End

Program.Sub.tabPG_Click.Start
v.Local.sValue.Declare
v.Local.sValue.Set(v.Screen.FormPriceGroup!tabPG.tab)

'This will prevent from multi-clicking too fast the button
f.Intrinsic.Control.If(v.Global.bLoading)
	f.Intrinsic.Control.ExitSub
f.Intrinsic.Control.EndIf
v.Global.bLoading.Set(True)

gui.FormPriceGroup.cmdRemovePG.Visible(False)
gui.FormPriceGroup.cmdAllocatePG.Visible(False)

F.Intrinsic.Control.SelectCase(V.Local.sValue)
F.Intrinsic.Control.Case("0")
	'Load Lines Tab
	F.Intrinsic.Control.CallSub(Load_PGLines)
	gui.FormPriceGroup.cmdRemovePG.Visible(True)
F.Intrinsic.Control.Case("1")
	'Load Available tab
	F.Intrinsic.Control.CallSub(Load_PGAvailable)
	gui.FormPriceGroup.cmdAllocatePG.Visible(True)
	
F.Intrinsic.Control.EndSelect

v.Global.bLoading.Set(False)
Program.Sub.tabPG_Click.End

Program.Sub.gsPGLines_CellValueChanged.Start
F.Intrinsic.Control.Try
V.Local.sQID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.fRet.Declare
V.Local.sBit.Declare
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
V.Local.sServiceID.Declare

gui.FormPriceGroup.gsPGLines.GetCellValueByColumnName("gvPGLines","ServiceID",V.Args.RowIndex,V.Local.sServiceID)
F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
		
	F.Intrinsic.Control.Case("PRICE")
		'Update PricePriority based on Price
		F.Intrinsic.Math.Mult(V.Args.Value,0.5,V.Local.fRet)
		F.Data.Datatable.SetValue("dtPGLines",V.Args.RowIndex,"PRICEPRIORITY",V.Local.fRet)
		
		F.Intrinsic.String.Build("Update GAB_6559_Price_Code Set PRICE = '{0}', PRICEPRIORITY = '{1}', SysUserLastAccessDateTime = '{2}', SysUserLastAccess = '{3}' where PriceGroupID = '{4}' and ServiceID = '{5}'",V.Args.Value,V.Local.fRet,V.Local.sNow,V.Caller.User,V.Global.sPGID.PSQLFriendly,V.Local.sServiceID.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("PRICEMINCHARGE")
		F.Intrinsic.String.Build("Update GAB_6559_Price_Code Set PRICEMINCHARGE = '{0}', SysUserLastAccessDateTime = '{1}', SysUserLastAccess = '{2}' where PriceGroupID = '{3}' and ServiceID = '{4}'",V.Args.Value,V.Local.sNow,V.Caller.User,V.Global.sPGID.PSQLFriendly,V.Local.sServiceID.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			
	F.Intrinsic.Control.Case("PRICEPRIORITY")
		'incase they want to upadte the prio price individually...
		F.Intrinsic.String.Build("Update GAB_6559_Price_Code Set PRICEPRIORITY = '{0}', SysUserLastAccessDateTime = '{1}', SysUserLastAccess = '{2}' where PriceGroupID = '{3}' and ServiceID = '{4}'",V.Args.Value,V.Local.sNow,V.Caller.User,V.Global.sPGID.PSQLFriendly,V.Local.sServiceID.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("ITEMQUANTITYBASEDFLAG")
		F.Intrinsic.Control.If(V.Args.Value,=,"True")
			V.Local.sBit.Set("1")
		F.Intrinsic.Control.Else
			V.Local.sBit.Set("0")
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.String.Build("Update GAB_6559_Price_Code Set ITEMQUANTITYBASEDFLAG = '{0}', SysUserLastAccessDateTime = '{1}', SysUserLastAccess = '{2}' where PriceGroupID = '{3}' and ServiceID = '{4}'",V.Local.sBit,V.Local.sNow,V.Caller.User,V.Global.sPGID.PSQLFriendly.PSQLFriendly,V.Local.sServiceID.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)

F.Intrinsic.Control.EndSelect
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsPGLines_CellValueChanged.End

'Might not use this....
Program.Sub.gsPGAvailable_CellValueChanged.Start
Program.Sub.gsPGAvailable_CellValueChanged.End

Program.Sub.DuplicatePGHeader.Start
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
V.Local.sDesc.Declare
V.Local.sWOMinCharge.Declare

F.Intrinsic.Control.Try
	'Duplicate Pricegroup header values from Form text boxes into the Table GAB_6559_Price_Group
	V.Local.sDesc.Set(V.Screen.FormPriceGroup!txtPriceGroupDesc.Text)
	V.Local.sWOMinCharge.Set(V.Screen.FormPriceGroup!txtWOMinCharge.Text)
	F.Intrinsic.String.RTrim(V.Local.sDesc,V.Local.sDesc)
	F.Intrinsic.String.Build("Insert Into GAB_6559_Price_Group (PriceGroupID,Description,WorkOrderMinCharge,SysUserLastAccess,SysUserLastAccessDateTime) Values ('{0}','{1}','{2}','{3}','{4}')",V.Global.sPGID.PSQLFriendly,V.Local.sDesc.PSQLFriendly,V.Local.sWOMinCharge,V.Caller.User,V.Local.sNow,V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.DuplicatePGHeader.End

Program.Sub.DuplicatePGLines.Start
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.iCnt.Declare
V.Local.sPricePriority.Declare
V.Local.sPrice.Declare
V.Local.sPriceMinCharge.Declare
V.Local.sItmQtyBasedFlag.Declare
V.Local.sServiceID.Declare
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)

F.Intrinsic.Control.Try

	f.Intrinsic.Control.If(v.DataTable.dtPGLines.RowCount,=,0)
		F.Intrinsic.Control.ExitSub		
	f.Intrinsic.Control.EndIf
	
	F.Data.DataView.Create("dtPGLines","dvPGLines",22)
	F.Data.DataView.ToDataTable("dtPGLines","dvPGLines","dtPGLines0")
	F.Data.DataView.Close("dtPGLines","dvPGLines")
		
	'Loop through duplicate datatable to insert each line under the new PriceGroupID PGID
	F.Intrinsic.Control.For(V.Local.iCnt,0,v.DataTable.dtPGLines0.RowCount--,1)
		V.Local.sServiceID.Set(V.DataTable.dtPGLines0(V.Local.iCnt).ServiceID!FieldValTrim)
		V.Local.sPrice.Set(V.DataTable.dtPGLines0(V.Local.iCnt).Price!FieldVal)
		V.Local.sPriceMinCharge.Set(V.DataTable.dtPGLines0(V.Local.iCnt).PriceMinCharge!FieldVal)
		V.Local.sPricePriority.Set(V.DataTable.dtPGLines0(V.Local.iCnt).PricePriority!FieldVal)
		V.Local.sItmQtyBasedFlag.Set(V.DataTable.dtPGLines0(V.Local.iCnt).ItemQuantityBasedFlag!FieldVal)
		F.Intrinsic.Control.If(V.Local.sItmQtyBasedFlag,=,"True")
			V.Local.sItmQtyBasedFlag.Set("1")
		F.Intrinsic.Control.Else
			V.Local.sItmQtyBasedFlag.Set("0")
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.String.Build("Insert into GAB_6559_Price_Code (PriceGroupID,ServiceID,Price,PriceMinCharge,PricePriority,ItemQuantityBasedFlag,SysUserLastAccessDateTime,SysUserLastAccess) Values ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}')",V.Global.sPGID,V.Local.sServiceID.PSQLFriendly,V.Local.sPrice,V.Local.sPriceMinCharge,V.Local.sPricePriority,V.Local.sItmQtyBasedFlag,V.Local.sNow,V.Caller.User,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	F.Data.DataTable.Close("dtPGLines0")
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.DuplicatePGLines.End

#End Region 'Tab Pricing


#Region "Tab Customer"

Program.Sub.tab3_Click.Start
v.Local.sValue.Declare
v.Local.sValue.Set(v.Screen.Form!tab3.tab)

'This will prevent from multi-clicking too fast the button
f.Intrinsic.Control.If(v.Global.bLoading)
	f.Intrinsic.Control.ExitSub
f.Intrinsic.Control.EndIf
v.Global.bLoading.Set(True)

F.Intrinsic.Control.SelectCase(V.Local.sValue)
F.Intrinsic.Control.Case("0")
	'Load Customer
	F.Intrinsic.Control.CallSub(Load_Customer)
	
F.Intrinsic.Control.Case("1")
	'Load Location
	F.Intrinsic.Control.CallSub(Load_Location)
	
F.Intrinsic.Control.EndSelect

v.Global.bLoading.Set(False)
Program.Sub.tab3_Click.End

Program.Sub.Load_Customer.Start
f.Intrinsic.Control.Try
	V.Local.sBegDate.Declare
	V.Local.sEndDate.Declare
	V.Local.dBegDate.Declare
	V.Local.dEndDate.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.local.iCnt.Declare
	v.Local.sSerialize.Declare
	v.Local.sProgrammedBy.Declare
	V.Local.bExists.Declare
	
	f.Intrinsic.Control.If(v.DataTable.dtCustomer.Exists)
		f.Data.DataTable.Close("dtCustomer")
		gui.Form.gsCustomer.ClearRows("gvCustomer")		
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictPriceGroupName",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictPriceGroupName")
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictTransportID",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictTransportID")
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictTransportDESC",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictTransportDESC")
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictLocationDesc",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictLocationDesc")
	f.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("select RTRIM(CUSTOMER) as CUSTOMER, RTRIM(SHIP_SEQ) as SHIP_SEQ, RTRIM(CUSTOMER_NAME) as CUSTOMER_NAME, PriceGroupID, InboundDefault, OutboundDefault, PossessionDefault, RTRIM(SHIP_KEY) as SHIP_KEY, TurnAroundDays from GAB_6559_Customer_Xref Union (Select RTRIM(CUSTOMER) as CUSTOMER, 'DEFLT' as SHIP_SEQ,'' as CUSTOMER_NAME,'' as PriceGroupID, '' as InboundDefault, '' as OutboundDefault, '' as PossessionDefault, RTRIM(CUSTOMER) + '-DEFLT'  as SHIP_KEY, Cast('7' as INTEGER) as TurnAroundDays From V_CUSTOMER_SHIPTO where SHIP_KEY Not in (Select RTRIM(SHIP_KEY) from GAB_6559_Customer_Xref)  UNION Select RTRIM(CUSTOMER) as CUSTOMER, RTRIM(SHIP_SEQ) as SHIP_SEQ,'' as CUSTOMER_NAME, '' as PriceGroupID, '' as InboundDefault, '' as OutboundDefault, '' as PossessionDefault, RTRIM(CUSTOMER) +'-'+ RTRIM(SHIP_SEQ) as SHIP_KEY, Cast('7' as INTEGER) as TurnAroundDays From OE_MULTI_SHIP where SHIP_KEY Not in (Select RTRIM(SHIP_KEY) from GAB_6559_Customer_Xref)) ;",v.Local.sProgrammedBy,V.Local.sSQL)
	'F.Intrinsic.String.Build("Select '' as PLUS, RTRIM(CUSTOMER) as CUSTOMER, RTRIM(NAME_CUSTOMER) as NAME_CUSTOMER, '' as PriceGroupID, '' as Description FROM V_CUSTOMER_MASTER",v.Local.sProgrammedBy,V.Local.sSQL)
	F.Data.Datatable.CreateFromSQL("dtCustomer0","conx",V.Local.sSQL,True)
	
	F.Data.DataView.Create("dtCustomer0","dvCustomer0",22,"SHIP_SEQ <> '009999'","")
	F.Data.DataView.ToDataTable("dtCustomer0","dvCustomer0","dtCustomer",True)
	F.Data.DataView.Close("dtCustomer0","dvCustomer0")
	F.Data.DataTable.Close("dtCustomer0")
	
'	'Fill in Price group from Alpha sort field on V_CUSTOMER_SALES
'	F.Data.Dictionary.CreateFromSQL("dictCustomer","Conx","Select RTRIM(CUSTOMER) as CUSTOMER, RTRIM(ALPHA_SORT) as PriceGroupID FROM V_CUSTOMER_SALES")
'	F.Data.Dictionary.SetDefaultReturn("dictCustomer","")
'	F.Data.DataTable.FillFromDictionary("dtCustomer","dictCustomer","Customer","PriceGroupID")
'	F.Data.Dictionary.Close("dictCustomer")
	
	'Filling in Price group Description from GAB_6559_Price_Group
	F.Data.DataTable.AddColumn("dtCustomer","PriceGroup_DESC","String","")
	F.Data.Dictionary.CreateFromSQL("dictPriceGroupName","Conx","Select RTRIM(PriceGroupID) as PriceGroupID, RTRIM(Description) as Description FROM GAB_6559_Price_Group")
	F.Data.Dictionary.SetDefaultReturn("dictPriceGroupName","")
	F.Data.DataTable.FillFromDictionary("dtCustomer","dictPriceGroupName","PriceGroupID","PriceGroup_DESC")
	
	'Filling in LocationID, Location from GAB_6559_Cust_location
	F.Data.DataTable.AddColumn("dtCustomer","LocationID","Long",0)
	F.Data.Dictionary.CreateFromSQL("dictLocationID","Conx","Select RTRIM(SHIP_KEY) as SHIP_KEY, LocationID FROM GAB_6559_Customer_Xref")
	F.Data.Dictionary.SetDefaultReturn("dictLocationID",0)
	F.Data.DataTable.FillFromDictionary("dtCustomer","dictLocationID","SHIP_KEY","LocationID")
	F.Data.Dictionary.Close("dictLocationID")
	
	F.Data.DataTable.AddColumn("dtCustomer","Location","String","")
	F.Data.Dictionary.CreateFromSQL("dictLocationDesc","Conx","Select LocationID, RTRIM(Description) as Description FROM GAB_6559_Cust_location")
	F.Data.Dictionary.SetDefaultReturn("dictLocationDesc","")
	F.Data.DataTable.FillFromDictionary("dtCustomer","dictLocationDesc","LocationID","Location")
	
	F.Data.DataTable.AddColumn("dtCustomer","Inbound_DESC","String","")
	F.Data.DataTable.AddColumn("dtCustomer","Outbound_DESC","String","")
	F.Data.DataTable.AddColumn("dtCustomer","Possession_DESC","String","")
	
	F.Data.Dictionary.CreateFromSQL("dictTransportID","Conx","Select TransportNoteID, RTRIM(Description) as Description FROM GAB_6559_TransportNoteId")
	F.Data.Dictionary.SetDefaultReturn("dictTransportID","")
	F.Data.DataTable.FillFromDictionary("dtCustomer","dictTransportID","InboundDefault","Inbound_DESC")
	F.Data.DataTable.FillFromDictionary("dtCustomer","dictTransportID","OutboundDefault","Outbound_DESC")
	F.Data.DataTable.FillFromDictionary("dtCustomer","dictTransportID","PossessionDefault","Possession_DESC")
	
	'Dict for Customer Ship to to Name
	F.Data.Dictionary.CreateFromSQL("dictCustomerName","Conx","Select  RTRIM(CUSTOMER) + '-DEFLT'  as SHIP_KEY, RTRIM(NAME_CUSTOMER_SHIP)as CUSTOMER_NAME  From V_CUSTOMER_SHIPTO UNION Select RTRIM(CUSTOMER) +'-'+ RTRIM(SHIP_SEQ) as SHIP_KEY, RTRIM(CUSTOMER_NAME) as CUSTOMER_NAME  From OE_MULTI_SHIP;")
	F.Data.Dictionary.SetDefaultReturn("dictCustomerName","")
	F.Data.DataTable.FillFromDictionary("dtCustomer","dictCustomerName","SHIP_KEY","CUSTOMER_NAME")
	F.Data.Dictionary.Close("dictCustomerName")
	
	'Dict for Customer Bill to Name
	F.Data.DataTable.AddColumn("dtCustomer","Bill_To_Name","String","")
	F.Data.Dictionary.CreateFromSQL("dictCustomerBillName","Conx","select RTRIM(Customer) as Customer, RTRIM(Name_Customer) as Name_Customer from V_CUSTOMER_MASTER")
	F.Data.Dictionary.SetDefaultReturn("dictCustomerBillName","")
	F.Data.DataTable.FillFromDictionary("dtCustomer","dictCustomerBillName","Customer","Bill_To_Name")
	F.Data.Dictionary.Close("dictCustomerBillName")
	
	'Dict for Customer Bill to Address 1
	F.Data.DataTable.AddColumn("dtCustomer","Bill_To_Addr","String","")
	F.Data.Dictionary.CreateFromSQL("dictCustomerBillAddr","Conx","select RTRIM(Customer) as Customer, RTRIM(Address1) as Address1 from V_CUSTOMER_MASTER")
	F.Data.Dictionary.SetDefaultReturn("dictCustomerBillAddr","")
	F.Data.DataTable.FillFromDictionary("dtCustomer","dictCustomerBillAddr","Customer","Bill_To_Addr")
	F.Data.Dictionary.Close("dictCustomerBillAddr")
	
	'Filling in Credit Hold from V_Customer_MASTER
	F.Data.DataTable.AddColumn("dtCustomer","CreditHold","Boolean",False)
	F.Data.Dictionary.CreateFromSQL("dictCreditHold","Conx","select RTRIM(CUSTOMER) as CUSTOMER, Cast(IF(FLAG_CREDIT_HOLD = 'Y', '1', '0') as bit) as FLAG_CREDIT_HOLD from V_CUSTOMER_MASTER")
	F.Data.Dictionary.SetDefaultReturn("dictCreditHold",False)
	F.Data.DataTable.FillFromDictionary("dtCustomer","dictCreditHold","CUSTOMER","CreditHold")
	F.Data.Dictionary.Close("dictCreditHold")
	
	'Use this later in the script
	F.Data.Dictionary.CreateFromSQL("dictTransportDESC","Conx","Select RTRIM(Description) as Description, TransportNoteID FROM GAB_6559_TransportNoteId")
	F.Data.Dictionary.SetDefaultReturn("dictTransportDESC","")
	
	'Fill DDLs
	gui.Form.ddlPriceFrom.ClearItems
	gui.Form.ddlPriceTo.ClearItems
	gui.Form.ddlPriceFrom.AddItem("",0)
	gui.Form.ddlPriceTo.AddItem("",0)
	F.Data.Dictionary.CreateFromSQL("dictPGInUse","conx","select Distinct RTRIM(PriceGroupID) as key1, RTRIM(PriceGroupID) as PriceGroupID  from GAB_6559_Customer_Xref order by PriceGroupID DESC")
	gui.Form.ddlPriceFrom.AddItems("Dictionary","dictPGInUse")
	F.Data.Dictionary.Close("dictPGInUse")
	F.Data.Dictionary.CreateFromSQL("dictPG","conx","select RTRIM(PriceGroupID) as key1, RTRIM(PriceGroupID) as PriceGroupID from GAB_6559_Price_Group Order by PriceGroupID Desc")
	gui.Form.ddlPriceTo.AddItems("Dictionary","dictPG")
	F.Data.Dictionary.Close("dictPG")
	
	
	gui.Form.gsCustomer.AddGridviewFromDatatable("gvCustomer","dtCustomer")
	f.Intrinsic.Control.CallSub(Format_Customer)
	gui.Form.gsCustomer.MainView("gvCustomer")	
	'Visible Controls
	gui.Form.ddlPriceFrom.Visible(True)
	gui.Form.ddlPriceTo.Visible(True)
	gui.Form.lblFrom.Visible(True)
	gui.Form.lblTo.Visible(True)
	gui.Form.cmdMassUpdatePG.Visible(True)
	gui.Form.tab3.SetTab(0)
	

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Load_Customer.End

Program.Sub.Format_Customer.Start
F.Intrinsic.Control.Try
	V.Local.sSql.Declare
	V.Local.sProp.Declare
	v.Local.sValue.Declare	
	V.Local.iRet.Declare
	V.Local.iCnt.Declare
	v.Local.sValue2.Declare
	v.Local.sValue3.Declare
	
	gui.Form.gsCustomer.SuspendLayout()
	
	gui.Form.gsCustomer.SetGridViewProperty("gvCustomer","MultiSelect",True)
	gui.Form.gsCustomer.SetGridViewProperty("gvCustomer","AllowSort",True)
	gui.Form.gsCustomer.SetGridViewProperty("gvCustomer","AllowFilter",True)
	gui.Form.gsCustomer.SetGridViewProperty("gvCustomer","OptionsDetailShowDetailTabs",False)
	gui.Form.gsCustomer.SetGridViewProperty("gvCustomer","OptionsViewShowGroupPanel",True)
	gui.Form.gsCustomer.SetGridViewProperty("gvCustomer","EnableAppearanceOddRow",True)
	gui.Form.gsCustomer.SetGridviewProperty("gvCustomer",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.gsCustomer.SetGridviewProperty("gvCustomer","OptionsViewColumnAutoWidth",False)
	gui.Form.gsCustomer.SetGridviewProperty("gvCustomer","AllowColumnResizing",True)	
	gui.Form.gsCustomer.SetGridviewProperty("gvCustomer","ColumnPanelRowHeight","50")
	gui.Form.gsCustomer.SetGridviewProperty("gvCustomer",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.Form.gsCustomer.SetGridviewProperty("gvCustomer", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_Customer,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Customer,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Customer,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_Customer,"sProp","HeaderVAlignment","sValue","Top")	

	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","SHIP_KEY",v.Enum.ColumnPropertyNames!Visible,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","InboundDefault",v.Enum.ColumnPropertyNames!Visible,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","OutboundDefault",v.Enum.ColumnPropertyNames!Visible,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PossessionDefault",v.Enum.ColumnPropertyNames!Visible,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","LocationID",v.Enum.ColumnPropertyNames!Visible,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","InboundDefault",v.Enum.ColumnPropertyNames!AllowShowHide,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","OutboundDefault",v.Enum.ColumnPropertyNames!AllowShowHide,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PossessionDefault",v.Enum.ColumnPropertyNames!AllowShowHide,False)
	'gui.Form.gsCustomer.SetColumnProperty("gvCustomer","LocationID",v.Enum.ColumnPropertyNames!AllowShowHide,False)

	v.Local.sProp.Set("VisibleIndex")
	v.Local.iCnt.Set(-1)	
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CUSTOMER",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","SHIP_SEQ",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CUSTOMER_NAME",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PriceGroupID",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PriceGroup_DESC",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Inbound_DESC",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Outbound_DESC",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Possession_DESC",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","TurnAroundDays",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Location",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CreditHold",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Bill_To_Name",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Bill_To_Addr",v.Local.sProp,v.Local.iCnt.++)

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CUSTOMER",v.Local.sProp,v.Local.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","SHIP_SEQ",v.Local.sProp,v.Local.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CUSTOMER_NAME",v.Local.sProp,v.Local.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PriceGroupID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PriceGroup_DESC",v.Local.sProp,v.Local.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","InboundDefault",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Inbound_DESC",v.Local.sProp,v.Local.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","OutboundDefault",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Outbound_DESC",v.Local.sProp,v.Local.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PossessionDefault",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Possession_DESC",v.Local.sProp,v.Local.sValue)	
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","TurnAroundDays",v.Local.sProp,v.Local.sValue2)	
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Bill_To_Name",v.Local.sProp,v.Local.sValue)	
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Bill_To_Addr",v.Local.sProp,v.Local.sValue)	
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Location",v.Local.sProp,v.Local.sValue)	
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CreditHold",v.Local.sProp,v.Local.sValue2)	

	
	v.Local.sProp.Set("CellHAlignment")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CUSTOMER",v.Local.sProp,v.Local.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","SHIP_SEQ",v.Local.sProp,v.Local.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CUSTOMER_NAME",v.Local.sProp,v.Local.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PriceGroupID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PriceGroup_DESC",v.Local.sProp,v.Local.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","InboundDefault",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Inbound_DESC",v.Local.sProp,v.Local.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","OutboundDefault",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Outbound_DESC",v.Local.sProp,v.Local.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PossessionDefault",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Possession_DESC",v.Local.sProp,v.Local.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","TurnAroundDays",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Bill_To_Name",v.Local.sProp,v.Local.sValue)	
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Bill_To_Addr",v.Local.sProp,v.Local.sValue)	
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Location",v.Local.sProp,v.Local.sValue)	
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CreditHold",v.Local.sProp,v.Local.sValue2)	
	
	v.Local.sProp.Set("Caption")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CUSTOMER",v.Local.sProp,"Customer Code")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","SHIP_SEQ",v.Local.sProp,"Ship Seq")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CUSTOMER_NAME",v.Local.sProp,"Cust. Ship to Name")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PriceGroupID",v.Local.sProp,"Price Group ID")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PriceGroup_DESC",v.Local.sProp,"Price group Desc")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","InboundDefault",v.Local.sProp,"Default Inbound ID")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Inbound_DESC",v.Local.sProp,"Default Inbound Desc.")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","OutboundDefault",v.Local.sProp,"Default Outbound ID")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Outbound_DESC",v.Local.sProp,"Default Outbound Desc.")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PossessionDefault",v.Local.sProp,"Default Possession ID")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Possession_DESC",v.Local.sProp,"Default Possession Desc.")	
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","TurnAroundDays",v.Local.sProp,"Turn Around Days")	
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Bill_To_Name",v.Local.sProp,"Bill To Name")	
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Bill_To_Addr",v.Local.sProp,"Bill To Address")	
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Location",v.Local.sProp,"Location")	
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CreditHold",v.Local.sProp,"Credit Hold")	

			
	
	v.Local.sProp.Set("Width")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CUSTOMER",v.Local.sProp,"75")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","SHIP_SEQ",v.Local.sProp,"75")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CUSTOMER_NAME",v.Local.sProp,"150")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PriceGroupID",v.Local.sProp,"75")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PriceGroup_DESC",v.Local.sProp,"150")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","InboundDefault",v.Local.sProp,"75")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Inbound_DESC",v.Local.sProp,"200")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","OutboundDefault",v.Local.sProp,"75")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Outbound_DESC",v.Local.sProp,"200")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PossessionDefault",v.Local.sProp,"75")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Possession_DESC",v.Local.sProp,"200")	
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","TurnAroundDays",v.Local.sProp,"75")	
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Bill_To_Name",v.Local.sProp,"200")	
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Bill_To_Addr",v.Local.sProp,"200")	
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Location",v.Local.sProp,"125")	
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CreditHold",v.Local.sProp,"75")
	
	
	
'	For RowCellClick and CellValueChanged
	v.Local.sProp.Set("AllowEdit")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","SHIP_KEY",v.Local.sProp,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CUSTOMER",v.Local.sProp,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","SHIP_SEQ",v.Local.sProp,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CUSTOMER_NAME",v.Local.sProp,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PriceGroupID",v.Local.sProp,True)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PriceGroup_DESC",v.Local.sProp,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","InboundDefault",v.Local.sProp,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Inbound_DESC",v.Local.sProp,True)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","OutboundDefault",v.Local.sProp,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Outbound_DESC",v.Local.sProp,True)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PossessionDefault",v.Local.sProp,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Possession_DESC",v.Local.sProp,True)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","TurnAroundDays",v.Local.sProp,True)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Bill_To_Name",v.Local.sProp,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Bill_To_Addr",v.Local.sProp,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","LocationID",v.Local.sProp,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Location",v.Local.sProp,True)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CreditHold",v.Local.sProp,False)
		

	v.Local.sProp.Set("ReadOnly")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","SHIP_KEY",v.Local.sProp,True)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CUSTOMER",v.Local.sProp,True)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","SHIP_SEQ",v.Local.sProp,True)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CUSTOMER_NAME",v.Local.sProp,True)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PriceGroupID",v.Local.sProp,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PriceGroup_DESC",v.Local.sProp,True)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","InboundDefault",v.Local.sProp,True)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Inbound_DESC",v.Local.sProp,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","OutboundDefault",v.Local.sProp,True)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Outbound_DESC",v.Local.sProp,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PossessionDefault",v.Local.sProp,True)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Possession_DESC",v.Local.sProp,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","TurnAroundDays",v.Local.sProp,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Bill_To_Name",v.Local.sProp,True)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Bill_To_Addr",v.Local.sProp,True)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","LocationID",v.Local.sProp,True)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Location",v.Local.sProp,False)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CreditHold",v.Local.sProp,True)
	
	
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("LightYellow")
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PriceGroupID",v.Local.sProp,v.Local.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Inbound_DESC",v.Local.sProp,v.Local.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Outbound_DESC",v.Local.sProp,v.Local.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Possession_DESC",v.Local.sProp,v.Local.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","TurnAroundDays",v.Local.sProp,v.Local.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Location",v.Local.sProp,v.Local.sValue)

	'Making PriceGroupID a DDL
	V.Local.sSql.Set("Select RTRIM(PriceGroupID) as PriceGroupID FROM GAB_6559_Price_Group order by PriceGroupID DESC")
	F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSql,V.Local.sSql)
	F.Intrinsic.String.Replace(V.Local.sSql,"#$#","*!*",V.Local.sSql)
	F.Intrinsic.String.Build("*!*{0}",V.Local.sSql,V.Local.sSql)
	Gui.Form.gsCustomer.ColumnEdit("gvCustomer","PriceGroupID","Dropdownlist",V.Local.sSql)
	
	'Making Inbound_DESC a DDL
	V.Local.sSql.Set("Select RTRIM(Description) as Description FROM GAB_6559_TransportNoteId where MovementType = 'I' order by TransportNoteID DESC")
	F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSql,V.Local.sSql)
	F.Intrinsic.String.Replace(V.Local.sSql,"#$#","*!*",V.Local.sSql)
	'F.Intrinsic.String.Build("*!*{0}",V.Local.sSql,V.Local.sSql)
	Gui.Form.gsCustomer.ColumnEdit("gvCustomer","Inbound_DESC","Dropdownlist",V.Local.sSql)
	
	'Making Outbound_DESC a DDL
	V.Local.sSql.Set("Select RTRIM(Description) as Description FROM GAB_6559_TransportNoteId where MovementType = 'O' order by TransportNoteID DESC")
	F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSql,V.Local.sSql)
	F.Intrinsic.String.Replace(V.Local.sSql,"#$#","*!*",V.Local.sSql)
	'F.Intrinsic.String.Build("*!*{0}",V.Local.sSql,V.Local.sSql)
	Gui.Form.gsCustomer.ColumnEdit("gvCustomer","Outbound_DESC","Dropdownlist",V.Local.sSql)
	
	'Making Possession_DESC a DDL
	V.Local.sSql.Set("Select RTRIM(Description) as Description FROM GAB_6559_TransportNoteId where MovementType = 'P' order by TransportNoteID DESC")
	F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSql,V.Local.sSql)
	F.Intrinsic.String.Replace(V.Local.sSql,"#$#","*!*",V.Local.sSql)
	'F.Intrinsic.String.Build("*!*{0}",V.Local.sSql,V.Local.sSql)
	Gui.Form.gsCustomer.ColumnEdit("gvCustomer","Possession_DESC","Dropdownlist",V.Local.sSql)
	
	'Making Location a DDL
	V.Local.sSql.Set("Select RTRIM(Description) as Description FROM GAB_6559_Cust_location")
	F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSql,V.Local.sSql)
	F.Intrinsic.String.Replace(V.Local.sSql,"#$#","*!*",V.Local.sSql)
	'F.Intrinsic.String.Build("*!*{0}",V.Local.sSql,V.Local.sSql)
	Gui.Form.gsCustomer.ColumnEdit("gvCustomer","Location","Dropdownlist",V.Local.sSql)
	
	
'	v.Local.sProp.Set("DisplayCustomDatetime")
'	v.Local.sValue.Set("d")	
'	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","DueDate",v.Local.sProp,v.Local.sValue)
'	
'	gui.Form.gsCustomer.AddStyleFormatCondition("gvCustomer","NEW_PART","NEW_PART","Expression","[NEW_PART] = 0")
'	gui.Form.gsCustomer.SetStyleFormatConditionProperty("gvCustomer","NEW_PART","NEW_PART","backcolor","Red")
	
	gui.Form.gsCustomer.ResumeLayout()
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Format_Customer.End

Program.Sub.Bulk_Format_Customer.Start
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","SHIP_KEY",v.Args.sProp,v.Args.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CUSTOMER",v.Args.sProp,v.Args.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","SHIP_SEQ",v.Args.sProp,v.Args.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CUSTOMER_NAME",v.Args.sProp,v.Args.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PriceGroupID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PriceGroup_DESC",v.Args.sProp,v.Args.sValue)
	'gui.Form.gsCustomer.SetColumnProperty("gvCustomer","InboundDefault",v.Args.sProp,v.Args.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Inbound_DESC",v.Args.sProp,v.Args.sValue)
	'gui.Form.gsCustomer.SetColumnProperty("gvCustomer","OutboundDefault",v.Args.sProp,v.Args.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Outbound_DESC",v.Args.sProp,v.Args.sValue)
	'gui.Form.gsCustomer.SetColumnProperty("gvCustomer","PossessionDefault",v.Args.sProp,v.Args.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Possession_DESC",v.Args.sProp,v.Args.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","TurnAroundDays",v.Args.sProp,v.Args.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Bill_To_Addr",v.Args.sProp,v.Args.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Bill_To_Name",v.Args.sProp,v.Args.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","Location",v.Args.sProp,v.Args.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","LocationID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsCustomer.SetColumnProperty("gvCustomer","CreditHold",v.Args.sProp,v.Args.sValue)

Program.Sub.Bulk_Format_Customer.End

Program.Sub.ac3_ElementClick.Start
f.Intrinsic.Control.Try
	v.Local.iRet.Declare
	v.Local.bAuth.Declare
	V.Local.iLocationID.Declare
	v.Local.sRet.Declare
	V.Local.sCustomerKey.Declare
	V.Local.sQHID.Declare
	V.Local.sNow.Declare
	V.Local.sMsg.Declare
	V.Local.sSQL.Declare
	V.Local.iJobResourceID.Declare
	V.Local.iCnt.Declare
	V.Local.iMaterialID.Declare
	V.Local.iIssueID.Declare
	V.Local.iReworkTypeID.Declare
	
	'This will prevent from multi-clicking too fast the button
	f.Intrinsic.Control.If(v.Global.bLoading)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bLoading.Set(True)	
	
	gui.Form.lblPleasewait.Visible(True)
	gui.Form.lblpleasewait.Text("Please wait ...")		
	
	f.Intrinsic.Control.SelectCase(v.Args.ElementID.UCase)
		f.Intrinsic.Control.Case("SERVICEWEB")
			F.Intrinsic.Task.ShellExec(0,"Open","https://www.gss-service.com/","","",0)	


		f.Intrinsic.Control.Case("ADDLOCATION")
			F.Intrinsic.String.Build("Are you sure you would like to create a new Location?{0}A new line will apear at the bottom of the grid.",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"New Location","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				gui.Form.lblPleasewait.Visible(False)
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.String.Build("Insert Into GAB_6559_Cust_location (Description) Values ('')",V.Local.sNow,V.Local.sSQL)
			F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			F.Intrinsic.Control.CallSub(Load_Location)
			
		f.Intrinsic.Control.Case("DELETELOCATION")
			'Make sure the user actually wants to delete.
			F.Intrinsic.String.Build("Are you sure you would like to delete the seleced Location?{0}You will only be able to delete the Location not in use.",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"Delete Location","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				gui.Form.lblPleasewait.Visible(False)
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'Filter down to selected rows.
			F.Data.DataView.Create("dtLocation","dvLocation",22,"SELECT = True","")
			F.Data.DataView.ToDataTable("dtLocation","dvLocation","dtDelete",True)
			F.Data.DataView.Close("dtLocation","dvLocation")
			
			'Find LocationIDs that are in use
			F.Data.Datatable.AddColumn("dtDelete","Inuse","Boolean",False)
			F.Data.Dictionary.CreateFromSQL("dictInUse","conx","select LocationID, Cast(1 as bit) From GAB_6559_Customer_Xref")
			F.Data.DataTable.FillFromDictionary("dtDelete","dictInUse","LocationID","Inuse")
			F.Data.Dictionary.Close("dictInUse")
			
			'Check if LocationIDs is in use then delete...
			F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtDelete.RowCount--,1)
				V.Local.iLocationID.Set(V.DataTable.dtDelete(v.Local.iCnt).LocationID!FieldVal)
				F.Intrinsic.Control.If(V.DataTable.dtDelete(v.Local.iCnt).Inuse!FieldVal)
					F.Intrinsic.String.Build("Location in use on a Customer, cannot delete!{0}{1}",V.Ambient.NewLine,V.Local.iLocationID,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("Delete From GAB_6559_Cust_location where LocationID = '{0}'",V.Local.iLocationID,V.Local.sSQL)
					F.ODBC.Connection!conx.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.iCnt)
			F.Data.Datatable.Close("dtDelete")
			F.Intrinsic.Control.CallSub(Load_Location)
		
	f.Intrinsic.Control.EndSelect
	
	v.Global.bPassedFirstLoad.Set(True)
	gui.Form.lblPleasewait.Visible(False)	
	
	v.Global.bLoading.Set(False)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ac3_ElementClick.End

Program.Sub.gsCustomer_CellValueChanged.Start
F.Intrinsic.Control.Try
V.Local.sShipKey.Declare
V.Local.sCUSTOMER.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sCustName.Declare
V.Local.sShipSeq.Declare
V.Local.sPriceGroupID.Declare
V.Local.sInboundID.Declare
V.Local.sOutboundID.Declare
V.Local.sPossessionID.Declare

F.Intrinsic.Control.BlockEvents
gui.Form.gsCustomer.Visible(False)

Gui.Form.gsCustomer.GetCellValueByColumnName("gvCustomer","SHIP_KEY",V.Args.RowIndex,V.Local.sShipKey)
Gui.Form.gsCustomer.GetCellValueByColumnName("gvCustomer","CUSTOMER",V.Args.RowIndex,V.Local.sCUSTOMER)
Gui.Form.gsCustomer.GetCellValueByColumnName("gvCustomer","SHIP_SEQ",V.Args.RowIndex,V.Local.sShipSeq)
Gui.Form.gsCustomer.GetCellValueByColumnName("gvCustomer","CUSTOMER_NAME",V.Args.RowIndex,V.Local.sCustName)

F.Intrinsic.Control.SelectCase(V.Args.column.UCase)

	F.Intrinsic.Control.Case("PRICEGROUPID")
		V.Local.sPriceGroupID.Set(V.Args.Value)
		
		'Update the descrtiption in the DT
		F.Data.DataTable.FillFromDictionary("dtCustomer","dictPriceGroupName","PriceGroupID","PriceGroup_DESC")
		
		'Update the DB table
		F.Intrinsic.String.Build("select Top 1 SHIP_KEY From GAB_6559_Customer_Xref where SHIP_KEY = '{0}' ",V.Local.sShipKey,V.Local.sSQL)
		F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
		F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
			F.Intrinsic.String.Build("Insert Into GAB_6559_Customer_Xref (SHIP_KEY,CUSTOMER,SHIP_SEQ,CUSTOMER_NAME,PriceGroupID,InboundDefault,OutboundDefault,PossessionDefault,TurnAroundDays) Values ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}') ",V.Local.sShipKey.PSQLFriendly,V.Local.sCUSTOMER.PSQLFriendly,V.Local.sShipSeq.PSQLFriendly,V.Local.sCustName.PSQLFriendly,V.Local.sPriceGroupID.PSQLFriendly,"0","0","0","7",V.Local.sSQL)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("Update GAB_6559_Customer_Xref set PriceGroupID = '{0}' where SHIP_KEY = '{1}'",V.Local.sPriceGroupID.PSQLFriendly,V.Local.sShipKey.PSQLFriendly,V.Local.sSQL)
		F.Intrinsic.Control.EndIf
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	
	F.Intrinsic.Control.Case("INBOUND_DESC")
		V.Local.sInboundID.Set(V.Dictionary.dictTransportDESC![V.Args.Value])
		
		'Update the DB table
		F.Intrinsic.String.Build("select Top 1 SHIP_KEY From GAB_6559_Customer_Xref where SHIP_KEY = '{0}' ",V.Local.sShipKey,V.Local.sSQL)
		F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
		F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
			F.Intrinsic.String.Build("Insert Into GAB_6559_Customer_Xref (SHIP_KEY,CUSTOMER,SHIP_SEQ,CUSTOMER_NAME,PriceGroupID,InboundDefault,OutboundDefault,PossessionDefault,TurnAroundDays) Values ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}') ",V.Local.sShipKey.PSQLFriendly,V.Local.sCUSTOMER.PSQLFriendly,V.Local.sShipSeq.PSQLFriendly,V.Local.sCustName.PSQLFriendly,V.Local.sPriceGroupID.PSQLFriendly,V.Local.sInboundID,"23","24","7",V.Local.sSQL)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("Update GAB_6559_Customer_Xref set InboundDefault = '{0}' where SHIP_KEY = '{1}'",V.Local.sInboundID,V.Local.sShipKey.PSQLFriendly,V.Local.sSQL)
		F.Intrinsic.Control.EndIf		
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("OUTBOUND_DESC")
		V.Local.sOutboundID.Set(V.Dictionary.dictTransportDESC![V.Args.Value])
		
		'Update the DB table
		F.Intrinsic.String.Build("select Top 1 SHIP_KEY From GAB_6559_Customer_Xref where SHIP_KEY = '{0}' ",V.Local.sShipKey,V.Local.sSQL)
		F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
		F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
			F.Intrinsic.String.Build("Insert Into GAB_6559_Customer_Xref (SHIP_KEY,CUSTOMER,SHIP_SEQ,CUSTOMER_NAME,PriceGroupID,InboundDefault,OutboundDefault,PossessionDefault,TurnAroundDays) Values ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}') ",V.Local.sShipKey.PSQLFriendly,V.Local.sCUSTOMER.PSQLFriendly,V.Local.sShipSeq.PSQLFriendly,V.Local.sCustName.PSQLFriendly,V.Local.sPriceGroupID.PSQLFriendly,"22",V.Local.sOutboundID,"24","7",V.Local.sSQL)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("Update GAB_6559_Customer_Xref set OutboundDefault = '{0}' where SHIP_KEY = '{1}'",V.Local.sOutboundID,V.Local.sShipKey.PSQLFriendly,V.Local.sSQL)
		F.Intrinsic.Control.EndIf		
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("POSSESSION_DESC")
		V.Local.sPossessionID.Set(V.Dictionary.dictTransportDESC![V.Args.Value])
		
		'Update the DB table
		F.Intrinsic.String.Build("select Top 1 SHIP_KEY From GAB_6559_Customer_Xref where SHIP_KEY = '{0}' ",V.Local.sShipKey,V.Local.sSQL)
		F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
		F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
			F.Intrinsic.String.Build("Insert Into GAB_6559_Customer_Xref (SHIP_KEY,CUSTOMER,SHIP_SEQ,CUSTOMER_NAME,PriceGroupID,InboundDefault,OutboundDefault,PossessionDefault,TurnAroundDays) Values ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}') ",V.Local.sShipKey.PSQLFriendly,V.Local.sCUSTOMER.PSQLFriendly,V.Local.sShipSeq.PSQLFriendly,V.Local.sCustName.PSQLFriendly,V.Local.sPriceGroupID.PSQLFriendly,"22","23",V.Local.sPossessionID,"7",V.Local.sSQL)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("Update GAB_6559_Customer_Xref set PossessionDefault = '{0}' where SHIP_KEY = '{1}'",V.Local.sPossessionID,V.Local.sShipKey.PSQLFriendly,V.Local.sSQL)
		F.Intrinsic.Control.EndIf		
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("TURNAROUNDDAYS")
		F.Intrinsic.String.Build("select Top 1 SHIP_KEY From GAB_6559_Customer_Xref where SHIP_KEY = '{0}' ",V.Local.sShipKey,V.Local.sSQL)
		F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
		F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
			F.Intrinsic.String.Build("Insert Into GAB_6559_Customer_Xref (SHIP_KEY,CUSTOMER,SHIP_SEQ,CUSTOMER_NAME,PriceGroupID,InboundDefault,OutboundDefault,PossessionDefault,TurnAroundDays) Values ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}') ",V.Local.sShipKey.PSQLFriendly,V.Local.sCUSTOMER.PSQLFriendly,V.Local.sShipSeq.PSQLFriendly,V.Local.sCustName.PSQLFriendly,V.Local.sPriceGroupID.PSQLFriendly,"0","0","0",V.Args.Value,V.Local.sSQL)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("Update GAB_6559_Customer_Xref set TurnAroundDays = '{0}' where SHIP_KEY = '{1}'",V.Args.Value,V.Local.sShipKey.PSQLFriendly,V.Local.sSQL)
		F.Intrinsic.Control.EndIf
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("LOCATION")
		F.Data.Dictionary.ReturnKeyFromValue("dictLocationDesc",V.Args.Value,V.Local.sPossessionID)
		'Update the DB table
		F.Intrinsic.String.Build("select Top 1 SHIP_KEY From GAB_6559_Customer_Xref where SHIP_KEY = '{0}' ",V.Local.sShipKey,V.Local.sSQL)
		F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
		F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
			F.Intrinsic.String.Build("Insert Into GAB_6559_Customer_Xref (SHIP_KEY,CUSTOMER,SHIP_SEQ,CUSTOMER_NAME,PriceGroupID,InboundDefault,OutboundDefault,PossessionDefault,TurnAroundDays,LocationID) Values ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}') ",V.Local.sShipKey.PSQLFriendly,V.Local.sCUSTOMER.PSQLFriendly,V.Local.sShipSeq.PSQLFriendly,V.Local.sCustName.PSQLFriendly,V.Local.sPriceGroupID.PSQLFriendly,"22","23","24","7",V.Local.sPossessionID,V.Local.sSQL)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("Update GAB_6559_Customer_Xref set LocationID = '{0}' where SHIP_KEY = '{1}'",V.Local.sPossessionID,V.Local.sShipKey.PSQLFriendly,V.Local.sSQL)
		F.Intrinsic.Control.EndIf		
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)	
F.Intrinsic.Control.EndSelect

gui.Form.gsCustomer.Visible(True)
F.Intrinsic.Control.UnBlockEvents

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsCustomer_CellValueChanged.End

Program.Sub.gsCustomer_RowCellClick.Start
Program.Sub.gsCustomer_RowCellClick.End

Program.Sub.cmdMassUpdatePG_Click.Start
v.Local.iRet.Declare
v.Local.sRet.Declare
v.Local.bAuth.Declare
V.Local.sCustomerKey.Declare
V.Local.sNow.Declare
V.Local.sMsg.Declare
V.Local.sSQL.Declare
V.Local.iCnt.Declare
V.Local.sFrom.Declare
V.Local.sTo.Declare
F.Intrinsic.Control.Try
	
	'This will prevent from multi-clicking too fast the button
	f.Intrinsic.Control.If(v.Global.bLoading)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bLoading.Set(True)
	
	'Make sure the user actually wants to delete.
	F.Intrinsic.String.Build("Are you sure you would like to mass update the PriceGroups from all customer with the 'From' price group selected?{0} Pricegroups in the 'From' or 'To' dropdown lists are not allowed to be blank.",V.Ambient.NewLine,V.Local.sMsg)
	F.Intrinsic.ui.Msgbox(V.Local.sMsg,"Mass Update","4",V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
		v.Global.bLoading.Set(False)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	V.Local.sFrom.Set(V.Screen.Form!ddlPriceFrom.Text)
	V.Local.sTo.Set(V.Screen.Form!ddlPriceTo.Text)
	F.Intrinsic.Control.If(V.Local.sFrom,=,"")
		F.Intrinsic.UI.Msgbox("'From' price group cannot be blank!")
		v.Global.bLoading.Set(False)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.Local.sTo,=,"")
		F.Intrinsic.UI.Msgbox("'To' price group cannot be blank!")
		v.Global.bLoading.Set(False)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	'Update GAB_6559_Customer_Xref
	F.Intrinsic.String.Build("Update GAB_6559_Customer_Xref Set PriceGroupID = '{0}' where PriceGroupID = '{1}'",V.Local.sTo.PSQLFriendly,V.Local.sFrom.PSQLFriendly,V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	F.Intrinsic.Control.CallSub(Load_Customer)
	
	v.Global.bLoading.Set(False)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdMassUpdatePG_Click.End

'''''''''''''''''''''''''''''''''''''''''''''''''''''''
'Location Maintenance
Program.Sub.Load_Location.Start
f.Intrinsic.Control.Try
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.local.iCnt.Declare
	v.Local.sProgrammedBy.Declare
	V.Local.bExists.Declare
	
	f.Intrinsic.Control.If(v.DataTable.dtLocation.Exists)
		f.Data.DataTable.Close("dtLocation")
		gui.Form.gsLocation.ClearRows("gvLocation")		
	f.Intrinsic.Control.EndIf

	F.Intrinsic.String.Build("select LocationID, RTRIM(Description) as Description from GAB_6559_Cust_location order by LocationID Asc",v.Local.sProgrammedBy,V.Local.sSQL)
	F.Data.Datatable.CreateFromSQL("dtLocation","conx",V.Local.sSQL,True)
	F.Data.Datatable.AddColumn("dtLocation","SELECT","Boolean",False)
	
	gui.Form.gsLocation.AddGridviewFromDatatable("gvLocation","dtLocation")
	f.Intrinsic.Control.CallSub(Format_Location)
	gui.Form.gsLocation.MainView("gvLocation")
	'Visible Controls
	gui.Form.ddlPriceFrom.Visible(False)
	gui.Form.ddlPriceTo.Visible(False)
	gui.Form.lblFrom.Visible(False)
	gui.Form.lblTo.Visible(False)
	gui.Form.cmdMassUpdatePG.Visible(False)
	gui.Form.tab3.SetTab(1)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Load_Location.End

Program.Sub.Format_Location.Start
F.Intrinsic.Control.Try
	V.Local.sSql.Declare
	V.Local.sProp.Declare
	v.Local.sValue.Declare	
	V.Local.iRet.Declare
	V.Local.iCnt.Declare
	v.Local.sValue2.Declare
	v.Local.sValue3.Declare
	
	gui.Form.gsLocation.SuspendLayout()
	
	gui.Form.gsLocation.SetGridViewProperty("gvLocation","MultiSelect",False)
	gui.Form.gsLocation.SetGridViewProperty("gvLocation","AllowSort",True)
	gui.Form.gsLocation.SetGridViewProperty("gvLocation","AllowFilter",True)
	gui.Form.gsLocation.SetGridViewProperty("gvLocation","OptionsDetailShowDetailTabs",False)
	gui.Form.gsLocation.SetGridViewProperty("gvLocation","OptionsViewShowGroupPanel",True)
	gui.Form.gsLocation.SetGridViewProperty("gvLocation","EnableAppearanceOddRow",True)
	gui.Form.gsLocation.SetGridviewProperty("gvLocation",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.gsLocation.SetGridviewProperty("gvLocation","OptionsViewColumnAutoWidth",False)
	gui.Form.gsLocation.SetGridviewProperty("gvLocation","AllowColumnResizing",True)	
	gui.Form.gsLocation.SetGridviewProperty("gvLocation","ColumnPanelRowHeight","50")
	gui.Form.gsLocation.SetGridviewProperty("gvLocation",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.Form.gsLocation.SetGridviewProperty("gvLocation", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_Location,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Location,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Location,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_Location,"sProp","HeaderVAlignment","sValue","Top")
	

	v.Local.sProp.Set("VisibleIndex")
	v.Local.iCnt.Set(-1)	
	gui.Form.gsLocation.SetColumnProperty("gvLocation","SELECT",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsLocation.SetColumnProperty("gvLocation","LocationID",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsLocation.SetColumnProperty("gvLocation","Description",v.Local.sProp,v.Local.iCnt.++)

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.Form.gsLocation.SetColumnProperty("gvLocation","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsLocation.SetColumnProperty("gvLocation","LocationID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsLocation.SetColumnProperty("gvLocation","Description",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.Form.gsLocation.SetColumnProperty("gvLocation","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsLocation.SetColumnProperty("gvLocation","LocationID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsLocation.SetColumnProperty("gvLocation","Description",v.Local.sProp,v.Local.sValue)

	v.Local.sProp.Set("Caption")
	gui.Form.gsLocation.SetColumnProperty("gvLocation","SELECT",v.Local.sProp,"Select")
	gui.Form.gsLocation.SetColumnProperty("gvLocation","LocationID",v.Local.sProp,"Location ID")
	gui.Form.gsLocation.SetColumnProperty("gvLocation","Description",v.Local.sProp,"Description")

	v.Local.sProp.Set("Width")
	gui.Form.gsLocation.SetColumnProperty("gvLocation","SELECT",v.Local.sProp,"75")
	gui.Form.gsLocation.SetColumnProperty("gvLocation","LocationID",v.Local.sProp,"75")
	gui.Form.gsLocation.SetColumnProperty("gvLocation","Description",v.Local.sProp,"175")

'	For RowCellClick and CellValueChanged
	v.Local.sProp.Set("AllowEdit")
	gui.Form.gsLocation.SetColumnProperty("gvLocation","SELECT",v.Local.sProp,True)
	gui.Form.gsLocation.SetColumnProperty("gvLocation","LocationID",v.Local.sProp,False)
	gui.Form.gsLocation.SetColumnProperty("gvLocation","Description",v.Local.sProp,True)

	v.Local.sProp.Set("ReadOnly")
	gui.Form.gsLocation.SetColumnProperty("gvLocation","SELECT",v.Local.sProp,False)
	gui.Form.gsLocation.SetColumnProperty("gvLocation","LocationID",v.Local.sProp,True)
	gui.Form.gsLocation.SetColumnProperty("gvLocation","Description",v.Local.sProp,False)

	'BackForeColor
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("LightYellow")
	gui.Form.gsLocation.SetColumnProperty("gvLocation","Description",v.Local.sProp,v.Local.sValue)
	

	gui.Form.gsLocation.ResumeLayout()
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Format_Location.End

Program.Sub.Bulk_Format_Location.Start
	gui.Form.gsLocation.SetColumnProperty("gvLocation","SELECT",v.Args.sProp,v.Args.sValue)
	gui.Form.gsLocation.SetColumnProperty("gvLocation","LocationID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsLocation.SetColumnProperty("gvLocation","Description",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_Location.End

Program.Sub.gsLocation_CellValueChanged.Start
F.Intrinsic.Control.Try
V.Local.iLocationID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sValue.Declare
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)

F.Intrinsic.Control.BlockEvents
Gui.Form.gsLocation.GetCellValueByColumnName("gvLocation","LocationID",V.Args.RowIndex,V.Local.iLocationID)

F.Intrinsic.Control.SelectCase(V.Args.column.UCase)
	F.Intrinsic.Control.Case("DESCRIPTION")
		V.Local.sValue.Set(V.Args.Value)
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Cust_location set Description = '{0}' where LocationID = '{1}'",V.Local.sValue.PSQLFriendly,V.Local.iLocationID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.UnBlockEvents

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsLocation_CellValueChanged.End

Program.Sub.gsLocation_RowCellClick.Start
Program.Sub.gsLocation_RowCellClick.End


#End Region 'Tab Customer

#Region "Tab Quotes"

Program.Sub.Load_Quote.Start
f.Intrinsic.Control.Try
	V.Local.sBegDate.Declare
	V.Local.sEndDate.Declare
	V.Local.dBegDate.Declare
	V.Local.dEndDate.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.local.iCnt.Declare
	v.Local.sSerialize.Declare
	v.Local.sProgrammedBy.Declare
	V.Local.bExists.Declare
	
	f.Intrinsic.Control.If(v.DataTable.dtQuote.Exists)
		f.Data.DataTable.Close("dtQuote")
		gui.Form.gsQuote.ClearRows("gvQuote")		
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictCustName",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictCustName")
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictBillToName",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictBillToName")
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictActual",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictActual")
	f.Intrinsic.Control.EndIf
	
	
	'QHID
	'QuoteID
	'CustomerKey
	'CustomerID
	'CUSTOMER_NAME
	'CustomerReference
	'CustomerContactID
	'CustomerAddressID
	'QuotedBy
	'Description
	'ValidFrom
	'ValidUntil
	'Estimate
	'Actual_Weight
	'AcceptedFlag
	'SysUserLastAccess
	'SysUserLastAccessDateTime
	
	
	F.Intrinsic.String.Build("Select QHID, RTRIM(QuoteID) as QuoteID, RTRIM(CustomerKey) as CustomerKey, RTRIM(CustomerID) as CustomerID, RTRIM(CustomerReference) as CustomerReference, CustomerContactID, CustomerAddressID, RTRIM(QuotedBy) as QuotedBy, RTRIM(Description) as Description, ValidFrom, ValidUntil, Estimate, AcceptedFlag, SysUserLastAccess, SysUserLastAccessDateTime From GAB_6559_Quote_Head order by QHID Desc",v.Local.sProgrammedBy,V.Local.sSQL)
	F.Data.Datatable.CreateFromSQL("dtQuote","conx",V.Local.sSQL,True)
	
	'Filling in Customer Ship to Name from GAB_6559_Customer_Xref
	F.Data.DataTable.AddColumn("dtQuote","CUSTOMER_NAME","String","")
	F.Data.Dictionary.CreateFromSQL("dictCustName","Conx","Select RTRIM(SHIP_KEY) as SHIP_KEY, RTRIM(CUSTOMER_NAME) as CUSTOMER_NAME FROM GAB_6559_Customer_Xref")
	F.Data.Dictionary.SetDefaultReturn("dictCustName","")
	F.Data.DataTable.FillFromDictionary("dtQuote","dictCustName","CustomerKey","CUSTOMER_NAME")
	
	'Filling in Customer Bill to Name from V_CUSTOMER_MASTER
	F.Data.DataTable.AddColumn("dtQuote","BILLTO_NAME","String","")
	F.Data.Dictionary.CreateFromSQL("dictBillToName","Conx","select RTRIM(CUSTOMER) as CUSTOMER, RTRIM(NAME_CUSTOMER) as NAME_CUSTOMER from V_CUSTOMER_MASTER;")
	F.Data.Dictionary.SetDefaultReturn("dictBillToName","")
	F.Data.DataTable.FillFromDictionary("dtQuote","dictBillToName","CustomerID","BILLTO_NAME")
	
	'Filling in Actual Weight booked onto a SO by Quote ID
	F.Data.DataTable.AddColumn("dtQuote","Actual_Weight","Float",0.00)
	F.Data.Dictionary.CreateFromSQL("dictActual","Conx","select RTRIM(QuoteID) as QuoteID, Sum(UnitQty) as UnitQty from GAB_6559_Lines where ItmQtyBasedFlag <> '1' group by QuoteID")
	F.Data.Dictionary.SetDefaultReturn("dictActual",0.00)
	F.Data.DataTable.FillFromDictionary("dtQuote","dictActual","QuoteID","Actual_Weight")
	
	F.Data.DataTable.AddExpressionColumn("dtQuote","OverFlag","Boolean","IIF([Actual_Weight] > Estimate, '1', '0')")
	
	gui.Form.gsQuote.AddGridviewFromDatatable("gvQuote","dtQuote")
	
	f.Intrinsic.Control.CallSub(Format_Quote)
	
	gui.Form.gsQuote.MainView("gvQuote")		
	gui.Form.tab4.SetTab(0)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Load_Quote.End

Program.Sub.Format_Quote.Start
F.Intrinsic.Control.Try
	V.Local.sSql.Declare
	V.Local.sProp.Declare
	v.Local.sValue.Declare	
	V.Local.iRet.Declare
	V.Local.iCnt.Declare
	v.Local.sValue2.Declare
	v.Local.sValue3.Declare
	
	gui.Form.gsQuote.SuspendLayout()
	
	gui.Form.gsQuote.SetGridViewProperty("gvQuote","MultiSelect",False)
	gui.Form.gsQuote.SetGridViewProperty("gvQuote","AllowSort",True)
	gui.Form.gsQuote.SetGridViewProperty("gvQuote","AllowFilter",True)
	gui.Form.gsQuote.SetGridViewProperty("gvQuote","OptionsDetailShowDetailTabs",False)
	gui.Form.gsQuote.SetGridViewProperty("gvQuote","OptionsViewShowGroupPanel",True)
	gui.Form.gsQuote.SetGridViewProperty("gvQuote","EnableAppearanceOddRow",True)
	gui.Form.gsQuote.SetGridviewProperty("gvQuote",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.gsQuote.SetGridviewProperty("gvQuote","OptionsViewColumnAutoWidth",False)
	gui.Form.gsQuote.SetGridviewProperty("gvQuote","AllowColumnResizing",True)	
	gui.Form.gsQuote.SetGridviewProperty("gvQuote","ColumnPanelRowHeight","50")
	gui.Form.gsQuote.SetGridviewProperty("gvQuote",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.Form.gsQuote.SetGridviewProperty("gvQuote", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_Quote,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Quote,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Quote,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_Quote,"sProp","HeaderVAlignment","sValue","Top")
	
	
		'QHID
	'QuoteID
	'CustomerKey
	'CustomerID
	'CUSTOMER_NAME
	'CustomerReference
	'CustomerContactID
	'CustomerAddressID
	'QuotedBy
	'Description
	'ValidFrom
	'ValidUntil
	'Estimate
	'Actual_Weight
	'AcceptedFlag
	'SysUserLastAccess
	'SysUserLastAccessDateTime

	gui.Form.gsQuote.SetColumnProperty("gvQuote","QHID",v.Enum.ColumnPropertyNames!Visible,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerContactID",v.Enum.ColumnPropertyNames!Visible,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerAddressID",v.Enum.ColumnPropertyNames!Visible,False)


	v.Local.sProp.Set("VisibleIndex")
	v.Local.iCnt.Set(-1)	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","QuoteID",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerKey",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerID",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CUSTOMER_NAME",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","BILLTO_NAME",v.Local.sProp,v.Local.iCnt.++)


	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","QuoteID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerKey",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CUSTOMER_NAME",v.Local.sProp,v.Local.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerReference",v.Local.sProp,v.Local.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Description",v.Local.sProp,v.Local.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidFrom",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidUntil",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Estimate",v.Local.sProp,v.Local.sValue3)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Actual_Weight",v.Local.sProp,v.Local.sValue3)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","AcceptedFlag",v.Local.sProp,v.Local.sValue2)	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccess",v.Local.sProp,v.Local.sValue)	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","BILLTO_NAME",v.Local.sProp,v.Local.sValue)	

	
	v.Local.sProp.Set("CellHAlignment")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","QuoteID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerKey",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CUSTOMER_NAME",v.Local.sProp,v.Local.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerReference",v.Local.sProp,v.Local.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Description",v.Local.sProp,v.Local.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidFrom",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidUntil",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Estimate",v.Local.sProp,v.Local.sValue3)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Actual_Weight",v.Local.sProp,v.Local.sValue3)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","AcceptedFlag",v.Local.sProp,v.Local.sValue2)	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccess",v.Local.sProp,v.Local.sValue)	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","BILLTO_NAME",v.Local.sProp,v.Local.sValue)	

	
	v.Local.sProp.Set("Caption")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","QuoteID",v.Local.sProp,"Quote ID")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerKey",v.Local.sProp,"Cust. Key")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerID",v.Local.sProp,"Cust. ID")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CUSTOMER_NAME",v.Local.sProp,"Cust. Name (Ship To)")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerReference",v.Local.sProp,"Customer Reference")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Description",v.Local.sProp,"Description (Int.)")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidFrom",v.Local.sProp,"Valid From")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidUntil",v.Local.sProp,"Valid Until")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Estimate",v.Local.sProp,"Estimate (kg)")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Actual_Weight",v.Local.sProp,"Actual Weight (kg)")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","AcceptedFlag",v.Local.sProp,"Accepted Flag")	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccess",v.Local.sProp,"SysUser LastAccess")	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccessDateTime",v.Local.sProp,"SysUser LastAccess Date Time")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","BILLTO_NAME",v.Local.sProp,"Cust. Name (Bill To)")	
	

			
	
	v.Local.sProp.Set("Width")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","QuoteID",v.Local.sProp,"75")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerKey",v.Local.sProp,"100")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerID",v.Local.sProp,"75")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CUSTOMER_NAME",v.Local.sProp,"150")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerReference",v.Local.sProp,"150")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Description",v.Local.sProp,"150")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidFrom",v.Local.sProp,"100")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidUntil",v.Local.sProp,"100")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Estimate",v.Local.sProp,"100")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Actual_Weight",v.Local.sProp,"100")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","AcceptedFlag",v.Local.sProp,"50")	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccess",v.Local.sProp,"75")	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccessDateTime",v.Local.sProp,"100")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","BILLTO_NAME",v.Local.sProp,"150")
	
	
'	For RowCellClick and CellValueChanged
	v.Local.sProp.Set("AllowEdit")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","QuoteID",v.Local.sProp,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerKey",v.Local.sProp,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerID",v.Local.sProp,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CUSTOMER_NAME",v.Local.sProp,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerReference",v.Local.sProp,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Description",v.Local.sProp,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidFrom",v.Local.sProp,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidUntil",v.Local.sProp,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Estimate",v.Local.sProp,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Actual_Weight",v.Local.sProp,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","AcceptedFlag",v.Local.sProp,False)	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccess",v.Local.sProp,False)	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccessDateTime",v.Local.sProp,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","BILLTO_NAME",v.Local.sProp,False)	
		

	v.Local.sProp.Set("ReadOnly")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","QuoteID",v.Local.sProp,True)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerKey",v.Local.sProp,True)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerID",v.Local.sProp,True)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CUSTOMER_NAME",v.Local.sProp,True)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerReference",v.Local.sProp,True)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Description",v.Local.sProp,True)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidFrom",v.Local.sProp,True)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidUntil",v.Local.sProp,True)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Estimate",v.Local.sProp,True)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Actual_Weight",v.Local.sProp,True)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","AcceptedFlag",v.Local.sProp,True)	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccess",v.Local.sProp,True)	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccessDateTime",v.Local.sProp,True)	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","BILLTO_NAME",v.Local.sProp,True)	
	
	Gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidFrom",V.Enum.ColumnPropertyNames!DisplayCustomDateTime,"dd/MM/yyyy")
	Gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidUntil",V.Enum.ColumnPropertyNames!DisplayCustomDateTime,"dd/MM/yyyy")
	Gui.Form.gsQuote.SetColumnProperty("gvQuote","QuoteID",V.Enum.ColumnPropertyNames!IsHyperlink,True)
	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","OverFlag","Visible",False)	
	

	gui.Form.gsQuote.AddStyleFormatCondition("gvQuote","Actual_Weight","Actual_Weight","Expression","[OverFlag] = True")
	gui.Form.gsQuote.SetStyleFormatConditionProperty("gvQuote","Actual_Weight","Actual_Weight","BackColor","Red")

	gui.Form.gsQuote.ResumeLayout()
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Format_Quote.End

Program.Sub.Bulk_Format_Quote.Start
	gui.Form.gsQuote.SetColumnProperty("gvQuote","QHID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","QuoteID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerKey",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CUSTOMER_NAME",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerReference",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerContactID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerAddressID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","QuotedBy",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Description",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidFrom",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidUntil",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Estimate",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Actual_Weight",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","AcceptedFlag",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccess",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccessDateTime",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","OverFlag",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","BILLTO_NAME",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_Quote.End

Program.Sub.gsQuote_RowCellClick.Start
F.Intrinsic.Control.Try
V.Local.sQHID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare

F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
	
	F.Intrinsic.Control.Case("SELECT")
	
	F.Intrinsic.Control.Case("QUOTEID")
		F.Intrinsic.Control.BlockEvents
		
		'Load values into the FORMQUOTE
		gui.Form.gsQuote.GetCellValueByColumnName("gvQuote","QHID",V.Args.RowIndex,V.Local.sQHID)
		F.Intrinsic.Control.CallSub(LoadFormQuoteHeader,"QHID",V.Local.sQHID)
		F.Intrinsic.Control.CallSub(Load_QuoteLines,"QHID",V.Local.sQHID)
		F.Intrinsic.Control.UnBlockEvents
		gui.FormQuote..Visible(True)
		gui.FormQuote..WindowState(0)
		gui.FormQuote..SetFocus
		
F.Intrinsic.Control.EndSelect
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsQuote_RowCellClick.End

Program.Sub.ac4_ElementClick.Start
f.Intrinsic.Control.Try
	v.Local.iRet.Declare
	v.Local.bAuth.Declare
	V.Local.sCustomerKey.Declare
	V.Local.sQHID.Declare
	
	'This will prevent from multi-clicking too fast the button
	f.Intrinsic.Control.If(v.Global.bLoading)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bLoading.Set(True)	
	
	gui.Form.lblPleasewait.Visible(True)
	gui.Form.lblpleasewait.Text("Please wait ...")		
	
	f.Intrinsic.Control.SelectCase(v.Args.ElementID.UCase)
		f.Intrinsic.Control.Case("SERVICEWEB")
			F.Intrinsic.Task.ShellExec(0,"Open","https://www.gss-service.com/","","",0)	
			
		f.Intrinsic.Control.Case("ADDLINE")
			'Clear Quote header boxes
			
			F.Intrinsic.Control.CallSub(ClearQuoteHeaderBoxes)
			F.Intrinsic.Control.CallSub(CustomerShipLookUp)
			
			V.Local.sCustomerKey.Set(V.Args.CustomerKey)
			F.Intrinsic.Control.If(V.Local.sCustomerKey,=,"")
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'Create New quote header line.
			F.Intrinsic.Control.CallSub(CreateQuote,"CustomerKey",V.Local.sCustomerKey,"CustRef","","CustContact","1","CustAddress","","Desc","","Esitmate","0")
			
			'load New Quote header
			V.Local.sQHID.Set(V.Args.QHID)
			F.Intrinsic.Control.CallSub(LoadFormQuoteHeader,"QHID",V.Local.sQHID)
			F.Intrinsic.Control.CallSub(Load_QuoteLines,"QHID",V.Local.sQHID)
			
			gui.FormQuote..Visible(True)
			gui.FormQuote..WindowState(0)
			gui.FormQuote..SetFocus
			
'		f.Intrinsic.Control.Case("DUPLICATELINE")
'			F.Intrinsic.UI.Msgbox("Feature not ready yet.")
			
			'Check to see if there is more than one lines selected.
			
			
			
'		f.Intrinsic.Control.Case("DELETELINE")
'			'Warning message
'			F.Intrinsic.UI.Msgbox("Feature not ready yet.")
			
	f.Intrinsic.Control.EndSelect
	
	v.Global.bPassedFirstLoad.Set(True)
	gui.Form.lblPleasewait.Visible(False)	
	
	v.Global.bLoading.Set(False)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ac4_ElementClick.End

#End Region ' Tab Quotes

#Region "Quote Form"

Program.Sub.FormQuote_UnLoad.Start
gui.FormQuote..Visible(False)
F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","QuoteMaint")
gui.Form..WindowState(2)
gui.Form..SetFocus
Program.Sub.FormQuote_UnLoad.End

Program.Sub.FormQuote_UserButtonClicked.Start
V.Local.sQHID.Declare
V.Local.sQuoteID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.local.iCnt.Declare
V.Local.sMsg.Declare
v.Local.sReportID.Declare
v.Local.sPrm.Declare
v.Local.sval.Declare
V.Local.sCustomerKey.Declare
V.Local.sARTerms.Declare
V.Local.sCust.Declare
V.Local.sShipKey.Declare
V.Local.sFm.Declare
V.Local.sPGID.Declare
V.Local.sADD1.Declare
V.Local.sADD2.Declare
V.Local.sCity.Declare
V.Local.sShipSeq.Declare

f.Intrinsic.Control.Try	

	'Disable form
	F.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.SelectCase(V.Args.Button)			
		F.Intrinsic.Control.Case("UpdateQuote")
			'Update DB
			F.Intrinsic.Control.CallSub(SaveFormQuoteHeader)
			
			
		F.Intrinsic.Control.Case("DeleteQuote")
			'Check to see if quote has any orders on it yet.
			V.Local.sQuoteID.Set(V.Screen.FormQuote!txtQuoteID.Text)
			F.Intrinsic.String.Build("Select ID from GAB_6559_Lines Where QUOTEID = '{0}'",V.Local.sQuoteID.RTrim,V.Local.sSQL)
			F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.not)
				'We found an order line that has this quote on it. need to tell the user which ones.
				F.Intrinsic.String.Split(V.Local.sRet,"#$#",V.local.sRet)
				F.Intrinsic.String.Build("This quote is on one or more Orders:{0}",V.Ambient.NewLine,V.Local.sMsg)
				F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sRet.UBound,1)
					F.Intrinsic.String.Build("{0}, {1}",V.Local.sMsg,V.Local.sRet(V.Local.iCnt),V.Local.sMSG)
				F.Intrinsic.Control.Next(V.local.iCnt)
				F.Intrinsic.UI.Msgbox(V.Local.sMsg)
				F.Intrinsic.Control.UnBlockEvents
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			
			'Warning Message
			F.Intrinsic.ui.Msgbox("Are you sure you would like to delete this Quote and its lines?","Delete","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				F.Intrinsic.Control.UnBlockEvents
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf

			
			'Delete quote
			F.Intrinsic.String.Build("Delete From GAB_6559_Quote_Lines Where QHID = '{0}'",V.Global.iQHID,V.Local.sSQL)
			F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			
			F.Intrinsic.String.Build("Delete From GAB_6559_Quote_Head Where QHID = '{0}'",V.Global.iQHID,V.Local.sSQL)
			F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			
			
			F.Intrinsic.Control.CallSub(FormQuote_UnLoad)			
			F.Intrinsic.Control.CallSub(ClearQuoteHeaderBoxes)
			
			
		F.Intrinsic.Control.Case("CloneQuote")
		'Allow user to pick new customer.
			F.Intrinsic.Control.CallSub(CustomerShipLookUp)
			V.Local.sCustomerKey.Set(V.Args.CustomerKey)
			F.Intrinsic.Control.If(V.Local.sCustomerKey,=,"")
				F.Intrinsic.Control.UnBlockEvents
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			gui.FormQuote..Visible(False)
			gui.Form..Enabled(False)
			'duplicate quote header
			F.Intrinsic.Control.CallSub(DuplicateQuoteHeader,"CustomerKey",V.Local.sCustomerKey)
			V.Global.iQHID.Set(V.Args.QHID)
			'duplicate quote Lines
			F.Intrinsic.Control.CallSub(DuplicateQuoteLines,"QuoteID",V.Args.QuoteID)
			
			'load in New Quote
			'F.Intrinsic.Control.CallSub(ClearQuoteHeaderBoxes)
			F.Intrinsic.Control.CallSub(LoadFormQuoteHeader,"QHID",V.Global.iQHID)
			F.Intrinsic.Control.CallSub(Load_QuoteLines,"QHID",V.Global.iQHID)
			gui.Form..Enabled(True)
			gui.FormQuote..Visible(True)
			gui.FormQuote..WindowState(0)
			gui.FormQuote..SetFocus			
			
		F.Intrinsic.Control.Case("PreviewQuote")


			
			'Create Crystal report
			F.Global.BI.GetRunID(V.Global.iBIRunID)
			F.Global.BI.GetIDFromName("GAB_6559_Quote.rpt",v.Global.iBIRptID)
			F.Global.BI.StartLogging(V.Global.iBIRunID,v.Global.iBIRptID,-1,"",V.Global.iBILogID)
			
			'Get AR terms
			V.Local.sCust.Set(V.Screen.FormQuote!txtCustID.Text)
			F.Intrinsic.String.Build("Select RTRIM(B.TERMS_MESSAGE) as TERMS_MESSAGE From V_CUSTOMER_SALES A Left join V_AR_TERMS B on A.PAYMENT_TERMS = B.TERMS_CODE where A.CUSTOMER = '{0}'",V.Local.sCust.PSQLFriendly,V.Local.sSQL)
			F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sARTerms)
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
				F.Intrinsic.UI.Msgbox("Missing AR Terms on Customer Master")
				V.Local.sARTerms.Set("")
			F.Intrinsic.Control.EndIf
			
			'Get PriceGroupID
			V.Local.sShipKey.Set(V.Screen.FormQuote!txtShipToID.Text)
			
			F.Intrinsic.String.Build("Select RTRIM(PriceGroupID) as PriceGroupID From GAB_6559_Customer_Xref Where SHIP_KEY = '{0}'",V.Local.sShipKey.PSQLFriendly,V.Local.sSQL)
			F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sPGID)
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
				F.Intrinsic.UI.Msgbox("Missing PriceGroup on Customer Maintenance")
				V.Local.sPGID.Set("")
			F.Intrinsic.Control.EndIf
			
			'Gather the Non quoted lines to display on the quote.
			F.Intrinsic.String.Build("select RTRIM(A.ServiceID) as ServiceID, RTRIM(B.Description) as Description, A.Price, RTRIM(B.UnitAbbreviation) as UnitAbbreviation, A.PriceMinCharge from GAB_6559_Price_Code A Left Join GAB_6559_Service B on A.ServiceID = B.ServiceID Where PriceGroupID = '{0}' and ServiceID not in (Select ServiceID from GAB_6559_Quote_Lines where QHID = '{1}');",V.Local.sPGID,V.Global.iQHID,V.Local.sSQL)
			F.Data.DataTable.CreateFromSQL("dtPG","conx",V.Local.sSQL,True)
			
			F.Data.Datatable.AddColumn("dtPG","BIRunID","Long",V.Global.iBIRunID)
			F.Data.Datatable.AddColumn("dtPG","QHID","Long",V.Global.iQHID)
			F.Data.Datatable.AddColumn("dtPG","PriceGroupID","String",V.Local.sPGID)
			
			'Map to SQL Table
			V.Local.sFm.Set("BIRunID@!@BIRunID")
			V.Local.sFm.Append("*!*QHID@!@QHID")
			V.Local.sFm.Append("*!*PriceGroupID@!@PriceGroupID")
			V.Local.sFm.Append("*!*ServiceID@!@ServiceID")
			V.Local.sFm.Append("*!*Description@!@Description")
			V.Local.sFm.Append("*!*Price@!@Price")
			V.Local.sFm.Append("*!*UnitAbbreviation@!@UnitAbbreviation")
			V.Local.sFm.Append("*!*PriceMinCharge@!@PriceMinCharge")
			
			F.Data.DataTable.SaveToDB("dtPG","conx","GAB_6559_BI_Quote","",128,V.Local.sFm)
			
			F.Data.Datatable.Close("dtPG")
			
			F.Intrinsic.String.Split(V.Local.sShipKey,"-",V.Local.sShipSeq)
			v.Local.sShipSeq.RedimPreserve(0,1)
			F.Intrinsic.String.Trim(V.Local.sShipSeq(1),V.Local.sShipSeq(1))
			F.Intrinsic.Control.If(V.Local.sShipSeq(1),=,"DEFLT")
				V.Local.sShipSeq(1).Set("009999")
			F.Intrinsic.Control.EndIf
			V.Local.sShipSeq(0).Set(V.Local.sShipSeq(1))
			v.Local.sShipSeq.RedimPreserve(0,0)
			
			F.Intrinsic.String.Build("select RTRIM(SHIP_ADDRESS1), RTRIM(SHIP_ADDRESS2), RTRIM(SHIP_CITY) from OE_MULTI_SHIP where CUSTOMER = '{0}' and SHIP_SEQ = '{1}'",V.Local.sCust.PSQLFriendly,V.Local.sShipSeq.PSQLFriendly,V.Local.sSQL)
			f.ODBC.Connection!conx.ExecuteAndReturn(v.Local.sSQL,V.Local.sRet)
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.Not)
				F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
				V.Local.sADD1.Set(V.Local.sRet(0))
				V.Local.sADD2.Set(V.Local.sRet(1))
				V.Local.sCity.Set(V.Local.sRet(2))
			F.Intrinsic.Control.EndIf
			
			
			f.Global.BI.StopLogging(v.Global.iBILogID)			
			
			f.Intrinsic.String.Split("QHID*!*TERMS*!*BIRunID*!*ADD1*!*ADD2*!*CITY","*!*",v.Local.sPrm)
			f.Intrinsic.String.Concat(V.Global.iQHID,"*!*",V.Local.sARTerms,"*!*",V.Global.iBIRunID.String,"*!*",V.Local.sADD1,"*!*",V.Local.sADD2,"*!*",V.Local.sCity,v.Local.sval)
			f.Intrinsic.String.Split(v.Local.sval,"*!*",v.Local.sval)
			'V.Local.sval.Set(V.Global.iQHID.String)
			f.Global.BI.PrintReport(v.Global.iBIRptID,0,v.Local.sPrm,v.Local.sval,"",true)
		
			
			F.Intrinsic.String.Build("Delete From GAB_6559_BI_Quote where BIRunID = {0};",V.Global.iBIRunID,V.Local.sSQL)
			F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			
	F.Intrinsic.Control.EndSelect
	F.Intrinsic.Control.UnBlockEvents
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.FormQuote_UserButtonClicked.End

Program.Sub.LoadFormQuoteHeader.Start
V.Local.sQHID.Declare
V.Local.sQHID.Set(V.Args.QHID)
V.Global.iQHID.Set(v.Local.sQHID.Long)
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sCustomerCode.Declare
V.Local.bRet.Declare
V.Local.sContactID.Declare

F.Intrinsic.Control.Try
'Load Quote header values into the FORMQUOTE text boxes
	f.Data.Dictionary.Exists("dictContact",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictContact")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("Select QHID, RTRIM(QuoteID) as QuoteID, RTRIM(CustomerKey) as CustomerKey, RTRIM(CustomerID) as CustomerID, RTRIM(CustomerReference) as CustomerReference, CustomerContactID, CustomerAddressID, QuotedBy, RTRIM(Description) as Description, ValidFrom, ValidUntil, Estimate, AcceptedFlag,  RTRIM(SysUserLastAccess) as SysUserLastAccess, SysUserLastAccessDateTime From GAB_6559_Quote_Head where QHID = '{0}'",V.Local.sQHID,V.Local.sSQL)
	F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	
	gui.FormQuote.txtQuoteID.Text(V.Local.sRet(1))
	gui.FormQuote.txtCustID.Text(V.Local.sRet(3))
	gui.FormQuote.txtShipToID.Text(V.Local.sRet(2))
	gui.FormQuote.txtCustRef.Text(V.Local.sRet(4))
	gui.FormQuote.txtContactID.Text(V.Local.sRet(5))
	'gui.FormQuote.txtAddressID.Text(V.Local.sRet(6))
	gui.FormQuote.txtQuotedBy.Text(V.Local.sRet(7))
	gui.FormQuote.txtINTDescription.Text(V.Local.sRet(8))
	gui.FormQuote.dtpValidFrom.Value(V.Local.sRet(9))
	gui.FormQuote.dtpValidTo.Value(V.Local.sRet(10))
	gui.FormQuote.txtEstimate.Text(V.Local.sRet(11))
	gui.FormQuote.txtAcceptedFlag.Text(V.Local.sRet(12))
	gui.FormQuote.txtLastAccessUser.Text(V.Local.sRet(13))
	gui.FormQuote.txtLastAccessDateTime.Text(V.Local.sRet(14))
	
	F.Intrinsic.Control.If(V.Local.sRet(12),=,"A")
		gui.FormQuote.ddlAccepted.Text("Accepted")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Local.sRet(12),=,"U")
		gui.FormQuote.ddlAccepted.Text("Unspecified")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Local.sRet(12),=,"N")
		gui.FormQuote.ddlAccepted.Text("Rejected")
	F.Intrinsic.Control.EndIf
	
	V.Global.sQuoteID.Set(V.Local.sRet(1))
	V.Global.sShipToID.Set(V.Local.sRet(2))
	V.Global.sCustID.Set(V.Local.sRet(3))
	V.Local.sContactID.Set(V.Local.sRet(5))
	
	
	F.Intrinsic.String.Split(V.Global.sShipToID,"-",V.Local.sCustomerCode)
	F.Intrinsic.Control.If(V.Local.sCustomerCode(1),=,"DEFLT")
		F.Intrinsic.String.Build("select RTRIM(NAME_CUSTOMER_SHIP), RTRIM(ADDRESS1_SHIP), RTRIM(ADDRESS2_SHIP), RTRIM(CITY_SHIP) + ' ' + RTRIM(CODE_ZIP_SHIP) from V_CUSTOMER_SHIPTO where CUSTOMER = '{0}';",V.Local.sCustomerCode(0),V.Local.sSQL)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("select RTRIM(CUSTOMER_NAME), RTRIM(SHIP_ADDRESS1), RTRIM(SHIP_ADDRESS2), RTRIM(SHIP_CITY) + ' ' + RTRIM(SHIP_ZIP) from V_OE_MULTI_SHIP where CUSTOMER = '{0}' and SHIP_SEQ = '{1}';",V.Local.sCustomerCode(0),V.Local.sCustomerCode(1),V.Local.sSQL)
	F.Intrinsic.Control.EndIf
	F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	
	gui.FormQuote.lblCustName.Caption(V.Local.sRet(0))
	gui.FormQuote.lblAddressLine1.Caption(V.Local.sRet(1))
	gui.FormQuote.lblAddressLine2.Caption(V.Local.sRet(2))
	gui.FormQuote.lblAddressLine3.Caption(V.Local.sRet(3))
	
	'select Cast(ID as INTEGER) as ID, RTRIM(CUST) as CUST, RTRIM(NAME_PREFERRED) as NAME_PREFERRED, RTRIM(NAME_LAST) as NAME_LAST, RTRIM(EMAIL1) as EMAIL1, RTRIM(PHONE1) as PHONE1, RTRIM(PHONE2) as PHONE2, RTRIM(TITLE) as TITLE from CONTACT Where CUST = '{0}' And ID ='{1}'
	
	F.Intrinsic.String.Build("Select Cast(ID as Integer), RTRIM(NAME_PREFERRED) + ', ' + RTRIM(NAME_LAST) as NAME From CONTACT where CUST = '{0}'",V.Local.sCustomerCode(0),V.Local.sSQL)
	F.Data.Dictionary.CreateFromSQL("dictContact","conx",V.Local.sSQL)
	F.Data.Dictionary.SetDefaultReturn("dictContact","")
	F.Data.Dictionary.AddItem("dictContact",-1,"")
	
	gui.FormQuote.ddlContact.ClearItems
	gui.FormQuote.ddlContact.AddItems("Dictionary","dictContact")
	gui.FormQuote.ddlContact.Text(V.Dictionary.dictContact![V.Local.sContactID])
	
	F.Intrinsic.Control.If(V.Local.sContactID,<>,-1)
		F.Intrinsic.String.LPad(V.Local.sContactID,"0",9,V.Local.sContactID)
		F.Intrinsic.String.Build("select Top 1 RTRIM(PHONE1) from CONTACT Where CUST = '{0}' and ID = '{1}' and Type = 'C';",V.Local.sCustomerCode(0), V.Local.sContactID,V.Local.sSQL)
		F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
		gui.FormQuote.lblTelephoneContact.Caption(V.Local.sRet)
	F.Intrinsic.Control.Else
		gui.FormQuote.lblTelephoneContact.Caption("")
	F.Intrinsic.Control.EndIf
	
	
	
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadFormQuoteHeader.End

Program.Sub.DuplicateQuoteHeader.Start
V.Local.sQHID.Declare
'V.Local.sQHID.Set(V.Args.QHID)
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.dNow.Declare
V.Local.sQuoteID.Declare
V.Local.sCustRef.Declare
V.Local.sCustContact.Declare
V.Local.sCustAddress.Declare
V.Local.sQuotedBy.Declare
V.Local.sDesc.Declare
V.Local.dValidFrom.Declare
V.Local.dValidUntil.Declare
V.Local.sEsitmate.Declare
V.Local.sAcceptedFlag.Declare
V.Local.sCustomerKey.Declare
V.Local.sCust.Declare

F.Intrinsic.Control.Try
'Save Quote header values from FORMQUOTE text boxes into the Table GAB_6559_Quote_Head

	V.Local.sCustomerKey.Set(V.Args.CustomerKey)
	F.Intrinsic.Control.CallSub(GetNextQuoteID)
	V.Local.sQuoteID.Set(V.Args.QuoteID)
	F.Intrinsic.String.Split(V.Local.sCustomerKey,"-",V.Local.sCust)
	V.Local.sCustRef.Set(V.Screen.FormQuote!txtCustRef.Text)
	V.Local.sCustContact.Set(V.Screen.FormQuote!txtContactID.Text)
	'V.Local.sCustAddress.Set(V.Screen.FormQuote!txtAddressID.Text)
	V.Local.sQuotedBy.Set(V.Caller.User)
	V.Local.sDesc.Set(V.Screen.FormQuote!txtINTDescription.Text)
	V.Local.dValidFrom.Set(V.Screen.FormQuote!dtpValidFrom.Value)
	V.Local.dValidUntil.Set(V.Screen.FormQuote!dtpValidTo.Value)
	V.Local.sEsitmate.Set(V.Screen.FormQuote!txtEstimate.Text)
	V.Local.sAcceptedFlag.Set("U")
	V.Local.dNow.Set(V.Ambient.Now)
	
	F.Intrinsic.String.RTrim(V.Local.sCustRef,V.Local.sCustRef)
	F.Intrinsic.String.RTrim(V.Local.sDesc,V.Local.sDesc)
	
	F.Intrinsic.String.Build("Insert Into GAB_6559_Quote_Head (QuoteID,CustomerKey,CustomerID,CustomerReference,CustomerContactID,CustomerAddressID,QuotedBy,Description,ValidFrom,ValidUntil,Estimate,AcceptedFlag,SysUserLastAccess) Values ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}')",V.Local.sQuoteID,V.Local.sCustomerKey,V.Local.sCust(0).PSQLFriendly,V.Local.sCustRef.PSQLFriendly,V.Local.sCustContact,V.Local.sCustAddress,V.Local.sQuotedBy.PSQLFriendly,V.Local.sDesc.PSQLFriendly,V.Local.dValidFrom.PervasiveDate,V.Local.dValidUntil.PervasiveDate,V.Local.sEsitmate,V.Local.sAcceptedFlag,V.Local.sQuotedBy,V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	
	'Get the QHID that was auto generated by PSQL... We will use that to then open the quote form
	F.Intrinsic.String.Build("Select QHID from GAB_6559_Quote_Head where QuoteID = '{0}'",V.Local.sQuoteID,v.Local.sSQL)
	F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,v.Local.sRet)
	
	f.Intrinsic.Variable.AddRV("QHID",V.Local.sRet.Trim,"QuoteID",V.Local.sQuoteID)


f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.DuplicateQuoteHeader.End

Program.Sub.DuplicateQuoteLines.Start
V.Local.sQHID.Declare
'V.Local.sQHID.Set(V.Args.QHID)
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sCustRef.Declare
V.Local.sCustContact.Declare
V.Local.sCustAddress.Declare
V.Local.sQuotedBy.Declare
V.Local.sDesc.Declare
V.Local.dValidFrom.Declare
V.Local.dValidUntil.Declare
V.Local.sEsitmate.Declare
V.Local.sAcceptedFlag.Declare
V.Local.sCustomerKey.Declare
V.Local.sCust.Declare

V.Local.iCnt.Declare
V.Local.iCntPlus1.Declare
V.Local.sQuoteID.Declare
V.Local.sSurcharge.Declare
V.Local.sItmQtyBasedFlag.Declare
V.Local.sUnitPricePriority.Declare
V.Local.sUnitPrice.Declare
V.Local.sQuoteItemID.Declare
V.Local.sServiceID.Declare
V.Local.dNow.Declare

F.Intrinsic.Control.Try

	f.Intrinsic.Control.If(v.DataTable.dtQuoteLines.RowCount,=,0)
		F.Intrinsic.Control.ExitSub		
	f.Intrinsic.Control.EndIf


	f.Intrinsic.Control.If(v.DataTable.dtQuoteLines0.Exists)
		f.Data.DataTable.Close("dtQuoteLines0")
	f.Intrinsic.Control.EndIf
	
	F.Data.DataView.Create("dtQuoteLines","dvQuoteLines",22)
	F.Data.DataView.ToDataTable("dtQuoteLines","dvQuoteLines","dtQuoteLines0")
	F.Data.DataView.Close("dtQuoteLines","dvQuoteLines")
	
	
	V.Local.sQuoteID.Set(V.Args.QuoteID)
	V.Local.dNow.Set(V.Ambient.Now)
	
	'Loop through duplicate datatable to insert each line under the new quote QHID
	F.Intrinsic.Control.For(V.Local.iCnt,0,v.DataTable.dtQuoteLines0.RowCount--,1)
		F.Intrinsic.Math.Add(V.Local.iCnt,1,V.Local.iCntPlus1)
		
		V.Local.sServiceID.Set(V.DataTable.dtQuoteLines0(V.Local.iCnt).ServiceID!FieldValTrim)
		V.Local.sQuoteItemID.Set(V.Local.iCntPlus1.String)
		V.Local.sUnitPrice.Set(V.DataTable.dtQuoteLines0(V.Local.iCnt).UnitPrice!FieldValTrim)
		V.Local.sUnitPricePriority.Set(V.DataTable.dtQuoteLines0(V.Local.iCnt).UnitPricePriority!FieldValTrim)
		V.Local.sItmQtyBasedFlag.Set(V.DataTable.dtQuoteLines0(V.Local.iCnt).ItemQuantityBasedFlag!FieldVal)
		V.Local.sSurcharge.Set(V.DataTable.dtQuoteLines0(V.Local.iCnt).SurchargeExempt!FieldVal)
		F.Intrinsic.Control.If(V.Local.sItmQtyBasedFlag,=,"True")
			V.Local.sItmQtyBasedFlag.Set("1")
		F.Intrinsic.Control.Else
			V.Local.sItmQtyBasedFlag.Set("0")
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.Local.sSurcharge,=,"True")
			V.Local.sSurcharge.Set("1")
		F.Intrinsic.Control.Else
			V.Local.sSurcharge.Set("0")
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.String.Build("Insert into GAB_6559_Quote_Lines (QuoteID,ServiceID,QuoteItemID,UnitPrice,UnitPricePriority,ItemQuantityBasedFlag,SurchargeExempt,SysUserLastAccessDateTime,SysUserLastAccess,QHID) Values ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}')",V.Local.sQuoteID,V.Local.sServiceID,V.Local.sQuoteItemID,V.Local.sUnitPrice,V.Local.sUnitPricePriority,V.Local.sItmQtyBasedFlag,V.Local.sSurcharge,V.Local.dNow.PervasiveDate,V.Caller.User,V.Global.iQHID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.DuplicateQuoteLines.End

Program.Sub.SaveFormQuoteHeader.Start
V.Local.sQHID.Declare
'V.Local.sQHID.Set(V.Args.QHID)
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.dNow.Declare
V.Local.sQuoteID.Declare
V.Local.sCustRef.Declare
V.Local.sCustContact.Declare
V.Local.sCustAddress.Declare
V.Local.sQuotedBy.Declare
V.Local.sDesc.Declare
V.Local.dValidFrom.Declare
V.Local.dValidUntil.Declare
V.Local.sEsitmate.Declare
V.Local.sAcceptedFlag.Declare

F.Intrinsic.Control.Try
'Save Quote header values from FORMQUOTE text boxes into the Table GAB_6559_Quote_Head

	V.Local.sQuoteID.Set(V.Screen.FormQuote!txtQuoteID.Text)
	V.Local.sCustRef.Set(V.Screen.FormQuote!txtCustRef.Text)
	V.Local.sCustContact.Set(V.Screen.FormQuote!txtContactID.Text)
	'V.Local.sCustAddress.Set(V.Screen.FormQuote!txtAddressID.Text)
	V.Local.sQuotedBy.Set(V.Screen.FormQuote!txtQuotedBy.Text)
	V.Local.sDesc.Set(V.Screen.FormQuote!txtINTDescription.Text)
	V.Local.dValidFrom.Set(V.Screen.FormQuote!dtpValidFrom.Value)
	V.Local.dValidUntil.Set(V.Screen.FormQuote!dtpValidTo.Value)
	V.Local.sEsitmate.Set(V.Screen.FormQuote!txtEstimate.Text)
	V.Local.sAcceptedFlag.Set(V.Screen.FormQuote!txtAcceptedFlag.Text)
	V.Local.dNow.Set(V.Ambient.Now)
	
	F.Intrinsic.String.RTrim(V.Local.sCustRef,V.Local.sCustRef)
	F.Intrinsic.String.RTrim(V.Local.sDesc,V.Local.sDesc)
	
	F.Intrinsic.String.Build("Update GAB_6559_Quote_Head Set CustomerReference = '{0}', CustomerContactID = '{1}', CustomerAddressID = '{2}', QuotedBy = '{3}', Description = '{4}',ValidFrom = '{5}',ValidUntil = '{6}',Estimate = '{7}', AcceptedFlag = '{8}', SysUserLastAccess = '{9}', SysUserLastAccessDateTime = '{10}' where QuoteID = '{11}'",V.Local.sCustRef.PSQLFriendly,V.Local.sCustContact,V.Local.sCustAddress,V.Local.sQuotedBy.PSQLFriendly,V.Local.sDesc.PSQLFriendly,V.Local.dValidFrom.PervasiveDate,V.Local.dValidUntil.PervasiveDate,V.Local.sEsitmate,V.Local.sAcceptedFlag,V.Caller.User,V.Local.dNow.PervasiveDate,V.Local.sQuoteID,V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.SaveFormQuoteHeader.End

Program.Sub.GetNextQuoteID.Start
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sYear.Declare
V.Local.sQuote5.Declare
V.Local.iQuote5.Declare
V.Local.sQuoteID.Declare
F.Intrinsic.Control.Try

	'Get next Quote Number
	F.Intrinsic.String.Format(V.Ambient.Now,"yyyy",V.Local.sYear)
	F.Intrinsic.String.Build("Select Top 1 Cast(RIGHT(RTRIM(QUOTEID), 5) as INTEGER) as QUOTE_ID, Left(QUOTEID,4) as yyyy From GAB_6559_Quote_Head where yyyy = '{0}' order by QuoteID Desc",V.Local.sYear,V.Local.sSQL)
	F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
		'happy new year!
		V.Local.sQuote5.Set("00001")
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sYear,=,"2023")
			F.Intrinsic.Control.If(V.Local.sRet(0),<,"8000")
				V.Local.sRet(0).Set("08000")
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Math.Add(V.Local.sRet(0),1,V.local.sQuote5)
		F.Intrinsic.String.LPad(V.Local.sQuote5,"0",5,V.Local.sQuote5)
		
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.Build("{0}-{1}",V.Local.sYear,V.Local.sQuote5,V.Local.sQuoteID)
	f.Intrinsic.Variable.AddRV("QuoteID",V.Local.sQuoteID.Trim)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.GetNextQuoteID.End

Program.Sub.CreateQuote.Start
V.Local.sQHID.Declare
V.Local.sCust.Declare
V.Local.sCustomerKey.Declare
V.Local.sCustomerKey.Set(V.Args.CustomerKey)
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sYear.Declare
V.Local.sQuote5.Declare
V.Local.iQuote5.Declare
V.Local.sQuoteID.Declare
V.Local.sCustRef.Declare
V.Local.sCustContact.Declare
V.Local.sCustAddress.Declare
V.Local.sQuotedBy.Declare
V.Local.sDesc.Declare
V.Local.dValidFrom.Declare
V.Local.dValidUntil.Declare
V.Local.sEsitmate.Declare
V.Local.sAcceptedFlag.Declare

F.Intrinsic.Control.Try

	F.Intrinsic.Control.CallSub(GetNextQuoteID)
	V.Local.sQuoteID.Set(V.Args.QuoteID)
	F.Intrinsic.String.Split(V.Local.sCustomerKey,"-",V.Local.sCust)
	V.Local.sCustRef.Set(V.Args.CustRef)
	V.Local.sCustContact.Set(V.Args.CustContact)
	V.Local.sCustAddress.Set(V.Args.CustAddress)
	V.Local.sQuotedBy.Set(V.Caller.User)
	V.Local.sDesc.Set(V.Args.Desc)
	V.Local.dValidFrom.Set(V.Ambient.Now)
	F.Intrinsic.Date.DateAdd("M",2,V.Local.dValidFrom,V.Local.dValidUntil)
	'V.Local.dValidUntil.Set(V.Ambient.Now)
	V.Local.sEsitmate.Set(V.Args.Esitmate)
	V.Local.sAcceptedFlag.Set("U")
	
	F.Intrinsic.Control.If(V.Local.sCustContact,=,"")
		V.Local.sCustContact.Set("1")
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.Local.sCustAddress,=,"")
		V.Local.sCustAddress.Set("1")
	F.Intrinsic.Control.EndIf
	
	'Insert Statement on GAB_6559_Quote_Head
	F.Intrinsic.String.Build("Insert Into GAB_6559_Quote_Head (QuoteID,CustomerKey,CustomerID,CustomerReference,CustomerContactID,CustomerAddressID,QuotedBy,Description,ValidFrom,ValidUntil,Estimate,AcceptedFlag,SysUserLastAccess) Values ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}')",V.Local.sQuoteID,V.Local.sCustomerKey,V.Local.sCust(0).PSQLFriendly,V.Local.sCustRef.PSQLFriendly,V.Local.sCustContact,V.Local.sCustAddress,V.Local.sQuotedBy.PSQLFriendly,V.Local.sDesc.PSQLFriendly,V.Local.dValidFrom.PervasiveDate,V.Local.dValidUntil.PervasiveDate,V.Local.sEsitmate,V.Local.sAcceptedFlag,V.Local.sQuotedBy,V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	
	'Get the QHID that was auto generated by PSQL... We will use that to then open the quote form
	F.Intrinsic.String.Build("Select QHID from GAB_6559_Quote_Head where QuoteID = '{0}'",V.Local.sQuoteID,v.Local.sSQL)
	F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,v.Local.sRet)
	
	f.Intrinsic.Variable.AddRV("QHID",V.Local.sRet.Trim)
	
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.CreateQuote.End

Program.Sub.Load_QuoteLines.Start
V.Local.sQHID.Declare
V.Local.sQHID.Set(V.Args.QHID)
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.bRet.Declare

F.Intrinsic.Control.Try

	f.Intrinsic.Control.If(v.DataTable.dtQuoteLines.Exists)
		f.Data.DataTable.Close("dtQuoteLines")
		gui.FormQuote.GsQuoteLines.ClearRows("gvQuoteLines")		
	f.Intrinsic.Control.EndIf
	
	f.Data.Dictionary.Exists("dictServiceDesc",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictServiceDesc")
	F.Intrinsic.Control.EndIf

	'QuoteItemID
	'QHID
	'QID
	'QuoteID
	'ServiceID
	'ServiceDesc
	'UnitPrice
	'UnitPricePriority
	'ItemQuantityBasedFlag
	'SurchargeExempt
	'SysUserLastAccess
	'SysUserLastAccessDateTime

	F.Intrinsic.String.Build("Select Cast(0 as bit) as Sel, QuoteItemID, QHID, QID, RTRIM(QuoteID) as QuoteID, RTRIM(ServiceID) as ServiceID, '' as ServiceDesc,  UnitPrice, UnitPricePriority, Cast(ItemQuantityBasedFlag as Bit) as ItemQuantityBasedFlag, Cast(SurchargeExempt as Bit) as SurchargeExempt, RTRIM(SysUserLastAccess) as SysUserLastAccess, SysUserLastAccessDateTime From GAB_6559_Quote_Lines where QHID = '{0}' order by QID ASC",V.Local.sQHID,V.Local.sSQL)
	F.Data.Datatable.CreateFromSQL("dtQuoteLines","conx",V.Local.sSQL,True)
	
	'Dictionary for Service ID, Service Description from GAB_6559_Service
	F.Data.Dictionary.CreatefromSQL("dictServiceDesc","conx","Select RTRIM(SERVICEID), RTRIM(DESCRIPTION) From GAB_6559_Service")
	F.Data.Dictionary.SetDefaultReturn("dictServiceDesc","")
	F.Data.DataTable.FillFromDictionary("dtQuoteLines","dictServiceDesc","ServiceID","ServiceDesc")
	
	

	gui.FormQuote.GsQuoteLines.AddGridviewFromDatatable("gvQuoteLines","dtQuoteLines")
	
	f.Intrinsic.Control.CallSub(Format_QuoteLines)
	
	gui.FormQuote.GsQuoteLines.MainView("gvQuoteLines")		
	gui.FormQuote.tabService.SetTab(0)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Load_QuoteLines.End

Program.Sub.Format_QuoteLines.Start
V.Local.sSql.Declare
V.Local.sProp.Declare
v.Local.sValue.Declare	
V.Local.iRet.Declare
V.Local.iCnt.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare
F.Intrinsic.Control.Try

	
	
	gui.FormQuote.GsQuoteLines.SuspendLayout()
	
	gui.FormQuote.GsQuoteLines.SetGridViewProperty("gvQuoteLines","MultiSelect",False)
	gui.FormQuote.GsQuoteLines.SetGridViewProperty("gvQuoteLines","AllowSort",True)
	gui.FormQuote.GsQuoteLines.SetGridViewProperty("gvQuoteLines","AllowFilter",True)
	gui.FormQuote.GsQuoteLines.SetGridViewProperty("gvQuoteLines","OptionsDetailShowDetailTabs",False)
	gui.FormQuote.GsQuoteLines.SetGridViewProperty("gvQuoteLines","OptionsViewShowGroupPanel",True)
	gui.FormQuote.GsQuoteLines.SetGridViewProperty("gvQuoteLines","EnableAppearanceOddRow",True)
	gui.FormQuote.GsQuoteLines.SetGridviewProperty("gvQuoteLines",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.FormQuote.GsQuoteLines.SetGridviewProperty("gvQuoteLines","OptionsViewColumnAutoWidth",False)
	gui.FormQuote.GsQuoteLines.SetGridviewProperty("gvQuoteLines","AllowColumnResizing",True)	
	gui.FormQuote.GsQuoteLines.SetGridviewProperty("gvQuoteLines","ColumnPanelRowHeight","50")
	gui.FormQuote.GsQuoteLines.SetGridviewProperty("gvQuoteLines",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.FormQuote.GsQuoteLines.SetGridviewProperty("gvQuoteLines", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_QuoteLines,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_QuoteLines,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_QuoteLines,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_QuoteLines,"sProp","HeaderVAlignment","sValue","Top")
	
	'QuoteItemID
	'QHID
	'QID
	'QuoteID
	'ServiceID
	'ServiceDesc
	'UnitPrice
	'UnitPricePriority
	'ItemQuantityBasedFlag
	'SurchargeExempt
	'SysUserLastAccess
	'SysUserLastAccessDateTime

	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","QHID",v.Enum.ColumnPropertyNames!Visible,False)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","QID",v.Enum.ColumnPropertyNames!Visible,False)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","QuoteID",v.Enum.ColumnPropertyNames!Visible,False)


	v.Local.sProp.Set("VisibleIndex")
	v.Local.iCnt.Set(-1)	
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","Sel",v.Local.sProp,v.Local.iCnt.++)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","QuoteItemID",v.Local.sProp,v.Local.iCnt.++)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ServiceID",v.Local.sProp,v.Local.iCnt.++)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ServiceDesc",v.Local.sProp,v.Local.iCnt.++)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","UnitPrice",v.Local.sProp,v.Local.iCnt.++)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","UnitPricePriority",v.Local.sProp,v.Local.iCnt.++)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ItemQuantityBasedFlag",v.Local.sProp,v.Local.iCnt.++)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SurchargeExempt",v.Local.sProp,v.Local.iCnt.++)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SysUserLastAccess",v.Local.sProp,v.Local.iCnt.++)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SysUserLastAccessDateTime",v.Local.sProp,v.Local.iCnt.++)


	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","Sel",v.Local.sProp,v.Local.sValue2)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","QuoteItemID",v.Local.sProp,v.Local.sValue2)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ServiceID",v.Local.sProp,v.Local.sValue2)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ServiceDesc",v.Local.sProp,v.Local.sValue)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","UnitPrice",v.Local.sProp,v.Local.sValue3)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","UnitPricePriority",v.Local.sProp,v.Local.sValue3)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ItemQuantityBasedFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SurchargeExempt",v.Local.sProp,v.Local.sValue2)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SysUserLastAccess",v.Local.sProp,v.Local.sValue)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)
	


	
	v.Local.sProp.Set("CellHAlignment")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","Sel",v.Local.sProp,v.Local.sValue2)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","QuoteItemID",v.Local.sProp,v.Local.sValue2)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ServiceID",v.Local.sProp,v.Local.sValue2)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ServiceDesc",v.Local.sProp,v.Local.sValue)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","UnitPrice",v.Local.sProp,v.Local.sValue3)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","UnitPricePriority",v.Local.sProp,v.Local.sValue3)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ItemQuantityBasedFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SurchargeExempt",v.Local.sProp,v.Local.sValue2)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SysUserLastAccess",v.Local.sProp,v.Local.sValue)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)

	
	v.Local.sProp.Set("Caption")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","Sel",v.Local.sProp,"Select")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","QuoteItemID",v.Local.sProp,"Line")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ServiceID",v.Local.sProp,"Service ID")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ServiceDesc",v.Local.sProp,"Service Desc.")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","UnitPrice",v.Local.sProp,"Unit Price ($)")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","UnitPricePriority",v.Local.sProp,"Unit Price Priority ($)")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ItemQuantityBasedFlag",v.Local.sProp,"Item Qty Based Flag")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SurchargeExempt",v.Local.sProp,"Surcharge Exempt")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SysUserLastAccess",v.Local.sProp,"SysUser LastAccess")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SysUserLastAccessDateTime",v.Local.sProp,"SysUser LastAccess DateTime")
	

			
	
	v.Local.sProp.Set("Width")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","Sel",v.Local.sProp,"50")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","QuoteItemID",v.Local.sProp,"50")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ServiceID",v.Local.sProp,"75")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ServiceDesc",v.Local.sProp,"200")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","UnitPrice",v.Local.sProp,"75")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","UnitPricePriority",v.Local.sProp,"75")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ItemQuantityBasedFlag",v.Local.sProp,"85")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SurchargeExempt",v.Local.sProp,"75")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SysUserLastAccess",v.Local.sProp,"100")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SysUserLastAccessDateTime",v.Local.sProp,"125")
	
	
'	For RowCellClick and CellValueChanged
	v.Local.sProp.Set("AllowEdit")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","Sel",v.Local.sProp,True)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","QuoteItemID",v.Local.sProp,False)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ServiceID",v.Local.sProp,False)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ServiceDesc",v.Local.sProp,False)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","UnitPrice",v.Local.sProp,True)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","UnitPricePriority",v.Local.sProp,True)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ItemQuantityBasedFlag",v.Local.sProp,True)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SurchargeExempt",v.Local.sProp,True)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SysUserLastAccess",v.Local.sProp,False)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SysUserLastAccessDateTime",v.Local.sProp,False)
		

	v.Local.sProp.Set("ReadOnly")
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","Sel",v.Local.sProp,False)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","QuoteItemID",v.Local.sProp,True)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ServiceID",v.Local.sProp,True)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ServiceDesc",v.Local.sProp,True)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","UnitPrice",v.Local.sProp,False)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","UnitPricePriority",v.Local.sProp,False)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ItemQuantityBasedFlag",v.Local.sProp,False)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SurchargeExempt",v.Local.sProp,False)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SysUserLastAccess",v.Local.sProp,True)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SysUserLastAccessDateTime",v.Local.sProp,True)
	
	Gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","QuoteID",V.Enum.ColumnPropertyNames!IsHyperlink,True)
	
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("LightYellow")
'	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ServiceID",v.Local.sProp,v.Local.sValue)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","UnitPrice",v.Local.sProp,v.Local.sValue)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","UnitPricePriority",v.Local.sProp,v.Local.sValue)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SurchargeExempt",v.Local.sProp,v.Local.sValue)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ItemQuantityBasedFlag",v.Local.sProp,v.Local.sValue)
	
	'Gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ValidFrom",V.Enum.ColumnPropertyNames!DisplayCustomDateTime,"dd/MM/yyyy")
	Gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","UnitPrice",V.Enum.ColumnPropertyNames!DisplayCustomNumeric,"###,###,##0.000")
	Gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","UnitPricePriority",V.Enum.ColumnPropertyNames!DisplayCustomNumeric,"###,###,##0.000")

	gui.FormQuote.GsQuoteLines.ResumeLayout()

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Format_QuoteLines.End

Program.Sub.Bulk_Format_QuoteLines.Start
F.Intrinsic.Control.Try
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","Sel",v.Args.sProp,v.Args.sValue)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","QuoteItemID",v.Args.sProp,v.Args.sValue)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","QHID",v.Args.sProp,v.Args.sValue)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","QID",v.Args.sProp,v.Args.sValue)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","QuoteID",v.Args.sProp,v.Args.sValue)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ServiceID",v.Args.sProp,v.Args.sValue)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ServiceDesc",v.Args.sProp,v.Args.sValue)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","UnitPrice",v.Args.sProp,v.Args.sValue)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","UnitPricePriority",v.Args.sProp,v.Args.sValue)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","ItemQuantityBasedFlag",v.Args.sProp,v.Args.sValue)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SurchargeExempt",v.Args.sProp,v.Args.sValue)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SysUserLastAccess",v.Args.sProp,v.Args.sValue)
	gui.FormQuote.GsQuoteLines.SetColumnProperty("gvQuoteLines","SysUserLastAccessDateTime",v.Args.sProp,v.Args.sValue)
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Bulk_Format_QuoteLines.End

Program.Sub.cmdUpdate_Click.Start
F.Intrinsic.Control.Try
'Update GAB_6559_Quote_Lines from the GsQuoteLines gvQuoteLines dtQuoteLines

'Removed this button, instead we will be updating the quote lines in the database when the user changes them in the grid with cellvaluechange events

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdUpdate_Click.End

Program.Sub.cmdAllocate_Click.Start
F.Intrinsic.Control.Try
'Show browser of Services from the customer's price group to select from,

V.Local.sSQL.Declare(String)
V.Local.sCol.Declare(String)
V.Local.sColW.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sCustomerKey.Declare
V.Local.sCustomerKey.Set("")
V.Local.sPricegroupID.Declare
V.Local.fLine.Declare
V.Local.sItmQtyFlag.Declare
V.Local.dUserDateTime.Declare

'get price group
F.Intrinsic.String.Build("Select Rtrim(PriceGroupID) as PriceGroupID from Gab_6559_Customer_Xref where SHIP_KEY = '{0}'",V.Global.sShipToID.PSQLFriendly,V.Local.sSQL)
F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sPricegroupID)


'F.Intrinsic.String.Build("select RTRIM(PriceGroupID) PriceGroupID, RTRIM(A.ServiceID) as ServiceID, RTRIM(B.Description) as Description, A.Price, A.PricePriority, A.ItemQuantityBasedFlag from GAB_6559_Price_Code A left join GAB_6559_Service B on A.ServiceID = B.ServiceID where PriceGroupID = '{0}'",V.Local.sPricegroupID,V.Local.sSQL)
F.Intrinsic.String.Build("select RTRIM(PriceGroupID) PriceGroupID, RTRIM(A.ServiceID) as ServiceID, RTRIM(B.Description) as Description, A.Price, A.PricePriority, A.ItemQuantityBasedFlag from GAB_6559_Price_Code A left join GAB_6559_Service B on A.ServiceID = B.ServiceID where PriceGroupID = '{0}' Union Select '' as PriceGroupID, RTRIM(ServiceID) as ServiceID, RTRIM(Description) as Description, Cast(0 as Double) as Price, Cast(0 as Double) as PricePriority, cast(0 as bit) as ItemQuantityBasedFlag from GAB_6559_Service order by PricegroupID DESC",V.Local.sPricegroupID,V.Local.sSQL)
'V.Local.sSQL.Set("select RTRIM(SHIP_KEY) as SHIP_KEY, RTRIM(CUSTOMER_NAME) as CUSTOMER_NAME, RTRIM(PriceGroupID) as PriceGroupID from GAB_6559_Customer_Xref")
'Split Column Names into an array (*!* delimited string)
F.Intrinsic.String.Split("PriceGroupID*!*ServiceID*!*Description*!*Price*!*PricePrio*!*ItemQuantityBasedFlag","*!*",V.Local.sCol)
'Split Column widths into an array (*!* delimited string)
F.Intrinsic.String.Split("700*!*700*!*2000*!*600*!*600*!*400","*!*",V.Local.sColW)
F.Intrinsic.UI.Browser("Service Line Browser","Conx",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")

	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	'Add a line into the GAB_6559_Quote_Lines table, then refresh the quote lines gv
	
	'get next line number
	F.Intrinsic.String.Build("select MAX(QuoteItemID) from GAB_6559_Quote_Lines where QHID = {0}",V.Global.iQHID,V.Local.sSQL)
	F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.fLine)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
		V.Local.fLine.Set(0)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Math.Add(V.Local.fLine,1,V.Local.fLine)
	
	F.Intrinsic.Control.If(V.Local.sRet(5),=,"False")
		V.Local.sItmQtyFlag.Set("0")
	F.Intrinsic.Control.Else
		V.Local.sItmQtyFlag.Set("1")
	F.Intrinsic.Control.EndIf
	
	V.Local.dUserDateTime.Set(V.Ambient.Now)
	
	F.Intrinsic.String.Build("Insert into GAB_6559_Quote_Lines (QuoteID,ServiceID,QuoteItemID,UnitPrice,UnitPricePriority,ItemQuantityBasedFlag,SurchargeExempt,SysUserLastAccess,SysUserLastAccessDateTime,QHID) Values ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}')",V.Global.sQuoteID,V.Local.sRet(1),V.Local.fLine,V.Local.sRet(3),V.Local.sRet(4),V.Local.sItmQtyFlag,"0",V.Caller.User,V.Local.dUserDateTime.PervasiveDate,V.Global.iQHID,V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	
	F.Intrinsic.Control.CallSub(Load_QuoteLines,"QHID",V.Global.iQHID)
F.Intrinsic.Control.EndIf


'Get next line number


' then update the grid and GAB_6559_Quote_Lines.

'Refresh Grid

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdAllocate_Click.End

Program.Sub.cmdRemove_Click.Start
V.Local.sRet.Declare
V.Local.iCnt.Declare
v.Local.sQID.Declare
V.Local.sSQL.Declare

F.Intrinsic.Control.Try

'Warn the user with a msgbox the delete from the  
F.Intrinsic.ui.Msgbox("Are you sure you would like to delete the selected quote lines?","Delete","4",V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

'loop backwards through dtquotelines and delete formt he DB table and the local DT
F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtQuoteLines.RowCount--,1)
	F.Intrinsic.Control.If(V.DataTable.dtQuoteLines(V.Local.iCnt).Sel!fieldval,=,"True")
		v.Local.sQID.Set(V.DataTable.dtQuoteLines(V.Local.iCnt).QID!Fieldval)
		F.Intrinsic.String.Build("Delete from GAB_6559_Quote_Lines where QID = '{0}'",V.Local.sQID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iCnt)


F.Intrinsic.Control.CallSub(Load_QuoteLines,"QHID",V.Global.iQHID)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdRemove_Click.End

Program.Sub.GsQuoteLines_CellValueChanged.Start
F.Intrinsic.Control.Try
V.Local.sQID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.fRet.Declare
V.Local.sBit.Declare
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)

gui.FormQuote.GsQuoteLines.GetCellValueByColumnName("gvQuoteLines","QID",V.Args.RowIndex,V.Local.sQID)
F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
		
	F.Intrinsic.Control.Case("UNITPRICE")
		'Update UnitPricePriority based on Unit Price
		F.Intrinsic.Math.Mult(V.Args.Value,0.5,V.Local.fRet)
		F.Data.Datatable.SetValue("dtQuoteLines",V.Args.RowIndex,"UNITPRICEPRIORITY",V.Local.fRet)
		
		F.Intrinsic.String.Build("Update GAB_6559_Quote_Lines Set UnitPrice = '{0}', UnitPricePriority = '{1}', SysUserLastAccessDateTime = '{2}', SysUserLastAccess = '{3}' where QID = '{4}'",V.Args.Value,V.Local.fRet,V.Local.sNow,V.Caller.User,V.Local.sQID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("UNITPRICEPRIORITY")
		'incase they want to upadte the prio price individually...
		F.Intrinsic.String.Build("Update GAB_6559_Quote_Lines Set UnitPricePriority = '{0}', SysUserLastAccessDateTime = '{1}', SysUserLastAccess = '{2}' where QID = '{3}'",V.Args.Value,V.Local.sNow,V.Caller.User,V.Local.sQID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("SURCHARGEEXEMPT")
		F.Intrinsic.Control.If(V.Args.Value,=,"True")
			V.Local.sBit.Set("1")
		F.Intrinsic.Control.Else
			V.Local.sBit.Set("0")
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.String.Build("Update GAB_6559_Quote_Lines Set SURCHARGEEXEMPT = '{0}', SysUserLastAccessDateTime = '{1}', SysUserLastAccess = '{2}' where QID = '{3}'",V.Local.sBit,V.Local.sNow,V.Caller.User,V.Local.sQID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)		
		
		
	F.Intrinsic.Control.Case("ITEMQUANTITYBASEDFLAG")
		F.Intrinsic.Control.If(V.Args.Value,=,"True")
			V.Local.sBit.Set("1")
		F.Intrinsic.Control.Else
			V.Local.sBit.Set("0")
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.String.Build("Update GAB_6559_Quote_Lines Set ITEMQUANTITYBASEDFLAG = '{0}', SysUserLastAccessDateTime = '{1}', SysUserLastAccess = '{2}' where QID = '{3}'",V.Local.sBit,V.Local.sNow,V.Caller.User,V.Local.sQID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
		
		
F.Intrinsic.Control.EndSelect
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.GsQuoteLines_CellValueChanged.End

Program.Sub.GsQuoteLines_RowCellClick.Start
F.Intrinsic.Control.Try
V.Local.sQID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare

gui.FormQuote.GsQuoteLines.GetCellValueByColumnName("gvQuoteLines","QID",V.Args.RowIndex,V.Local.sQID)
gui.FormQuote.txtQID.Text(V.Local.sQID)

'F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
	
	'Not currently using this.... might not ever
	'F.Intrinsic.Control.Case("SERVICEID")
		'Show Look up for Service ID from Price group
		
'F.Intrinsic.Control.EndSelect
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry

Program.Sub.GsQuoteLines_RowCellClick.End

Program.Sub.ClearQuoteHeaderBoxes.Start
F.Intrinsic.Control.Try

gui.FormQuote.txtQuoteID.Text("")
gui.FormQuote.txtCustID.Text("")
gui.FormQuote.txtShipToID.Text("")
gui.FormQuote.txtCustRef.Text("")
gui.FormQuote.txtContactID.Text("")
'gui.FormQuote.txtAddressID.Text("")
gui.FormQuote.txtQuotedBy.Text("")
gui.FormQuote.txtINTDescription.Text("")
gui.FormQuote.dtpValidFrom.Value(V.Ambient.Now)
gui.FormQuote.dtpValidTo.Value(V.Ambient.Now)
gui.FormQuote.txtEstimate.Text("")
gui.FormQuote.txtAcceptedFlag.Text("")
gui.FormQuote.txtLastAccessUser.Text("")
gui.FormQuote.txtLastAccessDateTime.Text("")
Gui.FormQuote.ddlContact.ClearItems

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ClearQuoteHeaderBoxes.End

Program.Sub.ddlContact_Change.Start
V.Local.iRet.Declare
V.Local.sContactID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare

F.Intrinsic.Control.Try
	F.Data.Dictionary.ReturnKeyFromValue("dictContact",V.Screen.FormQuote!ddlContact.Text,V.Local.iRet)
	gui.FormQuote.txtContactID.Text(V.Local.iRet)
	
	F.Intrinsic.Control.If(V.Local.iRet,<>,-1)
		F.Intrinsic.String.LPad(V.Local.iRet,"0",9,V.Local.sContactID)
		F.Intrinsic.String.Build("select Top 1 RTRIM(PHONE1) from CONTACT Where CUST = '{0}' and ID = '{1}' and TYPE = 'C';",V.Global.sCustID, V.Local.sContactID,V.Local.sSQL)
		F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
		gui.FormQuote.lblTelephoneContact.Caption(V.Local.sRet)
	F.Intrinsic.Control.Else
		gui.FormQuote.lblTelephoneContact.Caption("")
	F.Intrinsic.Control.EndIf
	
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ddlContact_Change.End

Program.Sub.ddlAccepted_Change.Start
V.Local.iRet.Declare
V.Local.sContactID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sText.Declare
F.Intrinsic.Control.Try

	V.Local.sText.Set(V.Screen.FormQuote!ddlAccepted.Text)
	
	F.Intrinsic.Control.If(V.Local.sText,=,"Accepted")
		gui.FormQuote.txtAcceptedFlag.Text("A")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Local.sText,=,"Unspecified")
		gui.FormQuote.txtAcceptedFlag.Text("U")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Local.sText,=,"Rejected")
		gui.FormQuote.txtAcceptedFlag.Text("N")
	F.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ddlAccepted_Change.End

#End Region ' Quote Form

#Region "Tab Employee/ORG"
'Employee Tab
Program.Sub.Load_Employee.Start
f.Intrinsic.Control.Try
	V.Local.sBegDate.Declare
	V.Local.sEndDate.Declare
	V.Local.dBegDate.Declare
	V.Local.dEndDate.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.local.iCnt.Declare
	v.Local.sSerialize.Declare
	v.Local.sProgrammedBy.Declare
	V.Local.bExists.Declare
	
	f.Intrinsic.Control.If(v.DataTable.dtEmployee.Exists)
		f.Data.DataTable.Close("dtEmployee")
		gui.Form.gsEmployee.ClearRows("gvEmployee")		
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictOrg",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictOrg")
	f.Intrinsic.Control.EndIf
	
	'EmployeeID
	'OrgDivisionID
	'FirstName
	'LastName
	'CeasedEmployment
	'SysUserLastAccess
	'SysUserLastAccessDateTime
	
	
	F.Intrinsic.String.Build("select EmployeeID, RTRIM(OrgDivisionID) as OrgDivisionID, '' as OrgDivision,  RTRIM(FirstName) as FirstName, RTRIM(LastName) as LastName, CeasedEmployment, SysUserLastAccess, SysUserLastAccessDateTime from GAB_6559_Employee order by EmployeeID Desc",v.Local.sProgrammedBy,V.Local.sSQL)
	F.Data.Datatable.CreateFromSQL("dtEmployee","conx",V.Local.sSQL,True)
	
	'Filling in Customer Ship to Name from GAB_6559_Customer_Xref
	F.Data.Dictionary.CreateFromSQL("dictOrg","Conx","Select OrgDivisionID, RTRIM(Description) as Description FROM GAB_6559_OrgDivision")
	F.Data.Dictionary.SetDefaultReturn("dictOrg","")
	F.Data.DataTable.FillFromDictionary("dtEmployee","dictOrg","OrgDivisionID","OrgDivision")
	'F.Data.Dictionary.Close("dicOrg")
	
	gui.Form.gsEmployee.AddGridviewFromDatatable("gvEmployee","dtEmployee")
	
	f.Intrinsic.Control.CallSub(Format_Employee)
	
	gui.Form.gsEmployee.MainView("gvEmployee")		
	gui.Form.tab5.SetTab(0)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Load_Employee.End

Program.Sub.Format_Employee.Start
F.Intrinsic.Control.Try
	V.Local.sSql.Declare
	V.Local.sProp.Declare
	v.Local.sValue.Declare	
	V.Local.iRet.Declare
	V.Local.iCnt.Declare
	v.Local.sValue2.Declare
	v.Local.sValue3.Declare
	
	gui.Form.gsEmployee.SuspendLayout()
	
	gui.Form.gsEmployee.SetGridViewProperty("gvEmployee","MultiSelect",False)
	gui.Form.gsEmployee.SetGridViewProperty("gvEmployee","AllowSort",True)
	gui.Form.gsEmployee.SetGridViewProperty("gvEmployee","AllowFilter",True)
	gui.Form.gsEmployee.SetGridViewProperty("gvEmployee","OptionsDetailShowDetailTabs",False)
	gui.Form.gsEmployee.SetGridViewProperty("gvEmployee","OptionsViewShowGroupPanel",True)
	gui.Form.gsEmployee.SetGridViewProperty("gvEmployee","EnableAppearanceOddRow",True)
	gui.Form.gsEmployee.SetGridviewProperty("gvEmployee",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.gsEmployee.SetGridviewProperty("gvEmployee","OptionsViewColumnAutoWidth",False)
	gui.Form.gsEmployee.SetGridviewProperty("gvEmployee","AllowColumnResizing",True)	
	gui.Form.gsEmployee.SetGridviewProperty("gvEmployee","ColumnPanelRowHeight","50")
	gui.Form.gsEmployee.SetGridviewProperty("gvEmployee",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.Form.gsEmployee.SetGridviewProperty("gvEmployee", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_Employee,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Employee,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Employee,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_Employee,"sProp","HeaderVAlignment","sValue","Top")
	
	
	'EmployeeID
	'OrgDivision
	'FirstName
	'LastName
	'CeasedEmployment
	'SysUserLastAccess
	'SysUserLastAccessDateTime
	'OrgDivision
	
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","OrgDivisionID",v.Enum.ColumnPropertyNames!Visible,False)
'	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","CustomerContactID",v.Enum.ColumnPropertyNames!Visible,False)
'	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","CustomerAddressID",v.Enum.ColumnPropertyNames!Visible,False)
	

	v.Local.sProp.Set("VisibleIndex")
	v.Local.iCnt.Set(-1)	
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","EmployeeID",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","FirstName",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","LastName",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","OrgDivision",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","CeasedEmployment",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","SysUserLastAccess",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","SysUserLastAccessDateTime",v.Local.sProp,v.Local.iCnt.++)
	

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","EmployeeID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","OrgDivisionID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","FirstName",v.Local.sProp,v.Local.sValue)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","LastName",v.Local.sProp,v.Local.sValue)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","OrgDivision",v.Local.sProp,v.Local.sValue)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","CeasedEmployment",v.Local.sProp,v.Local.sValue2)	
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","SysUserLastAccess",v.Local.sProp,v.Local.sValue)	
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)	

	
	v.Local.sProp.Set("CellHAlignment")
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","EmployeeID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","OrgDivisionID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","FirstName",v.Local.sProp,v.Local.sValue)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","LastName",v.Local.sProp,v.Local.sValue)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","OrgDivision",v.Local.sProp,v.Local.sValue)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","CeasedEmployment",v.Local.sProp,v.Local.sValue2)	
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","SysUserLastAccess",v.Local.sProp,v.Local.sValue)	
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)

	
	v.Local.sProp.Set("Caption")
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","EmployeeID",v.Local.sProp,"Employee ID")
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","OrgDivisionID",v.Local.sProp,"OrgDivision ID")
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","OrgDivision",v.Local.sProp,"OrgDivision")
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","FirstName",v.Local.sProp,"First Name")
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","LastName",v.Local.sProp,"Last Name")
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","CeasedEmployment",v.Local.sProp,"Ceased Employment")
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","SysUserLastAccess",v.Local.sProp,"SysUser LastAccess")	
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","SysUserLastAccessDateTime",v.Local.sProp,"SysUser LastAccess Date Time")
	

			
	
	v.Local.sProp.Set("Width")
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","EmployeeID",v.Local.sProp,"75")
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","OrgDivisionID",v.Local.sProp,"100")
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","OrgDivision",v.Local.sProp,"125")
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","FirstName",v.Local.sProp,"150")
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","LastName",v.Local.sProp,"150")
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","CeasedEmployment",v.Local.sProp,"75")
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","SysUserLastAccess",v.Local.sProp,"150")	
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","SysUserLastAccessDateTime",v.Local.sProp,"150")
	
	
'	For RowCellClick and CellValueChanged
	v.Local.sProp.Set("AllowEdit")
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","EmployeeID",v.Local.sProp,False)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","OrgDivisionID",v.Local.sProp,False)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","OrgDivision",v.Local.sProp,True)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","FirstName",v.Local.sProp,True)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","LastName",v.Local.sProp,True)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","CeasedEmployment",v.Local.sProp,True)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","SysUserLastAccess",v.Local.sProp,False)	
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","SysUserLastAccessDateTime",v.Local.sProp,False)
		

	v.Local.sProp.Set("ReadOnly")
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","EmployeeID",v.Local.sProp,True)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","OrgDivisionID",v.Local.sProp,True)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","OrgDivision",v.Local.sProp,False)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","FirstName",v.Local.sProp,False)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","LastName",v.Local.sProp,False)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","CeasedEmployment",v.Local.sProp,False)	
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","SysUserLastAccess",v.Local.sProp,True)	
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","SysUserLastAccessDateTime",v.Local.sProp,True)	
	
	'Gui.Form.gsEmployee.SetColumnProperty("gvEmployee","EmployeeID",V.Enum.ColumnPropertyNames!IsHyperlink,True)
	
	'BackForeColor
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("LightYellow")
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","FirstName",v.Local.sProp,v.Local.sValue)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","LastName",v.Local.sProp,v.Local.sValue)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","CeasedEmployment",v.Local.sProp,v.Local.sValue)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","OrgDivision",v.Local.sProp,v.Local.sValue)
	
	
	'Making OrgDivision a DDL
	V.Local.sSql.Set("Select RTRIM(Description) as Description FROM GAB_6559_OrgDivision")
	F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSql,V.Local.sSql)
	F.Intrinsic.String.Replace(V.Local.sSql,"#$#","*!*",V.Local.sSql)
	Gui.Form.gsEmployee.ColumnEdit("gvEmployee","OrgDivision","Dropdownlist",V.Local.sSql)

	gui.Form.gsEmployee.ResumeLayout()
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Format_Employee.End

Program.Sub.Bulk_Format_Employee.Start
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","EmployeeID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","OrgDivisionID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","OrgDivision",v.Args.sProp,v.Args.sValue)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","FirstName",v.Args.sProp,v.Args.sValue)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","LastName",v.Args.sProp,v.Args.sValue)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","CeasedEmployment",v.Args.sProp,v.Args.sValue)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","SysUserLastAccess",v.Args.sProp,v.Args.sValue)
	gui.Form.gsEmployee.SetColumnProperty("gvEmployee","SysUserLastAccessDateTime",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_Employee.End

Program.Sub.gsEmployee_CellValueChanged.Start
F.Intrinsic.Control.Try
V.Local.iEmployeeID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sValue.Declare
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
V.Local.sOrgDivID.Declare

F.Intrinsic.Control.BlockEvents
'gui.Form.gsEmployee.Visible(False)

Gui.Form.gsEmployee.GetCellValueByColumnName("gvEmployee","EmployeeID",V.Args.RowIndex,V.Local.iEmployeeID)

F.Intrinsic.Control.SelectCase(V.Args.column.UCase)

	F.Intrinsic.Control.Case("FIRSTNAME")
		V.Local.sValue.Set(V.Args.Value)
		
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Employee set FirstName = '{0}', SysUserLastAccess = '{1}', SysUserLastAccessDateTime = '{2}'  where EmployeeID = '{3}'",V.Local.sValue.PSQLFriendly,V.Caller.User,V.Local.sNow,V.Local.iEmployeeID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	
	F.Intrinsic.Control.Case("LASTNAME")
		V.Local.sValue.Set(V.Args.Value)
		
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Employee set LastName = '{0}', SysUserLastAccess = '{1}', SysUserLastAccessDateTime = '{2}'  where EmployeeID = '{3}'",V.Local.sValue.PSQLFriendly,V.Caller.User,V.Local.sNow,V.Local.iEmployeeID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
		
	F.Intrinsic.Control.Case("CEASEDEMPLOYMENT")		
		F.Intrinsic.Control.If(V.Args.value)
			V.Local.sValue.Set("1")
		F.Intrinsic.Control.Else
			V.Local.sValue.Set("0")
		F.Intrinsic.Control.EndIf
		
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Employee set CeasedEmployment = '{0}', SysUserLastAccess = '{1}', SysUserLastAccessDateTime = '{2}'  where EmployeeID = '{3}'",V.Local.sValue,V.Caller.User,V.Local.sNow,V.Local.iEmployeeID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("ORGDIVISION")
		F.Data.Dictionary.ReturnKeyFromValue("dictOrg",V.Args.Value,V.Local.sOrgDivID)
		
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Employee set OrgDivisionID = '{0}', SysUserLastAccess = '{1}', SysUserLastAccessDateTime = '{2}'  where EmployeeID = '{3}'",V.Local.sOrgDivID,V.Caller.User,V.Local.sNow,V.Local.iEmployeeID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
F.Intrinsic.Control.EndSelect

'gui.Form.gsEmployee.Visible(True)
F.Intrinsic.Control.UnBlockEvents

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsEmployee_CellValueChanged.End

Program.Sub.ac5_ElementClick.Start
f.Intrinsic.Control.Try
	v.Local.iRet.Declare
	v.Local.sRet.Declare
	v.Local.bAuth.Declare
	V.Local.sCustomerKey.Declare
	V.Local.sQHID.Declare
	V.Local.sNow.Declare
	V.Local.sMsg.Declare
	V.Local.sSQL.Declare
	V.Local.sOrg.Declare
	V.Local.iCnt.Declare
	F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
	
	'This will prevent from multi-clicking too fast the button
	f.Intrinsic.Control.If(v.Global.bLoading)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bLoading.Set(True)	
	
	gui.Form.lblPleasewait.Visible(True)
	gui.Form.lblpleasewait.Text("Please wait ...")		
	
	f.Intrinsic.Control.SelectCase(v.Args.ElementID.UCase)
		f.Intrinsic.Control.Case("SERVICEWEB")
			F.Intrinsic.Task.ShellExec(0,"Open","https://www.gss-service.com/","","",0)	
			
		f.Intrinsic.Control.Case("ADDLINE")
			F.Intrinsic.String.Build("Are you sure you would like to create a new Employee?{0}A new line will apear at the top of the grid.",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"New Employee","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				gui.Form.lblPleasewait.Visible(False)
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.String.Build("Insert Into GAB_6559_Employee (FirstName,LastName,CeasedEmployment,SysUserLastAccess,SysUserLastAccessDateTime,OrgDivisionID) Values ('FirstName','{0}','0','{1}','{2}','5')",V.Local.sNow,V.Caller.User,V.Local.sNow,V.Local.sSQL)
			F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			F.Intrinsic.Control.CallSub(Load_Employee)
			
		f.Intrinsic.Control.Case("ADDORG")
			F.Intrinsic.String.Build("Are you sure you would like to create a new Division?{0}A new line will apear at the bottom of the grid.",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"New Division","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				gui.Form.lblPleasewait.Visible(False)
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.String.Build("Insert Into GAB_6559_OrgDivision (Description,SysUserLastAccess,SysUserLastAccessDateTime) Values ('{0}','{1}','{2}')",V.Local.sNow,V.Caller.User,V.Local.sNow,V.Local.sSQL)
			F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			F.Intrinsic.Control.CallSub(Load_Org)
		
		f.Intrinsic.Control.Case("DELETEORG")
			'Make sure the user actually wants to delete.
			F.Intrinsic.String.Build("Are you sure you would like to delete the selected Divisions?{0}You will only be able to delete the Divisions not in use on an Employee.",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"Delete Org","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				gui.Form.lblPleasewait.Visible(False)
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'Filter down to selected rows.
			F.Data.DataView.Create("dtOrg","dvOrg",22,"SELECT = True","")
			F.Data.DataView.ToDataTable("dtOrg","dvOrg","dtDelete",True)
			F.Data.DataView.Close("dtOrg","dvOrg")
			
			'Find serviceIDs that are in use
			F.Data.Datatable.AddColumn("dtDelete","Inuse","Boolean",False)
			F.Data.Dictionary.CreateFromSQL("dictInUse","conx","select RTRIM(OrgDivisionID) as OrgDivisionID, Cast(1 as bit) From GAB_6559_Employee")
			F.Data.DataTable.FillFromDictionary("dtDelete","dictInUse","OrgDivisionID","Inuse")
			F.Data.Dictionary.Close("dictInUse")
			
			'Check if serviceID is in use then delete...
			F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtDelete.RowCount--,1)
				V.Local.sOrg.Set(V.DataTable.dtDelete(v.Local.iCnt).OrgDivisionID!FieldVal)
				F.Intrinsic.Control.If(V.DataTable.dtDelete(v.Local.iCnt).Inuse!FieldVal)
					F.Intrinsic.String.Build("Org/Division in use on an Employee, cannot delete!{0}{1}",V.Ambient.NewLine,V.Local.sOrg,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("Delete From GAB_6559_OrgDivision where OrgDivisionID = '{0}'",V.Local.sOrg.PSQLFriendly,V.Local.sSQL)
					F.ODBC.Connection!conx.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.iCnt)
			F.Data.Datatable.Close("dtDelete")
			F.Intrinsic.Control.CallSub(Load_Org)
			
	f.Intrinsic.Control.EndSelect
	
	gui.Form.lblPleasewait.Visible(False)	
	v.Global.bLoading.Set(False)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ac5_ElementClick.End

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'ORG Tab
Program.Sub.Load_Org.Start
f.Intrinsic.Control.Try
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	v.Local.sProgrammedBy.Declare
	
	f.Intrinsic.Control.If(v.DataTable.dtOrg.Exists)
		f.Data.DataTable.Close("dtOrg")
		gui.Form.gsOrg.ClearRows("gvOrg")		
	f.Intrinsic.Control.EndIf
	
	
	'OrgDivisionID
	'Description
	'SysUserLastAccess
	'SysUserLastAccessDateTime
	
	
	F.Intrinsic.String.Build("select OrgDivisionID, RTRIM(Description) as Description, SysUserLastAccess, SysUserLastAccessDateTime from GAB_6559_OrgDivision",v.Local.sProgrammedBy,V.Local.sSQL)
	F.Data.Datatable.CreateFromSQL("dtOrg","conx",V.Local.sSQL,True)
	F.Data.Datatable.AddColumn("dtOrg","SELECT","Boolean",False)
	gui.Form.gsOrg.AddGridviewFromDatatable("gvOrg","dtOrg")
	
	f.Intrinsic.Control.CallSub(Format_Org)
	
	gui.Form.gsOrg.MainView("gvOrg")		
	gui.Form.tab5.SetTab(1)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Load_Org.End

Program.Sub.Format_Org.Start
F.Intrinsic.Control.Try
	V.Local.sSql.Declare
	V.Local.sProp.Declare
	v.Local.sValue.Declare	
	V.Local.iRet.Declare
	V.Local.iCnt.Declare
	v.Local.sValue2.Declare
	v.Local.sValue3.Declare
	
	gui.Form.gsOrg.SuspendLayout()
	
	gui.Form.gsOrg.SetGridViewProperty("gvOrg","MultiSelect",False)
	gui.Form.gsOrg.SetGridViewProperty("gvOrg","AllowSort",True)
	gui.Form.gsOrg.SetGridViewProperty("gvOrg","AllowFilter",True)
	gui.Form.gsOrg.SetGridViewProperty("gvOrg","OptionsDetailShowDetailTabs",False)
	gui.Form.gsOrg.SetGridViewProperty("gvOrg","OptionsViewShowGroupPanel",True)
	gui.Form.gsOrg.SetGridViewProperty("gvOrg","EnableAppearanceOddRow",True)
	gui.Form.gsOrg.SetGridviewProperty("gvOrg",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.gsOrg.SetGridviewProperty("gvOrg","OptionsViewColumnAutoWidth",False)
	gui.Form.gsOrg.SetGridviewProperty("gvOrg","AllowColumnResizing",True)	
	gui.Form.gsOrg.SetGridviewProperty("gvOrg","ColumnPanelRowHeight","50")
	gui.Form.gsOrg.SetGridviewProperty("gvOrg",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.Form.gsOrg.SetGridviewProperty("gvOrg", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_Org,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Org,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Org,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_Org,"sProp","HeaderVAlignment","sValue","Top")
	
	
	'OrgDivisionID
	'Description
	'SysUserLastAccess
	'SysUserLastAccessDateTime	

	v.Local.sProp.Set("VisibleIndex")
	v.Local.iCnt.Set(-1)	
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SELECT",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsOrg.SetColumnProperty("gvOrg","OrgDivisionID",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsOrg.SetColumnProperty("gvOrg","Description",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SysUserLastAccess",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SysUserLastAccessDateTime",v.Local.sProp,v.Local.iCnt.++)
	

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsOrg.SetColumnProperty("gvOrg","OrgDivisionID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsOrg.SetColumnProperty("gvOrg","Description",v.Local.sProp,v.Local.sValue)
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SysUserLastAccess",v.Local.sProp,v.Local.sValue)	
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)	

	
	v.Local.sProp.Set("CellHAlignment")
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsOrg.SetColumnProperty("gvOrg","OrgDivisionID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsOrg.SetColumnProperty("gvOrg","Description",v.Local.sProp,v.Local.sValue)	
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SysUserLastAccess",v.Local.sProp,v.Local.sValue)	
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)

	
	v.Local.sProp.Set("Caption")
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SELECT",v.Local.sProp,"Select")
	gui.Form.gsOrg.SetColumnProperty("gvOrg","OrgDivisionID",v.Local.sProp,"OrgDivision ID")
	gui.Form.gsOrg.SetColumnProperty("gvOrg","Description",v.Local.sProp,"Description")
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SysUserLastAccess",v.Local.sProp,"SysUser LastAccess")	
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SysUserLastAccessDateTime",v.Local.sProp,"SysUser LastAccess Date Time")
	

	v.Local.sProp.Set("Width")
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SELECT",v.Local.sProp,"75")
	gui.Form.gsOrg.SetColumnProperty("gvOrg","OrgDivisionID",v.Local.sProp,"100")
	gui.Form.gsOrg.SetColumnProperty("gvOrg","Description",v.Local.sProp,"150")
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SysUserLastAccess",v.Local.sProp,"150")	
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SysUserLastAccessDateTime",v.Local.sProp,"150")
	
	
	v.Local.sProp.Set("AllowEdit")
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SELECT",v.Local.sProp,True)
	gui.Form.gsOrg.SetColumnProperty("gvOrg","OrgDivisionID",v.Local.sProp,False)
	gui.Form.gsOrg.SetColumnProperty("gvOrg","Description",v.Local.sProp,True)
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SysUserLastAccess",v.Local.sProp,False)	
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SysUserLastAccessDateTime",v.Local.sProp,False)
		

	v.Local.sProp.Set("ReadOnly")
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SELECT",v.Local.sProp,False)
	gui.Form.gsOrg.SetColumnProperty("gvOrg","OrgDivisionID",v.Local.sProp,True)
	gui.Form.gsOrg.SetColumnProperty("gvOrg","Description",v.Local.sProp,False)
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SysUserLastAccess",v.Local.sProp,True)	
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SysUserLastAccessDateTime",v.Local.sProp,True)	
	
	'Gui.Form.gsOrg.SetColumnProperty("gvOrg","OrgID",V.Enum.ColumnPropertyNames!IsHyperlink,True)
	
	'BackForeColor
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("LightYellow")
	gui.Form.gsOrg.SetColumnProperty("gvOrg","Description",v.Local.sProp,v.Local.sValue)


	gui.Form.gsOrg.ResumeLayout()
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Format_Org.End

Program.Sub.Bulk_Format_Org.Start
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SELECT",v.Args.sProp,v.Args.sValue)
	gui.Form.gsOrg.SetColumnProperty("gvOrg","OrgDivisionID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsOrg.SetColumnProperty("gvOrg","Description",v.Args.sProp,v.Args.sValue)
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SysUserLastAccess",v.Args.sProp,v.Args.sValue)
	gui.Form.gsOrg.SetColumnProperty("gvOrg","SysUserLastAccessDateTime",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_Org.End

Program.Sub.gsOrg_CellValueChanged.Start
F.Intrinsic.Control.Try
V.Local.iOrgDivisionID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sValue.Declare
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)

F.Intrinsic.Control.BlockEvents
Gui.Form.gsOrg.GetCellValueByColumnName("gvOrg","OrgDivisionID",V.Args.RowIndex,V.Local.iOrgDivisionID)

F.Intrinsic.Control.SelectCase(V.Args.column.UCase)

	F.Intrinsic.Control.Case("DESCRIPTION")
		V.Local.sValue.Set(V.Args.Value)
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_OrgDivision set Description = '{0}', SysUserLastAccess = '{1}', SysUserLastAccessDateTime = '{2}'  where OrgDivisionID = '{3}'",V.Local.sValue.PSQLFriendly,V.Caller.User,V.Local.sNow,V.Local.iOrgDivisionID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.UnBlockEvents

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsOrg_CellValueChanged.End

Program.Sub.tab5_Click.Start
v.Local.sValue.Declare
v.Local.sValue.Set(v.Screen.Form!tab5.tab)

'This will prevent from multi-clicking too fast the button
f.Intrinsic.Control.If(v.Global.bLoading)
	f.Intrinsic.Control.ExitSub
f.Intrinsic.Control.EndIf
v.Global.bLoading.Set(True)

F.Intrinsic.Control.SelectCase(V.Local.sValue)
F.Intrinsic.Control.Case("0")
	'Load Employee Tab
	F.Intrinsic.Control.CallSub(Load_Employee)
	
F.Intrinsic.Control.Case("1")
	'Load Org Division tab
	F.Intrinsic.Control.CallSub(Load_Org)
	
F.Intrinsic.Control.EndSelect

v.Global.bLoading.Set(False)

Program.Sub.tab5_Click.End

#End Region ' Tab Employee/ORG

#Region "Tab Resource"
Program.Sub.Load_Resource.Start
f.Intrinsic.Control.Try
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.local.iCnt.Declare
	v.Local.sProgrammedBy.Declare
	V.Local.bExists.Declare
	
	f.Intrinsic.Control.If(v.DataTable.dtResource.Exists)
		f.Data.DataTable.Close("dtResource")
		gui.Form.gsResource.ClearRows("gvResource")		
	f.Intrinsic.Control.EndIf

	F.Intrinsic.String.Build("select JobResourceID, RTRIM(SmallDesc) as SmallDesc, RTRIM(Description) as Description, RetiredFlag from GAB_6559_Job_Resource order by JobResourceID Desc",v.Local.sProgrammedBy,V.Local.sSQL)
	F.Data.Datatable.CreateFromSQL("dtResource","conx",V.Local.sSQL,True)
	F.Data.Datatable.AddColumn("dtResource","SELECT","Boolean",False)
	
	gui.Form.gsResource.AddGridviewFromDatatable("gvResource","dtResource")
	f.Intrinsic.Control.CallSub(Format_Resource)
	gui.Form.gsResource.MainView("gvResource")		
	gui.Form.tab6.SetTab(0)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Load_Resource.End

Program.Sub.Format_Resource.Start
F.Intrinsic.Control.Try
	V.Local.sSql.Declare
	V.Local.sProp.Declare
	v.Local.sValue.Declare	
	V.Local.iRet.Declare
	V.Local.iCnt.Declare
	v.Local.sValue2.Declare
	v.Local.sValue3.Declare
	
	gui.Form.gsResource.SuspendLayout()
	
	gui.Form.gsResource.SetGridViewProperty("gvResource","MultiSelect",False)
	gui.Form.gsResource.SetGridViewProperty("gvResource","AllowSort",True)
	gui.Form.gsResource.SetGridViewProperty("gvResource","AllowFilter",True)
	gui.Form.gsResource.SetGridViewProperty("gvResource","OptionsDetailShowDetailTabs",False)
	gui.Form.gsResource.SetGridViewProperty("gvResource","OptionsViewShowGroupPanel",True)
	gui.Form.gsResource.SetGridViewProperty("gvResource","EnableAppearanceOddRow",True)
	gui.Form.gsResource.SetGridviewProperty("gvResource",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.gsResource.SetGridviewProperty("gvResource","OptionsViewColumnAutoWidth",False)
	gui.Form.gsResource.SetGridviewProperty("gvResource","AllowColumnResizing",True)	
	gui.Form.gsResource.SetGridviewProperty("gvResource","ColumnPanelRowHeight","50")
	gui.Form.gsResource.SetGridviewProperty("gvResource",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.Form.gsResource.SetGridviewProperty("gvResource", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_Resource,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Resource,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Resource,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_Resource,"sProp","HeaderVAlignment","sValue","Top")
	
	
	'JobResourceID
	'SmallDesc
	'Description
	'RetiredFlag


	v.Local.sProp.Set("VisibleIndex")
	v.Local.iCnt.Set(-1)	
	gui.Form.gsResource.SetColumnProperty("gvResource","SELECT",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsResource.SetColumnProperty("gvResource","JobResourceID",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsResource.SetColumnProperty("gvResource","SmallDesc",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsResource.SetColumnProperty("gvResource","Description",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsResource.SetColumnProperty("gvResource","RetiredFlag",v.Local.sProp,v.Local.iCnt.++)


	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.Form.gsResource.SetColumnProperty("gvResource","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsResource.SetColumnProperty("gvResource","JobResourceID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsResource.SetColumnProperty("gvResource","SmallDesc",v.Local.sProp,v.Local.sValue)
	gui.Form.gsResource.SetColumnProperty("gvResource","Description",v.Local.sProp,v.Local.sValue)
	gui.Form.gsResource.SetColumnProperty("gvResource","RetiredFlag",v.Local.sProp,v.Local.sValue2)
	

	
	v.Local.sProp.Set("CellHAlignment")
	gui.Form.gsResource.SetColumnProperty("gvResource","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsResource.SetColumnProperty("gvResource","JobResourceID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsResource.SetColumnProperty("gvResource","SmallDesc",v.Local.sProp,v.Local.sValue)
	gui.Form.gsResource.SetColumnProperty("gvResource","Description",v.Local.sProp,v.Local.sValue)
	gui.Form.gsResource.SetColumnProperty("gvResource","RetiredFlag",v.Local.sProp,v.Local.sValue2)


	
	v.Local.sProp.Set("Caption")
	gui.Form.gsResource.SetColumnProperty("gvResource","SELECT",v.Local.sProp,"Select")
	gui.Form.gsResource.SetColumnProperty("gvResource","JobResourceID",v.Local.sProp,"Job Resource ID")
	gui.Form.gsResource.SetColumnProperty("gvResource","SmallDesc",v.Local.sProp,"Small Desc")
	gui.Form.gsResource.SetColumnProperty("gvResource","Description",v.Local.sProp,"Description")
	gui.Form.gsResource.SetColumnProperty("gvResource","RetiredFlag",v.Local.sProp,"Retired Flag")

	

			
	
	v.Local.sProp.Set("Width")
	gui.Form.gsResource.SetColumnProperty("gvResource","SELECT",v.Local.sProp,"75")
	gui.Form.gsResource.SetColumnProperty("gvResource","JobResourceID",v.Local.sProp,"75")
	gui.Form.gsResource.SetColumnProperty("gvResource","SmallDesc",v.Local.sProp,"125")
	gui.Form.gsResource.SetColumnProperty("gvResource","Description",v.Local.sProp,"175")
	gui.Form.gsResource.SetColumnProperty("gvResource","RetiredFlag",v.Local.sProp,"75")

	
	
'	For RowCellClick and CellValueChanged
	v.Local.sProp.Set("AllowEdit")
	gui.Form.gsResource.SetColumnProperty("gvResource","SELECT",v.Local.sProp,True)
	gui.Form.gsResource.SetColumnProperty("gvResource","JobResourceID",v.Local.sProp,False)
	gui.Form.gsResource.SetColumnProperty("gvResource","SmallDesc",v.Local.sProp,True)
	gui.Form.gsResource.SetColumnProperty("gvResource","Description",v.Local.sProp,True)
	gui.Form.gsResource.SetColumnProperty("gvResource","RetiredFlag",v.Local.sProp,True)

		

	v.Local.sProp.Set("ReadOnly")
	gui.Form.gsResource.SetColumnProperty("gvResource","SELECT",v.Local.sProp,False)
	gui.Form.gsResource.SetColumnProperty("gvResource","JobResourceID",v.Local.sProp,True)
	gui.Form.gsResource.SetColumnProperty("gvResource","SmallDesc",v.Local.sProp,False)
	gui.Form.gsResource.SetColumnProperty("gvResource","Description",v.Local.sProp,False)
	gui.Form.gsResource.SetColumnProperty("gvResource","RetiredFlag",v.Local.sProp,False)

	
	'BackForeColor
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("LightYellow")
	gui.Form.gsResource.SetColumnProperty("gvResource","Description",v.Local.sProp,v.Local.sValue)
	gui.Form.gsResource.SetColumnProperty("gvResource","SmallDesc",v.Local.sProp,v.Local.sValue)
	gui.Form.gsResource.SetColumnProperty("gvResource","RetiredFlag",v.Local.sProp,v.Local.sValue)
	

	gui.Form.gsResource.ResumeLayout()
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Format_Resource.End

Program.Sub.Bulk_Format_Resource.Start
	gui.Form.gsResource.SetColumnProperty("gvResource","SELECT",v.Args.sProp,v.Args.sValue)
	gui.Form.gsResource.SetColumnProperty("gvResource","JobResourceID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsResource.SetColumnProperty("gvResource","SmallDesc",v.Args.sProp,v.Args.sValue)
	gui.Form.gsResource.SetColumnProperty("gvResource","Description",v.Args.sProp,v.Args.sValue)
	gui.Form.gsResource.SetColumnProperty("gvResource","RetiredFlag",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_Resource.End

Program.Sub.ac6_ElementClick.Start
f.Intrinsic.Control.Try
	v.Local.iRet.Declare
	v.Local.sRet.Declare
	v.Local.bAuth.Declare
	V.Local.sCustomerKey.Declare
	V.Local.sQHID.Declare
	V.Local.sNow.Declare
	V.Local.sMsg.Declare
	V.Local.sSQL.Declare
	V.Local.iJobResourceID.Declare
	V.Local.iCnt.Declare
	V.Local.iMaterialID.Declare
	V.Local.iIssueID.Declare
	V.Local.iYardID.Declare
	V.Local.iReworkTypeID.Declare
	
	F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
	
	'This will prevent from multi-clicking too fast the button
	f.Intrinsic.Control.If(v.Global.bLoading)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bLoading.Set(True)	
	
	gui.Form.lblPleasewait.Visible(True)
	gui.Form.lblpleasewait.Text("Please wait ...")		
	
	f.Intrinsic.Control.SelectCase(v.Args.ElementID.UCase)
		f.Intrinsic.Control.Case("SERVICEWEB")
			F.Intrinsic.Task.ShellExec(0,"Open","https://www.gss-service.com/","","",0)	
			
		f.Intrinsic.Control.Case("ADDLINE")
			F.Intrinsic.String.Build("Are you sure you would like to create a new resource?{0}A new line will apear at the Top of the grid.",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"New Resource","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				gui.Form.lblPleasewait.Visible(False)
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.String.Build("Insert Into GAB_6559_Job_Resource (SmallDesc,Description,RetiredFlag) Values ('XXXX','{0}','0')",V.Local.sNow,V.Local.sSQL)
			F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			F.Intrinsic.Control.CallSub(Load_Resource)
			
		f.Intrinsic.Control.Case("DELETELINE")
			'Make sure the user actually wants to delete.
			F.Intrinsic.String.Build("Are you sure you would like to delete the seleced resources?{0}You will only be able to delete the resources not in use on a Job.",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"Delete HeadRack","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				gui.Form.lblPleasewait.Visible(False)
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'Filter down to selected rows.
			F.Data.DataView.Create("dtResource","dvResource",22,"SELECT = True","")
			F.Data.DataView.ToDataTable("dtResource","dvResource","dtDelete",True)
			F.Data.DataView.Close("dtResource","dvResource")
			
			'Find Headracks that Have been used
			F.Data.Datatable.AddColumn("dtDelete","Inuse","Boolean",False)
			F.Data.Dictionary.CreateFromSQL("dictInUse","conx","select JobResourceID, Cast(1 as bit) From GAB_6559_Job_Header")
			F.Data.DataTable.FillFromDictionary("dtDelete","dictInUse","JobResourceID","Inuse")
			F.Data.Dictionary.Close("dictInUse")
			
			'Check if Headrack is in use then delete...
			F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtDelete.RowCount--,1)
				V.Local.iJobResourceID.Set(V.DataTable.dtDelete(v.Local.iCnt).JobResourceID!FieldVal)
				F.Intrinsic.Control.If(V.DataTable.dtDelete(v.Local.iCnt).Inuse!FieldVal)
					F.Intrinsic.String.Build("Org/Division in use on an Employee, cannot delete!{0}{1}",V.Ambient.NewLine,V.Local.iJobResourceID,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("Delete From GAB_6559_Job_Resource where JobResourceID = '{0}'",V.Local.iJobResourceID,V.Local.sSQL)
					F.ODBC.Connection!conx.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.iCnt)
			F.Data.Datatable.Close("dtDelete")
			F.Intrinsic.Control.CallSub(Load_Resource)
			
		f.Intrinsic.Control.Case("ADDMAT")
			F.Intrinsic.String.Build("Are you sure you would like to create a new Material Type?{0}A new line will apear at the bottom of the grid.",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"New Material Type","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				gui.Form.lblPleasewait.Visible(False)
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.String.Build("Insert Into GAB_6559_Material (Description,UnitDescription,UnitAbbreviation) Values ('','kilogram','kg')",V.Local.sNow,V.Local.sSQL)
			F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			F.Intrinsic.Control.CallSub(Load_Material)
			
		f.Intrinsic.Control.Case("DELETEMAT")
			'Make sure the user actually wants to delete.
			F.Intrinsic.String.Build("Are you sure you would like to delete the seleced material types?{0}You will only be able to delete the materials not in use.",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"Delete Material Type","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				gui.Form.lblPleasewait.Visible(False)
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'Filter down to selected rows.
			F.Data.DataView.Create("dtMaterial","dvMaterial",22,"SELECT = True","")
			F.Data.DataView.ToDataTable("dtMaterial","dvMaterial","dtDelete",True)
			F.Data.DataView.Close("dtMaterial","dvMaterial")
			
			'Find Materials that are in use
			F.Data.Datatable.AddColumn("dtDelete","Inuse","Boolean",False)
			F.Data.Dictionary.CreateFromSQL("dictInUse","conx","select MaterialID, Cast(1 as bit) From GAB_6559_Material_Log")
			F.Data.DataTable.FillFromDictionary("dtDelete","dictInUse","MaterialID","Inuse")
			F.Data.Dictionary.Close("dictInUse")
			
			'Check if Material is in use then delete...
			F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtDelete.RowCount--,1)
				V.Local.iMaterialID.Set(V.DataTable.dtDelete(v.Local.iCnt).MaterialID!FieldVal)
				F.Intrinsic.Control.If(V.DataTable.dtDelete(v.Local.iCnt).Inuse!FieldVal)
					F.Intrinsic.String.Build("Material Type in use on an MaterialLog, cannot delete!{0}{1}",V.Ambient.NewLine,V.Local.iMaterialID,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("Delete From GAB_6559_Material where MaterialID = '{0}'",V.Local.iMaterialID,V.Local.sSQL)
					F.ODBC.Connection!conx.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.iCnt)
			F.Data.Datatable.Close("dtDelete")
			F.Intrinsic.Control.CallSub(Load_Material)
			
		f.Intrinsic.Control.Case("ADDISSUE")
			F.Intrinsic.String.Build("Are you sure you would like to create a new issue type?{0}A new line will apear at the bottom of the grid.",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"New Issue Type","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				gui.Form.lblPleasewait.Visible(False)
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.String.Build("Insert Into GAB_6559_Issue (Description) Values ('')",V.Local.sNow,V.Local.sSQL)
			F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			F.Intrinsic.Control.CallSub(Load_Issue)
			
		f.Intrinsic.Control.Case("DELETEISSUE")
			'Make sure the user actually wants to delete.
			F.Intrinsic.String.Build("Are you sure you would like to delete the seleced issue types?{0}You will only be able to delete the issue types not in use.",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"Delete Issue Type","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				gui.Form.lblPleasewait.Visible(False)
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'Filter down to selected rows.
			F.Data.DataView.Create("dtIssue","dvIssue",22,"SELECT = True","")
			F.Data.DataView.ToDataTable("dtIssue","dvIssue","dtDelete",True)
			F.Data.DataView.Close("dtIssue","dvIssue")
			
			'Find IssueIDs that are in use
			F.Data.Datatable.AddColumn("dtDelete","Inuse","Boolean",False)
			F.Data.Dictionary.CreateFromSQL("dictInUse","conx","select IssueID, Cast(1 as bit) From GAB_6559_Issue_Log")
			F.Data.DataTable.FillFromDictionary("dtDelete","dictInUse","IssueID","Inuse")
			F.Data.Dictionary.Close("dictInUse")
			
			'Check if IssueIDs is in use then delete...
			F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtDelete.RowCount--,1)
				V.Local.iIssueID.Set(V.DataTable.dtDelete(v.Local.iCnt).IssueID!FieldVal)
				F.Intrinsic.Control.If(V.DataTable.dtDelete(v.Local.iCnt).Inuse!FieldVal)
					F.Intrinsic.String.Build("Org/Division in use on an Employee, cannot delete!{0}{1}",V.Ambient.NewLine,V.Local.iIssueID,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("Delete From GAB_6559_Issue where IssueID = '{0}'",V.Local.iIssueID,V.Local.sSQL)
					F.ODBC.Connection!conx.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.iCnt)
			F.Data.Datatable.Close("dtDelete")
			F.Intrinsic.Control.CallSub(Load_Issue)
			
		f.Intrinsic.Control.Case("ADDREWORK")
			F.Intrinsic.String.Build("Are you sure you would like to create a new rework type?{0}A new line will apear at the bottom of the grid.",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"New Rework Type","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				gui.Form.lblPleasewait.Visible(False)
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.String.Build("Insert Into GAB_6559_Rework_Type (Description) Values ('')",V.Local.sNow,V.Local.sSQL)
			F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			F.Intrinsic.Control.CallSub(Load_Rework)
			
		f.Intrinsic.Control.Case("DELETEREWORK")
			'Make sure the user actually wants to delete.
			F.Intrinsic.String.Build("Are you sure you would like to delete the seleced Rework types?{0}You will only be able to delete the issue types not in use.",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"Delete Rework Type","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				gui.Form.lblPleasewait.Visible(False)
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'Filter down to selected rows.
			F.Data.DataView.Create("dtRework","dvRework",22,"SELECT = True","")
			F.Data.DataView.ToDataTable("dtRework","dvRework","dtDelete",True)
			F.Data.DataView.Close("dtRework","dvRework")
			
			'Find ReworkTypeIDs that are in use
			F.Data.Datatable.AddColumn("dtDelete","Inuse","Boolean",False)
			F.Data.Dictionary.CreateFromSQL("dictInUse","conx","select ReworkTypeID, Cast(1 as bit) From GAB_6559_Rework_Log")
			F.Data.DataTable.FillFromDictionary("dtDelete","dictInUse","ReworkTypeID","Inuse")
			F.Data.Dictionary.Close("dictInUse")
			
			'Check if ReworkTypeIDs is in use then delete...
			F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtDelete.RowCount--,1)
				V.Local.iReworkTypeID.Set(V.DataTable.dtDelete(v.Local.iCnt).ReworkTypeID!FieldVal)
				F.Intrinsic.Control.If(V.DataTable.dtDelete(v.Local.iCnt).Inuse!FieldVal)
					F.Intrinsic.String.Build("Org/Division in use on an Employee, cannot delete!{0}{1}",V.Ambient.NewLine,V.Local.iReworkTypeID,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("Delete From GAB_6559_Rework_Type where ReworkTypeID = '{0}'",V.Local.iReworkTypeID,V.Local.sSQL)
					F.ODBC.Connection!conx.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.iCnt)
			F.Data.Datatable.Close("dtDelete")
			F.Intrinsic.Control.CallSub(Load_Rework)
			
			
		f.Intrinsic.Control.Case("ADDYARD")
			F.Intrinsic.String.Build("Are you sure you would like to create a new Yard type?{0}A new line will apear at the bottom of the grid.",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"New Yard Type","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				gui.Form.lblPleasewait.Visible(False)
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.String.Build("Insert Into GAB_6559_Yard (Description) Values ('')",V.Local.sNow,V.Local.sSQL)
			F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			F.Intrinsic.Control.CallSub(Load_Yard)
			
		f.Intrinsic.Control.Case("DELETEYARD")
			'Make sure the user actually wants to delete.
			F.Intrinsic.String.Build("Are you sure you would like to delete the seleced Yard types?{0}You will only be able to delete the Yard types not in use.",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"Delete Yard Type","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				gui.Form.lblPleasewait.Visible(False)
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'Filter down to selected rows.
			F.Data.DataView.Create("dtYard","dvYard",22,"SELECT = True","")
			F.Data.DataView.ToDataTable("dtYard","dvYard","dtDelete",True)
			F.Data.DataView.Close("dtYard","dvYard")
			
			'Find YardIDs that are in use
			F.Data.Datatable.AddColumn("dtDelete","Inuse","Boolean",False)
			F.Data.Dictionary.CreateFromSQL("dictInUse","conx","select RTRIM(Yard), Cast(1 as bit) From GAB_6559_Lines")
			F.Data.DataTable.FillFromDictionary("dtDelete","dictInUse","Small_Desc","Inuse")
			F.Data.Dictionary.Close("dictInUse")
			
			'Check if YardIDs is in use then delete...
			F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtDelete.RowCount--,1)
				V.Local.iYardID.Set(V.DataTable.dtDelete(v.Local.iCnt).YardID!FieldVal)
				F.Intrinsic.Control.If(V.DataTable.dtDelete(v.Local.iCnt).Inuse!FieldVal)
					F.Intrinsic.String.Build("Yard in use on a Work Order Line, cannot delete!{0}{1}",V.Ambient.NewLine,V.Local.iYardID,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("Delete From GAB_6559_Yard where YardID = '{0}'",V.Local.iYardID,V.Local.sSQL)
					F.ODBC.Connection!conx.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.iCnt)
			F.Data.Datatable.Close("dtDelete")
			F.Intrinsic.Control.CallSub(Load_Yard)
			
	f.Intrinsic.Control.EndSelect
	
	gui.Form.lblPleasewait.Visible(False)	
	v.Global.bLoading.Set(False)
	
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ac6_ElementClick.End

Program.Sub.gsResource_CellValueChanged.Start
F.Intrinsic.Control.Try
V.Local.iJobResourceID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sValue.Declare
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)

F.Intrinsic.Control.BlockEvents
Gui.Form.gsResource.GetCellValueByColumnName("gvResource","JobResourceID",V.Args.RowIndex,V.Local.iJobResourceID)

F.Intrinsic.Control.SelectCase(V.Args.column.UCase)

	F.Intrinsic.Control.Case("SMALLDESC")
		V.Local.sValue.Set(V.Args.Value)
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Job_Resource set SmallDesc = '{0}' where JobResourceID = '{1}'",V.Local.sValue.PSQLFriendly,V.Local.iJobResourceID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("DESCRIPTION")
		V.Local.sValue.Set(V.Args.Value)
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Job_Resource set Description = '{0}' where JobResourceID = '{1}'",V.Local.sValue.PSQLFriendly,V.Local.iJobResourceID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("RETIREDFLAG")
		F.Intrinsic.Control.If(V.Args.value)
			V.Local.sValue.Set("1")
		F.Intrinsic.Control.Else
			V.Local.sValue.Set("0")
		F.Intrinsic.Control.EndIf
		
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Job_Resource set RetiredFlag = '{0}' where JobResourceID = '{1}'",V.Local.sValue,V.Local.iJobResourceID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.UnBlockEvents

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsResource_CellValueChanged.End

Program.Sub.Load_Material.Start
f.Intrinsic.Control.Try
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.local.iCnt.Declare
	v.Local.sProgrammedBy.Declare
	V.Local.bExists.Declare
	
	f.Intrinsic.Control.If(v.DataTable.dtMaterial.Exists)
		f.Data.DataTable.Close("dtMaterial")
		gui.Form.gsMaterial.ClearRows("gvMaterial")		
	f.Intrinsic.Control.EndIf

	F.Intrinsic.String.Build("Select MaterialID, RTRIM(Description) as Description, RTRIM(UnitDescription) as UnitDescription, RTRIM(UnitAbbreviation) as UnitAbbreviation From GAB_6559_Material Order by MaterialID Asc",v.Local.sProgrammedBy,V.Local.sSQL)
	F.Data.Datatable.CreateFromSQL("dtMaterial","conx",V.Local.sSQL,True)
	F.Data.Datatable.AddColumn("dtMaterial","SELECT","Boolean",False)
	
	gui.Form.gsMaterial.AddGridviewFromDatatable("gvMaterial","dtMaterial")
	f.Intrinsic.Control.CallSub(Format_Material)
	gui.Form.gsMaterial.MainView("gvMaterial")		
	gui.Form.tab6.SetTab(1)


f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Load_Material.End

Program.Sub.Format_Material.Start
F.Intrinsic.Control.Try
	V.Local.sSql.Declare
	V.Local.sProp.Declare
	v.Local.sValue.Declare	
	V.Local.iRet.Declare
	V.Local.iCnt.Declare
	v.Local.sValue2.Declare
	v.Local.sValue3.Declare
	
	gui.Form.gsMaterial.SuspendLayout()
	
	gui.Form.gsMaterial.SetGridViewProperty("gvMaterial","MultiSelect",False)
	gui.Form.gsMaterial.SetGridViewProperty("gvMaterial","AllowSort",True)
	gui.Form.gsMaterial.SetGridViewProperty("gvMaterial","AllowFilter",True)
	gui.Form.gsMaterial.SetGridViewProperty("gvMaterial","OptionsDetailShowDetailTabs",False)
	gui.Form.gsMaterial.SetGridViewProperty("gvMaterial","OptionsViewShowGroupPanel",True)
	gui.Form.gsMaterial.SetGridViewProperty("gvMaterial","EnableAppearanceOddRow",True)
	gui.Form.gsMaterial.SetGridviewProperty("gvMaterial",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.gsMaterial.SetGridviewProperty("gvMaterial","OptionsViewColumnAutoWidth",False)
	gui.Form.gsMaterial.SetGridviewProperty("gvMaterial","AllowColumnResizing",True)	
	gui.Form.gsMaterial.SetGridviewProperty("gvMaterial","ColumnPanelRowHeight","50")
	gui.Form.gsMaterial.SetGridviewProperty("gvMaterial",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.Form.gsMaterial.SetGridviewProperty("gvMaterial", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_Material,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Material,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Material,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_Material,"sProp","HeaderVAlignment","sValue","Top")
	
	
	'MaterialID
	'Description
	'UnitDescription
	'UnitAbbreviation


	v.Local.sProp.Set("VisibleIndex")
	v.Local.iCnt.Set(-1)	
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","SELECT",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","MaterialID",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","Description",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","UnitDescription",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","UnitAbbreviation",v.Local.sProp,v.Local.iCnt.++)


	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","MaterialID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","UnitDescription",v.Local.sProp,v.Local.sValue)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","Description",v.Local.sProp,v.Local.sValue)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","UnitAbbreviation",v.Local.sProp,v.Local.sValue)
	

	
	v.Local.sProp.Set("CellHAlignment")
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","MaterialID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","UnitDescription",v.Local.sProp,v.Local.sValue)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","Description",v.Local.sProp,v.Local.sValue)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","UnitAbbreviation",v.Local.sProp,v.Local.sValue)


	
	v.Local.sProp.Set("Caption")
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","SELECT",v.Local.sProp,"Select")
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","MaterialID",v.Local.sProp,"Material ID")
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","UnitDescription",v.Local.sProp,"Unit Desc")
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","Description",v.Local.sProp,"Description")
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","UnitAbbreviation",v.Local.sProp,"Unit Abbrv.")

	

			
	
	v.Local.sProp.Set("Width")
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","SELECT",v.Local.sProp,"75")
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","MaterialID",v.Local.sProp,"75")
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","UnitDescription",v.Local.sProp,"125")
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","Description",v.Local.sProp,"175")
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","UnitAbbreviation",v.Local.sProp,"75")

	
	
'	For RowCellClick and CellValueChanged
	v.Local.sProp.Set("AllowEdit")
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","SELECT",v.Local.sProp,True)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","MaterialID",v.Local.sProp,False)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","UnitDescription",v.Local.sProp,True)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","Description",v.Local.sProp,True)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","UnitAbbreviation",v.Local.sProp,True)

		

	v.Local.sProp.Set("ReadOnly")
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","SELECT",v.Local.sProp,False)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","MaterialID",v.Local.sProp,True)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","UnitDescription",v.Local.sProp,False)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","Description",v.Local.sProp,False)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","UnitAbbreviation",v.Local.sProp,False)

	
	'BackForeColor
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("LightYellow")
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","Description",v.Local.sProp,v.Local.sValue)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","UnitDescription",v.Local.sProp,v.Local.sValue)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","UnitAbbreviation",v.Local.sProp,v.Local.sValue)
	

	gui.Form.gsMaterial.ResumeLayout()
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Format_Material.End

Program.Sub.Bulk_Format_Material.Start
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","SELECT",v.Args.sProp,v.Args.sValue)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","MaterialID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","UnitDescription",v.Args.sProp,v.Args.sValue)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","Description",v.Args.sProp,v.Args.sValue)
	gui.Form.gsMaterial.SetColumnProperty("gvMaterial","UnitAbbreviation",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_Material.End

Program.Sub.gsMaterial_CellValueChanged.Start
F.Intrinsic.Control.Try
V.Local.iMaterialID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sValue.Declare
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)

F.Intrinsic.Control.BlockEvents
Gui.Form.gsMaterial.GetCellValueByColumnName("gvMaterial","MaterialID",V.Args.RowIndex,V.Local.iMaterialID)

F.Intrinsic.Control.SelectCase(V.Args.column.UCase)
	F.Intrinsic.Control.Case("UNITDESCRIPTION")
		V.Local.sValue.Set(V.Args.Value)
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Material set UNITDESCRIPTION = '{0}' where MaterialID = '{1}'",V.Local.sValue.PSQLFriendly,V.Local.iMaterialID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("DESCRIPTION")
		V.Local.sValue.Set(V.Args.Value)
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Material set Description = '{0}' where MaterialID = '{1}'",V.Local.sValue.PSQLFriendly,V.Local.iMaterialID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("UNITABBREVIATION")
		V.Local.sValue.Set(V.Args.Value)
		
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Material set UNITABBREVIATION = '{0}' where MaterialID = '{1}'",V.Local.sValue.PSQLFriendly,V.Local.iMaterialID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.UnBlockEvents

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsMaterial_CellValueChanged.End

Program.Sub.Load_Issue.Start
f.Intrinsic.Control.Try
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.local.iCnt.Declare
	v.Local.sProgrammedBy.Declare
	V.Local.bExists.Declare
	
	f.Intrinsic.Control.If(v.DataTable.dtIssue.Exists)
		f.Data.DataTable.Close("dtIssue")
		gui.Form.gsIssue.ClearRows("gvIssue")		
	f.Intrinsic.Control.EndIf

	F.Intrinsic.String.Build("select IssueID, RTRIM(Description) as Description from GAB_6559_Issue order by IssueID Asc",v.Local.sProgrammedBy,V.Local.sSQL)
	F.Data.Datatable.CreateFromSQL("dtIssue","conx",V.Local.sSQL,True)
	F.Data.Datatable.AddColumn("dtIssue","SELECT","Boolean",False)
	
	gui.Form.gsIssue.AddGridviewFromDatatable("gvIssue","dtIssue")
	f.Intrinsic.Control.CallSub(Format_Issue)
	gui.Form.gsIssue.MainView("gvIssue")		
	gui.Form.tab6.SetTab(2)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Load_Issue.End

Program.Sub.Format_Issue.Start
F.Intrinsic.Control.Try
	V.Local.sSql.Declare
	V.Local.sProp.Declare
	v.Local.sValue.Declare	
	V.Local.iRet.Declare
	V.Local.iCnt.Declare
	v.Local.sValue2.Declare
	v.Local.sValue3.Declare
	
	gui.Form.gsIssue.SuspendLayout()
	
	gui.Form.gsIssue.SetGridViewProperty("gvIssue","MultiSelect",False)
	gui.Form.gsIssue.SetGridViewProperty("gvIssue","AllowSort",True)
	gui.Form.gsIssue.SetGridViewProperty("gvIssue","AllowFilter",True)
	gui.Form.gsIssue.SetGridViewProperty("gvIssue","OptionsDetailShowDetailTabs",False)
	gui.Form.gsIssue.SetGridViewProperty("gvIssue","OptionsViewShowGroupPanel",True)
	gui.Form.gsIssue.SetGridViewProperty("gvIssue","EnableAppearanceOddRow",True)
	gui.Form.gsIssue.SetGridviewProperty("gvIssue",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.gsIssue.SetGridviewProperty("gvIssue","OptionsViewColumnAutoWidth",False)
	gui.Form.gsIssue.SetGridviewProperty("gvIssue","AllowColumnResizing",True)	
	gui.Form.gsIssue.SetGridviewProperty("gvIssue","ColumnPanelRowHeight","50")
	gui.Form.gsIssue.SetGridviewProperty("gvIssue",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.Form.gsIssue.SetGridviewProperty("gvIssue", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_Issue,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Issue,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Issue,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_Issue,"sProp","HeaderVAlignment","sValue","Top")
	
	'JobIssueID
	'SmallDesc
	'Description
	'RetiredFlag

	v.Local.sProp.Set("VisibleIndex")
	v.Local.iCnt.Set(-1)	
	gui.Form.gsIssue.SetColumnProperty("gvIssue","SELECT",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsIssue.SetColumnProperty("gvIssue","IssueID",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsIssue.SetColumnProperty("gvIssue","Description",v.Local.sProp,v.Local.iCnt.++)

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.Form.gsIssue.SetColumnProperty("gvIssue","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsIssue.SetColumnProperty("gvIssue","IssueID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsIssue.SetColumnProperty("gvIssue","Description",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.Form.gsIssue.SetColumnProperty("gvIssue","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsIssue.SetColumnProperty("gvIssue","IssueID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsIssue.SetColumnProperty("gvIssue","Description",v.Local.sProp,v.Local.sValue)

	v.Local.sProp.Set("Caption")
	gui.Form.gsIssue.SetColumnProperty("gvIssue","SELECT",v.Local.sProp,"Select")
	gui.Form.gsIssue.SetColumnProperty("gvIssue","IssueID",v.Local.sProp,"Job Issue ID")
	gui.Form.gsIssue.SetColumnProperty("gvIssue","Description",v.Local.sProp,"Description")

	v.Local.sProp.Set("Width")
	gui.Form.gsIssue.SetColumnProperty("gvIssue","SELECT",v.Local.sProp,"75")
	gui.Form.gsIssue.SetColumnProperty("gvIssue","IssueID",v.Local.sProp,"75")
	gui.Form.gsIssue.SetColumnProperty("gvIssue","Description",v.Local.sProp,"175")

'	For RowCellClick and CellValueChanged
	v.Local.sProp.Set("AllowEdit")
	gui.Form.gsIssue.SetColumnProperty("gvIssue","SELECT",v.Local.sProp,True)
	gui.Form.gsIssue.SetColumnProperty("gvIssue","IssueID",v.Local.sProp,False)
	gui.Form.gsIssue.SetColumnProperty("gvIssue","Description",v.Local.sProp,True)

	v.Local.sProp.Set("ReadOnly")
	gui.Form.gsIssue.SetColumnProperty("gvIssue","SELECT",v.Local.sProp,False)
	gui.Form.gsIssue.SetColumnProperty("gvIssue","IssueID",v.Local.sProp,True)
	gui.Form.gsIssue.SetColumnProperty("gvIssue","Description",v.Local.sProp,False)

	'BackForeColor
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("LightYellow")
	gui.Form.gsIssue.SetColumnProperty("gvIssue","Description",v.Local.sProp,v.Local.sValue)
	

	gui.Form.gsIssue.ResumeLayout()
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Format_Issue.End

Program.Sub.Bulk_Format_Issue.Start
	gui.Form.gsIssue.SetColumnProperty("gvIssue","SELECT",v.Args.sProp,v.Args.sValue)
	gui.Form.gsIssue.SetColumnProperty("gvIssue","IssueID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsIssue.SetColumnProperty("gvIssue","Description",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_Issue.End

Program.Sub.gsIssue_CellValueChanged.Start
F.Intrinsic.Control.Try
V.Local.iIssueID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sValue.Declare
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)

F.Intrinsic.Control.BlockEvents
Gui.Form.gsIssue.GetCellValueByColumnName("gvIssue","IssueID",V.Args.RowIndex,V.Local.iIssueID)

F.Intrinsic.Control.SelectCase(V.Args.column.UCase)
	F.Intrinsic.Control.Case("DESCRIPTION")
		V.Local.sValue.Set(V.Args.Value)
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Issue set Description = '{0}' where IssueID = '{1}'",V.Local.sValue.PSQLFriendly,V.Local.iIssueID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.UnBlockEvents

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsIssue_CellValueChanged.End

Program.Sub.Load_Rework.Start
f.Intrinsic.Control.Try
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.local.iCnt.Declare
	v.Local.sProgrammedBy.Declare
	V.Local.bExists.Declare
	
	f.Intrinsic.Control.If(v.DataTable.dtRework.Exists)
		f.Data.DataTable.Close("dtRework")
		gui.Form.gsRework.ClearRows("gvRework")		
	f.Intrinsic.Control.EndIf

	F.Intrinsic.String.Build("select ReworkTypeID, RTRIM(Description) as Description from GAB_6559_Rework_Type order by ReworkTypeID Asc",v.Local.sProgrammedBy,V.Local.sSQL)
	F.Data.Datatable.CreateFromSQL("dtRework","conx",V.Local.sSQL,True)
	F.Data.Datatable.AddColumn("dtRework","SELECT","Boolean",False)
	
	gui.Form.gsRework.AddGridviewFromDatatable("gvRework","dtRework")
	f.Intrinsic.Control.CallSub(Format_Rework)
	gui.Form.gsRework.MainView("gvRework")		
	gui.Form.tab6.SetTab(3)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Load_Rework.End

Program.Sub.Format_Rework.Start
F.Intrinsic.Control.Try
	V.Local.sSql.Declare
	V.Local.sProp.Declare
	v.Local.sValue.Declare	
	V.Local.iRet.Declare
	V.Local.iCnt.Declare
	v.Local.sValue2.Declare
	v.Local.sValue3.Declare
	
	gui.Form.gsRework.SuspendLayout()
	
	gui.Form.gsRework.SetGridViewProperty("gvRework","MultiSelect",False)
	gui.Form.gsRework.SetGridViewProperty("gvRework","AllowSort",True)
	gui.Form.gsRework.SetGridViewProperty("gvRework","AllowFilter",True)
	gui.Form.gsRework.SetGridViewProperty("gvRework","OptionsDetailShowDetailTabs",False)
	gui.Form.gsRework.SetGridViewProperty("gvRework","OptionsViewShowGroupPanel",True)
	gui.Form.gsRework.SetGridViewProperty("gvRework","EnableAppearanceOddRow",True)
	gui.Form.gsRework.SetGridviewProperty("gvRework",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.gsRework.SetGridviewProperty("gvRework","OptionsViewColumnAutoWidth",False)
	gui.Form.gsRework.SetGridviewProperty("gvRework","AllowColumnResizing",True)	
	gui.Form.gsRework.SetGridviewProperty("gvRework","ColumnPanelRowHeight","50")
	gui.Form.gsRework.SetGridviewProperty("gvRework",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.Form.gsRework.SetGridviewProperty("gvRework", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_Rework,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Rework,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Rework,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_Rework,"sProp","HeaderVAlignment","sValue","Top")
	
	'ReworkTypeID
	'SmallDesc
	'Description
	'RetiredFlag

	v.Local.sProp.Set("VisibleIndex")
	v.Local.iCnt.Set(-1)	
	gui.Form.gsRework.SetColumnProperty("gvRework","SELECT",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsRework.SetColumnProperty("gvRework","ReworkTypeID",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsRework.SetColumnProperty("gvRework","Description",v.Local.sProp,v.Local.iCnt.++)

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.Form.gsRework.SetColumnProperty("gvRework","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsRework.SetColumnProperty("gvRework","ReworkTypeID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsRework.SetColumnProperty("gvRework","Description",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.Form.gsRework.SetColumnProperty("gvRework","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsRework.SetColumnProperty("gvRework","ReworkTypeID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsRework.SetColumnProperty("gvRework","Description",v.Local.sProp,v.Local.sValue)

	v.Local.sProp.Set("Caption")
	gui.Form.gsRework.SetColumnProperty("gvRework","SELECT",v.Local.sProp,"Select")
	gui.Form.gsRework.SetColumnProperty("gvRework","ReworkTypeID",v.Local.sProp,"Job Rework ID")
	gui.Form.gsRework.SetColumnProperty("gvRework","Description",v.Local.sProp,"Description")

	v.Local.sProp.Set("Width")
	gui.Form.gsRework.SetColumnProperty("gvRework","SELECT",v.Local.sProp,"75")
	gui.Form.gsRework.SetColumnProperty("gvRework","ReworkTypeID",v.Local.sProp,"75")
	gui.Form.gsRework.SetColumnProperty("gvRework","Description",v.Local.sProp,"175")

'	For RowCellClick and CellValueChanged
	v.Local.sProp.Set("AllowEdit")
	gui.Form.gsRework.SetColumnProperty("gvRework","SELECT",v.Local.sProp,True)
	gui.Form.gsRework.SetColumnProperty("gvRework","ReworkTypeID",v.Local.sProp,False)
	gui.Form.gsRework.SetColumnProperty("gvRework","Description",v.Local.sProp,True)

	v.Local.sProp.Set("ReadOnly")
	gui.Form.gsRework.SetColumnProperty("gvRework","SELECT",v.Local.sProp,False)
	gui.Form.gsRework.SetColumnProperty("gvRework","ReworkTypeID",v.Local.sProp,True)
	gui.Form.gsRework.SetColumnProperty("gvRework","Description",v.Local.sProp,False)

	'BackForeColor
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("LightYellow")
	gui.Form.gsRework.SetColumnProperty("gvRework","Description",v.Local.sProp,v.Local.sValue)
	

	gui.Form.gsRework.ResumeLayout()
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Format_Rework.End

Program.Sub.Bulk_Format_Rework.Start
	gui.Form.gsRework.SetColumnProperty("gvRework","SELECT",v.Args.sProp,v.Args.sValue)
	gui.Form.gsRework.SetColumnProperty("gvRework","ReworkTypeID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsRework.SetColumnProperty("gvRework","Description",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_Rework.End

Program.Sub.gsRework_CellValueChanged.Start
F.Intrinsic.Control.Try
V.Local.iReworkTypeID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sValue.Declare
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)

F.Intrinsic.Control.BlockEvents
Gui.Form.gsRework.GetCellValueByColumnName("gvRework","ReworkTypeID",V.Args.RowIndex,V.Local.iReworkTypeID)

F.Intrinsic.Control.SelectCase(V.Args.column.UCase)
	F.Intrinsic.Control.Case("DESCRIPTION")
		V.Local.sValue.Set(V.Args.Value)
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Rework_Type set Description = '{0}' where ReworkTypeID = '{1}'",V.Local.sValue.PSQLFriendly,V.Local.iReworkTypeID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.UnBlockEvents

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsRework_CellValueChanged.End

Program.Sub.Load_Yard.Start
f.Intrinsic.Control.Try
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.local.iCnt.Declare
	v.Local.sProgrammedBy.Declare
	V.Local.bExists.Declare
	
	f.Intrinsic.Control.If(v.DataTable.dtYard.Exists)
		f.Data.DataTable.Close("dtYard")
		gui.Form.gsYard.ClearRows("gvYard")		
	f.Intrinsic.Control.EndIf

	F.Intrinsic.String.Build("select YardID, RTRIM(Small_Desc) as Small_Desc, RTRIM(Description) as Description from GAB_6559_Yard order by YardID Asc",v.Local.sProgrammedBy,V.Local.sSQL)
	F.Data.Datatable.CreateFromSQL("dtYard","conx",V.Local.sSQL,True)
	F.Data.Datatable.AddColumn("dtYard","SELECT","Boolean",False)
	
	gui.Form.gsYard.AddGridviewFromDatatable("gvYard","dtYard")
	f.Intrinsic.Control.CallSub(Format_Yard)
	gui.Form.gsYard.MainView("gvYard")		
	gui.Form.tab6.SetTab(4)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Load_Yard.End

Program.Sub.Format_Yard.Start
F.Intrinsic.Control.Try
	V.Local.sSql.Declare
	V.Local.sProp.Declare
	v.Local.sValue.Declare	
	V.Local.iRet.Declare
	V.Local.iCnt.Declare
	v.Local.sValue2.Declare
	v.Local.sValue3.Declare
	
	gui.Form.gsYard.SuspendLayout()
	
	gui.Form.gsYard.SetGridViewProperty("gvYard","MultiSelect",False)
	gui.Form.gsYard.SetGridViewProperty("gvYard","AllowSort",True)
	gui.Form.gsYard.SetGridViewProperty("gvYard","AllowFilter",True)
	gui.Form.gsYard.SetGridViewProperty("gvYard","OptionsDetailShowDetailTabs",False)
	gui.Form.gsYard.SetGridViewProperty("gvYard","OptionsViewShowGroupPanel",True)
	gui.Form.gsYard.SetGridViewProperty("gvYard","EnableAppearanceOddRow",True)
	gui.Form.gsYard.SetGridviewProperty("gvYard",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.gsYard.SetGridviewProperty("gvYard","OptionsViewColumnAutoWidth",False)
	gui.Form.gsYard.SetGridviewProperty("gvYard","AllowColumnResizing",True)	
	gui.Form.gsYard.SetGridviewProperty("gvYard","ColumnPanelRowHeight","50")
	gui.Form.gsYard.SetGridviewProperty("gvYard",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.Form.gsYard.SetGridviewProperty("gvYard", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_Yard,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Yard,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Yard,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_Yard,"sProp","HeaderVAlignment","sValue","Top")
	
	'JobYardID
	'SmallDesc
	'Description
	'RetiredFlag

	v.Local.sProp.Set("VisibleIndex")
	v.Local.iCnt.Set(-1)	
	gui.Form.gsYard.SetColumnProperty("gvYard","SELECT",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsYard.SetColumnProperty("gvYard","YardID",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsYard.SetColumnProperty("gvYard","Small_Desc",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsYard.SetColumnProperty("gvYard","Description",v.Local.sProp,v.Local.iCnt.++)

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.Form.gsYard.SetColumnProperty("gvYard","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsYard.SetColumnProperty("gvYard","YardID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsYard.SetColumnProperty("gvYard","Small_Desc",v.Local.sProp,v.Local.sValue)
	gui.Form.gsYard.SetColumnProperty("gvYard","Description",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.Form.gsYard.SetColumnProperty("gvYard","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsYard.SetColumnProperty("gvYard","YardID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsYard.SetColumnProperty("gvYard","Small_Desc",v.Local.sProp,v.Local.sValue)
	gui.Form.gsYard.SetColumnProperty("gvYard","Description",v.Local.sProp,v.Local.sValue)

	v.Local.sProp.Set("Caption")
	gui.Form.gsYard.SetColumnProperty("gvYard","SELECT",v.Local.sProp,"Select")
	gui.Form.gsYard.SetColumnProperty("gvYard","YardID",v.Local.sProp,"Job Yard ID")
	gui.Form.gsYard.SetColumnProperty("gvYard","Small_Desc",v.Local.sProp,"Small Desc.")
	gui.Form.gsYard.SetColumnProperty("gvYard","Description",v.Local.sProp,"Description")

	v.Local.sProp.Set("Width")
	gui.Form.gsYard.SetColumnProperty("gvYard","SELECT",v.Local.sProp,"75")
	gui.Form.gsYard.SetColumnProperty("gvYard","YardID",v.Local.sProp,"75")
	gui.Form.gsYard.SetColumnProperty("gvYard","Small_Desc",v.Local.sProp,"175")
	gui.Form.gsYard.SetColumnProperty("gvYard","Description",v.Local.sProp,"175")

'	For RowCellClick and CellValueChanged
	v.Local.sProp.Set("AllowEdit")
	gui.Form.gsYard.SetColumnProperty("gvYard","SELECT",v.Local.sProp,True)
	gui.Form.gsYard.SetColumnProperty("gvYard","YardID",v.Local.sProp,False)
	gui.Form.gsYard.SetColumnProperty("gvYard","Small_Desc",v.Local.sProp,True)
	gui.Form.gsYard.SetColumnProperty("gvYard","Description",v.Local.sProp,True)

	v.Local.sProp.Set("ReadOnly")
	gui.Form.gsYard.SetColumnProperty("gvYard","SELECT",v.Local.sProp,False)
	gui.Form.gsYard.SetColumnProperty("gvYard","YardID",v.Local.sProp,True)
	gui.Form.gsYard.SetColumnProperty("gvYard","Small_Desc",v.Local.sProp,False)
	gui.Form.gsYard.SetColumnProperty("gvYard","Description",v.Local.sProp,False)

	'BackForeColor
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("LightYellow")
	gui.Form.gsYard.SetColumnProperty("gvYard","Small_Desc",v.Local.sProp,v.Local.sValue)
	gui.Form.gsYard.SetColumnProperty("gvYard","Description",v.Local.sProp,v.Local.sValue)
	

	gui.Form.gsYard.ResumeLayout()
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Format_Yard.End

Program.Sub.Bulk_Format_Yard.Start
	gui.Form.gsYard.SetColumnProperty("gvYard","SELECT",v.Args.sProp,v.Args.sValue)
	gui.Form.gsYard.SetColumnProperty("gvYard","YardID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsYard.SetColumnProperty("gvYard","Small_Desc",v.Args.sProp,v.Args.sValue)
	gui.Form.gsYard.SetColumnProperty("gvYard","Description",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_Yard.End

Program.Sub.gsYard_CellValueChanged.Start
F.Intrinsic.Control.Try
V.Local.iYardID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sValue.Declare
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)

F.Intrinsic.Control.BlockEvents
Gui.Form.gsYard.GetCellValueByColumnName("gvYard","YardID",V.Args.RowIndex,V.Local.iYardID)

F.Intrinsic.Control.SelectCase(V.Args.column.UCase)
	F.Intrinsic.Control.Case("SMALL_DESC")
		V.Local.sValue.Set(V.Args.Value)
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Yard set SMALL_DESC = '{0}' where YardID = '{1}'",V.Local.sValue.PSQLFriendly,V.Local.iYardID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("DESCRIPTION")
		V.Local.sValue.Set(V.Args.Value)
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_Yard set Description = '{0}' where YardID = '{1}'",V.Local.sValue.PSQLFriendly,V.Local.iYardID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.UnBlockEvents

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsYard_CellValueChanged.End

Program.Sub.tab6_Click.Start
v.Local.sValue.Declare
v.Local.sValue.Set(v.Screen.Form!tab6.tab)

'This will prevent from multi-clicking too fast the button
f.Intrinsic.Control.If(v.Global.bLoading)
	f.Intrinsic.Control.ExitSub
f.Intrinsic.Control.EndIf
v.Global.bLoading.Set(True)

F.Intrinsic.Control.SelectCase(V.Local.sValue)
F.Intrinsic.Control.Case("0")
	'Load Resource/Headrack Tab
	F.Intrinsic.Control.CallSub(Load_Resource)
	
F.Intrinsic.Control.Case("1")
	'Load Material tab
	F.Intrinsic.Control.CallSub(Load_Material)

F.Intrinsic.Control.Case("2")
	'Load Issue Type tab
	F.Intrinsic.Control.CallSub(Load_Issue)

F.Intrinsic.Control.Case("3")
	'Load Rework Type tab
	F.Intrinsic.Control.CallSub(Load_Rework)
	
F.Intrinsic.Control.Case("4")
	'Load Rework Type tab
	F.Intrinsic.Control.CallSub(Load_Yard)
	
F.Intrinsic.Control.EndSelect

v.Global.bLoading.Set(False)
Program.Sub.tab6_Click.End

#End Region ' Tab Resource

#Region "Tab KPI"
Program.Sub.Load_KPI.Start
f.Intrinsic.Control.Try
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.local.iCnt.Declare
	v.Local.sProgrammedBy.Declare
	V.Local.bExists.Declare
	
	f.Intrinsic.Control.If(v.DataTable.dtKPI.Exists)
		f.Data.DataTable.Close("dtKPI")
		gui.Form.gsKPI.ClearRows("gvKPI")		
	f.Intrinsic.Control.EndIf

	F.Intrinsic.String.Build("select PayPeriod, HoursWorked, DollarsPaid from GAB_6559_KPI_Hrs order by PayPeriod Desc",v.Local.sProgrammedBy,V.Local.sSQL)
	F.Data.Datatable.CreateFromSQL("dtKPI","conx",V.Local.sSQL,True)
	F.Data.Datatable.AddColumn("dtKPI","SELECT","Boolean",False)
	
	gui.Form.gsKPI.AddGridviewFromDatatable("gvKPI","dtKPI")
	f.Intrinsic.Control.CallSub(Format_KPI)
	gui.Form.gsKPI.MainView("gvKPI")		
	gui.Form.tab7.SetTab(0)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Load_KPI.End

Program.Sub.Format_KPI.Start
F.Intrinsic.Control.Try
	V.Local.sSql.Declare
	V.Local.sProp.Declare
	v.Local.sValue.Declare	
	V.Local.iRet.Declare
	V.Local.iCnt.Declare
	v.Local.sValue2.Declare
	v.Local.sValue3.Declare
	
	gui.Form.gsKPI.SuspendLayout()
	
	gui.Form.gsKPI.SetGridViewProperty("gvKPI","MultiSelect",False)
	gui.Form.gsKPI.SetGridViewProperty("gvKPI","AllowSort",True)
	gui.Form.gsKPI.SetGridViewProperty("gvKPI","AllowFilter",True)
	gui.Form.gsKPI.SetGridViewProperty("gvKPI","OptionsDetailShowDetailTabs",False)
	gui.Form.gsKPI.SetGridViewProperty("gvKPI","OptionsViewShowGroupPanel",True)
	gui.Form.gsKPI.SetGridViewProperty("gvKPI","EnableAppearanceOddRow",True)
	gui.Form.gsKPI.SetGridviewProperty("gvKPI",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.gsKPI.SetGridviewProperty("gvKPI","OptionsViewColumnAutoWidth",False)
	gui.Form.gsKPI.SetGridviewProperty("gvKPI","AllowColumnResizing",True)	
	gui.Form.gsKPI.SetGridviewProperty("gvKPI","ColumnPanelRowHeight","50")
	gui.Form.gsKPI.SetGridviewProperty("gvKPI",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.Form.gsKPI.SetGridviewProperty("gvKPI", "ShowConditionalFormattingItem", True)
	
	f.Intrinsic.Control.CallSub(Bulk_Format_KPI,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_KPI,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_KPI,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_KPI,"sProp","HeaderVAlignment","sValue","Top")

	v.Local.sProp.Set("VisibleIndex")
	v.Local.iCnt.Set(-1)	
	gui.Form.gsKPI.SetColumnProperty("gvKPI","SELECT",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsKPI.SetColumnProperty("gvKPI","PayPeriod",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsKPI.SetColumnProperty("gvKPI","HoursWorked",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsKPI.SetColumnProperty("gvKPI","DollarsPaid",v.Local.sProp,v.Local.iCnt.++)

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.Form.gsKPI.SetColumnProperty("gvKPI","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsKPI.SetColumnProperty("gvKPI","PayPeriod",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsKPI.SetColumnProperty("gvKPI","HoursWorked",v.Local.sProp,v.Local.sValue3)
	gui.Form.gsKPI.SetColumnProperty("gvKPI","DollarsPaid",v.Local.sProp,v.Local.sValue3)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.Form.gsKPI.SetColumnProperty("gvKPI","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsKPI.SetColumnProperty("gvKPI","PayPeriod",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsKPI.SetColumnProperty("gvKPI","HoursWorked",v.Local.sProp,v.Local.sValue3)
	gui.Form.gsKPI.SetColumnProperty("gvKPI","DollarsPaid",v.Local.sProp,v.Local.sValue3)

	v.Local.sProp.Set("Caption")
	gui.Form.gsKPI.SetColumnProperty("gvKPI","SELECT",v.Local.sProp,"Select")
	gui.Form.gsKPI.SetColumnProperty("gvKPI","PayPeriod",v.Local.sProp,"Pay Period")
	gui.Form.gsKPI.SetColumnProperty("gvKPI","HoursWorked",v.Local.sProp,"Hours Worked")
	gui.Form.gsKPI.SetColumnProperty("gvKPI","DollarsPaid",v.Local.sProp,"Dollars Paid")
	
	v.Local.sProp.Set("Width")
	gui.Form.gsKPI.SetColumnProperty("gvKPI","SELECT",v.Local.sProp,"75")
	gui.Form.gsKPI.SetColumnProperty("gvKPI","PayPeriod",v.Local.sProp,"125")
	gui.Form.gsKPI.SetColumnProperty("gvKPI","HoursWorked",v.Local.sProp,"125")
	gui.Form.gsKPI.SetColumnProperty("gvKPI","DollarsPaid",v.Local.sProp,"175")

	
	
'	For RowCellClick and CellValueChanged
	v.Local.sProp.Set("AllowEdit")
	gui.Form.gsKPI.SetColumnProperty("gvKPI","SELECT",v.Local.sProp,True)
	gui.Form.gsKPI.SetColumnProperty("gvKPI","PayPeriod",v.Local.sProp,False)
	gui.Form.gsKPI.SetColumnProperty("gvKPI","HoursWorked",v.Local.sProp,True)
	gui.Form.gsKPI.SetColumnProperty("gvKPI","DollarsPaid",v.Local.sProp,True)

		

	v.Local.sProp.Set("ReadOnly")
	gui.Form.gsKPI.SetColumnProperty("gvKPI","SELECT",v.Local.sProp,False)
	gui.Form.gsKPI.SetColumnProperty("gvKPI","PayPeriod",v.Local.sProp,True)
	gui.Form.gsKPI.SetColumnProperty("gvKPI","HoursWorked",v.Local.sProp,False)
	gui.Form.gsKPI.SetColumnProperty("gvKPI","DollarsPaid",v.Local.sProp,False)

	
	'BackForeColor
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("LightYellow")
	'gui.Form.gsKPI.SetColumnProperty("gvKPI","PayPeriod",v.Local.sProp,v.Local.sValue)
	gui.Form.gsKPI.SetColumnProperty("gvKPI","HoursWorked",v.Local.sProp,v.Local.sValue)
	gui.Form.gsKPI.SetColumnProperty("gvKPI","DollarsPaid",v.Local.sProp,v.Local.sValue)
	
	gui.Form.gsKPI.SetColumnProperty("gvKPI","PayPeriod",V.Enum.ColumnPropertyNames!DisplayCustomDateTime,"d")
	
	gui.Form.gsKPI.ResumeLayout()
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Format_KPI.End

Program.Sub.Bulk_Format_KPI.Start
	gui.Form.gsKPI.SetColumnProperty("gvKPI","SELECT",v.Args.sProp,v.Args.sValue)
	gui.Form.gsKPI.SetColumnProperty("gvKPI","PayPeriod",v.Args.sProp,v.Args.sValue)
	gui.Form.gsKPI.SetColumnProperty("gvKPI","HoursWorked",v.Args.sProp,v.Args.sValue)
	gui.Form.gsKPI.SetColumnProperty("gvKPI","DollarsPaid",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_KPI.End

Program.Sub.ac7_ElementClick.Start
f.Intrinsic.Control.Try
	v.Local.iRet.Declare
	v.Local.sRet.Declare
	v.Local.bAuth.Declare
	V.Local.sCustomerKey.Declare
	V.Local.sQHID.Declare
	V.Local.sNow.Declare
	V.Local.dNow.Declare
	V.Local.sMsg.Declare
	V.Local.sSQL.Declare
	V.Local.dPayperiod.Declare
	V.Local.iCnt.Declare
	F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
	F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD", V.Local.dNow)
	
	'This will prevent from multi-clicking too fast the button
	f.Intrinsic.Control.If(v.Global.bLoading)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bLoading.Set(True)	
	
	gui.Form.lblPleasewait.Visible(True)
	gui.Form.lblpleasewait.Text("Please wait ...")		
	
	f.Intrinsic.Control.SelectCase(v.Args.ElementID.UCase)
		f.Intrinsic.Control.Case("SERVICEWEB")
			F.Intrinsic.Task.ShellExec(0,"Open","https://www.gss-service.com/","","",0)	
			
		f.Intrinsic.Control.Case("ADDLINE")
			F.Intrinsic.String.Build("Are you sure you would like to create a new line?{0}A new line will apear at the Top of the grid.",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"New KPI","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				gui.Form.lblPleasewait.Visible(False)
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			V.Local.dPayperiod.Set(V.Screen.Form!dtpPayPeriod.Value)
			F.Intrinsic.String.Build("Select top 1 PayPeriod From GAB_6559_KPI_Hrs where PayPeriod = '{0}'",V.Local.dPayperiod.PervasiveDate,V.Local.sSQL)
			F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.not)
				F.Intrinsic.UI.Msgbox("This Pay Period already exists! Please choose a different date above and try again.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.String.Build("Insert Into GAB_6559_KPI_Hrs (PayPeriod,HoursWorked,DollarsPaid) Values ('{0}','0','0')",V.Local.dPayperiod.PervasiveDate,V.Local.sSQL)
			F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			F.Intrinsic.Control.CallSub(Load_KPI)
			
		f.Intrinsic.Control.Case("DELETELINE")
			'Make sure the user actually wants to delete.
			F.Intrinsic.String.Build("Are you sure you would like to delete the seleced KPI lines?",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"Delete KPI","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				gui.Form.lblPleasewait.Visible(False)
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'Filter down to selected rows.
			F.Data.DataView.Create("dtKPI","dvKPI",22,"SELECT = True","")
			F.Data.DataView.ToDataTable("dtKPI","dvKPI","dtDelete",True)
			F.Data.DataView.Close("dtKPI","dvKPI")
			
			'delete...
			F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtDelete.RowCount--,1)
				V.Local.dPayperiod.Set(V.DataTable.dtDelete(v.Local.iCnt).PayPeriod!FieldVal)
					F.Intrinsic.String.Build("Delete From GAB_6559_KPI_Hrs where PayPeriod = '{0}'",V.Local.dPayperiod.PervasiveDate,V.Local.sSQL)
					F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Next(V.Local.iCnt)
			F.Data.Datatable.Close("dtDelete")
			F.Intrinsic.Control.CallSub(Load_KPI)
			
	f.Intrinsic.Control.EndSelect
	
	gui.Form.lblPleasewait.Visible(False)	
	v.Global.bLoading.Set(False)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ac7_ElementClick.End

Program.Sub.gsKPI_CellValueChanged.Start
F.Intrinsic.Control.Try
V.Local.dPayperiod.Declare
V.Local.iJobResourceID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sValue.Declare
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)

F.Intrinsic.Control.BlockEvents
Gui.Form.gsKPI.GetCellValueByColumnName("gvKPI","PayPeriod",V.Args.RowIndex,V.Local.dPayperiod)

F.Intrinsic.Control.SelectCase(V.Args.column.UCase)
	F.Intrinsic.Control.Case("HOURSWORKED")
		V.Local.sValue.Set(V.Args.Value)
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_KPI_Hrs set HOURSWORKED = '{0}' where Payperiod = '{1}'",V.Local.sValue.PSQLFriendly,V.Local.dPayperiod.PervasiveDate,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("DOLLARSPAID")
		V.Local.sValue.Set(V.Args.Value)
		'Update the DB table
		F.Intrinsic.String.Build("Update GAB_6559_KPI_Hrs set DOLLARSPAID = '{0}' where Payperiod = '{1}'",V.Local.sValue,V.Local.dPayperiod.PervasiveDate,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.UnBlockEvents

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsKPI_CellValueChanged.End


#End Region ' Tab KPI

Program.Sub.cmdCustomerLookUp_Click.Start
f.Intrinsic.Control.Try

V.Local.sSQL.Declare(String)
V.Local.sCol.Declare(String)
V.Local.sColW.Declare(String)
V.Local.sRet.Declare(String)

V.Local.sSQL.Set("SELECT RTRIM(CUSTOMER) as CUSTOMER, NAME_CUSTOMER FROM V_CUSTOMER_MASTER")
'Split Column Names into an array (*!* delimited string)
F.Intrinsic.String.Split("Customer Number*!*Name Customer","*!*",V.Local.sCol)
'Split Column widths into an array (*!* delimited string)
F.Intrinsic.String.Split("600*!*3000","*!*",V.Local.sColW)
F.Intrinsic.UI.Browser("CUSTOMER BROWSER","Conx",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	gui.Form.txtCustomer.Text(V.Local.sRet(0))
F.Intrinsic.Control.EndIf


f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdCustomerLookUp_Click.End

Program.Sub.CustomerShipLookUp.Start
f.Intrinsic.Control.Try

V.Local.sSQL.Declare(String)
V.Local.sCol.Declare(String)
V.Local.sColW.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sCustomerKey.Declare
V.Local.sCustomerKey.Set("")
'V.Local.sPriceGroupID.Declare
'V.Local.sPriceGroupID.Set("")


V.Local.sSQL.Set("select RTRIM(SHIP_KEY) as SHIP_KEY, RTRIM(CUSTOMER_NAME) as CUSTOMER_NAME, RTRIM(PriceGroupID) as PriceGroupID from GAB_6559_Customer_Xref")
'Split Column Names into an array (*!* delimited string)
F.Intrinsic.String.Split("Customer Key*!*Customer Name*!*Price Group","*!*",V.Local.sCol)
'Split Column widths into an array (*!* delimited string)
F.Intrinsic.String.Split("700*!*3000*!*600","*!*",V.Local.sColW)
F.Intrinsic.UI.Browser("Customer Browser","Conx",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	V.Local.sCustomerKey.Set(V.Local.sRet(0))
'	V.Local.sPriceGroupID.Set(V.Local.sRet(2))
F.Intrinsic.Control.EndIf

F.Intrinsic.Variable.AddRV("CustomerKey",V.Local.sCustomerKey)
'F.Intrinsic.Variable.AddRV("PriceGroupID",V.Local.sPriceGroupID)


f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.CustomerShipLookUp.End

Program.Sub.Comments.Start
${$5$}$20.1.8577.26074$}$1
${$6$}$sstanka$}$20230710094255126$}$mP+zz5Tw3sT2/nyap+FbWm4triMPqjXDmoAVYWtNVyefxUVg67bQDp8yrjMWdZ+3eSp1isFPYZc=
Program.Sub.Comments.End
