Program.Sub.ScreenSU.Start
Gui.Form..Create(DashForm)
Gui.Form..Caption("GSS Galvaware 2.0")
Gui.Form..Size(20000,10000)
Gui.Form..MinX(0)
Gui.Form..MinY(0)
Gui.Form..Position(0,0)
Gui.Form..AlwaysOnTop(False)
Gui.Form..FontName("Tahoma")
Gui.Form..FontSize(8.25)
Gui.Form..ControlBox(True)
Gui.Form..MaxButton(True)
Gui.Form..MinButton(True)
Gui.Form..MousePointer(0)
Gui.Form..Moveable(True)
Gui.Form..Sizeable(True)
Gui.Form..ShowInTaskBar(True)
Gui.Form..TitleBar(True)
Gui.Form..Event(UserButtonClicked,Form_UserButtonClicked)
Gui.Form..Event(UnLoad,CloseMainForm)
Gui.Form..BarExportButton(True)
Gui.Form..Event(ExportClick,Form_ExportClick)
Gui.Form.Ac6.Create(AccordionControl)
Gui.Form.Ac6.Enabled(True)
Gui.Form.Ac6.Visible(False)
Gui.Form.Ac6.Size(1905,9015)
Gui.Form.Ac6.Position(120,120)
Gui.Form.Ac6.Dock(3)
Gui.Form.Ac6.Minimized(False)
Gui.Form.Ac6.Event(ElementClick,Ac6_ElementClick)
Gui.Form.Ac5.Create(AccordionControl)
Gui.Form.Ac5.Enabled(True)
Gui.Form.Ac5.Visible(False)
Gui.Form.Ac5.Size(1905,9015)
Gui.Form.Ac5.Position(0,0)
Gui.Form.Ac5.Dock(3)
Gui.Form.Ac5.Minimized(False)
Gui.Form.Ac5.Event(ElementClick,Ac5_ElementClick)
Gui.Form.Ac4.Create(AccordionControl)
Gui.Form.Ac4.Enabled(True)
Gui.Form.Ac4.Visible(False)
Gui.Form.Ac4.Size(1905,9015)
Gui.Form.Ac4.Position(0,0)
Gui.Form.Ac4.Dock(3)
Gui.Form.Ac4.Minimized(False)
Gui.Form.Ac4.Event(ElementClick,Ac4_ElementClick)
Gui.Form.Ac3.Create(AccordionControl)
Gui.Form.Ac3.Enabled(True)
Gui.Form.Ac3.Visible(False)
Gui.Form.Ac3.Size(1905,9015)
Gui.Form.Ac3.Position(3810,0)
Gui.Form.Ac3.Dock(3)
Gui.Form.Ac3.Minimized(False)
Gui.Form.Ac3.Event(ElementClick,Ac3_ElementClick)
Gui.Form.Ac2.Create(AccordionControl)
Gui.Form.Ac2.Enabled(True)
Gui.Form.Ac2.Visible(False)
Gui.Form.Ac2.Size(1905,9555)
Gui.Form.Ac2.Position(3900,0)
Gui.Form.Ac2.Minimized(False)
Gui.Form.Ac2.Event(ElementClick,Ac2_ElementClick)
Gui.Form.Ac2.Dock(3)
Gui.Form.Ac1.Create(AccordionControl)
Gui.Form.Ac1.Enabled(True)
Gui.Form.Ac1.Visible(True)
Gui.Form.Ac1.Size(1905,9015)
Gui.Form.Ac1.Position(5715,0)
Gui.Form.Ac1.Minimized(False)
Gui.Form.Ac1.Dock(3)
Gui.Form.Ac1.Event(ElementClick,Ac1_ElementClick)
Gui.Form.AccordionControl1.Create(AccordionControl)
Gui.Form.AccordionControl1.Enabled(True)
Gui.Form.AccordionControl1.Visible(True)
Gui.Form.AccordionControl1.Size(3900,9015)
Gui.Form.AccordionControl1.Position(16095,0)
Gui.Form.AccordionControl1.Minimized(True)
Gui.Form.AccordionControl1.Dock(4)
Gui.Form.AccordionControl1.Event(ElementClick,AccordionControl1_ElementClick)
Gui.Form.txtMainYLineLocation.Create(TextBox,"",False,1500,300,0,15000,345,True,0,"Tahoma",8.25,,1)
Gui.Form.SplitContainer1.Create(SplitContainer)
Gui.Form.SplitContainer1.Enabled(True)
Gui.Form.SplitContainer1.Visible(True)
Gui.Form.SplitContainer1.Zorder(0)
Gui.Form.SplitContainer1.Size(4665,9015)
Gui.Form.SplitContainer1.Position(11430,0)
Gui.Form.SplitContainer1.Orientation(1)
Gui.Form.SplitContainer1.SplitterPosition(750)
Gui.Form.SplitContainer1.Collapsed(False)
Gui.Form.SplitContainer1.Dock(5)
Gui.Form.SplitContainer1.FixedPanel(0)
Gui.Form.chkNoRefresh.Create(CheckBox)
Gui.Form.chkNoRefresh.Enabled(True)
Gui.Form.chkNoRefresh.Visible(False)
Gui.Form.chkNoRefresh.Zorder(0)
Gui.Form.chkNoRefresh.Size(3780,300)
Gui.Form.chkNoRefresh.Position(165,435)
Gui.Form.chkNoRefresh.Caption("No Refresh After Closing WO Header")
Gui.Form.chkNoRefresh.FontName("Tahoma")
Gui.Form.chkNoRefresh.FontSize(8.25)
Gui.Form.chkNoRefresh.Parent("SplitContainer1",0)
Gui.Form.chkInvoiced.Create(CheckBox)
Gui.Form.chkInvoiced.Enabled(True)
Gui.Form.chkInvoiced.Visible(False)
Gui.Form.chkInvoiced.Zorder(0)
Gui.Form.chkInvoiced.Size(2175,300)
Gui.Form.chkInvoiced.Position(165,120)
Gui.Form.chkInvoiced.Caption("Show Invoiced Orders")
Gui.Form.chkInvoiced.FontName("Tahoma")
Gui.Form.chkInvoiced.FontSize(8.25)
Gui.Form.chkInvoiced.Parent("SplitContainer1",0)
Gui.Form.chkInvoiced.Event(Change,chkInvoiced_Change)
Gui.Form.chkCompleted.Create(CheckBox)
Gui.Form.chkCompleted.Enabled(True)
Gui.Form.chkCompleted.Visible(False)
Gui.Form.chkCompleted.Zorder(0)
Gui.Form.chkCompleted.Size(2175,300)
Gui.Form.chkCompleted.Position(195,120)
Gui.Form.chkCompleted.Caption("Show Completed Jobs")
Gui.Form.chkCompleted.FontName("Tahoma")
Gui.Form.chkCompleted.FontSize(8.25)
Gui.Form.chkCompleted.Parent("SplitContainer1",0)
Gui.Form.chkCompleted.Event(Change,chkCompleted_Change)
Gui.Form.GSGCJobSheet.Create(GsGridControl)
Gui.Form.GSGCJobSheet.Enabled(True)
Gui.Form.GSGCJobSheet.Visible(False)
Gui.Form.GSGCJobSheet.Zorder(0)
Gui.Form.GSGCJobSheet.Size(12285,9015)
Gui.Form.GSGCJobSheet.Position(0,0)
Gui.Form.GSGCJobSheet.Dock(5)
Gui.Form.GSGCJobSheet.Event(RowCellClick,GSGCJobSheet_RowCellClick)
Gui.Form.GSGCJobSheet.Parent("SplitContainer1",1)
Gui.Form.GSGCMainGalvaware.Create(GsGridControl)
Gui.Form.GSGCMainGalvaware.Enabled(True)
Gui.Form.GSGCMainGalvaware.Visible(True)
Gui.Form.GSGCMainGalvaware.Zorder(1)
Gui.Form.GSGCMainGalvaware.Size(16095,9555)
Gui.Form.GSGCMainGalvaware.Position(0,0)
Gui.Form.GSGCMainGalvaware.Dock(5)
Gui.Form.GSGCMainGalvaware.Event(RowCellClick,GSGCMainGalvaware_RowCellClick)
Gui.Form.GSGCMainGalvaware.Parent("SplitContainer1",1)
Gui.Form.tabInvoicing.Create(Tab)
Gui.Form.tabInvoicing.Enabled(True)
Gui.Form.tabInvoicing.Visible(False)
Gui.Form.tabInvoicing.Zorder(0)
Gui.Form.tabInvoicing.Size(4665,8085)
Gui.Form.tabInvoicing.Position(0,0)
Gui.Form.tabInvoicing.FontName("Tahoma")
Gui.Form.tabInvoicing.FontSize(8.25)
Gui.Form.tabInvoicing.Parent("SplitContainer1",1)
Gui.Form.tabInvoicing.Dock(5)
Gui.Form.tabInvoicing.Tabs(2)
Gui.Form.tabInvoicing.SetTab(0)
Gui.Form.tabInvoicing.Caption("Invoicing")
Gui.Form.tabInvoicing.SetTab(1)
Gui.Form.tabInvoicing.Caption("Invoiced")
Gui.Form.GSGCInvoicing.Create(GsGridControl)
Gui.Form.GSGCInvoicing.Enabled(True)
Gui.Form.GSGCInvoicing.Visible(False)
Gui.Form.GSGCInvoicing.Zorder(0)
Gui.Form.GSGCInvoicing.Size(4635,7650)
Gui.Form.GSGCInvoicing.Position(0,0)
Gui.Form.GSGCInvoicing.Dock(5)
Gui.Form.GSGCInvoicing.Event(CellValueChanged,GSGCInvoicing_CellValueChanged)
Gui.Form.GSGCInvoicing.Event(RowCellClick,GSGCInvoicing_RowCellClick)
Gui.Form.GSGCInvoicing.Parent("tabInvoicing",0)
Gui.Form.GSGCInvoiced.Create(GsGridControl)
Gui.Form.GSGCInvoiced.Enabled(True)
Gui.Form.GSGCInvoiced.Visible(False)
Gui.Form.GSGCInvoiced.Zorder(0)
Gui.Form.GSGCInvoiced.Size(4635,7650)
Gui.Form.GSGCInvoiced.Position(0,0)
Gui.Form.GSGCInvoiced.Dock(5)
Gui.Form.GSGCInvoiced.Parent("tabInvoicing",1)
Gui.Form.GSGCIssue.Create(GsGridControl)
Gui.Form.GSGCIssue.Enabled(True)
Gui.Form.GSGCIssue.Visible(True)
Gui.Form.GSGCIssue.Zorder(0)
Gui.Form.GSGCIssue.Size(8475,9015)
Gui.Form.GSGCIssue.Position(0,0)
Gui.Form.GSGCIssue.Dock(5)
Gui.Form.GSGCIssue.Event(CellValueChanged,GSGCIssue_CellValueChanged)
Gui.Form.GSGCIssue.Event(RowCellClick,GSGCIssue_RowCellClick)
Gui.Form.GSGCIssue.Parent("SplitContainer1",1)
Gui.Form.GSGCQALog.Create(GsGridControl)
Gui.Form.GSGCQALog.Enabled(True)
Gui.Form.GSGCQALog.Visible(False)
Gui.Form.GSGCQALog.Zorder(0)
Gui.Form.GSGCQALog.Size(6570,9015)
Gui.Form.GSGCQALog.Position(0,0)
Gui.Form.GSGCQALog.Dock(5)
Gui.Form.GSGCQALog.Event(CellValueChanged,GSGCQALog_CellValueChanged)
Gui.Form.GSGCQALog.Event(RowCellClick,GSGCQALog_RowCellClick)
Gui.Form.GSGCQALog.Parent("SplitContainer1",1)
Gui.Form.GSGCMaterial.Create(GsGridControl)
Gui.Form.GSGCMaterial.Enabled(True)
Gui.Form.GSGCMaterial.Visible(False)
Gui.Form.GSGCMaterial.Zorder(0)
Gui.Form.GSGCMaterial.Size(12285,9015)
Gui.Form.GSGCMaterial.Position(0,0)
Gui.Form.GSGCMaterial.Dock(5)
Gui.Form.GSGCMaterial.Event(CellValueChanged,GSGCMaterial_CellValueChanged)
Gui.Form.GSGCMaterial.Event(RowCellClick,GSGCMaterial_RowCellClick)
Gui.Form.GSGCMaterial.Parent("SplitContainer1",1)
Gui.FormLabel..Create(BaseForm)
Gui.FormLabel..Caption("Print Labels")
Gui.FormLabel..Size(11805,7995)
Gui.FormLabel..MinX(0)
Gui.FormLabel..MinY(0)
Gui.FormLabel..Position(0,0)
Gui.FormLabel..AlwaysOnTop(False)
Gui.FormLabel..FontName("Tahoma")
Gui.FormLabel..FontSize(8.25)
Gui.FormLabel..ControlBox(True)
Gui.FormLabel..MaxButton(True)
Gui.FormLabel..MinButton(True)
Gui.FormLabel..MousePointer(0)
Gui.FormLabel..Moveable(True)
Gui.FormLabel..Sizeable(True)
Gui.FormLabel..ShowInTaskBar(True)
Gui.FormLabel..TitleBar(True)
Gui.FormLabel..Event(UnLoad,FormLabel_UnLoad)
Gui.FormLabel.GSGCLabel.Create(GsGridControl)
Gui.FormLabel.GSGCLabel.Enabled(True)
Gui.FormLabel.GSGCLabel.Visible(True)
Gui.FormLabel.GSGCLabel.Zorder(0)
Gui.FormLabel.GSGCLabel.Size(11805,7005)
Gui.FormLabel.GSGCLabel.Position(0,0)
Gui.FormLabel.GSGCLabel.Dock(1)
Gui.FormLabel.GSGCLabel.Event(RowCellClick,GSGCLabel_RowCellClick)
Gui.FormLabel.GSGCLabel.Anchor(15)
Gui.FormLabel.cmdPrintAll.Create(Button)
Gui.FormLabel.cmdPrintAll.Enabled(True)
Gui.FormLabel.cmdPrintAll.Visible(True)
Gui.FormLabel.cmdPrintAll.Zorder(0)
Gui.FormLabel.cmdPrintAll.Size(1125,345)
Gui.FormLabel.cmdPrintAll.Position(10515,7110)
Gui.FormLabel.cmdPrintAll.Caption("Print All")
Gui.FormLabel.cmdPrintAll.FontName("Tahoma")
Gui.FormLabel.cmdPrintAll.FontSize(8.25)
Gui.FormLabel.cmdPrintAll.Event(Click,cmdPrintAll_Click)
Gui.FormLabel.cmdPrintAll.Anchor(10)
Gui.FormWorkOrderDetails..Create(DashForm)
Gui.FormWorkOrderDetails..Caption("Work Order Details")
Gui.FormWorkOrderDetails..Size(15360,10800)
Gui.FormWorkOrderDetails..MinX(0)
Gui.FormWorkOrderDetails..MinY(0)
Gui.FormWorkOrderDetails..Position(0,0)
Gui.FormWorkOrderDetails..AlwaysOnTop(False)
Gui.FormWorkOrderDetails..FontName("Tahoma")
Gui.FormWorkOrderDetails..FontSize(8.25)
Gui.FormWorkOrderDetails..ControlBox(True)
Gui.FormWorkOrderDetails..MaxButton(True)
Gui.FormWorkOrderDetails..MinButton(True)
Gui.FormWorkOrderDetails..MousePointer(0)
Gui.FormWorkOrderDetails..Moveable(True)
Gui.FormWorkOrderDetails..Sizeable(True)
Gui.FormWorkOrderDetails..ShowInTaskBar(True)
Gui.FormWorkOrderDetails..TitleBar(True)
Gui.FormWorkOrderDetails..Event(UserButtonClicked,FormWorkOrderDetails_UserButtonClicked)
Gui.FormWorkOrderDetails..Event(UnLoad,CloseWorkOrderDetails)
Gui.FormWorkOrderDetails.SplitContainerMAIN.Create(SplitContainer)
Gui.FormWorkOrderDetails.SplitContainerMAIN.Enabled(True)
Gui.FormWorkOrderDetails.SplitContainerMAIN.Visible(True)
Gui.FormWorkOrderDetails.SplitContainerMAIN.Zorder(0)
Gui.FormWorkOrderDetails.SplitContainerMAIN.Size(15360,10350)
Gui.FormWorkOrderDetails.SplitContainerMAIN.Position(0,0)
Gui.FormWorkOrderDetails.SplitContainerMAIN.Orientation(1)
Gui.FormWorkOrderDetails.SplitContainerMAIN.SplitterPosition(2295)
Gui.FormWorkOrderDetails.SplitContainerMAIN.Collapsed(False)
Gui.FormWorkOrderDetails.SplitContainerMAIN.Dock(5)
Gui.FormWorkOrderDetails.SplitContainerMAIN.FixedPanel(0)
Gui.FormWorkOrderDetails.lblID.Create(Label,"WO ID:",True,540,195,0,45,180,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblID.BorderStyle(0)
Gui.FormWorkOrderDetails.lblID.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.txtCustomerShipTo.Create(TextBox,"",True,1170,300,0,645,975,False,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtCustomerShipTo.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.txtCustomerCode.Create(TextBox,"",False,540,300,0,5625,570,False,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtCustomerCode.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.chkQA.Create(CheckBox)
Gui.FormWorkOrderDetails.chkQA.Enabled(True)
Gui.FormWorkOrderDetails.chkQA.Visible(True)
Gui.FormWorkOrderDetails.chkQA.Zorder(0)
Gui.FormWorkOrderDetails.chkQA.Size(600,300)
Gui.FormWorkOrderDetails.chkQA.Position(3075,1830)
Gui.FormWorkOrderDetails.chkQA.Caption("QA")
Gui.FormWorkOrderDetails.chkQA.FontName("Tahoma")
Gui.FormWorkOrderDetails.chkQA.FontSize(8.25)
Gui.FormWorkOrderDetails.chkQA.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.txtProcessingNote.Create(TextboxM)
Gui.FormWorkOrderDetails.txtProcessingNote.Enabled(True)
Gui.FormWorkOrderDetails.txtProcessingNote.Visible(True)
Gui.FormWorkOrderDetails.txtProcessingNote.Zorder(0)
Gui.FormWorkOrderDetails.txtProcessingNote.Size(8340,945)
Gui.FormWorkOrderDetails.txtProcessingNote.Position(6630,1125)
Gui.FormWorkOrderDetails.txtProcessingNote.FontName("Tahoma")
Gui.FormWorkOrderDetails.txtProcessingNote.FontSize(8.25)
Gui.FormWorkOrderDetails.txtProcessingNote.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.txtCustomerPhoneNumber.Create(TextBox,"",True,1500,300,0,645,1440,False,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtCustomerPhoneNumber.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.cmdButtonCustomer.Create(Button)
Gui.FormWorkOrderDetails.cmdButtonCustomer.Enabled(True)
Gui.FormWorkOrderDetails.cmdButtonCustomer.Visible(True)
Gui.FormWorkOrderDetails.cmdButtonCustomer.Zorder(0)
Gui.FormWorkOrderDetails.cmdButtonCustomer.Size(1125,345)
Gui.FormWorkOrderDetails.cmdButtonCustomer.Position(3870,540)
Gui.FormWorkOrderDetails.cmdButtonCustomer.Caption("Customer")
Gui.FormWorkOrderDetails.cmdButtonCustomer.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdButtonCustomer.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdButtonCustomer.Event(Click,cmdButtonCustomer_Click)
Gui.FormWorkOrderDetails.cmdButtonCustomer.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.txtCustomerName.Create(TextBox,"",True,3120,300,0,645,555,False,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtCustomerName.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.chkPriority.Create(CheckBox)
Gui.FormWorkOrderDetails.chkPriority.Enabled(True)
Gui.FormWorkOrderDetails.chkPriority.Visible(True)
Gui.FormWorkOrderDetails.chkPriority.Zorder(0)
Gui.FormWorkOrderDetails.chkPriority.Size(855,300)
Gui.FormWorkOrderDetails.chkPriority.Position(2190,1830)
Gui.FormWorkOrderDetails.chkPriority.Caption("Priority")
Gui.FormWorkOrderDetails.chkPriority.FontName("Tahoma")
Gui.FormWorkOrderDetails.chkPriority.FontSize(8.25)
Gui.FormWorkOrderDetails.chkPriority.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.txtCustomerReference.Create(TextBox,"",True,1920,300,0,3075,1440,True,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtCustomerReference.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.txtCustomerReference.MaxLength(50)
Gui.FormWorkOrderDetails.chkFaxFlag.Create(CheckBox)
Gui.FormWorkOrderDetails.chkFaxFlag.Enabled(False)
Gui.FormWorkOrderDetails.chkFaxFlag.Visible(False)
Gui.FormWorkOrderDetails.chkFaxFlag.Zorder(0)
Gui.FormWorkOrderDetails.chkFaxFlag.Size(1230,300)
Gui.FormWorkOrderDetails.chkFaxFlag.Position(5265,1635)
Gui.FormWorkOrderDetails.chkFaxFlag.Caption("Fax Flag")
Gui.FormWorkOrderDetails.chkFaxFlag.FontName("Tahoma")
Gui.FormWorkOrderDetails.chkFaxFlag.FontSize(8.25)
Gui.FormWorkOrderDetails.chkFaxFlag.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.txtEstimateRacks.Create(TextBox,"0",True,525,300,0,6030,1740,True,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtEstimateRacks.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.txtEstimateRacks.NumericOnly(1)
Gui.FormWorkOrderDetails.txtEstimateRacks.Mask("#0.0#")
Gui.FormWorkOrderDetails.txtEstimateRacks.MaxLength(5)
Gui.FormWorkOrderDetails.txtWOID.Create(TextBox,"",True,1500,300,0,645,135,False,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtWOID.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.chkNotifiedFlag.Create(CheckBox)
Gui.FormWorkOrderDetails.chkNotifiedFlag.Enabled(True)
Gui.FormWorkOrderDetails.chkNotifiedFlag.Visible(True)
Gui.FormWorkOrderDetails.chkNotifiedFlag.Zorder(0)
Gui.FormWorkOrderDetails.chkNotifiedFlag.Size(1230,300)
Gui.FormWorkOrderDetails.chkNotifiedFlag.Position(3780,1830)
Gui.FormWorkOrderDetails.chkNotifiedFlag.Caption("Notified Flag")
Gui.FormWorkOrderDetails.chkNotifiedFlag.FontName("Tahoma")
Gui.FormWorkOrderDetails.chkNotifiedFlag.FontSize(8.25)
Gui.FormWorkOrderDetails.chkNotifiedFlag.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.lblCustomerPhoneNumber.Create(Label,"Phone:",True,510,195,0,75,1485,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblCustomerPhoneNumber.BorderStyle(0)
Gui.FormWorkOrderDetails.lblCustomerPhoneNumber.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.lblCustomerReference.Create(Label,"Reference:",True,810,195,0,2235,1485,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblCustomerReference.BorderStyle(0)
Gui.FormWorkOrderDetails.lblCustomerReference.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.lblProcessingNote.Create(Label,"Processing Note:",True,1215,195,0,5325,1185,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblProcessingNote.BorderStyle(0)
Gui.FormWorkOrderDetails.lblProcessingNote.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.cmdButtonShipTo.Create(Button)
Gui.FormWorkOrderDetails.cmdButtonShipTo.Enabled(True)
Gui.FormWorkOrderDetails.cmdButtonShipTo.Visible(True)
Gui.FormWorkOrderDetails.cmdButtonShipTo.Zorder(0)
Gui.FormWorkOrderDetails.cmdButtonShipTo.Size(1125,345)
Gui.FormWorkOrderDetails.cmdButtonShipTo.Position(3870,960)
Gui.FormWorkOrderDetails.cmdButtonShipTo.Caption("Ship To Addr.")
Gui.FormWorkOrderDetails.cmdButtonShipTo.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdButtonShipTo.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdButtonShipTo.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.cmdButtonShipTo.Event(Click,cmdButtonShipTo_Click)
Gui.FormWorkOrderDetails.txtCustomerFaxNumber.Create(TextBox,"",False,1500,300,0,5265,795,False,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtCustomerFaxNumber.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.txtAdminNote.Create(TextboxM)
Gui.FormWorkOrderDetails.txtAdminNote.Enabled(True)
Gui.FormWorkOrderDetails.txtAdminNote.Visible(True)
Gui.FormWorkOrderDetails.txtAdminNote.Zorder(0)
Gui.FormWorkOrderDetails.txtAdminNote.Size(8340,945)
Gui.FormWorkOrderDetails.txtAdminNote.Position(6630,90)
Gui.FormWorkOrderDetails.txtAdminNote.FontName("Tahoma")
Gui.FormWorkOrderDetails.txtAdminNote.FontSize(8.25)
Gui.FormWorkOrderDetails.txtAdminNote.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.Create(Tab)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.Enabled(True)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.Visible(True)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.Zorder(0)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.Size(15360,7875)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.Position(0,0)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.FontName("Tahoma")
Gui.FormWorkOrderDetails.tabWorkOrderDetails.FontSize(8.25)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.Dock(5)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.ForeColor(0)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.Parent("SplitContainerMAIN",1)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.Event(Click,tabWorkOrderDetails_Click)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.Tabs(10)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.SetTab(0)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.Caption("Order Items")
Gui.FormWorkOrderDetails.tabWorkOrderDetails.SetTab(1)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.Caption("Transport Notes")
Gui.FormWorkOrderDetails.tabWorkOrderDetails.SetTab(2)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.Caption("Weights Overview")
Gui.FormWorkOrderDetails.tabWorkOrderDetails.SetTab(3)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.Caption("Job Allocation")
Gui.FormWorkOrderDetails.tabWorkOrderDetails.SetTab(4)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.Caption("Billing Info")
Gui.FormWorkOrderDetails.tabWorkOrderDetails.SetTab(5)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.Caption("Receipting Info")
Gui.FormWorkOrderDetails.tabWorkOrderDetails.SetTab(6)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.Caption("Contact Allocation")
Gui.FormWorkOrderDetails.tabWorkOrderDetails.SetTab(7)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.Caption("Notification Log")
Gui.FormWorkOrderDetails.tabWorkOrderDetails.SetTab(8)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.Caption("QA Log")
Gui.FormWorkOrderDetails.tabWorkOrderDetails.SetTab(9)
Gui.FormWorkOrderDetails.tabWorkOrderDetails.Caption("Rework")
Gui.FormWorkOrderDetails.GSGCReworktab.Create(GsGridControl)
Gui.FormWorkOrderDetails.GSGCReworktab.Enabled(True)
Gui.FormWorkOrderDetails.GSGCReworktab.Visible(True)
Gui.FormWorkOrderDetails.GSGCReworktab.Zorder(0)
Gui.FormWorkOrderDetails.GSGCReworktab.Size(15330,7440)
Gui.FormWorkOrderDetails.GSGCReworktab.Position(0,0)
Gui.FormWorkOrderDetails.GSGCReworktab.Parent("tabWorkOrderDetails",9)
Gui.FormWorkOrderDetails.GSGCReworktab.Dock(5)
Gui.FormWorkOrderDetails.GSGCReworktab.Event(RowCellClick,GSGCReworktab_RowCellClick)
Gui.FormWorkOrderDetails.SplitContainerOrderItems.Create(SplitContainer)
Gui.FormWorkOrderDetails.SplitContainerOrderItems.Enabled(True)
Gui.FormWorkOrderDetails.SplitContainerOrderItems.Visible(True)
Gui.FormWorkOrderDetails.SplitContainerOrderItems.Zorder(0)
Gui.FormWorkOrderDetails.SplitContainerOrderItems.Size(15330,7440)
Gui.FormWorkOrderDetails.SplitContainerOrderItems.Position(0,0)
Gui.FormWorkOrderDetails.SplitContainerOrderItems.Orientation(0)
Gui.FormWorkOrderDetails.SplitContainerOrderItems.SplitterPosition(6420)
Gui.FormWorkOrderDetails.SplitContainerOrderItems.Collapsed(False)
Gui.FormWorkOrderDetails.SplitContainerOrderItems.Parent("tabWorkOrderDetails",0)
Gui.FormWorkOrderDetails.SplitContainerOrderItems.Dock(5)
Gui.FormWorkOrderDetails.SplitContainerOrderItems.FixedPanel(0)
Gui.FormWorkOrderDetails.cmdOrderItemsAddQALog.Create(Button)
Gui.FormWorkOrderDetails.cmdOrderItemsAddQALog.Enabled(True)
Gui.FormWorkOrderDetails.cmdOrderItemsAddQALog.Visible(False)
Gui.FormWorkOrderDetails.cmdOrderItemsAddQALog.Zorder(0)
Gui.FormWorkOrderDetails.cmdOrderItemsAddQALog.Size(1050,345)
Gui.FormWorkOrderDetails.cmdOrderItemsAddQALog.Position(3840,0)
Gui.FormWorkOrderDetails.cmdOrderItemsAddQALog.Caption("Add QA Log")
Gui.FormWorkOrderDetails.cmdOrderItemsAddQALog.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdOrderItemsAddQALog.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdOrderItemsAddQALog.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.cmdOrderItemsPILOG.Create(Button)
Gui.FormWorkOrderDetails.cmdOrderItemsPILOG.Enabled(True)
Gui.FormWorkOrderDetails.cmdOrderItemsPILOG.Visible(False)
Gui.FormWorkOrderDetails.cmdOrderItemsPILOG.Zorder(0)
Gui.FormWorkOrderDetails.cmdOrderItemsPILOG.Size(675,345)
Gui.FormWorkOrderDetails.cmdOrderItemsPILOG.Position(4890,0)
Gui.FormWorkOrderDetails.cmdOrderItemsPILOG.Caption("PI Log")
Gui.FormWorkOrderDetails.cmdOrderItemsPILOG.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdOrderItemsPILOG.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdOrderItemsPILOG.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.txtOrderItemsServiceID.Create(TextBox,"",False,585,300,0,45,1080,False,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtOrderItemsServiceID.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.txtOrderItemsYLocation.Create(TextBox,"-1",False,1500,300,0,4395,5220,True,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtOrderItemsYLocation.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.txtOrderItemsYLocation.DefaultValue("")
Gui.FormWorkOrderDetails.cmdOrderItemsRework.Create(Button)
Gui.FormWorkOrderDetails.cmdOrderItemsRework.Enabled(True)
Gui.FormWorkOrderDetails.cmdOrderItemsRework.Visible(True)
Gui.FormWorkOrderDetails.cmdOrderItemsRework.Zorder(0)
Gui.FormWorkOrderDetails.cmdOrderItemsRework.Size(810,345)
Gui.FormWorkOrderDetails.cmdOrderItemsRework.Position(5565,0)
Gui.FormWorkOrderDetails.cmdOrderItemsRework.Caption("Rework")
Gui.FormWorkOrderDetails.cmdOrderItemsRework.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdOrderItemsRework.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdOrderItemsRework.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.cmdOrderItemsRework.Event(Click,cmdOrderItemsRework_Click)
Gui.FormWorkOrderDetails.cmdOrderItemsDelete.Create(Button)
Gui.FormWorkOrderDetails.cmdOrderItemsDelete.Enabled(True)
Gui.FormWorkOrderDetails.cmdOrderItemsDelete.Visible(True)
Gui.FormWorkOrderDetails.cmdOrderItemsDelete.Zorder(0)
Gui.FormWorkOrderDetails.cmdOrderItemsDelete.Size(705,345)
Gui.FormWorkOrderDetails.cmdOrderItemsDelete.Position(705,0)
Gui.FormWorkOrderDetails.cmdOrderItemsDelete.Caption("Delete")
Gui.FormWorkOrderDetails.cmdOrderItemsDelete.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdOrderItemsDelete.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdOrderItemsDelete.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.cmdOrderItemsDelete.Dock(0)
Gui.FormWorkOrderDetails.cmdOrderItemsDelete.Event(Click,cmdOrderItemsDelete_Click)
Gui.FormWorkOrderDetails.lblOrderItemNoQuenchFlag.Create(Label,"No Quench Flag:",True,1200,195,0,150,5130,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblOrderItemNoQuenchFlag.BorderStyle(0)
Gui.FormWorkOrderDetails.lblOrderItemNoQuenchFlag.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.lblOrderItemMinCharge.Create(Label,"Min Charge:",True,870,195,0,3540,4200,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblOrderItemMinCharge.BorderStyle(0)
Gui.FormWorkOrderDetails.lblOrderItemMinCharge.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.lblOrderItemPriority.Create(Label,"Priority:",True,570,195,0,3825,4530,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblOrderItemPriority.BorderStyle(0)
Gui.FormWorkOrderDetails.lblOrderItemPriority.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.lblOrderItemUnitQty2.Create(Label,"Total Weight (kg):",True,1305,195,0,30,4185,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblOrderItemUnitQty2.BorderStyle(0)
Gui.FormWorkOrderDetails.lblOrderItemUnitQty2.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.txtOrderItemsUnitQty.Create(TextBox,"",True,1500,300,0,1395,3810,True,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtOrderItemsUnitQty.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.txtOrderItemsUnitQty.NumericOnly(1)
Gui.FormWorkOrderDetails.txtOrderItemsUnitQty.Event(Change,txtOrderItemsUnitQty_Change)
Gui.FormWorkOrderDetails.txtOrderItemsQuoteID.Create(TextBox,"",True,1500,300,0,1395,3480,False,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtOrderItemsQuoteID.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.txtOrderItemsService.Create(TextBox,"",True,3450,300,0,1395,1050,False,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtOrderItemsService.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.lblOrderItemUnitQty.Create(Label,"Weight (kg/part):",True,1260,195,0,75,3870,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblOrderItemUnitQty.BorderStyle(0)
Gui.FormWorkOrderDetails.lblOrderItemUnitQty.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.txtOrderItemsItem.Create(TextBox,"",True,1500,300,0,1395,420,False,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtOrderItemsItem.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.lblOrderItemStatus.Create(Label,"Status:",True,525,195,0,795,795,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblOrderItemStatus.BorderStyle(0)
Gui.FormWorkOrderDetails.lblOrderItemStatus.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.chkOrderItemsNoquenchFlag.Create(CheckBox)
Gui.FormWorkOrderDetails.chkOrderItemsNoquenchFlag.Enabled(True)
Gui.FormWorkOrderDetails.chkOrderItemsNoquenchFlag.Visible(True)
Gui.FormWorkOrderDetails.chkOrderItemsNoquenchFlag.Zorder(0)
Gui.FormWorkOrderDetails.chkOrderItemsNoquenchFlag.Size(1125,300)
Gui.FormWorkOrderDetails.chkOrderItemsNoquenchFlag.Position(1395,5100)
Gui.FormWorkOrderDetails.chkOrderItemsNoquenchFlag.Caption("")
Gui.FormWorkOrderDetails.chkOrderItemsNoquenchFlag.FontName("Tahoma")
Gui.FormWorkOrderDetails.chkOrderItemsNoquenchFlag.FontSize(8.25)
Gui.FormWorkOrderDetails.chkOrderItemsNoquenchFlag.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.chkOrderItemsNoquenchFlag.Event(Change,chkOrderItemsNoquenchFlag_Change)
Gui.FormWorkOrderDetails.txtOrderItemsStatus.Create(TextBox,"",True,3450,300,0,1395,735,False,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtOrderItemsStatus.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.chkOrderItemsPriorityFlag.Create(CheckBox)
Gui.FormWorkOrderDetails.chkOrderItemsPriorityFlag.Enabled(True)
Gui.FormWorkOrderDetails.chkOrderItemsPriorityFlag.Visible(True)
Gui.FormWorkOrderDetails.chkOrderItemsPriorityFlag.Zorder(0)
Gui.FormWorkOrderDetails.chkOrderItemsPriorityFlag.Size(1125,300)
Gui.FormWorkOrderDetails.chkOrderItemsPriorityFlag.Position(1395,4770)
Gui.FormWorkOrderDetails.chkOrderItemsPriorityFlag.Caption("")
Gui.FormWorkOrderDetails.chkOrderItemsPriorityFlag.FontName("Tahoma")
Gui.FormWorkOrderDetails.chkOrderItemsPriorityFlag.FontSize(8.25)
Gui.FormWorkOrderDetails.chkOrderItemsPriorityFlag.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.chkOrderItemsPriorityFlag.Event(Change,chkOrderItemsPriorityFlag_Change)
Gui.FormWorkOrderDetails.lblOrderItemPriorityFlag.Create(Label,"Priority Flag:",True,915,195,0,420,4830,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblOrderItemPriorityFlag.BorderStyle(0)
Gui.FormWorkOrderDetails.lblOrderItemPriorityFlag.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.lblOrderItemPriorityFlag.Event(Click,lblOrderItemPriorityFlag_Click)
Gui.FormWorkOrderDetails.cmdOrderItemsClone.Create(Button)
Gui.FormWorkOrderDetails.cmdOrderItemsClone.Enabled(True)
Gui.FormWorkOrderDetails.cmdOrderItemsClone.Visible(True)
Gui.FormWorkOrderDetails.cmdOrderItemsClone.Zorder(0)
Gui.FormWorkOrderDetails.cmdOrderItemsClone.Size(600,345)
Gui.FormWorkOrderDetails.cmdOrderItemsClone.Position(2535,0)
Gui.FormWorkOrderDetails.cmdOrderItemsClone.Caption("Clone")
Gui.FormWorkOrderDetails.cmdOrderItemsClone.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdOrderItemsClone.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdOrderItemsClone.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.cmdOrderItemsClone.Event(Click,cmdOrderItemsClone_Click)
Gui.FormWorkOrderDetails.txtOrderItemsUnitFlag.Create(TextBox,"",True,1500,300,0,4470,3810,False,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtOrderItemsUnitFlag.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.lblOrderItemTagID.Create(Label,"Tag ID:",True,540,195,0,4260,1920,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblOrderItemTagID.BorderStyle(0)
Gui.FormWorkOrderDetails.lblOrderItemTagID.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.txtOrderItemsItemQty.Create(TextBox,"",True,1200,300,0,1395,1860,True,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtOrderItemsItemQty.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.txtOrderItemsItemQty.NumericOnly(2)
Gui.FormWorkOrderDetails.cmdOrderItemsInspect.Create(Button)
Gui.FormWorkOrderDetails.cmdOrderItemsInspect.Enabled(True)
Gui.FormWorkOrderDetails.cmdOrderItemsInspect.Visible(True)
Gui.FormWorkOrderDetails.cmdOrderItemsInspect.Zorder(0)
Gui.FormWorkOrderDetails.cmdOrderItemsInspect.Size(705,345)
Gui.FormWorkOrderDetails.cmdOrderItemsInspect.Position(3135,0)
Gui.FormWorkOrderDetails.cmdOrderItemsInspect.Caption("Inspect")
Gui.FormWorkOrderDetails.cmdOrderItemsInspect.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdOrderItemsInspect.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdOrderItemsInspect.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.cmdOrderItemsInspect.Event(Click,cmdOrderItemsInspect_Click)
Gui.FormWorkOrderDetails.txtOrderItemsMinCharge.Create(TextBox,"",True,1500,300,0,4470,4140,False,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtOrderItemsMinCharge.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.txtOrderItemsMinCharge.NumericOnly(1)
Gui.FormWorkOrderDetails.txtOrderItemsMinCharge.Mask("###,###,##0.00")
Gui.FormWorkOrderDetails.cmdOrderItemsUpdateLine.Create(Button)
Gui.FormWorkOrderDetails.cmdOrderItemsUpdateLine.Enabled(True)
Gui.FormWorkOrderDetails.cmdOrderItemsUpdateLine.Visible(False)
Gui.FormWorkOrderDetails.cmdOrderItemsUpdateLine.Zorder(0)
Gui.FormWorkOrderDetails.cmdOrderItemsUpdateLine.Size(1125,345)
Gui.FormWorkOrderDetails.cmdOrderItemsUpdateLine.Position(5235,375)
Gui.FormWorkOrderDetails.cmdOrderItemsUpdateLine.Caption("Update Line")
Gui.FormWorkOrderDetails.cmdOrderItemsUpdateLine.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdOrderItemsUpdateLine.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdOrderItemsUpdateLine.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.cmdOrderItemsUpdateLine.Event(Click,cmdOrderItemsUpdateLine_Click)
Gui.FormWorkOrderDetails.txtOrderItemsDescriptionMultiline.Create(TextboxM)
Gui.FormWorkOrderDetails.txtOrderItemsDescriptionMultiline.Enabled(True)
Gui.FormWorkOrderDetails.txtOrderItemsDescriptionMultiline.Visible(True)
Gui.FormWorkOrderDetails.txtOrderItemsDescriptionMultiline.Zorder(0)
Gui.FormWorkOrderDetails.txtOrderItemsDescriptionMultiline.Size(5010,1215)
Gui.FormWorkOrderDetails.txtOrderItemsDescriptionMultiline.Position(1395,2205)
Gui.FormWorkOrderDetails.txtOrderItemsDescriptionMultiline.FontName("Tahoma")
Gui.FormWorkOrderDetails.txtOrderItemsDescriptionMultiline.FontSize(8.25)
Gui.FormWorkOrderDetails.txtOrderItemsDescriptionMultiline.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.txtOrderItemsStatusID.Create(TextBox,"",False,600,300,0,45,765,False,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtOrderItemsStatusID.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.txtOrderItemsTotalWeight.Create(TextBox,"",True,1500,300,0,1395,4140,True,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtOrderItemsTotalWeight.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.txtOrderItemsTotalWeight.NumericOnly(1)
Gui.FormWorkOrderDetails.cmdOrderItemsReset.Create(Button)
Gui.FormWorkOrderDetails.cmdOrderItemsReset.Enabled(True)
Gui.FormWorkOrderDetails.cmdOrderItemsReset.Visible(True)
Gui.FormWorkOrderDetails.cmdOrderItemsReset.Zorder(0)
Gui.FormWorkOrderDetails.cmdOrderItemsReset.Size(1125,345)
Gui.FormWorkOrderDetails.cmdOrderItemsReset.Position(5235,705)
Gui.FormWorkOrderDetails.cmdOrderItemsReset.Caption("Reset")
Gui.FormWorkOrderDetails.cmdOrderItemsReset.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdOrderItemsReset.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdOrderItemsReset.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.cmdOrderItemsReset.Event(Click,cmdOrderItemsReset_Click)
Gui.FormWorkOrderDetails.cmdOrderItemsUpdate.Create(Button)
Gui.FormWorkOrderDetails.cmdOrderItemsUpdate.Enabled(True)
Gui.FormWorkOrderDetails.cmdOrderItemsUpdate.Visible(True)
Gui.FormWorkOrderDetails.cmdOrderItemsUpdate.Zorder(0)
Gui.FormWorkOrderDetails.cmdOrderItemsUpdate.Size(705,345)
Gui.FormWorkOrderDetails.cmdOrderItemsUpdate.Position(0,0)
Gui.FormWorkOrderDetails.cmdOrderItemsUpdate.Caption("Update")
Gui.FormWorkOrderDetails.cmdOrderItemsUpdate.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdOrderItemsUpdate.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdOrderItemsUpdate.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.cmdOrderItemsUpdate.Dock(0)
Gui.FormWorkOrderDetails.cmdOrderItemsUpdate.Event(Click,cmdOrderItemsUpdate_Click)
Gui.FormWorkOrderDetails.txtOrderItemsUnityPrice.Create(TextBox,"",True,1500,300,0,1395,4470,True,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtOrderItemsUnityPrice.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.txtOrderItemsUnityPrice.NumericOnly(1)
Gui.FormWorkOrderDetails.txtOrderItemsUnityPrice.Mask("###,###,##0.00")
Gui.FormWorkOrderDetails.lblOrderItemUnit.Create(Label,"Unit:",True,345,195,0,4065,3855,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblOrderItemUnit.BorderStyle(0)
Gui.FormWorkOrderDetails.lblOrderItemUnit.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.lblOrderItemUnitPrice.Create(Label,"Unit Price:",True,735,195,0,600,4515,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblOrderItemUnitPrice.BorderStyle(0)
Gui.FormWorkOrderDetails.lblOrderItemUnitPrice.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.lblOrderItemItemQuantity.Create(Label,"Item Qty:",True,705,195,0,615,1920,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblOrderItemItemQuantity.BorderStyle(0)
Gui.FormWorkOrderDetails.lblOrderItemItemQuantity.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.ddlOrderItemsYard2.Create(DropDownList)
Gui.FormWorkOrderDetails.ddlOrderItemsYard2.Enabled(True)
Gui.FormWorkOrderDetails.ddlOrderItemsYard2.Visible(True)
Gui.FormWorkOrderDetails.ddlOrderItemsYard2.Zorder(0)
Gui.FormWorkOrderDetails.ddlOrderItemsYard2.Size(930,300)
Gui.FormWorkOrderDetails.ddlOrderItemsYard2.Position(3240,1860)
Gui.FormWorkOrderDetails.ddlOrderItemsYard2.FontName("Tahoma")
Gui.FormWorkOrderDetails.ddlOrderItemsYard2.FontSize(8.25)
Gui.FormWorkOrderDetails.ddlOrderItemsYard2.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.txtOrderItemsPriority.Create(TextBox,"",True,1500,300,0,4470,4485,False,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtOrderItemsPriority.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.txtOrderItemsPriority.NumericOnly(1)
Gui.FormWorkOrderDetails.txtOrderItemsPriority.Mask("###,###,##0.00")
Gui.FormWorkOrderDetails.cmdOrderItemsService.Create(Button)
Gui.FormWorkOrderDetails.cmdOrderItemsService.Enabled(True)
Gui.FormWorkOrderDetails.cmdOrderItemsService.Visible(True)
Gui.FormWorkOrderDetails.cmdOrderItemsService.Zorder(0)
Gui.FormWorkOrderDetails.cmdOrderItemsService.Size(1125,345)
Gui.FormWorkOrderDetails.cmdOrderItemsService.Position(5235,1080)
Gui.FormWorkOrderDetails.cmdOrderItemsService.Caption("Service")
Gui.FormWorkOrderDetails.cmdOrderItemsService.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdOrderItemsService.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdOrderItemsService.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.cmdOrderItemsService.Event(Click,cmdOrderItemsService_Click)
Gui.FormWorkOrderDetails.cmdCalculateWeight.Create(Button)
Gui.FormWorkOrderDetails.cmdCalculateWeight.Enabled(True)
Gui.FormWorkOrderDetails.cmdCalculateWeight.Visible(True)
Gui.FormWorkOrderDetails.cmdCalculateWeight.Zorder(0)
Gui.FormWorkOrderDetails.cmdCalculateWeight.Size(555,270)
Gui.FormWorkOrderDetails.cmdCalculateWeight.Position(2925,3825)
Gui.FormWorkOrderDetails.cmdCalculateWeight.Caption("Calc")
Gui.FormWorkOrderDetails.cmdCalculateWeight.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdCalculateWeight.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdCalculateWeight.Event(Click,cmdCalculateWeight_Click)
Gui.FormWorkOrderDetails.cmdCalculateWeight.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.cmdCalculateWeight.ToolTip("Total Weight/Item Qty")
Gui.FormWorkOrderDetails.lblOrderItemItemQtyBasedFlag.Create(Label,"Itm Qty Based Flag:",True,1440,195,0,2970,3525,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblOrderItemItemQtyBasedFlag.BorderStyle(0)
Gui.FormWorkOrderDetails.lblOrderItemItemQtyBasedFlag.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.ddlOrderItemsYard1.Create(DropDownList)
Gui.FormWorkOrderDetails.ddlOrderItemsYard1.Enabled(True)
Gui.FormWorkOrderDetails.ddlOrderItemsYard1.Visible(True)
Gui.FormWorkOrderDetails.ddlOrderItemsYard1.Zorder(0)
Gui.FormWorkOrderDetails.ddlOrderItemsYard1.Size(930,300)
Gui.FormWorkOrderDetails.ddlOrderItemsYard1.Position(3240,1515)
Gui.FormWorkOrderDetails.ddlOrderItemsYard1.FontName("Tahoma")
Gui.FormWorkOrderDetails.ddlOrderItemsYard1.FontSize(8.25)
Gui.FormWorkOrderDetails.ddlOrderItemsYard1.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.txtOrderItemsYard.Create(TextBox,"",False,960,300,0,3090,5835,True,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtOrderItemsYard.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.lblOrderItemDescription.Create(Label,"Description:",True,855,195,0,465,2265,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblOrderItemDescription.BorderStyle(0)
Gui.FormWorkOrderDetails.lblOrderItemDescription.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.txtOrderItemsTagID.Create(TextBox,"",True,1500,300,0,4875,1860,True,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtOrderItemsTagID.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.cmdOrderItemsAddService.Create(Button)
Gui.FormWorkOrderDetails.cmdOrderItemsAddService.Enabled(True)
Gui.FormWorkOrderDetails.cmdOrderItemsAddService.Visible(True)
Gui.FormWorkOrderDetails.cmdOrderItemsAddService.Zorder(0)
Gui.FormWorkOrderDetails.cmdOrderItemsAddService.Size(1125,345)
Gui.FormWorkOrderDetails.cmdOrderItemsAddService.Position(1410,0)
Gui.FormWorkOrderDetails.cmdOrderItemsAddService.Caption("Add Service")
Gui.FormWorkOrderDetails.cmdOrderItemsAddService.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdOrderItemsAddService.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdOrderItemsAddService.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.cmdOrderItemsAddService.Event(Click,OpenWorkOrderAddService)
Gui.FormWorkOrderDetails.lblOrderItemDescription2.Create(Label,"(Part)",True,420,195,0,465,2475,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblOrderItemDescription2.BorderStyle(0)
Gui.FormWorkOrderDetails.lblOrderItemDescription2.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.lblOrderItemItem.Create(Label,"Item:",True,390,195,0,930,465,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblOrderItemItem.BorderStyle(0)
Gui.FormWorkOrderDetails.lblOrderItemItem.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.lblOrderItemYard2.Create(Label,"Yard 1:",True,525,195,0,2625,1575,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblOrderItemYard2.BorderStyle(0)
Gui.FormWorkOrderDetails.lblOrderItemYard2.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.lblOrderItemQuoteID.Create(Label,"Quote ID:",True,720,195,0,615,3555,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblOrderItemQuoteID.BorderStyle(0)
Gui.FormWorkOrderDetails.lblOrderItemQuoteID.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.lblOrderItemService.Create(Label,"Service:",True,585,195,0,735,1095,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblOrderItemService.BorderStyle(0)
Gui.FormWorkOrderDetails.lblOrderItemService.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.lblOrderItemYard.Create(Label,"Yard 2:",True,525,195,0,2625,1920,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblOrderItemYard.BorderStyle(0)
Gui.FormWorkOrderDetails.lblOrderItemYard.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.GSGCOrderItemstab.Create(GsGridControl)
Gui.FormWorkOrderDetails.GSGCOrderItemstab.Enabled(True)
Gui.FormWorkOrderDetails.GSGCOrderItemstab.Visible(True)
Gui.FormWorkOrderDetails.GSGCOrderItemstab.Zorder(0)
Gui.FormWorkOrderDetails.GSGCOrderItemstab.Size(8670,7560)
Gui.FormWorkOrderDetails.GSGCOrderItemstab.Position(0,0)
Gui.FormWorkOrderDetails.GSGCOrderItemstab.Dock(5)
Gui.FormWorkOrderDetails.GSGCOrderItemstab.Parent("SplitContainerOrderItems",1)
Gui.FormWorkOrderDetails.GSGCOrderItemstab.Event(RowCellClick,GSGCOrderItemstab_RowCellClick)
Gui.FormWorkOrderDetails.chkOrderItemsItmQtyBasedFlag.Create(CheckBox)
Gui.FormWorkOrderDetails.chkOrderItemsItmQtyBasedFlag.Enabled(True)
Gui.FormWorkOrderDetails.chkOrderItemsItmQtyBasedFlag.Visible(True)
Gui.FormWorkOrderDetails.chkOrderItemsItmQtyBasedFlag.Zorder(0)
Gui.FormWorkOrderDetails.chkOrderItemsItmQtyBasedFlag.Size(1125,300)
Gui.FormWorkOrderDetails.chkOrderItemsItmQtyBasedFlag.Position(4470,3480)
Gui.FormWorkOrderDetails.chkOrderItemsItmQtyBasedFlag.Caption("")
Gui.FormWorkOrderDetails.chkOrderItemsItmQtyBasedFlag.FontName("Tahoma")
Gui.FormWorkOrderDetails.chkOrderItemsItmQtyBasedFlag.FontSize(8.25)
Gui.FormWorkOrderDetails.chkOrderItemsItmQtyBasedFlag.Parent("SplitContainerOrderItems",0)
Gui.FormWorkOrderDetails.GSGCQALogDetails.Create(GsGridControl)
Gui.FormWorkOrderDetails.GSGCQALogDetails.Enabled(True)
Gui.FormWorkOrderDetails.GSGCQALogDetails.Visible(True)
Gui.FormWorkOrderDetails.GSGCQALogDetails.Zorder(0)
Gui.FormWorkOrderDetails.GSGCQALogDetails.Size(15330,7035)
Gui.FormWorkOrderDetails.GSGCQALogDetails.Position(0,405)
Gui.FormWorkOrderDetails.GSGCQALogDetails.Parent("tabWorkOrderDetails",8)
Gui.FormWorkOrderDetails.GSGCQALogDetails.Dock(0)
Gui.FormWorkOrderDetails.GSGCQALogDetails.Event(RowCellClick,GSGCQALogDetails_RowCellClick)
Gui.FormWorkOrderDetails.GSGCQALogDetails.Anchor(15)
Gui.FormWorkOrderDetails.dtpDeliveryDate.Create(DatePicker)
Gui.FormWorkOrderDetails.dtpDeliveryDate.Enabled(True)
Gui.FormWorkOrderDetails.dtpDeliveryDate.Visible(True)
Gui.FormWorkOrderDetails.dtpDeliveryDate.Zorder(0)
Gui.FormWorkOrderDetails.dtpDeliveryDate.Size(1500,300)
Gui.FormWorkOrderDetails.dtpDeliveryDate.Position(2925,1500)
Gui.FormWorkOrderDetails.dtpDeliveryDate.CheckBox(False)
Gui.FormWorkOrderDetails.dtpDeliveryDate.Value(V.Ambient.Now)
Gui.FormWorkOrderDetails.dtpDeliveryDate.FontName("Tahoma")
Gui.FormWorkOrderDetails.dtpDeliveryDate.FontSize(8.25)
Gui.FormWorkOrderDetails.dtpDeliveryDate.Parent("tabWorkOrderDetails",5)
Gui.FormWorkOrderDetails.txtReceiptTime.Create(TextBox,"",True,1305,300,0,4605,405,True,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtReceiptTime.Parent("tabWorkOrderDetails",5)
Gui.FormWorkOrderDetails.dtpUserLastDateTime.Create(DatePicker)
Gui.FormWorkOrderDetails.dtpUserLastDateTime.Enabled(False)
Gui.FormWorkOrderDetails.dtpUserLastDateTime.Visible(False)
Gui.FormWorkOrderDetails.dtpUserLastDateTime.Zorder(0)
Gui.FormWorkOrderDetails.dtpUserLastDateTime.Size(1500,300)
Gui.FormWorkOrderDetails.dtpUserLastDateTime.Position(2925,2610)
Gui.FormWorkOrderDetails.dtpUserLastDateTime.CheckBox(False)
Gui.FormWorkOrderDetails.dtpUserLastDateTime.FontName("Tahoma")
Gui.FormWorkOrderDetails.dtpUserLastDateTime.FontSize(8.25)
Gui.FormWorkOrderDetails.dtpUserLastDateTime.Parent("tabWorkOrderDetails",5)
Gui.FormWorkOrderDetails.lblReceiptingInfo5.Create(Label,"Sys Row Update Serial:",False,1680,195,0,1185,3030,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblReceiptingInfo5.BorderStyle(0)
Gui.FormWorkOrderDetails.lblReceiptingInfo5.Parent("tabWorkOrderDetails",5)
Gui.FormWorkOrderDetails.lblReceiptingInfo4.Create(Label,"Sys User Last Access Date Time:",False,2340,195,0,525,2655,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblReceiptingInfo4.BorderStyle(0)
Gui.FormWorkOrderDetails.lblReceiptingInfo4.Parent("tabWorkOrderDetails",5)
Gui.FormWorkOrderDetails.txtInspectedTime.Create(TextBox,"",True,1305,300,0,4605,780,True,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtInspectedTime.Parent("tabWorkOrderDetails",5)
Gui.FormWorkOrderDetails.dtpInspectedDate.Create(DatePicker)
Gui.FormWorkOrderDetails.dtpInspectedDate.Enabled(True)
Gui.FormWorkOrderDetails.dtpInspectedDate.Visible(True)
Gui.FormWorkOrderDetails.dtpInspectedDate.Zorder(0)
Gui.FormWorkOrderDetails.dtpInspectedDate.Size(1500,300)
Gui.FormWorkOrderDetails.dtpInspectedDate.Position(2925,765)
Gui.FormWorkOrderDetails.dtpInspectedDate.CheckBox(False)
Gui.FormWorkOrderDetails.dtpInspectedDate.FontName("Tahoma")
Gui.FormWorkOrderDetails.dtpInspectedDate.FontSize(8.25)
Gui.FormWorkOrderDetails.dtpInspectedDate.Parent("tabWorkOrderDetails",5)
Gui.FormWorkOrderDetails.lblReceiptingInfoDateTimeInspected.Create(Label,"Date Time Inspected:",True,1545,195,0,1305,825,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblReceiptingInfoDateTimeInspected.BorderStyle(0)
Gui.FormWorkOrderDetails.lblReceiptingInfoDateTimeInspected.Parent("tabWorkOrderDetails",5)
Gui.FormWorkOrderDetails.dtpReceiptedDate.Create(DatePicker)
Gui.FormWorkOrderDetails.dtpReceiptedDate.Enabled(True)
Gui.FormWorkOrderDetails.dtpReceiptedDate.Visible(True)
Gui.FormWorkOrderDetails.dtpReceiptedDate.Zorder(0)
Gui.FormWorkOrderDetails.dtpReceiptedDate.Size(1500,300)
Gui.FormWorkOrderDetails.dtpReceiptedDate.Position(2925,405)
Gui.FormWorkOrderDetails.dtpReceiptedDate.CheckBox(False)
Gui.FormWorkOrderDetails.dtpReceiptedDate.FontName("Tahoma")
Gui.FormWorkOrderDetails.dtpReceiptedDate.FontSize(8.25)
Gui.FormWorkOrderDetails.dtpReceiptedDate.Parent("tabWorkOrderDetails",5)
Gui.FormWorkOrderDetails.txtReceiptedby.Create(TextBox,"",True,1500,300,0,2925,1860,False,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtReceiptedby.Parent("tabWorkOrderDetails",5)
Gui.FormWorkOrderDetails.lblReceiptingInfo7.Create(Label,"Estimated Delivery Date:",True,1785,195,0,1065,1560,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblReceiptingInfo7.BorderStyle(0)
Gui.FormWorkOrderDetails.lblReceiptingInfo7.Parent("tabWorkOrderDetails",5)
Gui.FormWorkOrderDetails.lblReceiptingInfo7.ToolTip("Calculated from Receipted Date plus x work days")
Gui.FormWorkOrderDetails.txt3.Create(TextBox,"",False,1500,300,0,2925,2985,True,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txt3.Parent("tabWorkOrderDetails",5)
Gui.FormWorkOrderDetails.cmdUpdateReceipting.Create(Button)
Gui.FormWorkOrderDetails.cmdUpdateReceipting.Enabled(True)
Gui.FormWorkOrderDetails.cmdUpdateReceipting.Visible(True)
Gui.FormWorkOrderDetails.cmdUpdateReceipting.Zorder(0)
Gui.FormWorkOrderDetails.cmdUpdateReceipting.Size(1125,345)
Gui.FormWorkOrderDetails.cmdUpdateReceipting.Position(45,15)
Gui.FormWorkOrderDetails.cmdUpdateReceipting.Caption("Update")
Gui.FormWorkOrderDetails.cmdUpdateReceipting.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdUpdateReceipting.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdUpdateReceipting.Parent("tabWorkOrderDetails",5)
Gui.FormWorkOrderDetails.cmdUpdateReceipting.Event(Click,cmdUpdateReceipting_Click)
Gui.FormWorkOrderDetails.lblOrderSubTotal.Create(Label,"0.00",True,330,195,0,1830,1680,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblOrderSubTotal.BorderStyle(0)
Gui.FormWorkOrderDetails.lblOrderSubTotal.Parent("tabWorkOrderDetails",4)
Gui.FormWorkOrderDetails.lblPriceGroup.Create(Label,"No Price Group Selected",True,1725,195,0,1680,2580,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblPriceGroup.BorderStyle(0)
Gui.FormWorkOrderDetails.lblPriceGroup.Parent("tabWorkOrderDetails",4)
Gui.FormWorkOrderDetails.txtBillingInfoDateTimeInvoiced.Create(TextBox,"",True,2415,300,0,1815,435,True,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtBillingInfoDateTimeInvoiced.Parent("tabWorkOrderDetails",4)
Gui.FormWorkOrderDetails.lblBillingInfoTaxSubtotal.Create(Label,"Tax Sub-Total:",True,1065,195,0,720,1920,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblBillingInfoTaxSubtotal.BorderStyle(0)
Gui.FormWorkOrderDetails.lblBillingInfoTaxSubtotal.Parent("tabWorkOrderDetails",4)
Gui.FormWorkOrderDetails.lblReceiptingInfo2.Create(Label,"Receipted By:",True,1005,195,0,1830,1905,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblReceiptingInfo2.BorderStyle(0)
Gui.FormWorkOrderDetails.lblReceiptingInfo2.Parent("tabWorkOrderDetails",5)
Gui.FormWorkOrderDetails.lblReceiptingInfo3.Create(Label,"Sys User Last Access:",False,1575,195,0,1290,2280,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblReceiptingInfo3.BorderStyle(0)
Gui.FormWorkOrderDetails.lblReceiptingInfo3.Parent("tabWorkOrderDetails",5)
Gui.FormWorkOrderDetails.chkBillingInfoMinChargeExemptionFlag.Create(CheckBox)
Gui.FormWorkOrderDetails.chkBillingInfoMinChargeExemptionFlag.Enabled(True)
Gui.FormWorkOrderDetails.chkBillingInfoMinChargeExemptionFlag.Visible(True)
Gui.FormWorkOrderDetails.chkBillingInfoMinChargeExemptionFlag.Zorder(0)
Gui.FormWorkOrderDetails.chkBillingInfoMinChargeExemptionFlag.Size(1125,300)
Gui.FormWorkOrderDetails.chkBillingInfoMinChargeExemptionFlag.Position(1830,810)
Gui.FormWorkOrderDetails.chkBillingInfoMinChargeExemptionFlag.Caption("")
Gui.FormWorkOrderDetails.chkBillingInfoMinChargeExemptionFlag.FontName("Tahoma")
Gui.FormWorkOrderDetails.chkBillingInfoMinChargeExemptionFlag.FontSize(8.25)
Gui.FormWorkOrderDetails.chkBillingInfoMinChargeExemptionFlag.Parent("tabWorkOrderDetails",4)
Gui.FormWorkOrderDetails.frameQALog.Create(Frame)
Gui.FormWorkOrderDetails.frameQALog.Enabled(True)
Gui.FormWorkOrderDetails.frameQALog.Visible(True)
Gui.FormWorkOrderDetails.frameQALog.Zorder(0)
Gui.FormWorkOrderDetails.frameQALog.Size(15330,375)
Gui.FormWorkOrderDetails.frameQALog.Position(0,0)
Gui.FormWorkOrderDetails.frameQALog.Caption("")
Gui.FormWorkOrderDetails.frameQALog.FontName("Tahoma")
Gui.FormWorkOrderDetails.frameQALog.FontSize(8.25)
Gui.FormWorkOrderDetails.frameQALog.Parent("tabWorkOrderDetails",8)
Gui.FormWorkOrderDetails.frameQALog.Dock(1)
Gui.FormWorkOrderDetails.cmdQALogPrint.Create(Button)
Gui.FormWorkOrderDetails.cmdQALogPrint.Enabled(True)
Gui.FormWorkOrderDetails.cmdQALogPrint.Visible(True)
Gui.FormWorkOrderDetails.cmdQALogPrint.Zorder(0)
Gui.FormWorkOrderDetails.cmdQALogPrint.Size(1125,345)
Gui.FormWorkOrderDetails.cmdQALogPrint.Position(30,0)
Gui.FormWorkOrderDetails.cmdQALogPrint.Caption("Print Log")
Gui.FormWorkOrderDetails.cmdQALogPrint.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdQALogPrint.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdQALogPrint.Parent("frameQALog")
Gui.FormWorkOrderDetails.cmdQALogPrint.Event(Click,cmdQALogPrint_Click)
Gui.FormWorkOrderDetails.frameNotificationLogTab.Create(Frame)
Gui.FormWorkOrderDetails.frameNotificationLogTab.Enabled(True)
Gui.FormWorkOrderDetails.frameNotificationLogTab.Visible(False)
Gui.FormWorkOrderDetails.frameNotificationLogTab.Zorder(0)
Gui.FormWorkOrderDetails.frameNotificationLogTab.Size(15330,345)
Gui.FormWorkOrderDetails.frameNotificationLogTab.Position(0,0)
Gui.FormWorkOrderDetails.frameNotificationLogTab.Caption("")
Gui.FormWorkOrderDetails.frameNotificationLogTab.FontName("Tahoma")
Gui.FormWorkOrderDetails.frameNotificationLogTab.FontSize(8.25)
Gui.FormWorkOrderDetails.frameNotificationLogTab.Parent("tabWorkOrderDetails",7)
Gui.FormWorkOrderDetails.frameNotificationLogTab.Dock(1)
Gui.FormWorkOrderDetails.frameNotificationLogTab.FlowBreak(True)
Gui.FormWorkOrderDetails.cmdNotificationLogUpdateBtn.Create(Button)
Gui.FormWorkOrderDetails.cmdNotificationLogUpdateBtn.Enabled(True)
Gui.FormWorkOrderDetails.cmdNotificationLogUpdateBtn.Visible(False)
Gui.FormWorkOrderDetails.cmdNotificationLogUpdateBtn.Zorder(0)
Gui.FormWorkOrderDetails.cmdNotificationLogUpdateBtn.Size(1125,345)
Gui.FormWorkOrderDetails.cmdNotificationLogUpdateBtn.Position(0,0)
Gui.FormWorkOrderDetails.cmdNotificationLogUpdateBtn.Caption("Update2")
Gui.FormWorkOrderDetails.cmdNotificationLogUpdateBtn.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdNotificationLogUpdateBtn.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdNotificationLogUpdateBtn.Parent("frameNotificationLogTab")
Gui.FormWorkOrderDetails.cmdNotificationLogDelete.Create(Button)
Gui.FormWorkOrderDetails.cmdNotificationLogDelete.Enabled(True)
Gui.FormWorkOrderDetails.cmdNotificationLogDelete.Visible(False)
Gui.FormWorkOrderDetails.cmdNotificationLogDelete.Zorder(0)
Gui.FormWorkOrderDetails.cmdNotificationLogDelete.Size(1125,345)
Gui.FormWorkOrderDetails.cmdNotificationLogDelete.Position(1125,0)
Gui.FormWorkOrderDetails.cmdNotificationLogDelete.Caption("Delete")
Gui.FormWorkOrderDetails.cmdNotificationLogDelete.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdNotificationLogDelete.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdNotificationLogDelete.Parent("frameNotificationLogTab")
Gui.FormWorkOrderDetails.GSGCNotificationLog.Create(GsGridControl)
Gui.FormWorkOrderDetails.GSGCNotificationLog.Enabled(True)
Gui.FormWorkOrderDetails.GSGCNotificationLog.Visible(True)
Gui.FormWorkOrderDetails.GSGCNotificationLog.Zorder(0)
Gui.FormWorkOrderDetails.GSGCNotificationLog.Size(15330,7095)
Gui.FormWorkOrderDetails.GSGCNotificationLog.Position(0,345)
Gui.FormWorkOrderDetails.GSGCNotificationLog.Parent("tabWorkOrderDetails",7)
Gui.FormWorkOrderDetails.GSGCNotificationLog.Dock(5)
Gui.FormWorkOrderDetails.SplitContainerContactAllocation.Create(SplitContainer)
Gui.FormWorkOrderDetails.SplitContainerContactAllocation.Enabled(True)
Gui.FormWorkOrderDetails.SplitContainerContactAllocation.Visible(True)
Gui.FormWorkOrderDetails.SplitContainerContactAllocation.Zorder(0)
Gui.FormWorkOrderDetails.SplitContainerContactAllocation.Size(15330,7215)
Gui.FormWorkOrderDetails.SplitContainerContactAllocation.Position(0,0)
Gui.FormWorkOrderDetails.SplitContainerContactAllocation.Orientation(1)
Gui.FormWorkOrderDetails.SplitContainerContactAllocation.SplitterPosition(2535)
Gui.FormWorkOrderDetails.SplitContainerContactAllocation.Collapsed(False)
Gui.FormWorkOrderDetails.SplitContainerContactAllocation.Parent("tabWorkOrderDetails",6)
Gui.FormWorkOrderDetails.SplitContainerContactAllocation.Dock(5)
Gui.FormWorkOrderDetails.GSGCContactDeallocate.Create(GsGridControl)
Gui.FormWorkOrderDetails.GSGCContactDeallocate.Enabled(True)
Gui.FormWorkOrderDetails.GSGCContactDeallocate.Visible(True)
Gui.FormWorkOrderDetails.GSGCContactDeallocate.Zorder(0)
Gui.FormWorkOrderDetails.GSGCContactDeallocate.Size(15330,2625)
Gui.FormWorkOrderDetails.GSGCContactDeallocate.Position(0,0)
Gui.FormWorkOrderDetails.GSGCContactDeallocate.Parent("SplitContainerContactAllocation",0)
Gui.FormWorkOrderDetails.GSGCContactDeallocate.Dock(5)
Gui.FormWorkOrderDetails.GSGCContactAllocate.Create(GsGridControl)
Gui.FormWorkOrderDetails.GSGCContactAllocate.Enabled(True)
Gui.FormWorkOrderDetails.GSGCContactAllocate.Visible(True)
Gui.FormWorkOrderDetails.GSGCContactAllocate.Zorder(0)
Gui.FormWorkOrderDetails.GSGCContactAllocate.Size(15330,4635)
Gui.FormWorkOrderDetails.GSGCContactAllocate.Position(0,0)
Gui.FormWorkOrderDetails.GSGCContactAllocate.Parent("SplitContainerContactAllocation",1)
Gui.FormWorkOrderDetails.GSGCContactAllocate.Dock(5)
Gui.FormWorkOrderDetails.lblReceiptingInfo6.Create(Label,"Commit/Promise Date:",True,1590,195,0,1260,1185,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblReceiptingInfo6.BorderStyle(0)
Gui.FormWorkOrderDetails.lblReceiptingInfo6.Parent("tabWorkOrderDetails",5)
Gui.FormWorkOrderDetails.lblReceiptingInfo6.ToolTip("Date the job will likely be completed on")
Gui.FormWorkOrderDetails.frame1.Create(Frame)
Gui.FormWorkOrderDetails.frame1.Enabled(True)
Gui.FormWorkOrderDetails.frame1.Visible(True)
Gui.FormWorkOrderDetails.frame1.Zorder(0)
Gui.FormWorkOrderDetails.frame1.Size(15330,345)
Gui.FormWorkOrderDetails.frame1.Position(0,0)
Gui.FormWorkOrderDetails.frame1.Caption("")
Gui.FormWorkOrderDetails.frame1.FontName("Tahoma")
Gui.FormWorkOrderDetails.frame1.FontSize(8.25)
Gui.FormWorkOrderDetails.frame1.Parent("tabWorkOrderDetails",6)
Gui.FormWorkOrderDetails.frame1.Dock(1)
Gui.FormWorkOrderDetails.cmdCRM.Create(Button)
Gui.FormWorkOrderDetails.cmdCRM.Enabled(True)
Gui.FormWorkOrderDetails.cmdCRM.Visible(True)
Gui.FormWorkOrderDetails.cmdCRM.Zorder(0)
Gui.FormWorkOrderDetails.cmdCRM.Size(1125,345)
Gui.FormWorkOrderDetails.cmdCRM.Position(1125,0)
Gui.FormWorkOrderDetails.cmdCRM.Caption("CRM")
Gui.FormWorkOrderDetails.cmdCRM.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdCRM.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdCRM.Parent("frame1")
Gui.FormWorkOrderDetails.cmdCRM.Event(Click,cmdCRM_Click)
Gui.FormWorkOrderDetails.cmdContactAllocationUpdate.Create(Button)
Gui.FormWorkOrderDetails.cmdContactAllocationUpdate.Enabled(True)
Gui.FormWorkOrderDetails.cmdContactAllocationUpdate.Visible(True)
Gui.FormWorkOrderDetails.cmdContactAllocationUpdate.Zorder(0)
Gui.FormWorkOrderDetails.cmdContactAllocationUpdate.Size(1125,345)
Gui.FormWorkOrderDetails.cmdContactAllocationUpdate.Position(0,0)
Gui.FormWorkOrderDetails.cmdContactAllocationUpdate.Caption("Update")
Gui.FormWorkOrderDetails.cmdContactAllocationUpdate.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdContactAllocationUpdate.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdContactAllocationUpdate.Parent("frame1")
Gui.FormWorkOrderDetails.cmdContactAllocationUpdate.Event(Click,cmdContactAllocationUpdate_Click)
Gui.FormWorkOrderDetails.lblReceiptingInfo.Create(Label,"Date Time Receipted:",True,1545,195,0,1320,480,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblReceiptingInfo.BorderStyle(0)
Gui.FormWorkOrderDetails.lblReceiptingInfo.Parent("tabWorkOrderDetails",5)
Gui.FormWorkOrderDetails.txtDeliveryTime.Create(TextBox,"",False,1305,300,0,4605,1500,True,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtDeliveryTime.Parent("tabWorkOrderDetails",5)
Gui.FormWorkOrderDetails.txtUserLast.Create(TextBox,"",False,1500,300,0,2925,2235,False,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtUserLast.Parent("tabWorkOrderDetails",5)
Gui.FormWorkOrderDetails.dtpCommitDate.Create(DatePicker)
Gui.FormWorkOrderDetails.dtpCommitDate.Enabled(True)
Gui.FormWorkOrderDetails.dtpCommitDate.Visible(True)
Gui.FormWorkOrderDetails.dtpCommitDate.Zorder(0)
Gui.FormWorkOrderDetails.dtpCommitDate.Size(1500,300)
Gui.FormWorkOrderDetails.dtpCommitDate.Position(2925,1140)
Gui.FormWorkOrderDetails.dtpCommitDate.CheckBox(False)
Gui.FormWorkOrderDetails.dtpCommitDate.Value(V.Ambient.Now)
Gui.FormWorkOrderDetails.dtpCommitDate.FontName("Tahoma")
Gui.FormWorkOrderDetails.dtpCommitDate.FontSize(8.25)
Gui.FormWorkOrderDetails.dtpCommitDate.Parent("tabWorkOrderDetails",5)
Gui.FormWorkOrderDetails.lblBillingInfoSurchageinfo4.Create(Label,"Min Charge is:",True,1020,195,0,630,2790,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblBillingInfoSurchageinfo4.BorderStyle(0)
Gui.FormWorkOrderDetails.lblBillingInfoSurchageinfo4.Parent("tabWorkOrderDetails",4)
Gui.FormWorkOrderDetails.lblBillingInfoDateTimeInvoiced.Create(Label,"Date Time Invoiced:",True,1440,195,0,330,495,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblBillingInfoDateTimeInvoiced.BorderStyle(0)
Gui.FormWorkOrderDetails.lblBillingInfoDateTimeInvoiced.Parent("tabWorkOrderDetails",4)
Gui.FormWorkOrderDetails.SplitContainerWeightMesuramentsTab.Create(SplitContainer)
Gui.FormWorkOrderDetails.SplitContainerWeightMesuramentsTab.Enabled(True)
Gui.FormWorkOrderDetails.SplitContainerWeightMesuramentsTab.Visible(True)
Gui.FormWorkOrderDetails.SplitContainerWeightMesuramentsTab.Zorder(0)
Gui.FormWorkOrderDetails.SplitContainerWeightMesuramentsTab.Size(15330,7560)
Gui.FormWorkOrderDetails.SplitContainerWeightMesuramentsTab.Position(0,0)
Gui.FormWorkOrderDetails.SplitContainerWeightMesuramentsTab.Orientation(1)
Gui.FormWorkOrderDetails.SplitContainerWeightMesuramentsTab.SplitterPosition(2790)
Gui.FormWorkOrderDetails.SplitContainerWeightMesuramentsTab.Collapsed(False)
Gui.FormWorkOrderDetails.SplitContainerWeightMesuramentsTab.Parent("tabWorkOrderDetails",2)
Gui.FormWorkOrderDetails.SplitContainerWeightMesuramentsTab.Dock(5)
Gui.FormWorkOrderDetails.SplitContainerTOPWeightMesurementTAB.Create(SplitContainer)
Gui.FormWorkOrderDetails.SplitContainerTOPWeightMesurementTAB.Enabled(True)
Gui.FormWorkOrderDetails.SplitContainerTOPWeightMesurementTAB.Visible(True)
Gui.FormWorkOrderDetails.SplitContainerTOPWeightMesurementTAB.Zorder(0)
Gui.FormWorkOrderDetails.SplitContainerTOPWeightMesurementTAB.Size(15330,2700)
Gui.FormWorkOrderDetails.SplitContainerTOPWeightMesurementTAB.Position(0,0)
Gui.FormWorkOrderDetails.SplitContainerTOPWeightMesurementTAB.Orientation(0)
Gui.FormWorkOrderDetails.SplitContainerTOPWeightMesurementTAB.SplitterPosition(3270)
Gui.FormWorkOrderDetails.SplitContainerTOPWeightMesurementTAB.Collapsed(False)
Gui.FormWorkOrderDetails.SplitContainerTOPWeightMesurementTAB.Parent("SplitContainerWeightMesuramentsTab",0)
Gui.FormWorkOrderDetails.SplitContainerTOPWeightMesurementTAB.Dock(5)
Gui.FormWorkOrderDetails.txtAggregateWeight.Create(TextBox,"",True,1575,300,0,90,795,True,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtAggregateWeight.Parent("SplitContainerTOPWeightMesurementTAB",0)
Gui.FormWorkOrderDetails.txtAggregateWeight.NumericOnly(1)
Gui.FormWorkOrderDetails.txtAggregateWeight.MaxLength(15)
Gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.Create(GsGridControl)
Gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.Enabled(True)
Gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.Visible(True)
Gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.Zorder(0)
Gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.Size(11865,2790)
Gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.Position(0,0)
Gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.Parent("SplitContainerTOPWeightMesurementTAB",1)
Gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.Dock(5)
Gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.Event(CellValueChanged,GSGCWeightMeasurementsTR_CellValueChanged)
Gui.FormWorkOrderDetails.frameWeightMesurement.Create(Frame)
Gui.FormWorkOrderDetails.frameWeightMesurement.Enabled(True)
Gui.FormWorkOrderDetails.frameWeightMesurement.Visible(True)
Gui.FormWorkOrderDetails.frameWeightMesurement.Zorder(0)
Gui.FormWorkOrderDetails.frameWeightMesurement.Size(3285,360)
Gui.FormWorkOrderDetails.frameWeightMesurement.Position(0,0)
Gui.FormWorkOrderDetails.frameWeightMesurement.Caption("")
Gui.FormWorkOrderDetails.frameWeightMesurement.FontName("Tahoma")
Gui.FormWorkOrderDetails.frameWeightMesurement.FontSize(8.25)
Gui.FormWorkOrderDetails.frameWeightMesurement.Parent("SplitContainerTOPWeightMesurementTAB",0)
Gui.FormWorkOrderDetails.frameWeightMesurement.Dock(1)
Gui.FormWorkOrderDetails.cmdUpdateFreight.Create(Button)
Gui.FormWorkOrderDetails.cmdUpdateFreight.Enabled(True)
Gui.FormWorkOrderDetails.cmdUpdateFreight.Visible(True)
Gui.FormWorkOrderDetails.cmdUpdateFreight.Zorder(0)
Gui.FormWorkOrderDetails.cmdUpdateFreight.Size(1830,345)
Gui.FormWorkOrderDetails.cmdUpdateFreight.Position(1125,0)
Gui.FormWorkOrderDetails.cmdUpdateFreight.Caption("Update Freight Weight")
Gui.FormWorkOrderDetails.cmdUpdateFreight.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdUpdateFreight.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdUpdateFreight.Parent("frameWeightMesurement")
Gui.FormWorkOrderDetails.cmdUpdateFreight.Event(Click,cmdUpdateFreight_Click)
Gui.FormWorkOrderDetails.cmdWeightMesurementsUpdatebtn.Create(Button)
Gui.FormWorkOrderDetails.cmdWeightMesurementsUpdatebtn.Enabled(True)
Gui.FormWorkOrderDetails.cmdWeightMesurementsUpdatebtn.Visible(True)
Gui.FormWorkOrderDetails.cmdWeightMesurementsUpdatebtn.Zorder(0)
Gui.FormWorkOrderDetails.cmdWeightMesurementsUpdatebtn.Size(1125,345)
Gui.FormWorkOrderDetails.cmdWeightMesurementsUpdatebtn.Position(0,0)
Gui.FormWorkOrderDetails.cmdWeightMesurementsUpdatebtn.Caption("Update")
Gui.FormWorkOrderDetails.cmdWeightMesurementsUpdatebtn.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdWeightMesurementsUpdatebtn.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdWeightMesurementsUpdatebtn.Parent("frameWeightMesurement")
Gui.FormWorkOrderDetails.cmdWeightMesurementsUpdatebtn.Event(Click,cmdWeightMesurementsUpdatebtn_Click)
Gui.FormWorkOrderDetails.lblWeight.Create(Label,"Aggregate Weight:",True,1380,195,0,120,570,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblWeight.BorderStyle(0)
Gui.FormWorkOrderDetails.lblWeight.Parent("SplitContainerTOPWeightMesurementTAB",0)
Gui.FormWorkOrderDetails.cmdWeightMesurementsApply.Create(Button)
Gui.FormWorkOrderDetails.cmdWeightMesurementsApply.Enabled(True)
Gui.FormWorkOrderDetails.cmdWeightMesurementsApply.Visible(True)
Gui.FormWorkOrderDetails.cmdWeightMesurementsApply.Zorder(0)
Gui.FormWorkOrderDetails.cmdWeightMesurementsApply.Size(1125,345)
Gui.FormWorkOrderDetails.cmdWeightMesurementsApply.Position(1740,780)
Gui.FormWorkOrderDetails.cmdWeightMesurementsApply.Caption("Apply")
Gui.FormWorkOrderDetails.cmdWeightMesurementsApply.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdWeightMesurementsApply.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdWeightMesurementsApply.Parent("SplitContainerTOPWeightMesurementTAB",0)
Gui.FormWorkOrderDetails.cmdWeightMesurementsApply.ToolTip("Averages weight across selected rows below")
Gui.FormWorkOrderDetails.cmdWeightMesurementsApply.Event(Click,cmdWeightMesurementsApply_Click)
Gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.Create(GsGridControl)
Gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.Enabled(True)
Gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.Visible(True)
Gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.Zorder(0)
Gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.Size(15330,4470)
Gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.Position(0,0)
Gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.Parent("SplitContainerWeightMesuramentsTab",1)
Gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.Dock(5)
Gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.Event(CellValueChanged,GSGCWeightMeasurementsB_CellValueChanged)
Gui.FormWorkOrderDetails.SplitContainerTransportVertical.Create(SplitContainer)
Gui.FormWorkOrderDetails.SplitContainerTransportVertical.Enabled(True)
Gui.FormWorkOrderDetails.SplitContainerTransportVertical.Visible(True)
Gui.FormWorkOrderDetails.SplitContainerTransportVertical.Zorder(0)
Gui.FormWorkOrderDetails.SplitContainerTransportVertical.Size(15330,7440)
Gui.FormWorkOrderDetails.SplitContainerTransportVertical.Position(0,0)
Gui.FormWorkOrderDetails.SplitContainerTransportVertical.Orientation(0)
Gui.FormWorkOrderDetails.SplitContainerTransportVertical.SplitterPosition(5745)
Gui.FormWorkOrderDetails.SplitContainerTransportVertical.Collapsed(False)
Gui.FormWorkOrderDetails.SplitContainerTransportVertical.Parent("tabWorkOrderDetails",1)
Gui.FormWorkOrderDetails.SplitContainerTransportVertical.Dock(5)
Gui.FormWorkOrderDetails.SplitContainerTransportVertical.FixedPanel(0)
Gui.FormWorkOrderDetails.SplitContainerTransportHorizontal.Create(SplitContainer)
Gui.FormWorkOrderDetails.SplitContainerTransportHorizontal.Enabled(True)
Gui.FormWorkOrderDetails.SplitContainerTransportHorizontal.Visible(True)
Gui.FormWorkOrderDetails.SplitContainerTransportHorizontal.Zorder(0)
Gui.FormWorkOrderDetails.SplitContainerTransportHorizontal.Size(5760,7440)
Gui.FormWorkOrderDetails.SplitContainerTransportHorizontal.Position(0,0)
Gui.FormWorkOrderDetails.SplitContainerTransportHorizontal.Orientation(1)
Gui.FormWorkOrderDetails.SplitContainerTransportHorizontal.SplitterPosition(1965)
Gui.FormWorkOrderDetails.SplitContainerTransportHorizontal.Collapsed(False)
Gui.FormWorkOrderDetails.SplitContainerTransportHorizontal.Parent("SplitContainerTransportVertical",0)
Gui.FormWorkOrderDetails.SplitContainerTransportHorizontal.Dock(5)
Gui.FormWorkOrderDetails.SplitContainerTransportHorizontal.FixedPanel(0)
Gui.FormWorkOrderDetails.lblTransportNotes4.Create(Label,"Delivery Date Time:",False,1410,195,0,105,1515,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblTransportNotes4.BorderStyle(0)
Gui.FormWorkOrderDetails.lblTransportNotes4.Parent("SplitContainerTransportHorizontal",0)
Gui.FormWorkOrderDetails.GSGCTransportDelivery.Create(GsGridControl)
Gui.FormWorkOrderDetails.GSGCTransportDelivery.Enabled(True)
Gui.FormWorkOrderDetails.GSGCTransportDelivery.Visible(True)
Gui.FormWorkOrderDetails.GSGCTransportDelivery.Zorder(0)
Gui.FormWorkOrderDetails.GSGCTransportDelivery.Size(5760,5325)
Gui.FormWorkOrderDetails.GSGCTransportDelivery.Position(0,0)
Gui.FormWorkOrderDetails.GSGCTransportDelivery.Parent("SplitContainerTransportHorizontal",1)
Gui.FormWorkOrderDetails.GSGCTransportDelivery.Dock(5)
Gui.FormWorkOrderDetails.ddlTransportNotesPos.Create(DropDownList)
Gui.FormWorkOrderDetails.ddlTransportNotesPos.Enabled(True)
Gui.FormWorkOrderDetails.ddlTransportNotesPos.Visible(True)
Gui.FormWorkOrderDetails.ddlTransportNotesPos.Zorder(0)
Gui.FormWorkOrderDetails.ddlTransportNotesPos.Size(2805,300)
Gui.FormWorkOrderDetails.ddlTransportNotesPos.Position(1605,1110)
Gui.FormWorkOrderDetails.ddlTransportNotesPos.FontName("Tahoma")
Gui.FormWorkOrderDetails.ddlTransportNotesPos.FontSize(8.25)
Gui.FormWorkOrderDetails.ddlTransportNotesPos.Parent("SplitContainerTransportHorizontal",0)
Gui.FormWorkOrderDetails.ddlTransportNotesPos.Event(Change,ddlTransportNotesPos_Change)
Gui.FormWorkOrderDetails.dtpTransportNotesDeliveryDateTime.Create(DatePicker)
Gui.FormWorkOrderDetails.dtpTransportNotesDeliveryDateTime.Enabled(True)
Gui.FormWorkOrderDetails.dtpTransportNotesDeliveryDateTime.Visible(False)
Gui.FormWorkOrderDetails.dtpTransportNotesDeliveryDateTime.Zorder(0)
Gui.FormWorkOrderDetails.dtpTransportNotesDeliveryDateTime.Size(2805,300)
Gui.FormWorkOrderDetails.dtpTransportNotesDeliveryDateTime.Position(1605,1455)
Gui.FormWorkOrderDetails.dtpTransportNotesDeliveryDateTime.CheckBox(False)
Gui.FormWorkOrderDetails.dtpTransportNotesDeliveryDateTime.FontName("Tahoma")
Gui.FormWorkOrderDetails.dtpTransportNotesDeliveryDateTime.FontSize(8.25)
Gui.FormWorkOrderDetails.dtpTransportNotesDeliveryDateTime.Parent("SplitContainerTransportHorizontal",0)
Gui.FormWorkOrderDetails.cmdTransportNotes.Create(Button)
Gui.FormWorkOrderDetails.cmdTransportNotes.Enabled(True)
Gui.FormWorkOrderDetails.cmdTransportNotes.Visible(True)
Gui.FormWorkOrderDetails.cmdTransportNotes.Zorder(0)
Gui.FormWorkOrderDetails.cmdTransportNotes.Size(1125,345)
Gui.FormWorkOrderDetails.cmdTransportNotes.Position(0,0)
Gui.FormWorkOrderDetails.cmdTransportNotes.Caption("Details")
Gui.FormWorkOrderDetails.cmdTransportNotes.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdTransportNotes.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdTransportNotes.Parent("SplitContainerTransportHorizontal",0)
Gui.FormWorkOrderDetails.cmdTransportNotes.Event(Click,cmdTransportNotes_Click)
Gui.FormWorkOrderDetails.lblTransportNotes3.Create(Label,"Possession Default:",True,1410,195,0,105,1155,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblTransportNotes3.BorderStyle(0)
Gui.FormWorkOrderDetails.lblTransportNotes3.Parent("SplitContainerTransportHorizontal",0)
Gui.FormWorkOrderDetails.lblTransportNotes.Create(Label,"Inbound Default:",True,1230,195,0,105,450,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblTransportNotes.BorderStyle(0)
Gui.FormWorkOrderDetails.lblTransportNotes.Parent("SplitContainerTransportHorizontal",0)
Gui.FormWorkOrderDetails.ddlTransportNotesOutbound.Create(DropDownList)
Gui.FormWorkOrderDetails.ddlTransportNotesOutbound.Enabled(True)
Gui.FormWorkOrderDetails.ddlTransportNotesOutbound.Visible(True)
Gui.FormWorkOrderDetails.ddlTransportNotesOutbound.Zorder(0)
Gui.FormWorkOrderDetails.ddlTransportNotesOutbound.Size(2805,300)
Gui.FormWorkOrderDetails.ddlTransportNotesOutbound.Position(1605,765)
Gui.FormWorkOrderDetails.ddlTransportNotesOutbound.FontName("Tahoma")
Gui.FormWorkOrderDetails.ddlTransportNotesOutbound.FontSize(8.25)
Gui.FormWorkOrderDetails.ddlTransportNotesOutbound.Parent("SplitContainerTransportHorizontal",0)
Gui.FormWorkOrderDetails.ddlTransportNotesOutbound.Event(Change,ddlTransportNotesOutbound_Change)
Gui.FormWorkOrderDetails.txtTransportNoteID.Create(TextBox,"0",False,1500,300,0,4500,465,True,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtTransportNoteID.Parent("SplitContainerTransportHorizontal",0)
Gui.FormWorkOrderDetails.lblTransportNotes2.Create(Label,"Outbound Default:",True,1350,195,0,105,810,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblTransportNotes2.BorderStyle(0)
Gui.FormWorkOrderDetails.lblTransportNotes2.Parent("SplitContainerTransportHorizontal",0)
Gui.FormWorkOrderDetails.ddlTransportNotesInbound.Create(DropDownList)
Gui.FormWorkOrderDetails.ddlTransportNotesInbound.Enabled(True)
Gui.FormWorkOrderDetails.ddlTransportNotesInbound.Visible(True)
Gui.FormWorkOrderDetails.ddlTransportNotesInbound.Zorder(0)
Gui.FormWorkOrderDetails.ddlTransportNotesInbound.Size(2805,300)
Gui.FormWorkOrderDetails.ddlTransportNotesInbound.Position(1605,420)
Gui.FormWorkOrderDetails.ddlTransportNotesInbound.FontName("Tahoma")
Gui.FormWorkOrderDetails.ddlTransportNotesInbound.FontSize(8.25)
Gui.FormWorkOrderDetails.ddlTransportNotesInbound.Parent("SplitContainerTransportHorizontal",0)
Gui.FormWorkOrderDetails.ddlTransportNotesInbound.Event(Change,ddlTransportNotesInbound_Change)
Gui.FormWorkOrderDetails.cmdTransportNotesFinal.Create(Button)
Gui.FormWorkOrderDetails.cmdTransportNotesFinal.Enabled(True)
Gui.FormWorkOrderDetails.cmdTransportNotesFinal.Visible(False)
Gui.FormWorkOrderDetails.cmdTransportNotesFinal.Zorder(0)
Gui.FormWorkOrderDetails.cmdTransportNotesFinal.Size(1125,345)
Gui.FormWorkOrderDetails.cmdTransportNotesFinal.Position(4545,0)
Gui.FormWorkOrderDetails.cmdTransportNotesFinal.Caption("Final Check")
Gui.FormWorkOrderDetails.cmdTransportNotesFinal.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdTransportNotesFinal.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdTransportNotesFinal.Parent("SplitContainerTransportHorizontal",0)
Gui.FormWorkOrderDetails.cmdTransportNotesFinal.Event(Click,cmdTransportNotesFinal_Click)
Gui.FormWorkOrderDetails.GSGCTransportNoteItems.Create(GsGridControl)
Gui.FormWorkOrderDetails.GSGCTransportNoteItems.Enabled(True)
Gui.FormWorkOrderDetails.GSGCTransportNoteItems.Visible(True)
Gui.FormWorkOrderDetails.GSGCTransportNoteItems.Zorder(0)
Gui.FormWorkOrderDetails.GSGCTransportNoteItems.Size(9390,7440)
Gui.FormWorkOrderDetails.GSGCTransportNoteItems.Position(0,0)
Gui.FormWorkOrderDetails.GSGCTransportNoteItems.Parent("SplitContainerTransportVertical",1)
Gui.FormWorkOrderDetails.GSGCTransportNoteItems.Dock(5)
Gui.FormWorkOrderDetails.GSGCTransportNoteItems.Event(CellValueChanged,GSGCTransportNoteItems_CellValueChanged)
Gui.FormWorkOrderDetails.lblBillingInfoOrderGrandTotal.Create(Label,"Order Grand Total:",True,1365,195,0,420,2160,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblBillingInfoOrderGrandTotal.BorderStyle(0)
Gui.FormWorkOrderDetails.lblBillingInfoOrderGrandTotal.Parent("tabWorkOrderDetails",4)
Gui.FormWorkOrderDetails.lblBillingInfoPaymentInfo.Create(Label,"Payment Infomation",True,1455,195,0,270,1395,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblBillingInfoPaymentInfo.BorderStyle(0)
Gui.FormWorkOrderDetails.lblBillingInfoPaymentInfo.Parent("tabWorkOrderDetails",4)
Gui.FormWorkOrderDetails.lblBillingInfoMinChargeExempt.Create(Label,"Min Charge Exempt:",True,1455,195,0,315,855,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblBillingInfoMinChargeExempt.BorderStyle(0)
Gui.FormWorkOrderDetails.lblBillingInfoMinChargeExempt.Parent("tabWorkOrderDetails",4)
Gui.FormWorkOrderDetails.lblBillingInfoSurchageinfo3.Create(Label,"Pricing Group is:",True,1155,195,0,495,2580,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblBillingInfoSurchageinfo3.BorderStyle(0)
Gui.FormWorkOrderDetails.lblBillingInfoSurchageinfo3.Parent("tabWorkOrderDetails",4)
Gui.FormWorkOrderDetails.lblBillingInfoOrderSubTotal.Create(Label,"Order Sub-Total:",True,1215,195,0,555,1680,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblBillingInfoOrderSubTotal.BorderStyle(0)
Gui.FormWorkOrderDetails.lblBillingInfoOrderSubTotal.Parent("tabWorkOrderDetails",4)
Gui.FormWorkOrderDetails.cmdUpdateBillingInfo.Create(Button)
Gui.FormWorkOrderDetails.cmdUpdateBillingInfo.Enabled(True)
Gui.FormWorkOrderDetails.cmdUpdateBillingInfo.Visible(True)
Gui.FormWorkOrderDetails.cmdUpdateBillingInfo.Zorder(0)
Gui.FormWorkOrderDetails.cmdUpdateBillingInfo.Size(1125,345)
Gui.FormWorkOrderDetails.cmdUpdateBillingInfo.Position(45,15)
Gui.FormWorkOrderDetails.cmdUpdateBillingInfo.Caption("Update")
Gui.FormWorkOrderDetails.cmdUpdateBillingInfo.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdUpdateBillingInfo.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdUpdateBillingInfo.Parent("tabWorkOrderDetails",4)
Gui.FormWorkOrderDetails.cmdUpdateBillingInfo.Event(Click,cmdUpdateBillingInfo_Click)
Gui.FormWorkOrderDetails.lblTaxSubTotal.Create(Label,"0.00",True,330,195,0,1830,1920,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblTaxSubTotal.BorderStyle(0)
Gui.FormWorkOrderDetails.lblTaxSubTotal.Parent("tabWorkOrderDetails",4)
Gui.FormWorkOrderDetails.lblOrderGrandTotal.Create(Label,"0.00",True,330,195,0,1830,2160,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblOrderGrandTotal.BorderStyle(0)
Gui.FormWorkOrderDetails.lblOrderGrandTotal.Parent("tabWorkOrderDetails",4)
Gui.FormWorkOrderDetails.lblMinCharge.Create(Label,"$125.0000 ex-GST",True,1350,195,0,1680,2790,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblMinCharge.BorderStyle(0)
Gui.FormWorkOrderDetails.lblMinCharge.Parent("tabWorkOrderDetails",4)
Gui.FormWorkOrderDetails.GSGCJobAllocation.Create(GsGridControl)
Gui.FormWorkOrderDetails.GSGCJobAllocation.Enabled(True)
Gui.FormWorkOrderDetails.GSGCJobAllocation.Visible(True)
Gui.FormWorkOrderDetails.GSGCJobAllocation.Zorder(0)
Gui.FormWorkOrderDetails.GSGCJobAllocation.Size(15330,7440)
Gui.FormWorkOrderDetails.GSGCJobAllocation.Position(0,0)
Gui.FormWorkOrderDetails.GSGCJobAllocation.Parent("tabWorkOrderDetails",3)
Gui.FormWorkOrderDetails.GSGCJobAllocation.Dock(5)
Gui.FormWorkOrderDetails.GSGCJobAllocation.Event(CellValueChanged,GSGCJobAllocation_CellValueChanged)
Gui.FormWorkOrderDetails.GSGCJobAllocation.Anchor(15)
Gui.FormWorkOrderDetails.GSGCJobAllocation.Event(RowCellClick,GSGCJobAllocation_RowCellClick)
Gui.FormWorkOrderDetails.txtCustomerShipTo2.Create(TextBox,"",True,1860,300,0,1890,975,False,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtCustomerShipTo2.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.lblAdminNote.Create(Label,"Admin Note:",True,885,195,0,5655,135,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblAdminNote.BorderStyle(0)
Gui.FormWorkOrderDetails.lblAdminNote.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.txtStatus.Create(TextBox,"REGISTERED",True,1500,300,0,2265,135,False,0,"Tahoma",8.25,,1)
Gui.FormWorkOrderDetails.txtStatus.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.chkReleaseToPrep.Create(CheckBox)
Gui.FormWorkOrderDetails.chkReleaseToPrep.Enabled(True)
Gui.FormWorkOrderDetails.chkReleaseToPrep.Visible(True)
Gui.FormWorkOrderDetails.chkReleaseToPrep.Zorder(0)
Gui.FormWorkOrderDetails.chkReleaseToPrep.Size(1500,300)
Gui.FormWorkOrderDetails.chkReleaseToPrep.Position(645,1830)
Gui.FormWorkOrderDetails.chkReleaseToPrep.Caption("Release to Prep")
Gui.FormWorkOrderDetails.chkReleaseToPrep.FontName("Tahoma")
Gui.FormWorkOrderDetails.chkReleaseToPrep.FontSize(8.25)
Gui.FormWorkOrderDetails.chkReleaseToPrep.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.lblRacks.Create(Label,"Racks (Est.):",True,930,195,0,5070,1785,True,0,"Tahoma",8.25,,0,0)
Gui.FormWorkOrderDetails.lblRacks.BorderStyle(0)
Gui.FormWorkOrderDetails.lblRacks.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.cmdButtonStatus.Create(Button)
Gui.FormWorkOrderDetails.cmdButtonStatus.Enabled(True)
Gui.FormWorkOrderDetails.cmdButtonStatus.Visible(True)
Gui.FormWorkOrderDetails.cmdButtonStatus.Zorder(0)
Gui.FormWorkOrderDetails.cmdButtonStatus.Size(1125,345)
Gui.FormWorkOrderDetails.cmdButtonStatus.Position(3870,120)
Gui.FormWorkOrderDetails.cmdButtonStatus.Caption("Status")
Gui.FormWorkOrderDetails.cmdButtonStatus.FontName("Tahoma")
Gui.FormWorkOrderDetails.cmdButtonStatus.FontSize(8.25)
Gui.FormWorkOrderDetails.cmdButtonStatus.Parent("SplitContainerMAIN",0)
Gui.FormWorkOrderDetails.cmdButtonStatus.Event(Click,cmdButtonStatus_Click)
Gui.FormQuotesandPricing..Create(BaseForm)
Gui.FormQuotesandPricing..Caption("Quotes and Pricing")
Gui.FormQuotesandPricing..Size(15360,10800)
Gui.FormQuotesandPricing..MinX(0)
Gui.FormQuotesandPricing..MinY(0)
Gui.FormQuotesandPricing..Position(0,0)
Gui.FormQuotesandPricing..AlwaysOnTop(False)
Gui.FormQuotesandPricing..FontName("Tahoma")
Gui.FormQuotesandPricing..FontSize(8.25)
Gui.FormQuotesandPricing..ControlBox(True)
Gui.FormQuotesandPricing..MaxButton(True)
Gui.FormQuotesandPricing..MinButton(True)
Gui.FormQuotesandPricing..MousePointer(0)
Gui.FormQuotesandPricing..Moveable(True)
Gui.FormQuotesandPricing..Sizeable(True)
Gui.FormQuotesandPricing..ShowInTaskBar(True)
Gui.FormQuotesandPricing..TitleBar(True)
Gui.FormQuotesandPricing..Event(UnLoad,CloseWorkOrderAddService)
Gui.FormQuotesandPricing.frameQuoteandPrice.Create(Frame)
Gui.FormQuotesandPricing.frameQuoteandPrice.Enabled(True)
Gui.FormQuotesandPricing.frameQuoteandPrice.Visible(True)
Gui.FormQuotesandPricing.frameQuoteandPrice.Zorder(0)
Gui.FormQuotesandPricing.frameQuoteandPrice.Size(15360,1965)
Gui.FormQuotesandPricing.frameQuoteandPrice.Position(0,0)
Gui.FormQuotesandPricing.frameQuoteandPrice.Caption("")
Gui.FormQuotesandPricing.frameQuoteandPrice.FontName("Tahoma")
Gui.FormQuotesandPricing.frameQuoteandPrice.FontSize(8.25)
Gui.FormQuotesandPricing.frameQuoteandPrice.Dock(1)
Gui.FormQuotesandPricing.cmdAddNew.Create(Button)
Gui.FormQuotesandPricing.cmdAddNew.Enabled(True)
Gui.FormQuotesandPricing.cmdAddNew.Visible(True)
Gui.FormQuotesandPricing.cmdAddNew.Zorder(0)
Gui.FormQuotesandPricing.cmdAddNew.Size(1125,345)
Gui.FormQuotesandPricing.cmdAddNew.Position(0,0)
Gui.FormQuotesandPricing.cmdAddNew.Caption("Add New")
Gui.FormQuotesandPricing.cmdAddNew.FontName("Tahoma")
Gui.FormQuotesandPricing.cmdAddNew.FontSize(8.25)
Gui.FormQuotesandPricing.cmdAddNew.Parent("frameQuoteandPrice")
Gui.FormQuotesandPricing.cmdAddNew.Event(Click,QuotesAndPricingcmdAddNew_Click)
Gui.FormQuotesandPricing.txtItemQty.Create(TextBox,"",True,1500,300,0,1500,840,True,0,"Tahoma",8.25,,1)
Gui.FormQuotesandPricing.txtItemQty.Parent("frameQuoteandPrice")
Gui.FormQuotesandPricing.txtItemQty.NumericOnly(2)
Gui.FormQuotesandPricing.txtItemQty.MaxLength(10)
Gui.FormQuotesandPricing.txtUnitQtyQP.Create(TextBox,"",False,1155,300,0,255,1275,False,0,"Tahoma",8.25,,1)
Gui.FormQuotesandPricing.txtUnitQtyQP.Parent("frameQuoteandPrice")
Gui.FormQuotesandPricing.txtPriorityPrice.Create(TextBox,"",False,1500,300,0,3075,1605,False,0,"Tahoma",8.25,,1)
Gui.FormQuotesandPricing.txtPriorityPrice.Parent("frameQuoteandPrice")
Gui.FormQuotesandPricing.txtMinCharge.Create(TextBox,"",False,1500,300,0,1485,1605,False,0,"Tahoma",8.25,,1)
Gui.FormQuotesandPricing.txtMinCharge.Parent("frameQuoteandPrice")
Gui.FormQuotesandPricing.txtUnitAbbrv.Create(TextBox,"",False,1500,300,0,3090,1245,False,0,"Tahoma",8.25,,1)
Gui.FormQuotesandPricing.txtUnitAbbrv.Parent("frameQuoteandPrice")
Gui.FormQuotesandPricing.txtUnitPrice.Create(TextBox,"",False,1500,300,0,1500,1260,False,0,"Tahoma",8.25,,1)
Gui.FormQuotesandPricing.txtUnitPrice.Parent("frameQuoteandPrice")
Gui.FormQuotesandPricing.txtINVTAB.Create(TextBox,"",False,1500,300,0,13755,735,True,0,"Tahoma",8.25,,1)
Gui.FormQuotesandPricing.txtINVTAB.Parent("frameQuoteandPrice")
Gui.FormQuotesandPricing.txtServiceDesc.Create(TextBox,"",True,6900,300,0,4785,495,False,0,"Tahoma",8.25,,1)
Gui.FormQuotesandPricing.txtServiceDesc.Parent("frameQuoteandPrice")
Gui.FormQuotesandPricing.txtINVY.Create(TextBox,"",False,1500,300,0,13755,375,True,0,"Tahoma",8.25,,1)
Gui.FormQuotesandPricing.txtINVY.Parent("frameQuoteandPrice")
Gui.FormQuotesandPricing.txtDescriptionLine.Create(TextboxM)
Gui.FormQuotesandPricing.txtDescriptionLine.Enabled(True)
Gui.FormQuotesandPricing.txtDescriptionLine.Visible(True)
Gui.FormQuotesandPricing.txtDescriptionLine.Zorder(0)
Gui.FormQuotesandPricing.txtDescriptionLine.Size(6900,1065)
Gui.FormQuotesandPricing.txtDescriptionLine.Position(4785,840)
Gui.FormQuotesandPricing.txtDescriptionLine.FontName("Tahoma")
Gui.FormQuotesandPricing.txtDescriptionLine.FontSize(8.25)
Gui.FormQuotesandPricing.txtDescriptionLine.Parent("frameQuoteandPrice")
Gui.FormQuotesandPricing.cmdUpdateQP.Create(Button)
Gui.FormQuotesandPricing.cmdUpdateQP.Enabled(True)
Gui.FormQuotesandPricing.cmdUpdateQP.Visible(False)
Gui.FormQuotesandPricing.cmdUpdateQP.Zorder(0)
Gui.FormQuotesandPricing.cmdUpdateQP.Size(1125,345)
Gui.FormQuotesandPricing.cmdUpdateQP.Position(0,0)
Gui.FormQuotesandPricing.cmdUpdateQP.Caption("Update")
Gui.FormQuotesandPricing.cmdUpdateQP.FontName("Tahoma")
Gui.FormQuotesandPricing.cmdUpdateQP.FontSize(8.25)
Gui.FormQuotesandPricing.cmdUpdateQP.Parent("frameQuoteandPrice")
Gui.FormQuotesandPricing.cmdUpdateQP.Event(Click,cmdUpdateQP_Click)
Gui.FormQuotesandPricing.lblSelectionService.Create(Label,"Selected Service:",True,1245,195,0,165,525,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuotesandPricing.lblSelectionService.BorderStyle(0)
Gui.FormQuotesandPricing.lblSelectionService.Parent("frameQuoteandPrice")
Gui.FormQuotesandPricing.txtQuoteID.Create(TextBox,"",True,1500,300,0,3135,495,False,0,"Tahoma",8.25,,1)
Gui.FormQuotesandPricing.txtQuoteID.Parent("frameQuoteandPrice")
Gui.FormQuotesandPricing.txtServiceID.Create(TextBox,"",True,1500,300,0,1500,495,False,0,"Tahoma",8.25,,1)
Gui.FormQuotesandPricing.txtServiceID.Parent("frameQuoteandPrice")
Gui.FormQuotesandPricing.lblDescription.Create(Label,"Description:",True,855,195,0,3765,885,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuotesandPricing.lblDescription.BorderStyle(0)
Gui.FormQuotesandPricing.lblDescription.Parent("frameQuoteandPrice")
Gui.FormQuotesandPricing.lblItemQty.Create(Label,"Item Qty:",True,705,195,0,705,885,True,0,"Tahoma",8.25,,0,0)
Gui.FormQuotesandPricing.lblItemQty.BorderStyle(0)
Gui.FormQuotesandPricing.lblItemQty.Parent("frameQuoteandPrice")
Gui.FormQuotesandPricing.tabQuotesAndPricing.Create(Tab)
Gui.FormQuotesandPricing.tabQuotesAndPricing.Enabled(True)
Gui.FormQuotesandPricing.tabQuotesAndPricing.Visible(True)
Gui.FormQuotesandPricing.tabQuotesAndPricing.Zorder(0)
Gui.FormQuotesandPricing.tabQuotesAndPricing.Size(15360,8385)
Gui.FormQuotesandPricing.tabQuotesAndPricing.Position(0,1965)
Gui.FormQuotesandPricing.tabQuotesAndPricing.FontName("Tahoma")
Gui.FormQuotesandPricing.tabQuotesAndPricing.FontSize(8.25)
Gui.FormQuotesandPricing.tabQuotesAndPricing.Dock(5)
Gui.FormQuotesandPricing.tabQuotesAndPricing.Event(Click,tabQuotesAndPricing_Click)
Gui.FormQuotesandPricing.tabQuotesAndPricing.Tabs(2)
Gui.FormQuotesandPricing.tabQuotesAndPricing.SetTab(0)
Gui.FormQuotesandPricing.tabQuotesAndPricing.Caption("Price List")
Gui.FormQuotesandPricing.tabQuotesAndPricing.SetTab(1)
Gui.FormQuotesandPricing.tabQuotesAndPricing.Caption("Quotes")
Gui.FormQuotesandPricing.GSGCPriceList.Create(GsGridControl)
Gui.FormQuotesandPricing.GSGCPriceList.Enabled(True)
Gui.FormQuotesandPricing.GSGCPriceList.Visible(True)
Gui.FormQuotesandPricing.GSGCPriceList.Zorder(0)
Gui.FormQuotesandPricing.GSGCPriceList.Size(15330,7950)
Gui.FormQuotesandPricing.GSGCPriceList.Position(0,0)
Gui.FormQuotesandPricing.GSGCPriceList.Parent("tabQuotesAndPricing",0)
Gui.FormQuotesandPricing.GSGCPriceList.Dock(5)
Gui.FormQuotesandPricing.GSGCPriceList.Event(RowCellClick,GSGCPriceList_RowCellClick)
Gui.FormQuotesandPricing.GSGCQuotes.Create(GsGridControl)
Gui.FormQuotesandPricing.GSGCQuotes.Enabled(True)
Gui.FormQuotesandPricing.GSGCQuotes.Visible(True)
Gui.FormQuotesandPricing.GSGCQuotes.Zorder(0)
Gui.FormQuotesandPricing.GSGCQuotes.Size(15330,7950)
Gui.FormQuotesandPricing.GSGCQuotes.Position(0,0)
Gui.FormQuotesandPricing.GSGCQuotes.Parent("tabQuotesAndPricing",1)
Gui.FormQuotesandPricing.GSGCQuotes.Dock(5)
Gui.FormQuotesandPricing.GSGCQuotes.Event(RowCellClick,GSGCQuotes_RowCellClick)
Gui.FormQuotesandPricing.chkItemQtyBasedFlag.Create(CheckBox)
Gui.FormQuotesandPricing.chkItemQtyBasedFlag.Enabled(True)
Gui.FormQuotesandPricing.chkItemQtyBasedFlag.Visible(False)
Gui.FormQuotesandPricing.chkItemQtyBasedFlag.Zorder(0)
Gui.FormQuotesandPricing.chkItemQtyBasedFlag.Size(1125,300)
Gui.FormQuotesandPricing.chkItemQtyBasedFlag.Position(12360,1485)
Gui.FormQuotesandPricing.chkItemQtyBasedFlag.Caption("")
Gui.FormQuotesandPricing.chkItemQtyBasedFlag.FontName("Tahoma")
Gui.FormQuotesandPricing.chkItemQtyBasedFlag.FontSize(8.25)
Gui.FormCrystalReportTemp..Create(BaseForm)
Gui.FormCrystalReportTemp..Caption("Crystal Report")
Gui.FormCrystalReportTemp..Size(5055,2235)
Gui.FormCrystalReportTemp..MinX(0)
Gui.FormCrystalReportTemp..MinY(0)
Gui.FormCrystalReportTemp..Position(0,0)
Gui.FormCrystalReportTemp..AlwaysOnTop(False)
Gui.FormCrystalReportTemp..FontName("Tahoma")
Gui.FormCrystalReportTemp..FontSize(8.25)
Gui.FormCrystalReportTemp..ControlBox(True)
Gui.FormCrystalReportTemp..MaxButton(True)
Gui.FormCrystalReportTemp..MinButton(True)
Gui.FormCrystalReportTemp..MousePointer(0)
Gui.FormCrystalReportTemp..Moveable(True)
Gui.FormCrystalReportTemp..Sizeable(True)
Gui.FormCrystalReportTemp..ShowInTaskBar(True)
Gui.FormCrystalReportTemp..TitleBar(True)
Gui.FormCrystalReportTemp..Event(UnLoad,GUICrystalReportHideTemp)
Gui.FormCrystalReportTemp.lbl1.Create(Label,"Place holder GUI for the crystal report",True,2745,195,0,1050,780,True,0,"Tahoma",8.25,,0,0)
Gui.FormCrystalReportTemp.lbl1.BorderStyle(0)
Gui.FormWOAlreadyAccesed..Create(BaseForm)
Gui.FormWOAlreadyAccesed..Caption("Work Order Access")
Gui.FormWOAlreadyAccesed..Size(4365,3075)
Gui.FormWOAlreadyAccesed..MinX(0)
Gui.FormWOAlreadyAccesed..MinY(0)
Gui.FormWOAlreadyAccesed..Position(0,0)
Gui.FormWOAlreadyAccesed..AlwaysOnTop(False)
Gui.FormWOAlreadyAccesed..FontName("Tahoma")
Gui.FormWOAlreadyAccesed..FontSize(8.25)
Gui.FormWOAlreadyAccesed..ControlBox(True)
Gui.FormWOAlreadyAccesed..MaxButton(True)
Gui.FormWOAlreadyAccesed..MinButton(True)
Gui.FormWOAlreadyAccesed..MousePointer(0)
Gui.FormWOAlreadyAccesed..Moveable(True)
Gui.FormWOAlreadyAccesed..Sizeable(True)
Gui.FormWOAlreadyAccesed..ShowInTaskBar(True)
Gui.FormWOAlreadyAccesed..TitleBar(True)
Gui.FormWOAlreadyAccesed.lbl1.Create(Label,"Unable to open selected workorder.",True,2580,195,0,795,510,True,0,"Tahoma",8.25,,0,0)
Gui.FormWOAlreadyAccesed.lbl1.BorderStyle(0)
Gui.FormWOAlreadyAccesed.lbl2.Create(Label,"Work order is already being accessed by.",True,2970,195,0,795,780,True,0,"Tahoma",8.25,,0,0)
Gui.FormWOAlreadyAccesed.lbl2.BorderStyle(0)
Gui.FormWOAlreadyAccesed.lbl3.Create(Label,"User:",True,390,195,0,795,1050,True,0,"Tahoma",8.25,,0,0)
Gui.FormWOAlreadyAccesed.lbl3.BorderStyle(0)
Gui.FormWOAlreadyAccesed.lbl4.Create(Label,"WOID:",True,495,195,0,795,1320,True,0,"Tahoma",8.25,,0,0)
Gui.FormWOAlreadyAccesed.lbl4.BorderStyle(0)
Gui.FormWOAlreadyAccesed.lbl5.Create(Label,"Date:",True,405,195,0,795,1590,True,0,"Tahoma",8.25,,0,0)
Gui.FormWOAlreadyAccesed.lbl5.BorderStyle(0)
Gui.FormWOAlreadyAccesed.lblWOAccessUser.Create(Label,"x",True,90,195,0,1410,1050,True,0,"Tahoma",8.25,,0,0)
Gui.FormWOAlreadyAccesed.lblWOAccessUser.BorderStyle(0)
Gui.FormWOAlreadyAccesed.lblWOAccessWOID.Create(Label,"x",True,90,195,0,1410,1320,True,0,"Tahoma",8.25,,0,0)
Gui.FormWOAlreadyAccesed.lblWOAccessWOID.BorderStyle(0)
Gui.FormWOAlreadyAccesed.lblWOAccessDate.Create(Label,"x",True,90,195,0,1425,1590,True,0,"Tahoma",8.25,,0,0)
Gui.FormWOAlreadyAccesed.lblWOAccessDate.BorderStyle(0)
Gui.FormWOAlreadyAccesed.cmdFORCEOVERRIDETHREADLOCKING.Create(Button)
Gui.FormWOAlreadyAccesed.cmdFORCEOVERRIDETHREADLOCKING.Enabled(True)
Gui.FormWOAlreadyAccesed.cmdFORCEOVERRIDETHREADLOCKING.Visible(True)
Gui.FormWOAlreadyAccesed.cmdFORCEOVERRIDETHREADLOCKING.Zorder(0)
Gui.FormWOAlreadyAccesed.cmdFORCEOVERRIDETHREADLOCKING.Size(1125,345)
Gui.FormWOAlreadyAccesed.cmdFORCEOVERRIDETHREADLOCKING.Position(1395,2010)
Gui.FormWOAlreadyAccesed.cmdFORCEOVERRIDETHREADLOCKING.Caption("OVERRIDE")
Gui.FormWOAlreadyAccesed.cmdFORCEOVERRIDETHREADLOCKING.FontName("Tahoma")
Gui.FormWOAlreadyAccesed.cmdFORCEOVERRIDETHREADLOCKING.FontSize(8.25)
Gui.FormWOAlreadyAccesed.cmdFORCEOVERRIDETHREADLOCKING.Event(Click,cmdFORCEOVERRIDETHREADLOCKING_Click)
Gui.FormTransportNoteService..Create(BaseForm)
Gui.FormTransportNoteService..Caption("Service - Transport note.")
Gui.FormTransportNoteService..Size(15360,10800)
Gui.FormTransportNoteService..MinX(0)
Gui.FormTransportNoteService..MinY(0)
Gui.FormTransportNoteService..Position(0,0)
Gui.FormTransportNoteService..AlwaysOnTop(False)
Gui.FormTransportNoteService..FontName("Tahoma")
Gui.FormTransportNoteService..FontSize(8.25)
Gui.FormTransportNoteService..ControlBox(True)
Gui.FormTransportNoteService..MaxButton(True)
Gui.FormTransportNoteService..MinButton(True)
Gui.FormTransportNoteService..MousePointer(0)
Gui.FormTransportNoteService..Moveable(True)
Gui.FormTransportNoteService..Sizeable(True)
Gui.FormTransportNoteService..ShowInTaskBar(True)
Gui.FormTransportNoteService..TitleBar(True)
Gui.FormTransportNoteService.cmdTransportNoteUpdate.Create(Button)
Gui.FormTransportNoteService.cmdTransportNoteUpdate.Enabled(True)
Gui.FormTransportNoteService.cmdTransportNoteUpdate.Visible(True)
Gui.FormTransportNoteService.cmdTransportNoteUpdate.Zorder(0)
Gui.FormTransportNoteService.cmdTransportNoteUpdate.Size(1125,345)
Gui.FormTransportNoteService.cmdTransportNoteUpdate.Position(0,0)
Gui.FormTransportNoteService.cmdTransportNoteUpdate.Caption("Update")
Gui.FormTransportNoteService.cmdTransportNoteUpdate.FontName("Tahoma")
Gui.FormTransportNoteService.cmdTransportNoteUpdate.FontSize(8.25)
Gui.FormTransportNoteService.cmdTransportNoteDelete.Create(Button)
Gui.FormTransportNoteService.cmdTransportNoteDelete.Enabled(True)
Gui.FormTransportNoteService.cmdTransportNoteDelete.Visible(True)
Gui.FormTransportNoteService.cmdTransportNoteDelete.Zorder(0)
Gui.FormTransportNoteService.cmdTransportNoteDelete.Size(1125,345)
Gui.FormTransportNoteService.cmdTransportNoteDelete.Position(1125,0)
Gui.FormTransportNoteService.cmdTransportNoteDelete.Caption("Delete")
Gui.FormTransportNoteService.cmdTransportNoteDelete.FontName("Tahoma")
Gui.FormTransportNoteService.cmdTransportNoteDelete.FontSize(8.25)
Gui.FormTransportNoteService.cmdTransportNotePreview.Create(Button)
Gui.FormTransportNoteService.cmdTransportNotePreview.Enabled(True)
Gui.FormTransportNoteService.cmdTransportNotePreview.Visible(True)
Gui.FormTransportNoteService.cmdTransportNotePreview.Zorder(0)
Gui.FormTransportNoteService.cmdTransportNotePreview.Size(1125,345)
Gui.FormTransportNoteService.cmdTransportNotePreview.Position(2250,0)
Gui.FormTransportNoteService.cmdTransportNotePreview.Caption("Preview")
Gui.FormTransportNoteService.cmdTransportNotePreview.FontName("Tahoma")
Gui.FormTransportNoteService.cmdTransportNotePreview.FontSize(8.25)
Gui.FormTransportNoteService.cmdTransportNoteLabel.Create(Button)
Gui.FormTransportNoteService.cmdTransportNoteLabel.Enabled(True)
Gui.FormTransportNoteService.cmdTransportNoteLabel.Visible(True)
Gui.FormTransportNoteService.cmdTransportNoteLabel.Zorder(0)
Gui.FormTransportNoteService.cmdTransportNoteLabel.Size(1125,345)
Gui.FormTransportNoteService.cmdTransportNoteLabel.Position(3375,0)
Gui.FormTransportNoteService.cmdTransportNoteLabel.Caption("Label")
Gui.FormTransportNoteService.cmdTransportNoteLabel.FontName("Tahoma")
Gui.FormTransportNoteService.cmdTransportNoteLabel.FontSize(8.25)
Gui.FormTransportNoteService.tabTransportNote.Create(Tab)
Gui.FormTransportNoteService.tabTransportNote.Enabled(True)
Gui.FormTransportNoteService.tabTransportNote.Visible(True)
Gui.FormTransportNoteService.tabTransportNote.Zorder(0)
Gui.FormTransportNoteService.tabTransportNote.Size(15360,6060)
Gui.FormTransportNoteService.tabTransportNote.Position(0,4290)
Gui.FormTransportNoteService.tabTransportNote.FontName("Tahoma")
Gui.FormTransportNoteService.tabTransportNote.FontSize(8.25)
Gui.FormTransportNoteService.tabTransportNote.Dock(2)
Gui.FormTransportNoteService.tabTransportNote.Tabs(2)
Gui.FormTransportNoteService.tabTransportNote.SetTab(0)
Gui.FormTransportNoteService.tabTransportNote.Caption("Available")
Gui.FormTransportNoteService.tabTransportNote.SetTab(1)
Gui.FormTransportNoteService.tabTransportNote.Caption("Items")
Gui.FormTransportNoteService.frameTransportNoteItemsTab.Create(Frame)
Gui.FormTransportNoteService.frameTransportNoteItemsTab.Enabled(True)
Gui.FormTransportNoteService.frameTransportNoteItemsTab.Visible(True)
Gui.FormTransportNoteService.frameTransportNoteItemsTab.Zorder(1)
Gui.FormTransportNoteService.frameTransportNoteItemsTab.Size(15330,345)
Gui.FormTransportNoteService.frameTransportNoteItemsTab.Position(0,0)
Gui.FormTransportNoteService.frameTransportNoteItemsTab.Caption("")
Gui.FormTransportNoteService.frameTransportNoteItemsTab.FontName("Tahoma")
Gui.FormTransportNoteService.frameTransportNoteItemsTab.FontSize(8.25)
Gui.FormTransportNoteService.frameTransportNoteItemsTab.Parent("tabTransportNote",1)
Gui.FormTransportNoteService.frameTransportNoteItemsTab.Dock(1)
Gui.FormTransportNoteService.cmdTransportNoteUpdateItemstab.Create(Button)
Gui.FormTransportNoteService.cmdTransportNoteUpdateItemstab.Enabled(True)
Gui.FormTransportNoteService.cmdTransportNoteUpdateItemstab.Visible(True)
Gui.FormTransportNoteService.cmdTransportNoteUpdateItemstab.Zorder(0)
Gui.FormTransportNoteService.cmdTransportNoteUpdateItemstab.Size(1125,345)
Gui.FormTransportNoteService.cmdTransportNoteUpdateItemstab.Position(0,0)
Gui.FormTransportNoteService.cmdTransportNoteUpdateItemstab.Caption("Update")
Gui.FormTransportNoteService.cmdTransportNoteUpdateItemstab.FontName("Tahoma")
Gui.FormTransportNoteService.cmdTransportNoteUpdateItemstab.FontSize(8.25)
Gui.FormTransportNoteService.cmdTransportNoteUpdateItemstab.Parent("frameTransportNoteItemsTab")
Gui.FormTransportNoteService.cmdTransportNoteRemoveItemstab.Create(Button)
Gui.FormTransportNoteService.cmdTransportNoteRemoveItemstab.Enabled(True)
Gui.FormTransportNoteService.cmdTransportNoteRemoveItemstab.Visible(True)
Gui.FormTransportNoteService.cmdTransportNoteRemoveItemstab.Zorder(0)
Gui.FormTransportNoteService.cmdTransportNoteRemoveItemstab.Size(1125,345)
Gui.FormTransportNoteService.cmdTransportNoteRemoveItemstab.Position(1125,0)
Gui.FormTransportNoteService.cmdTransportNoteRemoveItemstab.Caption("Remove")
Gui.FormTransportNoteService.cmdTransportNoteRemoveItemstab.FontName("Tahoma")
Gui.FormTransportNoteService.cmdTransportNoteRemoveItemstab.FontSize(8.25)
Gui.FormTransportNoteService.cmdTransportNoteRemoveItemstab.Parent("frameTransportNoteItemsTab")
Gui.FormTransportNoteService.frame1.Create(Frame)
Gui.FormTransportNoteService.frame1.Enabled(True)
Gui.FormTransportNoteService.frame1.Visible(True)
Gui.FormTransportNoteService.frame1.Zorder(0)
Gui.FormTransportNoteService.frame1.Size(15330,5010)
Gui.FormTransportNoteService.frame1.Position(0,615)
Gui.FormTransportNoteService.frame1.Caption("")
Gui.FormTransportNoteService.frame1.FontName("Tahoma")
Gui.FormTransportNoteService.frame1.FontSize(8.25)
Gui.FormTransportNoteService.frame1.Dock(5)
Gui.FormTransportNoteService.frame1.Parent("tabTransportNote",1)
Gui.FormTransportNoteService.GsGridControlTransportNoteService.Create(GsGridControl)
Gui.FormTransportNoteService.GsGridControlTransportNoteService.Enabled(True)
Gui.FormTransportNoteService.GsGridControlTransportNoteService.Visible(True)
Gui.FormTransportNoteService.GsGridControlTransportNoteService.Zorder(0)
Gui.FormTransportNoteService.GsGridControlTransportNoteService.Size(15330,5625)
Gui.FormTransportNoteService.GsGridControlTransportNoteService.Position(0,0)
Gui.FormTransportNoteService.GsGridControlTransportNoteService.Parent("frame1")
Gui.FormTransportNoteService.GsGridControlTransportNoteService.Dock(0)
Gui.FormTransportNoteService.lbl1.Create(Label,"Transport Note ID:",True,1365,195,0,105,495,True,0,"Tahoma",8.25,,0,0)
Gui.FormTransportNoteService.lbl1.BorderStyle(0)
Gui.FormTransportNoteService.lbl2.Create(Label,"Transport Arrangement:",True,1755,195,0,105,930,True,0,"Tahoma",8.25,,0,0)
Gui.FormTransportNoteService.lbl2.BorderStyle(0)
Gui.FormTransportNoteService.lbl3.Create(Label,"Date Time Delivery:",True,1410,195,0,105,1365,True,0,"Tahoma",8.25,,0,0)
Gui.FormTransportNoteService.lbl3.BorderStyle(0)
Gui.FormTransportNoteService.lbl4.Create(Label,"Registration Number",True,1470,195,0,105,1800,True,0,"Tahoma",8.25,,0,0)
Gui.FormTransportNoteService.lbl4.BorderStyle(0)
Gui.FormTransportNoteService.lbl5.Create(Label,"Driver Name",True,885,195,0,105,2235,True,0,"Tahoma",8.25,,0,0)
Gui.FormTransportNoteService.lbl5.BorderStyle(0)
Gui.FormTransportNoteService.lbl6.Create(Label,"Note:",True,405,195,0,105,2670,True,0,"Tahoma",8.25,,0,0)
Gui.FormTransportNoteService.lbl6.BorderStyle(0)
Gui.FormTransportNoteService.lbl7.Create(Label,"Checked By:",True,900,195,0,6150,465,True,0,"Tahoma",8.25,,0,0)
Gui.FormTransportNoteService.lbl7.BorderStyle(0)
Gui.FormTransportNoteService.lbl8.Create(Label,"Delivery Contact:",True,1260,195,0,6150,1545,True,0,"Tahoma",8.25,,0,0)
Gui.FormTransportNoteService.lbl8.BorderStyle(0)
Gui.FormTransportNoteService.lbl9.Create(Label,"Delivery Address",True,1215,195,0,6120,2550,True,0,"Tahoma",8.25,,0,0)
Gui.FormTransportNoteService.lbl9.BorderStyle(0)
Gui.FormTransportNoteService.txtTransportNoteTransportNoteID.Create(TextBox,"",True,1500,300,0,2025,465,False,0,"Tahoma",8.25,,1)
Gui.FormTransportNoteService.txtTransportNoteEstKg.Create(TextBox,"tmp4",True,1500,300,0,4290,465,True,0,"Tahoma",8.25,,1)
Gui.FormTransportNoteService.txtTransportNoteTransportArrangement.Create(TextBox,"",True,3765,300,0,2025,915,True,0,"Tahoma",8.25,,1)
Gui.FormTransportNoteService.txtTransportNoteRegistrationNumber.Create(TextBox,"tmp5",True,2220,300,0,2025,1770,True,0,"Tahoma",8.25,,1)
Gui.FormTransportNoteService.txtTransportNoteDateTimeDelivery.Create(TextBox,"",True,2220,300,0,2025,1335,True,0,"Tahoma",8.25,,1)
Gui.FormTransportNoteService.txtTransportNoteDrivername.Create(TextBox,"zack",True,2220,300,0,2025,2205,True,0,"Tahoma",8.25,,1)
Gui.FormTransportNoteService.txtTransportNoteNotes.Create(TextboxM)
Gui.FormTransportNoteService.txtTransportNoteNotes.Enabled(True)
Gui.FormTransportNoteService.txtTransportNoteNotes.Visible(True)
Gui.FormTransportNoteService.txtTransportNoteNotes.Zorder(0)
Gui.FormTransportNoteService.txtTransportNoteNotes.Size(3705,1290)
Gui.FormTransportNoteService.txtTransportNoteNotes.Position(2025,2640)
Gui.FormTransportNoteService.txtTransportNoteNotes.FontName("Tahoma")
Gui.FormTransportNoteService.txtTransportNoteNotes.FontSize(8.25)
Gui.FormTransportNoteService.txtTransportNoteNotes.Text("tmp6")
Gui.FormTransportNoteService.txtTransportNoteDeliveryAddress.Create(TextboxM)
Gui.FormTransportNoteService.txtTransportNoteDeliveryAddress.Enabled(True)
Gui.FormTransportNoteService.txtTransportNoteDeliveryAddress.Visible(True)
Gui.FormTransportNoteService.txtTransportNoteDeliveryAddress.Zorder(0)
Gui.FormTransportNoteService.txtTransportNoteDeliveryAddress.Size(5280,900)
Gui.FormTransportNoteService.txtTransportNoteDeliveryAddress.Position(7515,2445)
Gui.FormTransportNoteService.txtTransportNoteDeliveryAddress.FontName("Tahoma")
Gui.FormTransportNoteService.txtTransportNoteDeliveryAddress.FontSize(8.25)
Gui.FormTransportNoteService.txtTransportNoteDeliveryAddress.Text("tmp3")
Gui.FormTransportNoteService.txtTransportNoteDeliveryContact.Create(TextboxM)
Gui.FormTransportNoteService.txtTransportNoteDeliveryContact.Enabled(True)
Gui.FormTransportNoteService.txtTransportNoteDeliveryContact.Visible(True)
Gui.FormTransportNoteService.txtTransportNoteDeliveryContact.Zorder(0)
Gui.FormTransportNoteService.txtTransportNoteDeliveryContact.Size(5265,900)
Gui.FormTransportNoteService.txtTransportNoteDeliveryContact.Position(7515,1440)
Gui.FormTransportNoteService.txtTransportNoteDeliveryContact.FontName("Tahoma")
Gui.FormTransportNoteService.txtTransportNoteDeliveryContact.FontSize(8.25)
Gui.FormTransportNoteService.txtTransportNoteDeliveryContact.Text("tmp2")
Gui.FormTransportNoteService.txtTransportNoteCheckedBy.Create(TextboxM)
Gui.FormTransportNoteService.txtTransportNoteCheckedBy.Enabled(True)
Gui.FormTransportNoteService.txtTransportNoteCheckedBy.Visible(True)
Gui.FormTransportNoteService.txtTransportNoteCheckedBy.Zorder(0)
Gui.FormTransportNoteService.txtTransportNoteCheckedBy.Size(5265,900)
Gui.FormTransportNoteService.txtTransportNoteCheckedBy.Position(7515,465)
Gui.FormTransportNoteService.txtTransportNoteCheckedBy.FontName("Tahoma")
Gui.FormTransportNoteService.txtTransportNoteCheckedBy.FontSize(8.25)
Gui.FormTransportNoteService.txtTransportNoteCheckedBy.Text("tmp1")
Gui.FormTransportNoteService.lbl10.Create(Label,"Est kg:",True,495,195,0,3675,495,True,0,"Tahoma",8.25,,0,0)
Gui.FormTransportNoteService.lbl10.BorderStyle(0)
Gui.FormTransportNoteService.cmdUpdateTransportNoteDateTime.Create(Button)
Gui.FormTransportNoteService.cmdUpdateTransportNoteDateTime.Enabled(True)
Gui.FormTransportNoteService.cmdUpdateTransportNoteDateTime.Visible(True)
Gui.FormTransportNoteService.cmdUpdateTransportNoteDateTime.Zorder(0)
Gui.FormTransportNoteService.cmdUpdateTransportNoteDateTime.Size(585,345)
Gui.FormTransportNoteService.cmdUpdateTransportNoteDateTime.Position(4290,1320)
Gui.FormTransportNoteService.cmdUpdateTransportNoteDateTime.Caption("Time")
Gui.FormTransportNoteService.cmdUpdateTransportNoteDateTime.FontName("Tahoma")
Gui.FormTransportNoteService.cmdUpdateTransportNoteDateTime.FontSize(8.25)
Gui.FormTransportNoteService.txtTransportNoteWOID.Create(TextBox,"",True,1500,300,0,285,3255,False,0,"Tahoma",8.25,,1)
Gui.FormTransportNoteService.GSGCLinesInTransportNote.Create(GsGridControl)
Gui.FormTransportNoteService.GSGCLinesInTransportNote.Enabled(True)
Gui.FormTransportNoteService.GSGCLinesInTransportNote.Visible(False)
Gui.FormTransportNoteService.GSGCLinesInTransportNote.Zorder(0)
Gui.FormTransportNoteService.GSGCLinesInTransportNote.Size(2295,1215)
Gui.FormTransportNoteService.GSGCLinesInTransportNote.Position(12885,450)
Gui.FormTransportNoteService.txtUpdateType.Create(TextBox,"1",True,1500,300,0,7575,30,True,0,"Tahoma",8.25,,1)
Gui.FormJobSheet..Create(DashForm)
Gui.FormJobSheet..Caption("Operations - Job Sheet Detail [6559]")
Gui.FormJobSheet..Size(20010,10800)
Gui.FormJobSheet..MinX(0)
Gui.FormJobSheet..MinY(0)
Gui.FormJobSheet..Position(0,0)
Gui.FormJobSheet..AlwaysOnTop(False)
Gui.FormJobSheet..FontName("Tahoma")
Gui.FormJobSheet..FontSize(8.25)
Gui.FormJobSheet..ControlBox(True)
Gui.FormJobSheet..MaxButton(True)
Gui.FormJobSheet..MinButton(True)
Gui.FormJobSheet..MousePointer(0)
Gui.FormJobSheet..Moveable(True)
Gui.FormJobSheet..Sizeable(True)
Gui.FormJobSheet..ShowInTaskBar(True)
Gui.FormJobSheet..TitleBar(True)
Gui.FormJobSheet..Event(UnLoad,FormJobSheet_UnLoad)
Gui.FormJobSheet..Event(UserButtonClicked,FormJobSheet_UserButtonClicked)
Gui.FormJobSheet.SplitContainer1.Create(SplitContainer)
Gui.FormJobSheet.SplitContainer1.Enabled(True)
Gui.FormJobSheet.SplitContainer1.Visible(True)
Gui.FormJobSheet.SplitContainer1.Zorder(0)
Gui.FormJobSheet.SplitContainer1.Size(20010,10350)
Gui.FormJobSheet.SplitContainer1.Position(0,0)
Gui.FormJobSheet.SplitContainer1.Orientation(1)
Gui.FormJobSheet.SplitContainer1.SplitterPosition(1680)
Gui.FormJobSheet.SplitContainer1.Collapsed(False)
Gui.FormJobSheet.SplitContainer1.Dock(5)
Gui.FormJobSheet.SplitContainer1.FixedPanel(0)
Gui.FormJobSheet.txtPreparedByID.Create(TextBox,"",False,690,300,0,11415,645,False,0,"Tahoma",8.25,,1)
Gui.FormJobSheet.txtPreparedByID.Parent("SplitContainer1",0)
Gui.FormJobSheet.lbl4.Create(Label,"Scheduled by:",True,1020,195,0,7830,225,True,0,"Tahoma",8.25,,0,0)
Gui.FormJobSheet.lbl4.BorderStyle(0)
Gui.FormJobSheet.lbl4.Parent("SplitContainer1",0)
Gui.FormJobSheet.txtJobIDNotes.Create(TextboxM)
Gui.FormJobSheet.txtJobIDNotes.Enabled(True)
Gui.FormJobSheet.txtJobIDNotes.Visible(True)
Gui.FormJobSheet.txtJobIDNotes.Zorder(0)
Gui.FormJobSheet.txtJobIDNotes.Size(8235,1485)
Gui.FormJobSheet.txtJobIDNotes.Position(11670,105)
Gui.FormJobSheet.txtJobIDNotes.FontName("Tahoma")
Gui.FormJobSheet.txtJobIDNotes.FontSize(8.25)
Gui.FormJobSheet.txtJobIDNotes.Parent("SplitContainer1",0)
Gui.FormJobSheet.txtJobIDNotes.Anchor(13)
Gui.FormJobSheet.txtScheduledByID.Create(TextBox,"",False,690,300,0,11385,150,False,0,"Tahoma",8.25,,1)
Gui.FormJobSheet.txtScheduledByID.Parent("SplitContainer1",0)
Gui.FormJobSheet.txtResourceID.Create(TextBox,"",False,690,300,0,2730,360,False,0,"Tahoma",8.25,,1)
Gui.FormJobSheet.txtResourceID.Parent("SplitContainer1",0)
Gui.FormJobSheet.txtDateScheduled.Create(TextBox,"",True,1980,300,0,4560,180,True,0,"Tahoma",8.25,,1)
Gui.FormJobSheet.txtDateScheduled.Parent("SplitContainer1",0)
Gui.FormJobSheet.txtProcessCount.Create(TextBox,"1",True,450,300,0,10860,1155,True,0,"Tahoma",8.25,,1)
Gui.FormJobSheet.txtProcessCount.Parent("SplitContainer1",0)
Gui.FormJobSheet.txtProcessCount.NumericOnly(2)
Gui.FormJobSheet.txtDateCompleted.Create(TextBox,"",True,1980,300,0,4560,1140,True,0,"Tahoma",8.25,,1)
Gui.FormJobSheet.txtDateCompleted.Parent("SplitContainer1",0)
Gui.FormJobSheet.txtDatePrepared.Create(TextBox,"",True,1980,300,0,4560,660,True,0,"Tahoma",8.25,,1)
Gui.FormJobSheet.txtDatePrepared.Parent("SplitContainer1",0)
Gui.FormJobSheet.txtJobID.Create(TextBox,"",True,2415,480,0,195,165,False,0,"Tahoma",16,,1)
Gui.FormJobSheet.txtJobID.Parent("SplitContainer1",0)
Gui.FormJobSheet.ddlResource.Create(DropDownList)
Gui.FormJobSheet.ddlResource.Enabled(True)
Gui.FormJobSheet.ddlResource.Visible(True)
Gui.FormJobSheet.ddlResource.Zorder(0)
Gui.FormJobSheet.ddlResource.Size(3225,600)
Gui.FormJobSheet.ddlResource.Position(180,795)
Gui.FormJobSheet.ddlResource.FontName("Tahoma")
Gui.FormJobSheet.ddlResource.FontSize(20)
Gui.FormJobSheet.ddlResource.Parent("SplitContainer1",0)
Gui.FormJobSheet.ddlResource.Event(Change,ddlResource_Change)
Gui.FormJobSheet.lbl1.Create(Label,"Scheduled:",True,795,195,0,3705,240,True,0,"Tahoma",8.25,,0,0)
Gui.FormJobSheet.lbl1.BorderStyle(0)
Gui.FormJobSheet.lbl1.Parent("SplitContainer1",0)
Gui.FormJobSheet.lbl3.Create(Label,"Completed:",True,825,195,0,3660,1185,True,0,"Tahoma",8.25,,0,0)
Gui.FormJobSheet.lbl3.BorderStyle(0)
Gui.FormJobSheet.lbl3.Parent("SplitContainer1",0)
Gui.FormJobSheet.lbl5.Create(Label,"Prepared by:",True,945,195,0,7905,705,True,0,"Tahoma",8.25,,0,0)
Gui.FormJobSheet.lbl5.BorderStyle(0)
Gui.FormJobSheet.lbl5.Parent("SplitContainer1",0)
Gui.FormJobSheet.cmdScheduledNow.Create(Button)
Gui.FormJobSheet.cmdScheduledNow.Enabled(True)
Gui.FormJobSheet.cmdScheduledNow.Visible(True)
Gui.FormJobSheet.cmdScheduledNow.Zorder(0)
Gui.FormJobSheet.cmdScheduledNow.Size(405,345)
Gui.FormJobSheet.cmdScheduledNow.Position(6690,150)
Gui.FormJobSheet.cmdScheduledNow.Caption("")
Gui.FormJobSheet.cmdScheduledNow.FontName("Tahoma")
Gui.FormJobSheet.cmdScheduledNow.FontSize(8.25)
Gui.FormJobSheet.cmdScheduledNow.SvgPicture("icon_reset_color")
Gui.FormJobSheet.cmdScheduledNow.Parent("SplitContainer1",0)
Gui.FormJobSheet.cmdScheduledNow.Event(Click,cmdScheduledNow_Click)
Gui.FormJobSheet.cmdPreparedNow.Create(Button)
Gui.FormJobSheet.cmdPreparedNow.Enabled(True)
Gui.FormJobSheet.cmdPreparedNow.Visible(True)
Gui.FormJobSheet.cmdPreparedNow.Zorder(0)
Gui.FormJobSheet.cmdPreparedNow.Size(405,345)
Gui.FormJobSheet.cmdPreparedNow.Position(6690,615)
Gui.FormJobSheet.cmdPreparedNow.Caption("")
Gui.FormJobSheet.cmdPreparedNow.FontName("Tahoma")
Gui.FormJobSheet.cmdPreparedNow.FontSize(8.25)
Gui.FormJobSheet.cmdPreparedNow.SvgPicture("icon_reset_color")
Gui.FormJobSheet.cmdPreparedNow.Parent("SplitContainer1",0)
Gui.FormJobSheet.cmdPreparedNow.Event(Click,cmdPreparedNow_Click)
Gui.FormJobSheet.cmdClearScheduled.Create(Button)
Gui.FormJobSheet.cmdClearScheduled.Enabled(True)
Gui.FormJobSheet.cmdClearScheduled.Visible(True)
Gui.FormJobSheet.cmdClearScheduled.Zorder(0)
Gui.FormJobSheet.cmdClearScheduled.Size(405,345)
Gui.FormJobSheet.cmdClearScheduled.Position(7200,150)
Gui.FormJobSheet.cmdClearScheduled.Caption("")
Gui.FormJobSheet.cmdClearScheduled.FontName("Tahoma")
Gui.FormJobSheet.cmdClearScheduled.FontSize(8.25)
Gui.FormJobSheet.cmdClearScheduled.SvgPicture("icon_clear_color")
Gui.FormJobSheet.cmdClearScheduled.Parent("SplitContainer1",0)
Gui.FormJobSheet.cmdClearScheduled.Event(Click,cmdClearScheduled_Click)
Gui.FormJobSheet.cmdClearPrepared.Create(Button)
Gui.FormJobSheet.cmdClearPrepared.Enabled(True)
Gui.FormJobSheet.cmdClearPrepared.Visible(True)
Gui.FormJobSheet.cmdClearPrepared.Zorder(0)
Gui.FormJobSheet.cmdClearPrepared.Size(405,345)
Gui.FormJobSheet.cmdClearPrepared.Position(7200,615)
Gui.FormJobSheet.cmdClearPrepared.Caption("")
Gui.FormJobSheet.cmdClearPrepared.FontName("Tahoma")
Gui.FormJobSheet.cmdClearPrepared.FontSize(8.25)
Gui.FormJobSheet.cmdClearPrepared.SvgPicture("icon_clear_color")
Gui.FormJobSheet.cmdClearPrepared.Parent("SplitContainer1",0)
Gui.FormJobSheet.cmdClearPrepared.Event(Click,cmdClearPrepared_Click)
Gui.FormJobSheet.cmdClearCompleted.Create(Button)
Gui.FormJobSheet.cmdClearCompleted.Enabled(True)
Gui.FormJobSheet.cmdClearCompleted.Visible(True)
Gui.FormJobSheet.cmdClearCompleted.Zorder(0)
Gui.FormJobSheet.cmdClearCompleted.Size(405,345)
Gui.FormJobSheet.cmdClearCompleted.Position(7200,1095)
Gui.FormJobSheet.cmdClearCompleted.Caption("")
Gui.FormJobSheet.cmdClearCompleted.FontName("Tahoma")
Gui.FormJobSheet.cmdClearCompleted.FontSize(8.25)
Gui.FormJobSheet.cmdClearCompleted.SvgPicture("icon_clear_color")
Gui.FormJobSheet.cmdClearCompleted.Parent("SplitContainer1",0)
Gui.FormJobSheet.cmdClearCompleted.Event(Click,cmdClearCompleted_Click)
Gui.FormJobSheet.chkReleased.Create(CheckBox)
Gui.FormJobSheet.chkReleased.Enabled(True)
Gui.FormJobSheet.chkReleased.Visible(True)
Gui.FormJobSheet.chkReleased.Zorder(0)
Gui.FormJobSheet.chkReleased.Size(1125,300)
Gui.FormJobSheet.chkReleased.Position(7980,1140)
Gui.FormJobSheet.chkReleased.Caption("Released")
Gui.FormJobSheet.chkReleased.FontName("Tahoma")
Gui.FormJobSheet.chkReleased.FontSize(8.25)
Gui.FormJobSheet.chkReleased.Parent("SplitContainer1",0)
Gui.FormJobSheet.chkReleased.Event(Change,chkReleased_Change)
Gui.FormJobSheet.lbl2.Create(Label,"Prepared:",True,720,195,0,3765,720,True,0,"Tahoma",8.25,,0,0)
Gui.FormJobSheet.lbl2.BorderStyle(0)
Gui.FormJobSheet.lbl2.Parent("SplitContainer1",0)
Gui.FormJobSheet.ddlPreparedby.Create(DropDownList)
Gui.FormJobSheet.ddlPreparedby.Enabled(True)
Gui.FormJobSheet.ddlPreparedby.Visible(True)
Gui.FormJobSheet.ddlPreparedby.Zorder(0)
Gui.FormJobSheet.ddlPreparedby.Size(2745,300)
Gui.FormJobSheet.ddlPreparedby.Position(8880,675)
Gui.FormJobSheet.ddlPreparedby.FontName("Tahoma")
Gui.FormJobSheet.ddlPreparedby.FontSize(8.25)
Gui.FormJobSheet.ddlPreparedby.Parent("SplitContainer1",0)
Gui.FormJobSheet.ddlPreparedby.Event(Change,ddlPreparedby_Change)
Gui.FormJobSheet.ddlScheduledby.Create(DropDownList)
Gui.FormJobSheet.ddlScheduledby.Enabled(True)
Gui.FormJobSheet.ddlScheduledby.Visible(True)
Gui.FormJobSheet.ddlScheduledby.Zorder(0)
Gui.FormJobSheet.ddlScheduledby.Size(2745,300)
Gui.FormJobSheet.ddlScheduledby.Position(8880,165)
Gui.FormJobSheet.ddlScheduledby.FontName("Tahoma")
Gui.FormJobSheet.ddlScheduledby.FontSize(8.25)
Gui.FormJobSheet.ddlScheduledby.Parent("SplitContainer1",0)
Gui.FormJobSheet.ddlScheduledby.Event(Change,ddlScheduledby_Change)
Gui.FormJobSheet.cmdCompletedNow.Create(Button)
Gui.FormJobSheet.cmdCompletedNow.Enabled(True)
Gui.FormJobSheet.cmdCompletedNow.Visible(True)
Gui.FormJobSheet.cmdCompletedNow.Zorder(0)
Gui.FormJobSheet.cmdCompletedNow.Size(405,345)
Gui.FormJobSheet.cmdCompletedNow.Position(6690,1095)
Gui.FormJobSheet.cmdCompletedNow.Caption("")
Gui.FormJobSheet.cmdCompletedNow.FontName("Tahoma")
Gui.FormJobSheet.cmdCompletedNow.FontSize(8.25)
Gui.FormJobSheet.cmdCompletedNow.SvgPicture("icon_reset_color")
Gui.FormJobSheet.cmdCompletedNow.Parent("SplitContainer1",0)
Gui.FormJobSheet.cmdCompletedNow.Event(Click,cmdCompletedNow_Click)
Gui.FormJobSheet.lbl6.Create(Label,"Process Count:",True,1095,195,0,9705,1215,True,0,"Tahoma",8.25,,0,0)
Gui.FormJobSheet.lbl6.BorderStyle(0)
Gui.FormJobSheet.lbl6.Parent("SplitContainer1",0)
Gui.FormJobSheet.tab1.Create(Tab)
Gui.FormJobSheet.tab1.Enabled(True)
Gui.FormJobSheet.tab1.Visible(True)
Gui.FormJobSheet.tab1.Zorder(0)
Gui.FormJobSheet.tab1.Size(20010,8025)
Gui.FormJobSheet.tab1.Position(0,0)
Gui.FormJobSheet.tab1.FontName("Tahoma")
Gui.FormJobSheet.tab1.FontSize(8.25)
Gui.FormJobSheet.tab1.Parent("SplitContainer1",1)
Gui.FormJobSheet.tab1.Anchor(15)
Gui.FormJobSheet.tab1.Dock(5)
Gui.FormJobSheet.tab1.Event(Click,tab1_Click)
Gui.FormJobSheet.tab1.Tabs(2)
Gui.FormJobSheet.tab1.SetTab(0)
Gui.FormJobSheet.tab1.Caption("Current")
Gui.FormJobSheet.tab1.SetTab(1)
Gui.FormJobSheet.tab1.Caption("Available")
Gui.FormJobSheet.cmdAllocateJobLines.Create(Button)
Gui.FormJobSheet.cmdAllocateJobLines.Enabled(True)
Gui.FormJobSheet.cmdAllocateJobLines.Visible(True)
Gui.FormJobSheet.cmdAllocateJobLines.Zorder(0)
Gui.FormJobSheet.cmdAllocateJobLines.Size(1125,345)
Gui.FormJobSheet.cmdAllocateJobLines.Position(0,45)
Gui.FormJobSheet.cmdAllocateJobLines.Caption("Allocate")
Gui.FormJobSheet.cmdAllocateJobLines.FontName("Tahoma")
Gui.FormJobSheet.cmdAllocateJobLines.FontSize(8.25)
Gui.FormJobSheet.cmdAllocateJobLines.Parent("tab1",1)
Gui.FormJobSheet.cmdAllocateJobLines.Event(Click,cmdAllocateJobLines_Click)
Gui.FormJobSheet.GSGCJobAvailable.Create(GsGridControl)
Gui.FormJobSheet.GSGCJobAvailable.Enabled(True)
Gui.FormJobSheet.GSGCJobAvailable.Visible(True)
Gui.FormJobSheet.GSGCJobAvailable.Zorder(0)
Gui.FormJobSheet.GSGCJobAvailable.Size(19935,7050)
Gui.FormJobSheet.GSGCJobAvailable.Position(0,450)
Gui.FormJobSheet.GSGCJobAvailable.Parent("tab1",1)
Gui.FormJobSheet.GSGCJobAvailable.Anchor(15)
Gui.FormJobSheet.GSGCJobAvailable.Dock(0)
Gui.FormJobSheet.GSGCJobAvailable.Event(CellValueChanged,GSGCJobAvailable_CellValueChanged)
Gui.FormJobSheet.GSGCJobAvailable.Event(RowCellClick,GSGCJobAvailable_RowCellClick)
Gui.FormJobSheet.cmdRemoveJobLines.Create(Button)
Gui.FormJobSheet.cmdRemoveJobLines.Enabled(True)
Gui.FormJobSheet.cmdRemoveJobLines.Visible(True)
Gui.FormJobSheet.cmdRemoveJobLines.Zorder(0)
Gui.FormJobSheet.cmdRemoveJobLines.Size(1125,345)
Gui.FormJobSheet.cmdRemoveJobLines.Position(0,45)
Gui.FormJobSheet.cmdRemoveJobLines.Caption("Remove")
Gui.FormJobSheet.cmdRemoveJobLines.FontName("Tahoma")
Gui.FormJobSheet.cmdRemoveJobLines.FontSize(8.25)
Gui.FormJobSheet.cmdRemoveJobLines.Parent("tab1",0)
Gui.FormJobSheet.cmdRemoveJobLines.Event(Click,cmdRemoveJobLines_Click)
Gui.FormJobSheet.cmdQALog.Create(Button)
Gui.FormJobSheet.cmdQALog.Enabled(True)
Gui.FormJobSheet.cmdQALog.Visible(True)
Gui.FormJobSheet.cmdQALog.Zorder(0)
Gui.FormJobSheet.cmdQALog.Size(1410,345)
Gui.FormJobSheet.cmdQALog.Position(1200,45)
Gui.FormJobSheet.cmdQALog.Caption("Add/View QA Log")
Gui.FormJobSheet.cmdQALog.FontName("Tahoma")
Gui.FormJobSheet.cmdQALog.FontSize(8.25)
Gui.FormJobSheet.cmdQALog.Parent("tab1",0)
Gui.FormJobSheet.cmdQALog.Event(Click,cmdQALog_Click)
Gui.FormJobSheet.cmdReworkLog.Create(Button)
Gui.FormJobSheet.cmdReworkLog.Enabled(True)
Gui.FormJobSheet.cmdReworkLog.Visible(True)
Gui.FormJobSheet.cmdReworkLog.Zorder(0)
Gui.FormJobSheet.cmdReworkLog.Size(1125,345)
Gui.FormJobSheet.cmdReworkLog.Position(2685,45)
Gui.FormJobSheet.cmdReworkLog.Caption("Rework")
Gui.FormJobSheet.cmdReworkLog.FontName("Tahoma")
Gui.FormJobSheet.cmdReworkLog.FontSize(8.25)
Gui.FormJobSheet.cmdReworkLog.Parent("tab1",0)
Gui.FormJobSheet.cmdReworkLog.Event(Click,cmdReworkLog_Click)
Gui.FormJobSheet.GSGCJobCurrent.Create(GsGridControl)
Gui.FormJobSheet.GSGCJobCurrent.Enabled(True)
Gui.FormJobSheet.GSGCJobCurrent.Visible(True)
Gui.FormJobSheet.GSGCJobCurrent.Zorder(0)
Gui.FormJobSheet.GSGCJobCurrent.Size(19905,6975)
Gui.FormJobSheet.GSGCJobCurrent.Position(15,465)
Gui.FormJobSheet.GSGCJobCurrent.Parent("tab1",0)
Gui.FormJobSheet.GSGCJobCurrent.Dock(0)
Gui.FormJobSheet.GSGCJobCurrent.Event(CellValueChanged,GSGCJobCurrent_CellValueChanged)
Gui.FormJobSheet.GSGCJobCurrent.Event(RowCellClick,GSGCJobCurrent_RowCellClick)
Gui.FormJobSheet.GSGCJobCurrent.Anchor(15)
Gui.FormQA..Create(DashForm)
Gui.FormQA..Caption("QA Log Details - 6559")
Gui.FormQA..Size(9000,10170)
Gui.FormQA..MinX(0)
Gui.FormQA..MinY(0)
Gui.FormQA..Position(0,0)
Gui.FormQA..AlwaysOnTop(False)
Gui.FormQA..FontName("Tahoma")
Gui.FormQA..FontSize(8.25)
Gui.FormQA..ControlBox(True)
Gui.FormQA..MaxButton(False)
Gui.FormQA..MinButton(True)
Gui.FormQA..MousePointer(0)
Gui.FormQA..Moveable(True)
Gui.FormQA..Sizeable(False)
Gui.FormQA..ShowInTaskBar(True)
Gui.FormQA..TitleBar(True)
Gui.FormQA..Event(UnLoad,FormQA_UnLoad)
Gui.FormQA..Event(UserButtonClicked,FormQA_UserButtonClicked)
Gui.FormQA.txtWOID.Create(TextBox,"",True,1500,480,0,2910,255,False,0,"Tahoma",16,,1)
Gui.FormQA.txtWOLine.Create(TextBox,"",True,810,480,0,4545,255,False,0,"Tahoma",16,,1)
Gui.FormQA.txtJobID.Create(TextBox,"",True,1500,480,0,2910,855,False,0,"Tahoma",16,,1)
Gui.FormQA.lbl1.Create(Label,"Work Order ID: Line Number:",True,2535,240,0,120,375,True,0,"Tahoma",10,,0,0)
Gui.FormQA.lbl1.BorderStyle(0)
Gui.FormQA.lbl2.Create(Label,"Job ID:",True,600,240,0,2040,990,True,0,"Tahoma",10,,0,0)
Gui.FormQA.lbl2.BorderStyle(0)
Gui.FormQA.txtDateMeasure.Create(TextBox,"",True,4335,390,0,2910,1440,True,0,"Tahoma",12,,1)
Gui.FormQA.txtDateMeasure.TabStop(True)
Gui.FormQA.txtDateMeasure.TabIndex(1)
Gui.FormQA.cmdRefreshDateM.Create(Button)
Gui.FormQA.cmdRefreshDateM.Enabled(True)
Gui.FormQA.cmdRefreshDateM.Visible(True)
Gui.FormQA.cmdRefreshDateM.Zorder(0)
Gui.FormQA.cmdRefreshDateM.Size(435,375)
Gui.FormQA.cmdRefreshDateM.Position(7365,1455)
Gui.FormQA.cmdRefreshDateM.Caption("")
Gui.FormQA.cmdRefreshDateM.FontName("Tahoma")
Gui.FormQA.cmdRefreshDateM.FontSize(8.25)
Gui.FormQA.cmdRefreshDateM.SvgPicture("icon_refresh_color")
Gui.FormQA.cmdRefreshDateM.TabStop(True)
Gui.FormQA.cmdRefreshDateM.TabIndex(34)
Gui.FormQA.cmdRefreshDateM.Event(Click,cmdRefreshDateM_Click)
Gui.FormQA.lbl3.Create(Label,"Measurement Date Time:",True,2190,240,0,465,1500,True,0,"Tahoma",10,,0,0)
Gui.FormQA.lbl3.BorderStyle(0)
Gui.FormQA.ddlLoggedBy.Create(DropDownList)
Gui.FormQA.ddlLoggedBy.Enabled(True)
Gui.FormQA.ddlLoggedBy.Visible(True)
Gui.FormQA.ddlLoggedBy.Zorder(0)
Gui.FormQA.ddlLoggedBy.Size(4335,390)
Gui.FormQA.ddlLoggedBy.Position(2910,1950)
Gui.FormQA.ddlLoggedBy.FontName("Tahoma")
Gui.FormQA.ddlLoggedBy.FontSize(12)
Gui.FormQA.ddlLoggedBy.Event(Change,ddlLoggedBy_Change)
Gui.FormQA.ddlLoggedBy.TabStop(True)
Gui.FormQA.ddlLoggedBy.TabIndex(2)
Gui.FormQA.ddlMeasurementDevice.Create(DropDownList)
Gui.FormQA.ddlMeasurementDevice.Enabled(True)
Gui.FormQA.ddlMeasurementDevice.Visible(True)
Gui.FormQA.ddlMeasurementDevice.Zorder(0)
Gui.FormQA.ddlMeasurementDevice.Size(4335,390)
Gui.FormQA.ddlMeasurementDevice.Position(2910,2490)
Gui.FormQA.ddlMeasurementDevice.TabStop(True)
Gui.FormQA.ddlMeasurementDevice.TabIndex(3)
Gui.FormQA.ddlMeasurementDevice.FontName("Tahoma")
Gui.FormQA.ddlMeasurementDevice.FontSize(12)
Gui.FormQA.ddlMeasurementDevice.Event(Change,ddlMeasurementDevice_Change)
Gui.FormQA.lbl4.Create(Label,"Logged By:",True,945,240,0,1695,2010,True,0,"Tahoma",10,,0,0)
Gui.FormQA.lbl4.BorderStyle(0)
Gui.FormQA.lbl5.Create(Label,"Measurement Device:",True,1860,240,0,780,2550,True,0,"Tahoma",10,,0,0)
Gui.FormQA.lbl5.BorderStyle(0)
Gui.FormQA.frame1.Create(Frame)
Gui.FormQA.frame1.Enabled(True)
Gui.FormQA.frame1.Visible(True)
Gui.FormQA.frame1.Zorder(0)
Gui.FormQA.frame1.Size(5700,5325)
Gui.FormQA.frame1.Position(1560,3150)
Gui.FormQA.frame1.Caption("")
Gui.FormQA.frame1.FontName("Tahoma")
Gui.FormQA.frame1.FontSize(8.25)
Gui.FormQA.txtA9.Create(TextBox,"",True,735,390,0,465,4290,True,0,"Tahoma",12,,1)
Gui.FormQA.txtA9.TabStop(True)
Gui.FormQA.txtA9.TabIndex(12)
Gui.FormQA.txtA9.Parent("frame1")
Gui.FormQA.txtA9.MaxLength(3)
Gui.FormQA.txtA9.NumericOnly(2)
Gui.FormQA.txtA4.Create(TextBox,"",True,735,390,0,465,1950,True,0,"Tahoma",12,,1)
Gui.FormQA.txtA4.TabStop(True)
Gui.FormQA.txtA4.TabIndex(7)
Gui.FormQA.txtA4.Parent("frame1")
Gui.FormQA.txtA4.MaxLength(3)
Gui.FormQA.txtA4.NumericOnly(2)
Gui.FormQA.txtA3.Create(TextBox,"",True,735,390,0,465,1470,True,0,"Tahoma",12,,1)
Gui.FormQA.txtA3.TabStop(True)
Gui.FormQA.txtA3.TabIndex(6)
Gui.FormQA.txtA3.Parent("frame1")
Gui.FormQA.txtA3.MaxLength(3)
Gui.FormQA.txtA3.NumericOnly(2)
Gui.FormQA.txtA2.Create(TextBox,"",True,735,390,0,465,990,True,0,"Tahoma",12,,1)
Gui.FormQA.txtA2.TabStop(True)
Gui.FormQA.txtA2.TabIndex(5)
Gui.FormQA.txtA2.Parent("frame1")
Gui.FormQA.txtA2.MaxLength(3)
Gui.FormQA.txtA2.NumericOnly(2)
Gui.FormQA.lbl7.Create(Label,"POS 2",True,660,285,0,2505,135,True,0,"Tahoma",12,,0,0)
Gui.FormQA.lbl7.BorderStyle(0)
Gui.FormQA.lbl7.Parent("frame1")
Gui.FormQA.txtC6.Create(TextBox,"",True,735,390,0,4470,2895,True,0,"Tahoma",12,,1)
Gui.FormQA.txtC6.TabStop(True)
Gui.FormQA.txtC6.TabIndex(29)
Gui.FormQA.txtC6.MaxLength(3)
Gui.FormQA.txtC6.NumericOnly(2)
Gui.FormQA.txtC6.Parent("frame1")
Gui.FormQA.txtA1.Create(TextBox,"",True,735,390,0,465,525,True,0,"Tahoma",12,,1)
Gui.FormQA.txtA1.Parent("frame1")
Gui.FormQA.txtA1.NumericOnly(2)
Gui.FormQA.txtA1.MaxLength(3)
Gui.FormQA.txtA1.TabStop(True)
Gui.FormQA.txtA1.TabIndex(4)
Gui.FormQA.txtC7.Create(TextBox,"",True,735,390,0,4470,3360,True,0,"Tahoma",12,,1)
Gui.FormQA.txtC7.TabStop(True)
Gui.FormQA.txtC7.TabIndex(30)
Gui.FormQA.txtC7.MaxLength(3)
Gui.FormQA.txtC7.NumericOnly(2)
Gui.FormQA.txtC7.Parent("frame1")
Gui.FormQA.txtC8.Create(TextBox,"",True,735,390,0,4470,3825,True,0,"Tahoma",12,,1)
Gui.FormQA.txtC8.TabStop(True)
Gui.FormQA.txtC8.TabIndex(31)
Gui.FormQA.txtC8.MaxLength(3)
Gui.FormQA.txtC8.NumericOnly(2)
Gui.FormQA.txtC8.Parent("frame1")
Gui.FormQA.txtC9.Create(TextBox,"",True,735,390,0,4470,4290,True,0,"Tahoma",12,,1)
Gui.FormQA.txtC9.TabStop(True)
Gui.FormQA.txtC9.TabIndex(32)
Gui.FormQA.txtC9.MaxLength(3)
Gui.FormQA.txtC9.NumericOnly(2)
Gui.FormQA.txtC9.Parent("frame1")
Gui.FormQA.txtC10.Create(TextBox,"",True,735,390,0,4470,4755,True,0,"Tahoma",12,,1)
Gui.FormQA.txtC10.TabStop(True)
Gui.FormQA.txtC10.TabIndex(33)
Gui.FormQA.txtC10.MaxLength(3)
Gui.FormQA.txtC10.NumericOnly(2)
Gui.FormQA.txtC10.Parent("frame1")
Gui.FormQA.txtA10.Create(TextBox,"",True,735,390,0,465,4755,True,0,"Tahoma",12,,1)
Gui.FormQA.txtA10.TabStop(True)
Gui.FormQA.txtA10.TabIndex(13)
Gui.FormQA.txtA10.Parent("frame1")
Gui.FormQA.txtA10.MaxLength(3)
Gui.FormQA.txtA10.NumericOnly(2)
Gui.FormQA.txtA8.Create(TextBox,"",True,735,390,0,465,3825,True,0,"Tahoma",12,,1)
Gui.FormQA.txtA8.TabStop(True)
Gui.FormQA.txtA8.TabIndex(11)
Gui.FormQA.txtA8.Parent("frame1")
Gui.FormQA.txtA8.MaxLength(3)
Gui.FormQA.txtA8.NumericOnly(2)
Gui.FormQA.txtA7.Create(TextBox,"",True,735,390,0,465,3360,True,0,"Tahoma",12,,1)
Gui.FormQA.txtA7.TabStop(True)
Gui.FormQA.txtA7.TabIndex(10)
Gui.FormQA.txtA7.Parent("frame1")
Gui.FormQA.txtA7.MaxLength(3)
Gui.FormQA.txtA7.NumericOnly(2)
Gui.FormQA.lbl6.Create(Label,"POS 1",True,660,285,0,510,135,True,0,"Tahoma",12,,0,0)
Gui.FormQA.lbl6.BorderStyle(0)
Gui.FormQA.lbl6.Parent("frame1")
Gui.FormQA.lbl8.Create(Label,"POS 3",True,660,285,0,4485,135,True,0,"Tahoma",12,,0,0)
Gui.FormQA.lbl8.BorderStyle(0)
Gui.FormQA.lbl8.Parent("frame1")
Gui.FormQA.txtC1.Create(TextBox,"",True,735,390,0,4470,525,True,0,"Tahoma",12,,1)
Gui.FormQA.txtC1.TabStop(True)
Gui.FormQA.txtC1.TabIndex(24)
Gui.FormQA.txtC1.MaxLength(3)
Gui.FormQA.txtC1.NumericOnly(2)
Gui.FormQA.txtC1.Parent("frame1")
Gui.FormQA.txtB9.Create(TextBox,"",True,735,390,0,2460,4290,True,0,"Tahoma",12,,1)
Gui.FormQA.txtB9.TabStop(True)
Gui.FormQA.txtB9.TabIndex(22)
Gui.FormQA.txtB9.MaxLength(3)
Gui.FormQA.txtB9.NumericOnly(2)
Gui.FormQA.txtB9.Parent("frame1")
Gui.FormQA.txtB8.Create(TextBox,"",True,735,390,0,2460,3825,True,0,"Tahoma",12,,1)
Gui.FormQA.txtB8.TabStop(True)
Gui.FormQA.txtB8.TabIndex(21)
Gui.FormQA.txtB8.MaxLength(3)
Gui.FormQA.txtB8.NumericOnly(2)
Gui.FormQA.txtB8.Parent("frame1")
Gui.FormQA.txtB7.Create(TextBox,"",True,735,390,0,2460,3360,True,0,"Tahoma",12,,1)
Gui.FormQA.txtB7.TabStop(True)
Gui.FormQA.txtB7.TabIndex(20)
Gui.FormQA.txtB7.MaxLength(3)
Gui.FormQA.txtB7.NumericOnly(2)
Gui.FormQA.txtB7.Parent("frame1")
Gui.FormQA.txtA5.Create(TextBox,"",True,735,390,0,465,2430,True,0,"Tahoma",12,,1)
Gui.FormQA.txtA5.TabStop(True)
Gui.FormQA.txtA5.TabIndex(8)
Gui.FormQA.txtA5.Parent("frame1")
Gui.FormQA.txtA5.MaxLength(3)
Gui.FormQA.txtA5.NumericOnly(2)
Gui.FormQA.txtA6.Create(TextBox,"",True,735,390,0,465,2895,True,0,"Tahoma",12,,1)
Gui.FormQA.txtA6.TabStop(True)
Gui.FormQA.txtA6.TabIndex(9)
Gui.FormQA.txtA6.Parent("frame1")
Gui.FormQA.txtA6.MaxLength(3)
Gui.FormQA.txtA6.NumericOnly(2)
Gui.FormQA.txtC5.Create(TextBox,"",True,735,390,0,4470,2430,True,0,"Tahoma",12,,1)
Gui.FormQA.txtC5.TabStop(True)
Gui.FormQA.txtC5.TabIndex(28)
Gui.FormQA.txtC5.MaxLength(3)
Gui.FormQA.txtC5.NumericOnly(2)
Gui.FormQA.txtC5.Parent("frame1")
Gui.FormQA.txtC4.Create(TextBox,"",True,735,390,0,4470,1950,True,0,"Tahoma",12,,1)
Gui.FormQA.txtC4.TabStop(True)
Gui.FormQA.txtC4.TabIndex(27)
Gui.FormQA.txtC4.MaxLength(3)
Gui.FormQA.txtC4.NumericOnly(2)
Gui.FormQA.txtC4.Parent("frame1")
Gui.FormQA.txtC3.Create(TextBox,"",True,735,390,0,4470,1470,True,0,"Tahoma",12,,1)
Gui.FormQA.txtC3.TabStop(True)
Gui.FormQA.txtC3.TabIndex(26)
Gui.FormQA.txtC3.MaxLength(3)
Gui.FormQA.txtC3.NumericOnly(2)
Gui.FormQA.txtC3.Parent("frame1")
Gui.FormQA.txtC2.Create(TextBox,"",True,735,390,0,4470,990,True,0,"Tahoma",12,,1)
Gui.FormQA.txtC2.TabStop(True)
Gui.FormQA.txtC2.TabIndex(25)
Gui.FormQA.txtC2.MaxLength(3)
Gui.FormQA.txtC2.NumericOnly(2)
Gui.FormQA.txtC2.Parent("frame1")
Gui.FormQA.txtB10.Create(TextBox,"",True,735,390,0,2460,4755,True,0,"Tahoma",12,,1)
Gui.FormQA.txtB10.TabStop(True)
Gui.FormQA.txtB10.TabIndex(23)
Gui.FormQA.txtB10.MaxLength(3)
Gui.FormQA.txtB10.NumericOnly(2)
Gui.FormQA.txtB10.Parent("frame1")
Gui.FormQA.txtB1.Create(TextBox,"",True,735,390,0,2460,525,True,0,"Tahoma",12,,1)
Gui.FormQA.txtB1.TabStop(True)
Gui.FormQA.txtB1.TabIndex(14)
Gui.FormQA.txtB1.MaxLength(3)
Gui.FormQA.txtB1.NumericOnly(2)
Gui.FormQA.txtB1.Parent("frame1")
Gui.FormQA.txtB2.Create(TextBox,"",True,735,390,0,2460,990,True,0,"Tahoma",12,,1)
Gui.FormQA.txtB2.TabStop(True)
Gui.FormQA.txtB2.TabIndex(15)
Gui.FormQA.txtB2.MaxLength(3)
Gui.FormQA.txtB2.NumericOnly(2)
Gui.FormQA.txtB2.Parent("frame1")
Gui.FormQA.txtB3.Create(TextBox,"",True,735,390,0,2460,1470,True,0,"Tahoma",12,,1)
Gui.FormQA.txtB3.TabStop(True)
Gui.FormQA.txtB3.TabIndex(16)
Gui.FormQA.txtB3.MaxLength(3)
Gui.FormQA.txtB3.NumericOnly(2)
Gui.FormQA.txtB3.Parent("frame1")
Gui.FormQA.txtB4.Create(TextBox,"",True,735,390,0,2460,1950,True,0,"Tahoma",12,,1)
Gui.FormQA.txtB4.TabStop(True)
Gui.FormQA.txtB4.TabIndex(17)
Gui.FormQA.txtB4.MaxLength(3)
Gui.FormQA.txtB4.NumericOnly(2)
Gui.FormQA.txtB4.Parent("frame1")
Gui.FormQA.txtB5.Create(TextBox,"",True,735,390,0,2460,2430,True,0,"Tahoma",12,,1)
Gui.FormQA.txtB5.TabStop(True)
Gui.FormQA.txtB5.TabIndex(18)
Gui.FormQA.txtB5.MaxLength(3)
Gui.FormQA.txtB5.NumericOnly(2)
Gui.FormQA.txtB5.Parent("frame1")
Gui.FormQA.txtB6.Create(TextBox,"",True,735,390,0,2460,2895,True,0,"Tahoma",12,,1)
Gui.FormQA.txtB6.TabStop(True)
Gui.FormQA.txtB6.TabIndex(19)
Gui.FormQA.txtB6.MaxLength(3)
Gui.FormQA.txtB6.NumericOnly(2)
Gui.FormQA.txtB6.Parent("frame1")
Gui.FormQA.txtQAID.Create(TextBox,"",True,1500,480,0,6420,240,False,0,"Tahoma",16,,1)
Gui.FormQA.lbl9.Create(Label,"QA ID:",True,570,240,0,5745,360,True,0,"Tahoma",10,,0,0)
Gui.FormQA.lbl9.BorderStyle(0)
Gui.FormQA.txtLoggedByID.Create(TextBox,"",False,480,300,0,7380,1965,False,0,"Tahoma",8.25,,1)
Gui.FormQA.txtMeasurementID.Create(TextBox,"",False,480,300,0,7410,2550,False,0,"Tahoma",8.25,,1)
Gui.FormQA.lbl10.Create(Label,"Avg:",True,630,375,0,4050,8505,True,0,"Tahoma",16,,0,0)
Gui.FormQA.lbl10.BorderStyle(0)
Gui.FormQA.lblAvg.Create(Label,"0",True,165,375,0,4755,8505,True,0,"Tahoma",16,,0,0)
Gui.FormQA.lblAvg.BorderStyle(0)
Gui.FormQA.lbl11.Create(Label,"Std Dev:",True,1200,375,0,1905,8505,True,0,"Tahoma",16,,0,0)
Gui.FormQA.lbl11.BorderStyle(0)
Gui.FormQA.lblStdDev.Create(Label,"0",True,165,375,0,3150,8505,True,0,"Tahoma",16,,0,0)
Gui.FormQA.lblStdDev.BorderStyle(0)
Gui.FormRework..Create(DashForm)
Gui.FormRework..Caption("Rework Log - 6559")
Gui.FormRework..Size(12330,7710)
Gui.FormRework..MinX(0)
Gui.FormRework..MinY(0)
Gui.FormRework..Position(0,0)
Gui.FormRework..AlwaysOnTop(False)
Gui.FormRework..FontName("Tahoma")
Gui.FormRework..FontSize(8.25)
Gui.FormRework..ControlBox(True)
Gui.FormRework..MaxButton(True)
Gui.FormRework..MinButton(True)
Gui.FormRework..MousePointer(0)
Gui.FormRework..Moveable(True)
Gui.FormRework..Sizeable(True)
Gui.FormRework..ShowInTaskBar(True)
Gui.FormRework..TitleBar(True)
Gui.FormRework..Event(UserButtonClicked,FormRework_UserButtonClicked)
Gui.FormRework..Event(UnLoad,FormRework_UnLoad)
Gui.FormRework.txtWOID.Create(TextBox,"",True,2040,390,0,2175,105,True,0,"Tahoma",12,,1)
Gui.FormRework.txtWOID.NumericOnly(2)
Gui.FormRework.txtWOLine.Create(TextBox,"",True,2040,390,0,2175,555,True,0,"Tahoma",12,,1)
Gui.FormRework.txtWOLine.NumericOnly(2)
Gui.FormRework.txtItemQty.Create(TextBox,"",True,2040,390,0,2175,1455,True,0,"Tahoma",12,,1)
Gui.FormRework.txtItemQty.NumericOnly(2)
Gui.FormRework.txtItemQty.Event(Change,txtItemQty_Change)
Gui.FormRework.txtUnitQty.Create(TextBox,"",True,2040,390,0,2175,1905,True,0,"Tahoma",12,,1)
Gui.FormRework.txtUnitQty.NumericOnly(1)
Gui.FormRework.txtUnitQty.Event(Change,txtUnitQty_Change)
Gui.FormRework.txtJobID.Create(TextBox,"",True,2040,390,0,6240,105,True,0,"Tahoma",12,,1)
Gui.FormRework.txtJobID.NumericOnly(2)
Gui.FormRework.txtWOLineOrignial.Create(TextBox,"",True,2040,390,0,2175,1005,True,0,"Tahoma",12,,1)
Gui.FormRework.txtWOLineOrignial.NumericOnly(2)
Gui.FormRework.txtWOOrignialLID.Create(TextBox,"",False,750,390,0,4500,1020,False,0,"Tahoma",12,,1)
Gui.FormRework.txtWOOrignialLID.NumericOnly(2)
Gui.FormRework.txtDateLogged.Create(TextBox,"",True,4350,390,0,2175,2355,True,0,"Tahoma",12,,1)
Gui.FormRework.txtDateClosed.Create(TextBox,"",True,4350,390,0,2175,2805,True,0,"Tahoma",12,,1)
Gui.FormRework.ddlInspectedby.Create(DropDownList)
Gui.FormRework.ddlInspectedby.Enabled(True)
Gui.FormRework.ddlInspectedby.Visible(True)
Gui.FormRework.ddlInspectedby.Zorder(0)
Gui.FormRework.ddlInspectedby.Size(4350,390)
Gui.FormRework.ddlInspectedby.Position(2175,3255)
Gui.FormRework.ddlInspectedby.FontName("Tahoma")
Gui.FormRework.ddlInspectedby.FontSize(12)
Gui.FormRework.ddlReworkType.Create(DropDownList)
Gui.FormRework.ddlReworkType.Enabled(True)
Gui.FormRework.ddlReworkType.Visible(True)
Gui.FormRework.ddlReworkType.Zorder(0)
Gui.FormRework.ddlReworkType.Size(4350,390)
Gui.FormRework.ddlReworkType.Position(2175,3705)
Gui.FormRework.ddlReworkType.FontName("Tahoma")
Gui.FormRework.ddlReworkType.FontSize(12)
Gui.FormRework.txtNote.Create(TextboxM)
Gui.FormRework.txtNote.Enabled(True)
Gui.FormRework.txtNote.Visible(True)
Gui.FormRework.txtNote.Zorder(0)
Gui.FormRework.txtNote.Size(10035,2400)
Gui.FormRework.txtNote.Position(2175,4230)
Gui.FormRework.txtNote.FontName("Tahoma")
Gui.FormRework.txtNote.FontSize(12)
Gui.FormRework.cmdDateLoggedUpdate.Create(Button)
Gui.FormRework.cmdDateLoggedUpdate.Enabled(True)
Gui.FormRework.cmdDateLoggedUpdate.Visible(True)
Gui.FormRework.cmdDateLoggedUpdate.Zorder(0)
Gui.FormRework.cmdDateLoggedUpdate.Size(405,345)
Gui.FormRework.cmdDateLoggedUpdate.Position(6690,2370)
Gui.FormRework.cmdDateLoggedUpdate.Caption("")
Gui.FormRework.cmdDateLoggedUpdate.FontName("Tahoma")
Gui.FormRework.cmdDateLoggedUpdate.FontSize(8.25)
Gui.FormRework.cmdDateLoggedUpdate.Event(Click,cmdDateLoggedUpdate_Click)
Gui.FormRework.cmdDateLoggedUpdate.SvgPicture("icon_reset_color")
Gui.FormRework.cmdDateClosedUpdate.Create(Button)
Gui.FormRework.cmdDateClosedUpdate.Enabled(True)
Gui.FormRework.cmdDateClosedUpdate.Visible(True)
Gui.FormRework.cmdDateClosedUpdate.Zorder(0)
Gui.FormRework.cmdDateClosedUpdate.Size(405,345)
Gui.FormRework.cmdDateClosedUpdate.Position(6690,2835)
Gui.FormRework.cmdDateClosedUpdate.Caption("")
Gui.FormRework.cmdDateClosedUpdate.FontName("Tahoma")
Gui.FormRework.cmdDateClosedUpdate.FontSize(8.25)
Gui.FormRework.cmdDateClosedUpdate.Event(Click,cmdDateClosedUpdate_Click)
Gui.FormRework.cmdDateClosedUpdate.SvgPicture("icon_reset_color")
Gui.FormRework.cmdDateLoggedClear.Create(Button)
Gui.FormRework.cmdDateLoggedClear.Enabled(True)
Gui.FormRework.cmdDateLoggedClear.Visible(True)
Gui.FormRework.cmdDateLoggedClear.Zorder(0)
Gui.FormRework.cmdDateLoggedClear.Size(405,345)
Gui.FormRework.cmdDateLoggedClear.Position(7230,2370)
Gui.FormRework.cmdDateLoggedClear.Caption("")
Gui.FormRework.cmdDateLoggedClear.FontName("Tahoma")
Gui.FormRework.cmdDateLoggedClear.FontSize(8.25)
Gui.FormRework.cmdDateLoggedClear.Event(Click,cmdDateLoggedClear_Click)
Gui.FormRework.cmdDateLoggedClear.SvgPicture("icon_clear_color")
Gui.FormRework.cmdDateClosedClear.Create(Button)
Gui.FormRework.cmdDateClosedClear.Enabled(True)
Gui.FormRework.cmdDateClosedClear.Visible(True)
Gui.FormRework.cmdDateClosedClear.Zorder(0)
Gui.FormRework.cmdDateClosedClear.Size(405,345)
Gui.FormRework.cmdDateClosedClear.Position(7230,2835)
Gui.FormRework.cmdDateClosedClear.Caption("")
Gui.FormRework.cmdDateClosedClear.FontName("Tahoma")
Gui.FormRework.cmdDateClosedClear.FontSize(8.25)
Gui.FormRework.cmdDateClosedClear.Event(Click,cmdDateClosedClear_Click)
Gui.FormRework.cmdDateClosedClear.SvgPicture("icon_clear_color")
Gui.FormRework.lbl1.Create(Label,"Work Order ID:",True,1665,285,0,390,150,True,0,"Tahoma",12,,0,0)
Gui.FormRework.lbl1.BorderStyle(0)
Gui.FormRework.lbl2.Create(Label,"Line Number:",True,1455,285,0,585,585,True,0,"Tahoma",12,,0,0)
Gui.FormRework.lbl2.BorderStyle(0)
Gui.FormRework.lbl3.Create(Label,"Orignial Line:",True,1440,285,0,600,1035,True,0,"Tahoma",12,,0,0)
Gui.FormRework.lbl3.BorderStyle(0)
Gui.FormRework.lbl4.Create(Label,"Item Qty:",True,1035,285,0,1005,1470,True,0,"Tahoma",12,,0,0)
Gui.FormRework.lbl4.BorderStyle(0)
Gui.FormRework.lbl5.Create(Label,"Quantity (kg/part):",True,2010,285,0,30,1920,True,0,"Tahoma",12,,0,0)
Gui.FormRework.lbl5.BorderStyle(0)
Gui.FormRework.lbl6.Create(Label,"Date Logged:",True,1425,285,0,615,2385,True,0,"Tahoma",12,,0,0)
Gui.FormRework.lbl6.BorderStyle(0)
Gui.FormRework.lbl7.Create(Label,"Date Closed:",True,1350,285,0,690,2835,True,0,"Tahoma",12,,0,0)
Gui.FormRework.lbl7.BorderStyle(0)
Gui.FormRework.lbl8.Create(Label,"Inspected by:",True,1440,285,0,600,3270,True,0,"Tahoma",12,,0,0)
Gui.FormRework.lbl8.BorderStyle(0)
Gui.FormRework.lbl9.Create(Label,"Rework Type:",True,1485,285,0,555,3720,True,0,"Tahoma",12,,0,0)
Gui.FormRework.lbl9.BorderStyle(0)
Gui.FormRework.lbl10.Create(Label,"Notes:",True,690,285,0,1350,4230,True,0,"Tahoma",12,,0,0)
Gui.FormRework.lbl10.BorderStyle(0)
Gui.FormRework.lbl11.Create(Label,"Job ID:",True,795,285,0,5340,150,True,0,"Tahoma",12,,0,0)
Gui.FormRework.lbl11.BorderStyle(0)
Gui.FormRework.txtTotalQty.Create(TextBox,"",True,2040,390,0,4335,1905,False,0,"Tahoma",12,,1)
Gui.FormRework.txtTotalQty.NumericOnly(1)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
V.Global.sError.Declare
V.Global.bLoadData.Declare
V.Global.bLoadData.Set(true)
'Used in custom view mode saving feature
v.Global.iElementId.Declare
v.Global.iViewModeIdDelete.Declare
v.Global.bEditViewMode.Declare(boolean,false)

V.Global.iBIRunID.Declare
v.Global.iBIRptID.Declare
V.Global.iBILogID.Declare

V.Global.bPriceGroup.Declare
v.Global.bLoading.Declare

V.Global.iJobID.Declare
V.Global.iQALogID.Declare
V.Global.iReworkLogID.Declare

V.Global.iValues.Declare
V.Global.sAvg.Declare
V.Global.sStandDev.Declare

V.Global.bSuppressPrioChangeEvent.Declare
V.Global.bSuppressPrioChangeEvent.Set(False)

V.Global.bUnloading.Declare
V.Global.bHasPartDesc.Declare

'For Cash visibility
V.Global.bCash.Declare

V.Global.iItemQty.Declare
V.Global.fTotalWeight.Declare

Program.External.Include.Library("6004.lib")

Program.Sub.Preflight.End

Program.Sub.Main.Start
f.Intrinsic.Control.Try
	
	f.Intrinsic.UI.InvokeWaitDialog("Loading...","Galvaware 2.0")
	
	'PLA company testing in
	f.ODBC.Connection!con.opencompanyconnection(90)
	f.Intrinsic.Control.CallSub(checkTable) 'checks if the tables is alread y made if not will make it
	F.Intrinsic.Control.CallSub(CheckPermissions)
	f.Intrinsic.Control.CallSub(setProperties) ' Sets Main form user buttons.
	f.Intrinsic.Control.CallSub(LoadBlankDataTables) 'Creates all the Blank data tables
	F.Intrinsic.Control.CallSub(LoadAllgv)' Load the Grid View formatting
	
	'Deserialize all GVs
	'F.Intrinsic.Control.CallSub(DeserializeAll)
	
	F.Intrinsic.Control.CallSub(LoadSupplementaryData)
	F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","MainView")
	f.Intrinsic.Control.CallSub(WOScreenProperties) ' Sets WO form screen properties.
	

	'Custom View mode Set up for accordion control
	F.Intrinsic.Control.CallSub(CheckGroupSecurityViewMode)
	F.Intrinsic.Control.CallSub(SetAccordionControl)
	f.Intrinsic.Control.CallSub(SetViewModeContextMenu)
	
	'f.Intrinsic.Control.CallSub(loadQueues,"Grid","all") 'will allow you to refresh a spesific datatable
	gui.FormWorkOrderDetails.tabWorkOrderDetails.SetTab(0)
	gui.FormQuotesandPricing.tabQuotesAndPricing.SetTab(0)
	'Gui.Form..ApplySavedSettings
	f.Intrinsic.UI.CloseWaitDialog
	gui.Form..Show
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Main.End

#Region "Initialize"

Program.Sub.checkTable.Start
f.Intrinsic.Control.Try
	v.Local.bCheck.Declare
	v.Local.sRet.Declare
	v.Local.sVat.Declare
	v.Local.i.Declare
	v.Local.sMsg.Declare

	'GAB_6559_Galvaware
	f.ODBC.Connection!con.tableExists("GAB_6559_Galvaware",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Galvaware (ID IDENTITY DEFAULT '0' CONSTRAINT UK_ID UNIQUE USING 0, CUSTOMER VARCHAR(6),CUSTOMER_REFERENCE VARCHAR(50),DELIVERY_DATE DATETIME,RECEIPTED DATETIME, DATE_INVOICED DATE, DATE_INSPECTED DATETIME, RECEIPTED_BY CHAR(20), PAYMENT_METHOD_ID CHAR(10), STATUS VARCHAR(20), LOCATION VARCHAR(30),InBound INTEGER, OutBound INTEGER, Possession INTEGER, ReleaseToPrep BIT NOT NULL, Priority BIT NOT NULL, QA BIT NOT NULL, NotifiedFlag BIT NOT NULL, BILLING_ADDRESS_ID INTEGER, BILLING_CONTACT_ID INTEGER, SHIP_SEQ CHAR(6), AdminNote VARCHAR(300), ProcessingNote VARCHAR(300), H_UF1 VarChar(30), H_UF2 VarChar(30), H_UF3 VarChar(30),Commit_Date Date,EstimateRacks NUMERIC(16,6),FirstDip DATETIME,LastDip DATETIME,MinChargeExempt BIT NOT NULL);")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_Lines
	f.ODBC.Connection!con.tableExists("GAB_6559_Lines",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Lines( LID IDENTITY DEFAULT '0' CONSTRAINT UK_LID UNIQUE USING 0,ID BIGINT, Line INTEGER, WOStatusID INTEGER, ServiceID CHAR(10),QuoteID CHAR(10),PriceMinCharge NUMERIC(16,6),UnitPrice NUMERIC(16,6),PricePriority NUMERIC(16,6),PriorityFlag BIT NOT NULL, UnitQty DOUBLE,Unit char(20) NULL, ItemQty INTEGER,Description VARCHAR(400),TagID VARCHAR(25),  Yard VARCHAR(10), ItmQtyBasedFlag BIT NOT NULL, NoQuenchFlag BIT NOT NULL, Final BIT NOT NULL, SysUserLastAccess char(25) NULL,SysUserLastAccessDateTime datetime NULL, Yard2 VARCHAR(10));")
	F.Intrinsic.Control.EndIf

	'GAB_6559_Issue
	f.ODBC.Connection!con.tableExists("GAB_6559_Issue",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Issue( IssueID IDENTITY DEFAULT '0' CONSTRAINT UK_IssueID UNIQUE USING 0,Description varchar(150));")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_Issue_Log
	f.ODBC.Connection!con.tableExists("GAB_6559_Issue_Log",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Issue_Log(IssueLogID IDENTITY DEFAULT '0' CONSTRAINT UK_IssueLogID UNIQUE USING 0,DateTimeStart DATETIME,DateTimeEnd DATETIME,EmployeeID INTEGER,Note VARCHAR(200),IssueID INTEGER,CraneNumber INTEGER );")
	F.Intrinsic.Control.EndIf
		
	'GAB_6559_Job_Header
	f.ODBC.Connection!con.tableExists("GAB_6559_Job_Header",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Job_Header( JobID IDENTITY DEFAULT '0' CONSTRAINT UK_JobID UNIQUE USING 0,Note varchar(400),DateTimeScheduled datetime,DateTimeCreated datetime,DateTimeCompleted datetime,PreparedByEmployeeID INTEGER,JobResourceID INTEGER,JobReleaseFlag BIT NOT NULL,ProcessCount INTEGER,ScheduledByEmployeeID INTEGER,SysUserLastAccess char(25),SysUserLastAccessDateTime datetime);")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_Job_Lines
	f.ODBC.Connection!con.tableExists("GAB_6559_Job_Lines",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Job_Lines( WorkOrderID INTEGER,LID INTEGER,JobID INTEGER,JobItemID INTEGER,QuantityHung INTEGER,CheckedFlag BIT NOT NULL);")
		f.ODBC.Connection!con.execute("CREATE INDEX LID_JOBID_COMPOSITE ON GAB_6559_Job_Lines (LID, JobID);")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_Job_Resource
	f.ODBC.Connection!con.tableExists("GAB_6559_Job_Resource",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Job_Resource( JobResourceID IDENTITY DEFAULT '0' CONSTRAINT UK_JobResourceID UNIQUE USING 0,SmallDesc char(10),Description varchar(100),RetiredFlag BIT NOT NULL);")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_TransportNote
	f.ODBC.Connection!con.tableExists("GAB_6559_TransportNote",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_TransportNote(TransportNoteID IDENTITY DEFAULT '0' CONSTRAINT UK_LID UNIQUE USING 0,DateTimeDelivery DATETIME,RegistrationNumber CHAR(10),DriverName CHAR(50),GS_User CHAR(8),ContactID INTEGER,AddressID INTEGER,TransportArrangementID INTEGER,Note VARCHAR(400),SysUserLastAccess CHAR(25),SysUserLastAccessDateTime DATETIME );")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_TransportNoteId
	f.ODBC.Connection!con.tableExists("GAB_6559_TransportNoteId",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_TransportNoteId(TransportNoteID Identity,Description varchar(200),CustomerPossessionFlag Bit,MovementType Char(1));")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_WO_STATUS
	f.ODBC.Connection!con.tableExists("GAB_6559_WO_STATUS",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_WO_STATUS(WOStatusID IDENTITY DEFAULT '0' CONSTRAINT UK_ID UNIQUE USING 0,Description Varchar(50));")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_WOSO_Xref
	f.ODBC.Connection!con.tableExists("GAB_6559_WOSO_Xref",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_WOSO_Xref( WorkOrderID INTEGER,LID INTEGER,ORDER_NO Char(7),RECORD_NO Char(4),InvoicedQty INTEGER,InvoicedDate datetime NULL);")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_BI_Manifest
	f.ODBC.Connection!con.tableExists("GAB_6559_BI_Manifest",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_BI_Manifest(BIRunID INTEGER,TransportNoteID INTEGER,WorkOrderID INTEGER,CUSTOMER_SHIPNAME CHAR(30),DateTimeDelivery DATETIME,DriverName CHAR(50),NoteQty INTEGER,NoteWeight INTEGER,TransportArrangement VARCHAR(200));")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_BI_QALog
	f.ODBC.Connection!con.tableExists("GAB_6559_BI_QALog",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_BI_QALog(BIRunID INTEGER,QALogID Char(10),JobID Char(10),WorkOrderID Char(10),CustName CHAR(30),CUSTOMER_REFERENCE CHAR(50),CUSTOMER_ABN CHAR(30),ADDRESS3 CHAR(30),ADDRESS4 CHAR(30),MeasurementDevice CHAR(50),DateTimeLogged DATETIME,Employee CHAR(50),POS1 CHAR(5),POS2 CHAR(5),POS3 CHAR(5),TotalAVG CHAR(5),ServiceDesc VARCHAR(200),Description VARCHAR(400),Resource CHAR(100),DateTimeCompleted DATETIME,TagID Char(25),Line INTEGER,GS_User CHAR(8),Note VARCHAR(400),NoteQty INTEGER,Estimate INTEGER,Value1 Char(5),Value2 Char(5), Value3 Char(5),Value4 Char(5),Value5 Char(5),Value6 Char(5),Value7 Char(5),Value8 Char(5),Value9 Char(5),Value10 Char(5),Value11 Char(5),Value12 Char(5),Value13 Char(5),Value14 Char(5),Value15 Char(5),Value16 Char(5),Value17 Char(5),Value18 Char(5),Value19 Char(5),Value20 Char(5),Value21 Char(5),Value22 Char(5),Value23 Char(5),Value24 Char(5),Value25 Char(5),Value26 Char(5),Value27 Char(5),Value28 Char(5),Value29 Char(5), Value30 Char(5) );")
	F.Intrinsic.Control.EndIf
	'
	
	'GAB_6559_BI_TNote
	f.ODBC.Connection!con.tableExists("GAB_6559_BI_TNote",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_BI_TNote(BIRunID INTEGER,TransportNoteID Char(10),WorkOrderID Char(10),CUSTOMER_SHIPNAME CHAR(30),DateTimeDelivery DATETIME, DriverName CHAR(50),Registration CHAR(50),TransportArrangement VARCHAR(200),Customer_Reference CHAR(50),GS_User CHAR(8),Note VARCHAR(400),NoteQty INTEGER,Estimate INTEGER,PartDescription VARCHAR(400),TagID Char(25),Yard Char(10),Line INTEGER,ItemQty INTEGER );")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_BI_JobPreview
	f.ODBC.Connection!con.tableExists("GAB_6559_BI_JobPreview",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_BI_JobPreview(BIRunID INTEGER,WorkOrderID Char(10),ItemNumber INTEGER,JobID Char(10),ItemQuantity INTEGER,ItemDescription Char(400),QuantityHung INTEGER,HungSoFar INTEGER,Remaining INTEGER,Service Char(200),Quantity INTEGER,Name1 Char(100),Note Char(400),WorkOrderNote Char(400),Description Char(50),Price INTEGER,TagID Char(25),YardLocation Char(10),QALogRequiredFlag Bit,DateTimeStarted DateTime,DateTimeCompleted DateTime,PreparedBy Char(100),CustomerReference Char(50),Resource Char(100),Estimate INTEGER,Rework INTEGER,NoQuenchFlag Bit,PriorityFlag Bit );")
	F.Intrinsic.Control.EndIf


	'GAB_6559_BI_Quote
	f.ODBC.Connection!con.tableExists("GAB_6559_BI_Quote",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_BI_Quote(BIRunID INTEGER,QHID Char(10),PriceGroupID Char(5),ServiceID CHAR(10),Description CHAR(200),Price Numeric(16,6),UnitAbbreviation Char(10),PriceMinCharge Numeric(16,6));")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_Customer_Xref
	f.ODBC.Connection!con.tableExists("GAB_6559_Customer_Xref",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Customer_Xref(SHIP_KEY Char(13),CUSTOMER Char(6),SHIP_SEQ Char(6),CUSTOMER_NAME Char(30),PriceGroupID Char(5),InboundDefault INTEGER,OutboundDefault INTEGER,PossessionDefault INTEGER,TurnAroundDays INTEGER);")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_Devices_List
	f.ODBC.Connection!con.tableExists("GAB_6559_Devices_List",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Devices_List( MeasurementDeviceID IDENTITY DEFAULT '0' CONSTRAINT UK_DeviceID UNIQUE USING 0,Description Char(50),LastCalibrated DateTime,MeasurementUnit Char(10));")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_Employee
	f.ODBC.Connection!con.tableExists("GAB_6559_Employee",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Employee( EmployeeID IDENTITY DEFAULT '0' CONSTRAINT UK_EmployeeID UNIQUE USING 0,OrgDivisionID char(5),FirstName varchar(50),LastName varchar(50),CeasedEmployment BIT NOT NULL,SysUserLastAccess char(25),SysUserLastAccessDateTime datetime);")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_Transport_WO
	f.ODBC.Connection!con.tableExists("GAB_6559_Transport_WO",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Transport_WO(WorkOrderID INTEGER,LID INTEGER,TransportNoteID INTEGER, ItemQuantity INTEGER );")
		f.ODBC.Connection!con.execute("CREATE INDEX LID_TNID_COMPOSITE ON GAB_6559_Transport_WO (LID, TransportNoteID);")
		
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_Service
	f.ODBC.Connection!con.tableExists("GAB_6559_Service",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Service(ServiceID char(10) NOT NULL,Description varchar(200) NULL,UnitDescription varchar(100) NULL,UnitAbbreviation char(10) NULL,DipAllocation bit NULL,WeightAllocation bit NULL,AggregateAllocation bit NULL,ProductionAllocation bit NULL,StandardWeight decimal(18, 2) NULL,CategoryID char(10) NULL,SysUserLastAccess char(25) NULL,SysUserLastAccessDateTime datetime NULL,SysRowUpdateSerial int NULL,InvoiceAllocation bit NULL,TransportAllocation bit NULL,HVAllocation bit NULL,Freight bit NULL,QA bit NULL,CID INTEGER);")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_Serv_Cat
	f.ODBC.Connection!con.tableExists("GAB_6559_Serv_Cat",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Serv_Cat(CategoryID char(10) NOT NULL,Description varchar(255),AccountingInterfaceCode char(15),CID IDENTITY DEFAULT '0' CONSTRAINT UK_CID UNIQUE USING 0);")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_Quote_Lines
	f.ODBC.Connection!con.tableExists("GAB_6559_Quote_Lines",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Quote_Lines(QID IDENTITY DEFAULT '0' CONSTRAINT UK_QID UNIQUE USING 0,QuoteID Char(10),ServiceID char(10),QuoteItemID INTEGER,UnitPrice NUMERIC(16,6),UnitPricePriority NUMERIC(16,6),ItemQuantityBasedFlag bit,SurchargeExempt bit,SysUserLastAccessDateTime datetime,SysUserLastAccess char(25),QHID INTEGER );")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_Quote_Head
	f.ODBC.Connection!con.tableExists("GAB_6559_Quote_Head",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Quote_Head(QHID IDENTITY DEFAULT '0' CONSTRAINT UK_QID UNIQUE USING 0,QuoteID Char(10),CustomerKey Char(13),CustomerID Char(6),CustomerReference Char(400),CustomerContactID INTEGER,CustomerAddressID INTEGER,QuotedBy Char(50),Description Char(400),ValidFrom Date,ValidUntil Date,Estimate INTEGER,AcceptedFlag Char(1),SysUserLastAccess Char(25),SysUserLastAccessDateTime datetime);")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_QA_Log
	f.ODBC.Connection!con.tableExists("GAB_6559_QA_Log",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_QA_Log( QALogID IDENTITY DEFAULT '0' CONSTRAINT UK_QALogID UNIQUE USING 0,LID INTEGER,WorkOrderID INTEGER, JobID INTEGER,MeasurementDeviceID INTEGER,MeasurementUnit Char(10),EmployeeID INTEGER,DateTimeLogged DateTime,SysUserLastAccess Char(8),SysUserLastAccessDateTime DateTime, Value1 INTEGER,Value2 INTEGER,Value3 INTEGER,Value4 INTEGER,Value5 INTEGER,Value6 INTEGER,Value7 INTEGER,Value8 INTEGER,Value9 INTEGER,Value10 INTEGER,Value11 INTEGER,Value12 INTEGER,Value13 INTEGER,Value14 INTEGER,Value15 INTEGER,Value16 INTEGER,Value17 INTEGER,Value18 INTEGER,Value19 INTEGER,Value20 INTEGER,Value21 INTEGER,Value22 INTEGER,Value23 INTEGER,Value24 INTEGER,Value25 INTEGER,Value26 INTEGER,Value27 INTEGER,Value28 INTEGER,Value29 INTEGER,Value30 INTEGER);")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_Price_Group
	f.ODBC.Connection!con.tableExists("GAB_6559_Price_Group",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Price_Group(PriceGroupID char(5) NOT NULL,Description varchar(50) NOT NULL,WorkOrderMinCharge NUMERIC(16,6),SysUserLastAccess Char(25),SysUserLastAccessDateTime DateTime, SysRowUpdateSerial Char(2));")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_Price_Code
	f.ODBC.Connection!con.tableExists("GAB_6559_Price_Code",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Price_Code(PriceGroupID char(5) NOT NULL,ServiceID Char(10) NOT NULL,Price NUMERIC(16,6),PriceMinCharge NUMERIC(16,6),ItemQuantityBasedFlag bit,SysUserLastAccess Char(25),SysUserLastAccessDateTime DateTime, SysRowUpdateSerial Char(2),PricePriority NUMERIC(16,6));")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_OrgDivision
	f.ODBC.Connection!con.tableExists("GAB_6559_OrgDivision",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_OrgDivision( OrgDivisionID IDENTITY DEFAULT '0' CONSTRAINT UK_OrgDivisionID UNIQUE USING 0,Description char(255),SysUserLastAccess char(25),SysUserLastAccessDateTime datetime);")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_Material_Log
	f.ODBC.Connection!con.tableExists("GAB_6559_Material_Log",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Material_Log( MaterialLogID IDENTITY DEFAULT '0' CONSTRAINT UK_MaterialLogID UNIQUE USING 0,DateTimeLogged datetime,EmployeeID INTEGER,Note varchar(200),MaterialID INTEGER,UnitQuantity NUMERIC(10,2),Location Char(30));")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_Material
	f.ODBC.Connection!con.tableExists("GAB_6559_Material",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Material( MaterialID IDENTITY DEFAULT '0' CONSTRAINT UK_MaterialID UNIQUE USING 0,Description varchar(150),UnitDescription char(50),UnitAbbreviation char(10));")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_KPI_Hrs
	f.ODBC.Connection!con.tableExists("GAB_6559_KPI_Hrs",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_KPI_Hrs( PayPeriod Date,HoursWorked INTEGER,DollarsPaid NUMERIC(16,2));")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_Contact_Alloc
	f.ODBC.Connection!con.tableExists("GAB_6559_Contact_Alloc",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Contact_Alloc( WorkOrderID INTEGER,ContactID INTEGER, CUST Char(6));")
	F.Intrinsic.Control.EndIf

	'GAB_6559_Rework_Log
	f.ODBC.Connection!con.tableExists("GAB_6559_Rework_Log",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Rework_Log( ReworkLogID IDENTITY DEFAULT '0' CONSTRAINT UK_ReworkLogID UNIQUE USING 0,WorkOrderID INTEGER,LineNumber INTEGER,LID INTEGER,OrgLineNumber INTEGER,LIDOrg INTEGER,JobID INTEGER,EmployeeID INTEGER,Note varchar(4000),SysUserLastAccess Char(8),SysUserLastAccessDateTime DateTime,DateLogged dateTime,DateClosed dateTime,ReworkTypeID INTEGER);")
	F.Intrinsic.Control.EndIf

	'GAB_6559_Rework_Type
	f.ODBC.Connection!con.tableExists("GAB_6559_Rework_Type",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Rework_Type( ReworkTypeID IDENTITY DEFAULT '0' CONSTRAINT UK_ReworkTypeID UNIQUE USING 0,Description varchar(150));")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_Cust_location
	f.ODBC.Connection!con.tableExists("GAB_6559_Cust_location",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Cust_location( LocationID IDENTITY DEFAULT '0' CONSTRAINT UK_LocationID UNIQUE USING 0,Description varchar(150));")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_BI_CustPricing
	f.ODBC.Connection!con.tableExists("GAB_6559_BI_CustPricing",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_BI_CustPricing( BIRunID INTEGER,QuoteID Char(10),Price Numeric(16,6),PriceMinCharge Numeric(16,6),ValidFrom DateTime,ValidUntil DateTime,CustomerReference Char(400),Description Char(200),UnitAbbreviation Char(10),Surcharge Char(100),CustomerName Char(30),TradingTerms Char(50),InvoiceMinCharge Char(50));")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_NotificationLog
	f.ODBC.Connection!con.tableExists("GAB_6559_NotificationLog",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_NotificationLog( NotificationID IDENTITY DEFAULT '0' CONSTRAINT UK_NotificationID UNIQUE USING 0,WorkOrderID Integer,NotificationTypeID Integer,DateTimeLogged datetime,ResponseTypeID Integer,RecipientAddress VarChar(400),RecipientName VarChar(400),SysUserLastAccess char(25),SysUserLastAccessDateTime datetime);")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_NotificationType
	f.ODBC.Connection!con.tableExists("GAB_6559_NotificationType",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_NotificationType( NotificationTypeID IDENTITY DEFAULT '0' CONSTRAINT UK_NotificationTypeID UNIQUE USING 0,Description VarChar(400));")
	F.Intrinsic.Control.EndIf
	
	'GAB_6559_ResponseType
	f.ODBC.Connection!con.tableExists("GAB_6559_ResponseType",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_ResponseType( ResponseTypeID IDENTITY DEFAULT '0' CONSTRAINT UK_ResponseTypeID UNIQUE USING 0,Description VarChar(400));")
	F.Intrinsic.Control.EndIf

	'GAB_6559_Yard
	f.ODBC.Connection!con.tableExists("GAB_6559_Yard",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		f.ODBC.Connection!con.execute("CREATE TABLE GAB_6559_Yard( YardID IDENTITY DEFAULT '0' CONSTRAINT UK_YardID UNIQUE USING 0,Small_Desc Char(10),Description varchar(150));")
	F.Intrinsic.Control.EndIf

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.checkTable.End

Program.Sub.CheckPermissions.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	V.Local.sREGID.Declare(String,"6559CASH")
	v.Local.bCRM.Declare

	'Check if the user has permissions to the CRM (with Edit), Then enable the CRM button accoringly
	Function.Global.Security.CheckUserAccessIPM(243,0,v.Local.bCRM)
	F.Intrinsic.Control.If(v.Local.bCRM,=,True)
		Gui.FormWorkOrderDetails.cmdCRM.Enabled(True)
	F.Intrinsic.Control.Else
		Gui.FormWorkOrderDetails.cmdCRM.Enabled(False)
	F.Intrinsic.Control.EndIf
	
	'Check if the user has Cash Visibility
	F.Global.Security.IsInGroup(V.Caller.User, V.Local.sREGID, V.Caller.CompanyCode, V.Global.bCash)
	
	'Turn a few controls invisible if they are not in the Cash Visibility group
	F.Intrinsic.Control.If(V.Global.bCash.Not)
		gui.FormWorkOrderDetails.txtOrderItemsUnityPrice.Visible(False)
		gui.FormWorkOrderDetails.txtOrderItemsPriority.Visible(False)
		gui.FormWorkOrderDetails.txtOrderItemsMinCharge.Visible(False)
		gui.FormWorkOrderDetails.lblBillingInfoOrderSubTotal.Visible(False)
		gui.FormWorkOrderDetails.lblBillingInfoOrderGrandTotal.Visible(False)
		gui.FormWorkOrderDetails.lblBillingInfoTaxSubtotal.Visible(False)
		gui.FormWorkOrderDetails.lblOrderGrandTotal.Visible(False)
		gui.FormWorkOrderDetails.lblOrderSubTotal.Visible(False)
		gui.FormWorkOrderDetails.lblTaxSubTotal.Visible(False)
		gui.FormWorkOrderDetails.txtBillingInfoDateTimeInvoiced.Visible(False)
		gui.FormWorkOrderDetails.chkBillingInfoMinChargeExemptionFlag.Visible(False)
		gui.FormWorkOrderDetails.lblMinCharge.Visible(False)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.CheckPermissions.End

Program.Sub.LoadBlankDataTables.Start
F.Intrinsic.Control.Try

F.Data.DataTable.Create("dtMainGALVAWARE",True)
F.Data.DataTable.AddColumn("dtMainGALVAWARE","Plus","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","Due","Long",0)
F.Data.DataTable.AddColumn("dtMainGALVAWARE","WO_ID","Long",0)
F.Data.DataTable.AddColumn("dtMainGALVAWARE","CUSTOMER","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","CUSTOMER_NAME","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","CUSTOMER_REFERENCE","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","VALUE","Float",0.00)
F.Data.DataTable.AddColumn("dtMainGALVAWARE","VALUEUNIT","Float",0.00)
F.Data.DataTable.AddColumn("dtMainGALVAWARE","VALUEITEM","Float",0.00)
F.Data.DataTable.AddColumn("dtMainGALVAWARE","DELIVERY_DATE","Date")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","RECEIPTED","Date")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","DATE_INVOICED","Date")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","DATE_INSPECTED","Date")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","COMMIT_DATE","Date")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","RECEIPTED_BY","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","PAYMENT_METHOD_ID","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","STATUS","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","LOCATION","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","TotalWeight","Float",0.00)
F.Data.DataTable.AddColumn("dtMainGALVAWARE","QtyWOTotal","Long",0)
F.Data.DataTable.AddColumn("dtMainGALVAWARE","ToGo","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","Rewrk","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","Schd","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","Hung","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","Dipped","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","Packed","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","Held","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","QtyInb","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","QtyOut","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","QtyPos","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","Possession","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","OutBound","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","InBound","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","ReleaseToPrep","Boolean",False)
F.Data.DataTable.AddColumn("dtMainGALVAWARE","Priority","Boolean",False)
F.Data.DataTable.AddColumn("dtMainGALVAWARE","QA","Boolean",False)
F.Data.DataTable.AddColumn("dtMainGALVAWARE","NotifiedFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtMainGALVAWARE","BILLING_ADDRESS_ID","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","BILLING_CONTACT_ID","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","SHIP_SEQ","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","AdminNote","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","ProcessingNote","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","H_UF1","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","H_UF2","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","H_UF3","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","MULTI_SHIPTO_NAME","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","ShipKey","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","INBOUND_DESC","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","OUTBOUND_DESC","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","POSSESSION_DESC","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","WOID_LOCK","Boolean",False)
F.Data.DataTable.AddColumn("dtMainGALVAWARE","TNID_INB","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","TNID_OUT","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","TNID_POS","String","")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","DATETIMEDELIVERY_I","Date")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","DATETIMEDELIVERY_O","Date")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","DATETIMEDELIVERY_P","Date")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","QtyScheduled","Long",0)
F.Data.DataTable.AddColumn("dtMainGALVAWARE","QtyHung","Long",0)
F.Data.DataTable.AddColumn("dtMainGALVAWARE","QtyDipped","Long",0)
F.Data.DataTable.AddColumn("dtMainGALVAWARE","QtyPacked","Long",0)
F.Data.DataTable.AddColumn("dtMainGALVAWARE","EstimateRacks","Float",0.00)
F.Data.DataTable.AddColumn("dtMainGALVAWARE","FirstDip","Date")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","LastDip","Date")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","ProcessingSpeed","Float")
F.Data.DataTable.AddColumn("dtMainGALVAWARE","CreditHold","Boolean",False)




F.Data.DataTable.CreateFromSQL("dtMainGALVAWARE$dtTNID","con","Select Cast(0 as Integer) as WO_ID from GAB_6559_Transport_WO",True)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtTNID","TransportNoteID","Long",0)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtTNID","MovementDesc","String","")
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtTNID","DATETIMEDELIVERY","Date")
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtTNID","TransportArrangementID","Long",0)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtTNID","DriverName","String","")
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtTNID","TransportArrangementDesc","String","")
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtTNID","MovementType","String","")


F.Data.DataTable.CreateFromSQL("dtMainGALVAWARE$dtOPS","con","Select Cast(0 as Integer) as WO_ID from GAB_6559_Lines",True)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","Line","Long",0)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","WOStatus","String","")
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","Description","String","")
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","WOStatusID","Long",0)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","ServiceID","String","")
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","ServiceDesc","String","")
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","UnitQty","Float",0.00)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","ItemQTY","Long",0)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","TotalWeight","Float",0.00)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","TagID","String","")
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","PriorityFlag","Boolean",False)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","ToGo","Long",0)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","Hold","Long",0)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","QtyScheduled","Long",0)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","QtyHung","Long",0)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","QtyDipped","Long",0)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","QtyPacked","Long",0)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","QtyInbound","Long",0)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","QtyOutbound","Long",0)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","QtyPossession","Long",0)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","QtyScheduled0","Long",0)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","QtyHung0","Long",0)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","QtyDipped0","Long",0)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","QtyPacked0","Long",0)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","Freight","Boolean",False)
F.Data.Datatable.AddColumn("dtMainGALVAWARE$dtOPS","QA","Boolean",False)


F.Data.DataTable.DeleteRow("dtMainGALVAWARE$dtTNID")
F.Data.DataTable.DeleteRow("dtMainGALVAWARE$dtOPS")

F.Data.DataTable.Create("dtJobSheet",True)
F.Data.DataTable.AddColumn("dtJobSheet","Plus","String","")
F.Data.DataTable.AddColumn("dtJobSheet","Hrs","String","")
F.Data.DataTable.AddColumn("dtJobSheet","JobID","Long",0)
F.Data.DataTable.AddColumn("dtJobSheet","JobResourceID","Long",0)
F.Data.DataTable.AddColumn("dtJobSheet","JobResource","String","")
F.Data.DataTable.AddColumn("dtJobSheet","DateTimeScheduled","Date")
F.Data.DataTable.AddColumn("dtJobSheet","DateTimeCreated","Date")
F.Data.DataTable.AddColumn("dtJobSheet","DateTimeCompleted","Date")
F.Data.DataTable.AddColumn("dtJobSheet","PreparedByEmployeeID","Long",0)
F.Data.DataTable.AddColumn("dtJobSheet","EmployeeName","String","")
F.Data.DataTable.AddColumn("dtJobSheet","ProcessCount","Long",0)
F.Data.DataTable.AddColumn("dtJobSheet","JobReleaseFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtJobSheet","Estimate","Long",0)
F.Data.DataTable.AddColumn("dtJobSheet","Value0","Float",0.00)
F.Data.DataTable.AddColumn("dtJobSheet","Value1","Float",0.00)
F.Data.DataTable.AddColumn("dtJobSheet","DollarsPerJobID","Float",0.00)
F.Data.DataTable.AddColumn("dtJobSheet","Note","String","")


F.Data.DataTable.CreateFromSQL("dtJobSheet$dtLines","con","Select Cast(0 as Integer) as JobID from GAB_6559_Job_Lines",True)	
F.Data.DataTable.AddColumn("dtJobSheet$dtLines","WO_ID","Long",0)
F.Data.DataTable.AddColumn("dtJobSheet$dtLines","LID","Long",0)
F.Data.DataTable.AddColumn("dtJobSheet$dtLines","Line","Long",0)
F.Data.DataTable.AddColumn("dtJobSheet$dtLines","WOStatus","string","")
F.Data.DataTable.AddColumn("dtJobSheet$dtLines","QuantityHung","Long",0)
F.Data.DataTable.AddColumn("dtJobSheet$dtLines","ItemQty","Long",0)
F.Data.DataTable.AddColumn("dtJobSheet$dtLines","Description","string","")
F.Data.DataTable.AddColumn("dtJobSheet$dtLines","ServiceID","string","")
F.Data.DataTable.AddColumn("dtJobSheet$dtLines","ServiceDesc","string","")
F.Data.DataTable.AddColumn("dtJobSheet$dtLines","ProdNotes","string","")
F.Data.DataTable.AddColumn("dtJobSheet$dtLines","Customer","string","")
F.Data.DataTable.AddColumn("dtJobSheet$dtLines","ShipKey","string","")
F.Data.DataTable.AddColumn("dtJobSheet$dtLines","ShipToName","string","")
F.Data.DataTable.AddColumn("dtJobSheet$dtLines","BillToName","string","")


F.Data.DataTable.Create("dtOrderItemstab",True)
F.Data.DataTable.AddColumn("dtOrderItemstab","LID","Long",0)
F.Data.DataTable.AddColumn("dtOrderItemstab","WO_ID","String","")
F.Data.DataTable.AddColumn("dtOrderItemstab","LINE","Long",0)
F.Data.DataTable.AddColumn("dtOrderItemstab","TagID","String","")
F.Data.DataTable.AddColumn("dtOrderItemstab","ItemQty","String","")
F.Data.DataTable.AddColumn("dtOrderItemstab","WOStatusID","String","")
F.Data.DataTable.AddColumn("dtOrderItemstab","Status","String","")
F.Data.DataTable.AddColumn("dtOrderItemstab","Description","String","")
F.Data.DataTable.AddColumn("dtOrderItemstab","Service","String","")
F.Data.DataTable.AddColumn("dtOrderItemstab","Yard","String","")
F.Data.DataTable.AddColumn("dtOrderItemstab","Yard2","String","")
F.Data.DataTable.AddColumn("dtOrderItemstab","NoQuenchFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtOrderItemstab","UnitPrice","Float",0.00)
F.Data.DataTable.AddColumn("dtOrderItemstab","TotalWeight","Float",0.00)
F.Data.DataTable.AddColumn("dtOrderItemstab","TotalPrice","Float",0.00)
F.Data.DataTable.AddColumn("dtOrderItemstab","UnitQty","Float",0.00)
F.Data.DataTable.AddColumn("dtOrderItemstab","Unit","String","")
F.Data.DataTable.AddColumn("dtOrderItemstab","QuoteID","String","")
F.Data.DataTable.AddColumn("dtOrderItemstab","PriceMinCharge","Float",0.00)
F.Data.DataTable.AddColumn("dtOrderItemstab","PricePriority","Float",0.00)
F.Data.DataTable.AddColumn("dtOrderItemstab","PriorityFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtOrderItemstab","ItmQtyBasedFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtOrderItemstab","Freight","Boolean",False)
F.Data.DataTable.AddColumn("dtOrderItemstab","QA","Boolean",False)
F.Data.DataTable.AddColumn("dtOrderItemstab","SysUserLastAccess","String","")
F.Data.DataTable.AddColumn("dtOrderItemstab","SysUserLastAccessDateTime","Date")
F.Data.DataTable.AddColumn("dtOrderItemstab","ServiceID","String","")

'''''''''''''''''''''

F.Data.DataTable.Create("dtPriceList",True)
F.Data.DataTable.AddColumn("dtPriceList","ID","String","")
F.Data.DataTable.AddColumn("dtPriceList","Service","String","")
F.Data.DataTable.AddColumn("dtPriceList","Price","Float",0.00)
F.Data.DataTable.AddColumn("dtPriceList","MinCharge","Float",0.00)
F.Data.DataTable.AddColumn("dtPriceList","Priority","Float",0.00)
F.Data.DataTable.AddColumn("dtPriceList","Unit","String","")
F.Data.DataTable.AddColumn("dtPriceList","UnitAbbreviation","String","")
F.Data.DataTable.AddColumn("dtPriceList","ItmQtyBased","Boolean",False)
F.Data.DataTable.AddColumn("dtPriceList","Standard_Weight","Float",0.00)

'

F.Data.DataTable.Create("dtQuoteList",True)
F.Data.DataTable.AddColumn("dtQuoteList","QID","Long",0)
F.Data.DataTable.AddColumn("dtQuoteList","QHID","Long",0)
F.Data.DataTable.AddColumn("dtQuoteList","ID","String","")
F.Data.DataTable.AddColumn("dtQuoteList","Service","String","")
F.Data.DataTable.AddColumn("dtQuoteList","QuoteID","String","")
F.Data.DataTable.AddColumn("dtQuoteList","Price","Float",0.00)
F.Data.DataTable.AddColumn("dtQuoteList","MinCharge","Float",0.00)
F.Data.DataTable.AddColumn("dtQuoteList","Priority","Float",0.00)
F.Data.DataTable.AddColumn("dtQuoteList","Unit","String","")
F.Data.DataTable.AddColumn("dtQuoteList","UnitAbbreviation","String","")
F.Data.DataTable.AddColumn("dtQuoteList","ItmQtyBased","Boolean",False)
F.Data.DataTable.AddColumn("dtQuoteList","CustomerReference","String","")
F.Data.DataTable.AddColumn("dtQuoteList","INTDescription","String","")
F.Data.DataTable.AddColumn("dtQuoteList","Estimate","Long",0)
F.Data.DataTable.AddColumn("dtQuoteList","Actual_Weight","Float",0.00)
F.Data.DataTable.AddColumn("dtQuoteList","QuotedBy","String","")
F.Data.DataTable.AddColumn("dtQuoteList","ValidFrom","Date","1900-01-01")
F.Data.DataTable.AddColumn("dtQuoteList","ValidUntil","Date","1900-01-01")
F.Data.DataTable.AddColumn("dtQuoteList","Standard_Weight","Float",0.00)


'F.Data.DataTable.Create("dtGAB_6559_TL",True)

F.Data.DataTable.Create("dtWMLines",True)
F.Data.DataTable.AddColumn("dtWMLines","Select","Boolean",False)
F.Data.DataTable.AddColumn("dtWMLines","LID","Long",0)
F.Data.DataTable.AddColumn("dtWMLines","WO_ID","String","")
F.Data.DataTable.AddColumn("dtWMLines","LINE","Long",0)
F.Data.DataTable.AddColumn("dtWMLines","WOStatusID","String","")
F.Data.DataTable.AddColumn("dtWMLines","Status","String","")
F.Data.DataTable.AddColumn("dtWMLines","ServiceID","String","")
F.Data.DataTable.AddColumn("dtWMLines","Service","String","")
F.Data.DataTable.AddColumn("dtWMLines","QuoteID","String","")
F.Data.DataTable.AddColumn("dtWMLines","PriceMinCharge","Float",0.00)
F.Data.DataTable.AddColumn("dtWMLines","UnitPrice","Float",0.00)
F.Data.DataTable.AddColumn("dtWMLines","PricePriority","Float",0.00)
F.Data.DataTable.AddColumn("dtWMLines","PriorityFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtWMLines","UnitQty","Float",0.00)
F.Data.DataTable.AddColumn("dtWMLines","Unit","String","")
F.Data.DataTable.AddColumn("dtWMLines","ItemQty","Float",0.00)
F.Data.DataTable.AddColumn("dtWMLines","Description","String","")
F.Data.DataTable.AddColumn("dtWMLines","TagID","String","")
F.Data.DataTable.AddColumn("dtWMLines","Yard","String","")
F.Data.DataTable.AddColumn("dtWMLines","ItmQtyBasedFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtWMLines","NoQuenchFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtWMLines","SysUserLastAccess","String","")
F.Data.DataTable.AddColumn("dtWMLines","SysUserLastAccessDateTime","Date")
F.Data.DataTable.AddColumn("dtWMLines","WeightsKey","String","")
F.Data.DataTable.AddColumn("dtWMLines","TotalWeight","Float",0.00)


F.Data.DataTable.Create("dtWMAggregate",True)
F.Data.DataTable.AddColumn("dtWMAggregate","Select","Boolean",False)
F.Data.DataTable.AddColumn("dtWMAggregate","WO_ID","String","")
F.Data.DataTable.AddColumn("dtWMAggregate","ServiceID","String","")
F.Data.DataTable.AddColumn("dtWMAggregate","Service","String","")
F.Data.DataTable.AddColumn("dtWMAggregate","TotalWeight","Float",0.00)
F.Data.DataTable.AddColumn("dtWMAggregate","TotalWeight1","Float",0.00)
F.Data.DataTable.AddColumn("dtWMAggregate","Unit","String","")
F.Data.DataTable.AddColumn("dtWMAggregate","UnitPrice","Float",0.00)
F.Data.DataTable.AddColumn("dtWMAggregate","PriorityFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtWMAggregate","TotalItemQty","Float",0.00)
F.Data.DataTable.AddColumn("dtWMAggregate","ItmQtyBasedFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtWMAggregate","QuoteID","String","")
F.Data.DataTable.AddColumn("dtWMAggregate","WeightsKey","String","")



F.Data.DataTable.Create("dtLabel",True)
F.Data.DataTable.AddColumn("dtLabel","LID","Long",0)
F.Data.DataTable.AddColumn("dtLabel","WO_ID","String","")
F.Data.DataTable.AddColumn("dtLabel","LINE","Long",0)
F.Data.DataTable.AddColumn("dtLabel","PriorityFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtLabel","ItemQty","String","")
F.Data.DataTable.AddColumn("dtLabel","Description","String","")
F.Data.DataTable.AddColumn("dtLabel","PACK_QTY","Long",1)
F.Data.DataTable.AddColumn("dtLabel","LABEL_COPY","Long",1)
F.Data.DataTable.AddColumn("dtLabel","PrintButton","String","Print")
F.Data.DataTable.AddColumn("dtLabel","CustomerPO","String","")
F.Data.DataTable.AddColumn("dtLabel","CustName","String","")
F.Data.DataTable.AddColumn("dtLabel","Outbound","String","")
F.Data.DataTable.AddColumn("dtLabel","Possession","String","")
F.Data.DataTable.AddColumn("dtLabel","QualityFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtLabel","TagID","String","")
F.Data.DataTable.AddColumn("dtLabel","PRI","String","")
F.Data.DataTable.AddColumn("dtLabel","Quality","String","")


F.Data.DataTable.Create("dtJobAllocation",True)
F.Data.DataTable.AddColumn("dtJobAllocation","CheckedFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtJobAllocation","Line","Long",0)
F.Data.DataTable.AddColumn("dtJobAllocation","JobID","Long",0)
F.Data.DataTable.AddColumn("dtJobAllocation","ItemQty","String","")
F.Data.DataTable.AddColumn("dtJobAllocation","LID","Long",0)
F.Data.DataTable.AddColumn("dtJobAllocation","QuantityHung","Long",0)
F.Data.DataTable.AddColumn("dtJobAllocation","DateTimeCreated","Date")
F.Data.DataTable.AddColumn("dtJobAllocation","DateTimeCompleted","Date")
F.Data.DataTable.AddColumn("dtJobAllocation","PriorityFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtJobAllocation","JobResourceID","Long",0)
F.Data.DataTable.AddColumn("dtJobAllocation","JobResource","String","")
F.Data.DataTable.AddColumn("dtJobAllocation","ProcessCount","Long",0)
F.Data.DataTable.AddColumn("dtJobAllocation","JobReleaseFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtJobAllocation","Description","String","")
F.Data.DataTable.AddColumn("dtJobAllocation","TagID","String","")
F.Data.DataTable.AddColumn("dtJobAllocation","DateTimeScheduled","Date")
F.Data.DataTable.AddColumn("dtJobAllocation","QA","Boolean",False)
F.Data.DataTable.AddColumn("dtJobAllocation","WorkOrderID","String","")


F.Data.DataTable.Create("dtJobCurrent",True)
F.Data.DataTable.AddColumn("dtJobCurrent","Select","Boolean",False)
F.Data.DataTable.AddColumn("dtJobCurrent","WorkOrderID","Long",0)
F.Data.DataTable.AddColumn("dtJobCurrent","Line","Long",0)
F.Data.DataTable.AddColumn("dtJobCurrent","JobID","Long",0)
F.Data.DataTable.AddColumn("dtJobCurrent","QuantityHung","Long",0)
F.Data.DataTable.AddColumn("dtJobCurrent","ItemQty","Long",0)
F.Data.DataTable.AddColumn("dtJobCurrent","LID","Long",0)
F.Data.DataTable.AddColumn("dtJobCurrent","PriorityFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtJobCurrent","NoQuenchFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtJobCurrent","QA","Boolean",False)
F.Data.DataTable.AddColumn("dtJobCurrent","Description","String","")
F.Data.DataTable.AddColumn("dtJobCurrent","TagID","String","")
F.Data.DataTable.AddColumn("dtJobCurrent","ServiceID","String","")
F.Data.DataTable.AddColumn("dtJobCurrent","ServiceDesc","String","")
F.Data.DataTable.AddColumn("dtJobCurrent","UnitQty","Float",0.00)
F.Data.DataTable.AddColumn("dtJobCurrent","Note","String","")
F.Data.DataTable.AddColumn("dtJobCurrent","CustName","String","")
F.Data.DataTable.AddColumn("dtJobCurrent","CustKey","String","")
F.Data.DataTable.AddColumn("dtJobCurrent","WO_ID","String","")
F.Data.DataTable.AddColumn("dtJobCurrent","HasQALog","Boolean",False)
F.Data.DataTable.AddColumn("dtJobCurrent","CheckedFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtJobCurrent","FirstDip","Date")
F.Data.DataTable.AddColumn("dtJobCurrent","LastDip","Date")
F.Data.DataTable.AddColumn("dtJobCurrent","TotalCompleted","Long",0)


F.Data.DataTable.Create("dtJobAvailable",True)
F.Data.DataTable.AddColumn("dtJobAvailable","Select","Boolean",False)
F.Data.DataTable.AddColumn("dtJobAvailable","Due","Long",0)
F.Data.DataTable.AddColumn("dtJobAvailable","WorkOrderID","Long",0)
F.Data.DataTable.AddColumn("dtJobAvailable","Line","Long",0)
F.Data.DataTable.AddColumn("dtJobAvailable","Hang","Long",0)
F.Data.DataTable.AddColumn("dtJobAvailable","QuantityHung","Long",0)
F.Data.DataTable.AddColumn("dtJobAvailable","ItemQty","Long",0)
F.Data.DataTable.AddColumn("dtJobAvailable","LID","Long",0)
F.Data.DataTable.AddColumn("dtJobAvailable","PriorityFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtJobAvailable","NoQuenchFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtJobAvailable","QA","Boolean",False)
F.Data.DataTable.AddColumn("dtJobAvailable","Description","String","")
F.Data.DataTable.AddColumn("dtJobAvailable","TagID","String","")
F.Data.DataTable.AddColumn("dtJobAvailable","ServiceID","String","")
F.Data.DataTable.AddColumn("dtJobAvailable","ServiceDesc","String","")
F.Data.DataTable.AddColumn("dtJobAvailable","UnitQty","Float",0.00)
F.Data.DataTable.AddColumn("dtJobAvailable","Note","String","")
F.Data.DataTable.AddColumn("dtJobAvailable","CustName","String","")
F.Data.DataTable.AddColumn("dtJobAvailable","CustKey","String","")


F.Data.DataTable.Create("dtQALog",True)
F.Data.DataTable.AddColumn("dtQALog","Select","Boolean",False)
F.Data.DataTable.AddColumn("dtQALog","QALogID","Long",0)
F.Data.DataTable.AddColumn("dtQALog","JobID","Long",0)
F.Data.DataTable.AddColumn("dtQALog","WorkOrderID","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Line","Long",0)
F.Data.DataTable.AddColumn("dtQALog","LID","Long",0)
F.Data.DataTable.AddColumn("dtQALog","MeasurementDeviceID","Long",0)
F.Data.DataTable.AddColumn("dtQALog","MeasurementDevice","String","")
F.Data.DataTable.AddColumn("dtQALog","EmployeeID","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Employee","String","")
F.Data.DataTable.AddColumn("dtQALog","DateTimeLogged","Date")
F.Data.DataTable.AddColumn("dtQALog","POS1","Float",0.0)
F.Data.DataTable.AddColumn("dtQALog","POS2","Float",0.0)
F.Data.DataTable.AddColumn("dtQALog","POS3","Float",0.0)
F.Data.DataTable.AddColumn("dtQALog","TotalAVG","Float",0.0)
F.Data.DataTable.AddColumn("dtQALog","STDDev","Float",0.0)
F.Data.DataTable.AddColumn("dtQALog","PriorityFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtQALog","NoQuenchFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtQALog","Description","String","")
F.Data.DataTable.AddColumn("dtQALog","TagID","String","")
F.Data.DataTable.AddColumn("dtQALog","ServiceID","String","")
F.Data.DataTable.AddColumn("dtQALog","ServiceDesc","String","")
F.Data.DataTable.AddColumn("dtQALog","CustName","String","")
F.Data.DataTable.AddColumn("dtQALog","CustKey","String","")
F.Data.DataTable.AddColumn("dtQALog","SysUserLastAccess","String","")
F.Data.DataTable.AddColumn("dtQALog","SysUserLastAccessDateTime","Date")
F.Data.DataTable.AddColumn("dtQALog","Value1","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value2","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value3","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value4","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value5","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value6","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value7","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value8","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value9","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value10","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value11","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value12","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value13","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value14","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value15","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value16","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value17","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value18","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value19","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value20","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value21","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value22","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value23","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value24","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value25","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value26","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value27","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value28","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value29","Long",0)
F.Data.DataTable.AddColumn("dtQALog","Value30","Long",0)

F.Data.DataTable.Create("dtQALogDetails",True)
F.Data.DataTable.AddColumn("dtQALogDetails","Select","Boolean",False)
F.Data.DataTable.AddColumn("dtQALogDetails","QALogID","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","JobID","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","WorkOrderID","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Line","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","LID","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","MeasurementDeviceID","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","MeasurementDevice","String","")
F.Data.DataTable.AddColumn("dtQALogDetails","EmployeeID","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Employee","String","")
F.Data.DataTable.AddColumn("dtQALogDetails","DateTimeLogged","Date")
F.Data.DataTable.AddColumn("dtQALogDetails","POS1","Float",0.0)
F.Data.DataTable.AddColumn("dtQALogDetails","POS2","Float",0.0)
F.Data.DataTable.AddColumn("dtQALogDetails","POS3","Float",0.0)
F.Data.DataTable.AddColumn("dtQALogDetails","TotalAVG","Float",0.0)
F.Data.DataTable.AddColumn("dtQALogDetails","STDDev","Float",0.0)
F.Data.DataTable.AddColumn("dtQALogDetails","Description","String","")
F.Data.DataTable.AddColumn("dtQALogDetails","TagID","String","")
F.Data.DataTable.AddColumn("dtQALogDetails","ServiceID","String","")
F.Data.DataTable.AddColumn("dtQALogDetails","ServiceDesc","String","")
F.Data.DataTable.AddColumn("dtQALogDetails","CustName","String","")
F.Data.DataTable.AddColumn("dtQALogDetails","CustKey","String","")
F.Data.DataTable.AddColumn("dtQALogDetails","Value1","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value2","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value3","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value4","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value5","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value6","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value7","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value8","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value9","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value10","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value11","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value12","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value13","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value14","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value15","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value16","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value17","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value18","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value19","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value20","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value21","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value22","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value23","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value24","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value25","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value26","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value27","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value28","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value29","Long",0)
F.Data.DataTable.AddColumn("dtQALogDetails","Value30","Long",0)

F.Data.DataTable.Create("dtInvoicing",True)
F.Data.DataTable.AddColumn("dtInvoicing","Plus","String","")
F.Data.DataTable.AddColumn("dtInvoicing","Select","Boolean",False)
F.Data.DataTable.AddColumn("dtInvoicing","WorkOrderID","Long",0)
F.Data.DataTable.AddColumn("dtInvoicing","CUSTOMER","String","")
F.Data.DataTable.AddColumn("dtInvoicing","SHIP_SEQ","String","")
F.Data.DataTable.AddColumn("dtInvoicing","CUST_BILL_TO","String","")
F.Data.DataTable.AddColumn("dtInvoicing","CUST_SHIP_TO","String","")
F.Data.DataTable.AddColumn("dtInvoicing","TotalPriceWO","Float",0.00)
F.Data.DataTable.AddColumn("dtInvoicing","MinChargeExempt","Boolean",False)
F.Data.DataTable.AddColumn("dtInvoicing","WorkOrderMinCharge","Float",0.00)
F.Data.DataTable.AddColumn("dtInvoicing","CreditHold","Boolean",False)
F.Data.DataTable.AddColumn("dtInvoicing","PriorityFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtInvoicing","Description","String","")
F.Data.DataTable.AddColumn("dtInvoicing","QA","Boolean",False)
F.Data.DataTable.AddColumn("dtInvoicing","WOStatusID","String","")
F.Data.DataTable.AddColumn("dtInvoicing","Status","String","")
F.Data.DataTable.AddColumn("dtInvoicing","CUSTOMER_REFERENCE","String","")
F.Data.DataTable.AddColumn("dtInvoicing","DELIVERY_DATE","Date")
F.Data.DataTable.AddColumn("dtInvoicing","RECEIPTED","Date")
F.Data.DataTable.AddColumn("dtInvoicing","PAYMENT_METHOD_ID","String","")
F.Data.DataTable.AddColumn("dtInvoicing","VALUE","Float",0.00)
F.Data.DataTable.AddColumn("dtInvoicing","DATE_INVOICED","Date")
F.Data.DataTable.AddColumn("dtInvoicing","AdminNote","String","")
F.Data.DataTable.AddColumn("dtInvoicing","ShipKey","String","")
F.Data.DataTable.AddColumn("dtInvoicing","PriceGroupID","String","")
F.Data.DataTable.AddColumn("dtInvoicing","WOMinChargeRemainder","Float",0.00)



F.Data.DataTable.CreateFromSQL("dtInvoicing$dtLine","con","Select Cast(0 as Integer) as WO_ID from GAB_6559_Lines",True)
F.Data.DataTable.AddColumn("dtInvoicing$dtLine","LID","Long",0)
F.Data.DataTable.AddColumn("dtInvoicing$dtLine","LINE","Long",0)
F.Data.DataTable.AddColumn("dtInvoicing$dtLine","WOStatusID","String","")
F.Data.DataTable.AddColumn("dtInvoicing$dtLine","Status","String","")
F.Data.DataTable.AddColumn("dtInvoicing$dtLine","TotalPrice","Float",0.00)
F.Data.DataTable.AddColumn("dtInvoicing$dtLine","TotalWeight","Float",0.00)
F.Data.DataTable.AddColumn("dtInvoicing$dtLine","QuoteID","String","")
F.Data.DataTable.AddColumn("dtInvoicing$dtLine","UnitPrice","Float",0.00)
F.Data.DataTable.AddColumn("dtInvoicing$dtLine","PricePriority","Float",0.00)
F.Data.DataTable.AddColumn("dtInvoicing$dtLine","PriorityFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtInvoicing$dtLine","PriceMinCharge","Float",0.00)
F.Data.DataTable.AddColumn("dtInvoicing$dtLine","UnitQty","Float",0.00)
F.Data.DataTable.AddColumn("dtInvoicing$dtLine","Unit","String","")
F.Data.DataTable.AddColumn("dtInvoicing$dtLine","ItemQty","String","")
F.Data.DataTable.AddColumn("dtInvoicing$dtLine","ItmQtyBasedFlag","Boolean",False)
F.Data.DataTable.AddColumn("dtInvoicing$dtLine","Description","String","")
F.Data.DataTable.AddColumn("dtInvoicing$dtLine","ServiceID","String","")
F.Data.DataTable.AddColumn("dtInvoicing$dtLine","Service","String","")
F.Data.DataTable.AddColumn("dtInvoicing$dtLine","Freight","Boolean",False)
F.Data.DataTable.AddColumn("dtInvoicing$dtLine","QA","Boolean",False)

F.Data.DataTable.Create("dtInvoiced",True)
F.Data.DataTable.AddColumn("dtInvoiced","WorkOrderID","Long",0)
F.Data.DataTable.AddColumn("dtInvoiced","LID","Long",0)
F.Data.DataTable.AddColumn("dtInvoiced","Line","String","")
F.Data.DataTable.AddColumn("dtInvoiced","ORDER_NO","String","")
F.Data.DataTable.AddColumn("dtInvoiced","RECORD_NO","String","")
F.Data.DataTable.AddColumn("dtInvoiced","INVOICEDQTY","Long",0)
F.Data.DataTable.AddColumn("dtInvoiced","INVOICEDDATE","Date")

F.Data.DataTable.Create("dtMaterial",True)
F.Data.DataTable.AddColumn("dtMaterial","Select","Boolean",False)
F.Data.DataTable.AddColumn("dtMaterial","MaterialLogID","Long",0)
F.Data.DataTable.AddColumn("dtMaterial","DateLogged","Date")
F.Data.DataTable.AddColumn("dtMaterial","TimeLogged","String","")
F.Data.DataTable.AddColumn("dtMaterial","EmployeeID","Long",0)
F.Data.DataTable.AddColumn("dtMaterial","Employee","String","")
F.Data.DataTable.AddColumn("dtMaterial","Note","String","")
F.Data.DataTable.AddColumn("dtMaterial","MaterialID","Long",0)
F.Data.DataTable.AddColumn("dtMaterial","Material","String","")
F.Data.DataTable.AddColumn("dtMaterial","Location","String","")
F.Data.DataTable.AddColumn("dtMaterial","UnitQuantity","Float",0.00)
F.Data.DataTable.AddColumn("dtMaterial","Unit","String","")

F.Data.DataTable.Create("dtIssue",True)
F.Data.DataTable.AddColumn("dtIssue","Select","Boolean",False)
F.Data.DataTable.AddColumn("dtIssue","IssueLogID","Long",0)
F.Data.DataTable.AddColumn("dtIssue","DateStart","Date")
F.Data.DataTable.AddColumn("dtIssue","DateEnd","Date")
F.Data.DataTable.AddColumn("dtIssue","TimeStart","String","")
F.Data.DataTable.AddColumn("dtIssue","TimeEnd","String","")
F.Data.DataTable.AddColumn("dtIssue","EmployeeID","Long",0)
F.Data.DataTable.AddColumn("dtIssue","Employee","String","")
F.Data.DataTable.AddColumn("dtIssue","Note","String","")
F.Data.DataTable.AddColumn("dtIssue","IssueID","Long",0)
F.Data.DataTable.AddColumn("dtIssue","Issue","String","")
F.Data.DataTable.AddColumn("dtIssue","Hours","Float",0.00)
F.Data.DataTable.AddColumn("dtIssue","CraneNumber","Long",0)

F.Data.DataTable.Create("dtTransportDelivery",True)
F.Data.DataTable.AddColumn("dtTransportDelivery","TransportNoteID","Long",0)
F.Data.DataTable.AddColumn("dtTransportDelivery","TransportArrangementID","Long",0)
F.Data.DataTable.AddColumn("dtTransportDelivery","TransportArrangement","String","")
F.Data.DataTable.AddColumn("dtTransportDelivery","DateTimeDelivery","Date")

F.Data.DataTable.Create("dtTransportNoteItems",True)
F.Data.DataTable.AddColumn("dtTransportNoteItems","LID","Long",0)
F.Data.DataTable.AddColumn("dtTransportNoteItems","WO_ID","Long",0)
F.Data.DataTable.AddColumn("dtTransportNoteItems","Final","Boolean",False)
F.Data.DataTable.AddColumn("dtTransportNoteItems","Line","Long",0)
F.Data.DataTable.AddColumn("dtTransportNoteItems","TagID","String","")
F.Data.DataTable.AddColumn("dtTransportNoteItems","DESCRIPTION","String","")
F.Data.DataTable.AddColumn("dtTransportNoteItems","ServiceDesc","String","")
F.Data.DataTable.AddColumn("dtTransportNoteItems","ToGo","Long",0)
F.Data.DataTable.AddColumn("dtTransportNoteItems","Hold","Long",0)
F.Data.DataTable.AddColumn("dtTransportNoteItems","QtyScheduled","Long",0)
F.Data.DataTable.AddColumn("dtTransportNoteItems","QtyHung","Long",0)
F.Data.DataTable.AddColumn("dtTransportNoteItems","QtyDipped","Long",0)
F.Data.DataTable.AddColumn("dtTransportNoteItems","QtyPacked","Long",0)
F.Data.DataTable.AddColumn("dtTransportNoteItems","QtyInbound","Long",0)
F.Data.DataTable.AddColumn("dtTransportNoteItems","QtyOutbound","Long",0)
F.Data.DataTable.AddColumn("dtTransportNoteItems","QtyPossession","Long",0)
F.Data.DataTable.AddColumn("dtTransportNoteItems","WOStatusID","Long",0)

F.Data.DataTable.Create("dtContactAllocate",True)
F.Data.DataTable.AddColumn("dtContactAllocate","Select","Boolean",False)
F.Data.DataTable.AddColumn("dtContactAllocate","ID","String","")
F.Data.DataTable.AddColumn("dtContactAllocate","NAME_PREFERRED","String","")
F.Data.DataTable.AddColumn("dtContactAllocate","NAME_LAST","String","")
F.Data.DataTable.AddColumn("dtContactAllocate","EMAIL1","String","")
F.Data.DataTable.AddColumn("dtContactAllocate","PHONE1","String","")
F.Data.DataTable.AddColumn("dtContactAllocate","PHONE2","String","")
F.Data.DataTable.AddColumn("dtContactAllocate","TITLE","String","")

F.Data.DataTable.Create("dtContactDeallocate",True)
F.Data.DataTable.AddColumn("dtContactDeallocate","Select","Boolean",False)
F.Data.DataTable.AddColumn("dtContactDeallocate","ID","String","")
F.Data.DataTable.AddColumn("dtContactDeallocate","NAME_PREFERRED","String","")
F.Data.DataTable.AddColumn("dtContactDeallocate","NAME_LAST","String","")
F.Data.DataTable.AddColumn("dtContactDeallocate","EMAIL1","String","")
F.Data.DataTable.AddColumn("dtContactDeallocate","PHONE1","String","")
F.Data.DataTable.AddColumn("dtContactDeallocate","PHONE2","String","")
F.Data.DataTable.AddColumn("dtContactDeallocate","TITLE","String","")

F.Data.DataTable.Create("dtReworkTab",True)
F.Data.DataTable.AddColumn("dtReworkTab","ReworkLogID","Long",0)
F.Data.DataTable.AddColumn("dtReworkTab","LineNumber","Long",0)
F.Data.DataTable.AddColumn("dtReworkTab","OrgLineNumber","Long",0)
F.Data.DataTable.AddColumn("dtReworkTab","DateClosed","Date")
F.Data.DataTable.AddColumn("dtReworkTab","DateLogged","Date")
F.Data.DataTable.AddColumn("dtReworkTab","InspectedBy","String","")
F.Data.DataTable.AddColumn("dtReworkTab","InspectedByID","Long",0)
F.Data.DataTable.AddColumn("dtReworkTab","ItemQty","Long",0)
F.Data.DataTable.AddColumn("dtReworkTab","UnitQty","Float",0.00)
F.Data.DataTable.AddColumn("dtReworkTab","Unit","String","")
F.Data.DataTable.AddColumn("dtReworkTab","Description","String","")
F.Data.DataTable.AddColumn("dtReworkTab","JobID","Long",0)
F.Data.DataTable.AddColumn("dtReworkTab","ReworkTypeID","Long",0)
F.Data.DataTable.AddColumn("dtReworkTab","ReworkType","String","")
F.Data.DataTable.AddColumn("dtReworkTab","TagID","String","")
F.Data.DataTable.AddColumn("dtReworkTab","SysUserLastAccess","String","")
F.Data.DataTable.AddColumn("dtReworkTab","SysUserLastAccessDateTime","Date")

F.Data.DataTable.Create("dtNotificationLog",True)
F.Data.DataTable.AddColumn("dtNotificationLog","NotificationID","Long",0)
F.Data.DataTable.AddColumn("dtNotificationLog","WorkOrderID","Long",0)
F.Data.DataTable.AddColumn("dtNotificationLog","NotificationTypeID","Long",0)
F.Data.DataTable.AddColumn("dtNotificationLog","NotificationType","String","")
F.Data.DataTable.AddColumn("dtNotificationLog","DateTimeLogged","Date")
F.Data.DataTable.AddColumn("dtNotificationLog","ResponseTypeID","Long",0)
F.Data.DataTable.AddColumn("dtNotificationLog","ResponseType","String","")
F.Data.DataTable.AddColumn("dtNotificationLog","RecipientAddress","String","")
F.Data.DataTable.AddColumn("dtNotificationLog","RecipientName","String","")
F.Data.DataTable.AddColumn("dtNotificationLog","SysUserLastAccess","String","")
F.Data.DataTable.AddColumn("dtNotificationLog","SysUserLastAccessDateTime","Date")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadBlankDataTables.End

Program.Sub.DeserializeAll.Start
f.Intrinsic.Control.Try
	'Deserialize all GVs
	F.Intrinsic.Control.CallSub(Deserialize, "Form", "Form", "GridControl", "GSGCMainGalvaware", "GridView", "gvMainGALVAWARE", "RegID", 6559)
	F.Intrinsic.Control.CallSub(Deserialize, "Form", "FormWorkOrderDetails", "GridControl", "GSGCOrderItemstab", "GridView", "gvOrderItemstab", "RegID", 6559)
	'F.Intrinsic.Control.CallSub(Deserialize, "Form", "FormQuotesandPricing", "GridControl", "GSGCPriceList", "GridView", "gvPriceList", "RegID", 6559)
	'F.Intrinsic.Control.CallSub(Deserialize, "Form", "FormQuotesandPricing", "GridControl", "GSGCQuotes", "GridView", "gvQuoteList", "RegID", 6559)
	''F.Intrinsic.Control.CallSub(Deserialize, "Form", "FormWorkOrderDetails", "GridControl", "GSGCTransportNoteItems", "GridView", "gvOrderItemsTransport", "RegID", 6559)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.DeserializeAll.End

Program.Sub.Deserialize.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare
V.Local.sSerialize.Declare
V.Local.sForm.Declare
V.Local.sGridControl.Declare
V.Local.sGridView.Declare
V.Local.sREGID.Declare
V.Local.bEditOpt.Declare

V.Local.sForm.Set(V.Args.Form.Trim)
V.Local.sGridControl.Set(V.Args.GridControl.Trim)
V.Local.sGridView.Set(V.Args.GridView.Trim)
V.Local.sREGID.Set(V.Args.REGID.Trim)
'V.Local.bEditOpt.Set(V.Args.EditOpt)

F.Global.Registry.ReadValue(V.Caller.User, V.Caller.CompanyCode, V.Local.sGridView, V.Local.sREGID, 1000, 6, "", V.Local.sSerialize)
F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
	Gui.[V.Local.sForm].[V.Local.sGridControl].Deserialize(V.Local.sSerialize)
F.Intrinsic.Control.EndIf

'View/Edit Radio button Deserialize 
'F.Intrinsic.Control.If(V.Local.bEditOpt)
'	F.Global.Registry.ReadValue(V.Caller.User, V.Caller.CompanyCode, V.Local.sGridView, V.Local.sREGID, 1000, 0, "", V.Local.bEditOpt)
'	F.Intrinsic.Control.If(V.Local.bEditOpt)
'		Gui.F_Dash.opt_Edit.Value(True)
'	F.Intrinsic.Control.Else
'		Gui.F_Dash.opt_View.Value(True)
'	F.Intrinsic.Control.EndIf
'F.Intrinsic.Control.EndIf



F.Intrinsic.Control.Catch

	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} at {6} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Ambient.Now, V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End()

F.Intrinsic.Control.EndTry
Program.Sub.Deserialize.End

Program.Sub.setProperties.Start
f.Intrinsic.Control.Try

	'main form buttons
	'gui.Form..BarAddButton("SelectWO","Select Work Order")
	gui.Form..BarAddButton("Material","Material")
	gui.Form..BarAddButton("Issue","Issue")
	gui.Form..BarAddButton("QALog","QA Log")
	gui.Form..BarAddButton("MainView","Main View")
	gui.Form..BarAddButton("JobSheetView","Job Sheet View")
	F.Intrinsic.Control.If(V.Global.bCash)
		gui.Form..BarAddButton("Invoicing","Invoicing")
	F.Intrinsic.Control.EndIf
	'gui.Form..BarAddButton("AddWO","Add Work Order")
	
	'work order deatils buttons
	gui.FormWorkOrderDetails..BarAddButton("Update","Update Header")
	gui.FormWorkOrderDetails..BarAddButton("Delete","Delete")
	gui.FormWorkOrderDetails..BarAddButton("WorkOrder","Work Order")
	gui.FormWorkOrderDetails..BarAddButton("Label","Label")
	gui.FormWorkOrderDetails..BarAddButton("Invoice","Proforma Invoice")
	F.Intrinsic.Control.If(V.Global.bCash)
		gui.FormWorkOrderDetails..BarAddButton("Pricing","Pricing")
	F.Intrinsic.Control.EndIf
	gui.FormWorkOrderDetails..BarAddButton("JobSheet","Job Sheet")
	
	'Add Item to ac1 (Main View)
	Gui.Form.ac1.AddElement(ServiceWeb,"Service Web","logo_g_green_32",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac1.AddElement(AddWO,"Add Work Order","icon_functions_black",16,16,,-1,0,"",True,True,False,1)
	
	'Add Item to ac2 (JobSheetSummary)
	Gui.Form.ac2.AddElement(ServiceWeb,"Service Web","logo_g_green_32",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac2.AddElement(NewJob,"Create Job","icon_functions_black",16,16,,-1,0,"",True,True,False,1)
	
	'Add Item to ac3 (Material)
	Gui.Form.ac3.AddElement(ServiceWeb,"Service Web","logo_g_green_32",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac3.AddElement(NewLine,"Add Line","icon_functions_black",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac3.AddElement(Delete,"Delete Line","icon_functions_black",16,16,,-1,0,"",True,True,False,1)
	
	'Add Item to ac4 (Issue)
	Gui.Form.ac4.AddElement(ServiceWeb,"Service Web","logo_g_green_32",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac4.AddElement(NewLine,"Add Line","icon_functions_black",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac4.AddElement(Delete,"Delete Line","icon_functions_black",16,16,,-1,0,"",True,True,False,1)
	
	'Add Item to ac5 (AQLog)
	Gui.Form.ac5.AddElement(ServiceWeb,"Service Web","logo_g_green_32",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac5.AddElement(PrintQALog,"Print QA Log","icon_functions_black",16,16,,-1,0,"",True,True,False,1)
	
	'Add Item to ac6 (AQLog)
	Gui.Form.ac6.AddElement(ServiceWeb,"Service Web","logo_g_green_32",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac6.AddElement(CreateSO,"Create SO/Send to Invoicing","icon_functions_black",16,16,,-1,0,"",True,True,False,1)
	
	'FormJobSheet
	gui.FormJobSheet..BarAddButton("Update","Update Header")
	gui.FormJobSheet..BarAddButton("Delete","Delete")
	gui.FormJobSheet..BarAddButton("Preview","Preview by Work Order.")
	gui.FormJobSheet..BarAddButton("Labels","Labels")

	'FormQA
	gui.FormQA..BarAddButton("Update","Update")
	gui.FormQA..BarAddButton("Clear","Clear Values")
	gui.FormQA..BarAddButton("Delete","Delete QA Log")
	
	'FormRework
	gui.FormRework..BarAddButton("Update","Update")
	gui.FormRework..BarAddButton("Create","Create New Rework")
	gui.FormRework..BarAddButton("Delete","Delete")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.setProperties.End

Program.Sub.WOScreenProperties.Start
f.Intrinsic.Control.Try

	gui.FormWorkOrderDetails.ddlTransportNotesInbound.Text(V.Dictionary.dictTransportDesc!22)
	gui.FormWorkOrderDetails.ddlTransportNotesOutbound.Text(V.Dictionary.dictTransportDesc!23)
	gui.FormWorkOrderDetails.ddlTransportNotesPos.Text(V.Dictionary.dictTransportDesc!24)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.WOScreenProperties.End

Program.Sub.Form_UserButtonClicked.Start
f.Intrinsic.Control.Try
	F.Intrinsic.Control.BlockEvents
	gui.Form.GSGCMainGalvaware.Visible(False)
	gui.Form.GSGCJobSheet.Visible(False)
	gui.Form.GSGCMaterial.Visible(False)
	gui.Form.GSGCIssue.Visible(False)
	gui.Form.GSGCQALog.Visible(False)
	gui.Form.GSGCInvoicing.Visible(False)
	gui.Form.GSGCInvoiced.Visible(False)
	gui.Form.tabInvoicing.Visible(False)
	
	
	f.Intrinsic.Control.SelectCase(v.Args.Button)
		f.Intrinsic.Control.Case("MainView")
				'gui.Form.chkInvoiced.Visible(False)
				'gui.Form.chkNoRefresh.Visible(False)
				gui.Form.chkCompleted.Visible(False)
				'Gui.Form.AccordionControl1.Visible(False)
				'Gui.Form.Ac1.Visible(False)
				Gui.Form.Ac2.Visible(False)
				Gui.Form.Ac3.Visible(False)
				Gui.Form.Ac4.Visible(False)
				Gui.Form.Ac5.Visible(False)
				Gui.Form.Ac6.Visible(False)
				F.Intrinsic.Control.CallSub(LoaddtMainGALVAWARE)	
				Gui.Form.GSGCMainGalvaware.Visible(True)
				Gui.Form.AccordionControl1.Visible(True)
				Gui.Form.Ac1.Visible(True)
				gui.Form.chkInvoiced.Visible(True)
				gui.Form.chkNoRefresh.Visible(True)
				
		f.Intrinsic.Control.Case("JobSheetView")
				gui.Form.chkInvoiced.Visible(False)
				gui.Form.chkNoRefresh.Visible(False)
				'gui.Form.chkCompleted.Visible(False)
				Gui.Form.AccordionControl1.Visible(False)
				Gui.Form.Ac1.Visible(False)
				'Gui.Form.Ac2.Visible(False)
				Gui.Form.Ac3.Visible(False)
				Gui.Form.Ac4.Visible(False)
				Gui.Form.Ac5.Visible(False)
				Gui.Form.Ac6.Visible(False)
				F.Intrinsic.Control.CallSub(LoaddtJobSheet)	
				Gui.Form.GSGCJobSheet.Visible(True)
				Gui.Form.Ac2.Visible(True)
				gui.Form.chkCompleted.Visible(True)
				
		f.Intrinsic.Control.Case("Material")
				gui.Form.chkInvoiced.Visible(False)
				gui.Form.chkNoRefresh.Visible(False)
				gui.Form.chkCompleted.Visible(False)
				Gui.Form.AccordionControl1.Visible(False)
				Gui.Form.Ac1.Visible(False)
				Gui.Form.Ac2.Visible(False)
				'Gui.Form.Ac3.Visible(False)
				Gui.Form.Ac4.Visible(False)
				Gui.Form.Ac5.Visible(False)
				Gui.Form.Ac6.Visible(False)
				F.Intrinsic.Control.CallSub(LoaddtMaterial)	
				gui.Form.GSGCMaterial.Visible(True)
				Gui.Form.Ac3.Visible(True)
				
		f.Intrinsic.Control.Case("Issue")
				gui.Form.chkInvoiced.Visible(False)
				gui.Form.chkNoRefresh.Visible(False)
				gui.Form.chkCompleted.Visible(False)
				Gui.Form.AccordionControl1.Visible(False)
				Gui.Form.Ac1.Visible(False)
				Gui.Form.Ac2.Visible(False)
				Gui.Form.Ac3.Visible(False)
				'Gui.Form.Ac4.Visible(False)
				Gui.Form.Ac5.Visible(False)
				Gui.Form.Ac6.Visible(False)
				F.Intrinsic.Control.CallSub(LoaddtIssue)	
				gui.Form.GSGCIssue.Visible(True)
				Gui.Form.Ac4.Visible(True)
				
		f.Intrinsic.Control.Case("QALog")
				gui.Form.chkInvoiced.Visible(False)
				gui.Form.chkNoRefresh.Visible(False)
				gui.Form.chkCompleted.Visible(False)
				Gui.Form.AccordionControl1.Visible(False)
				Gui.Form.Ac1.Visible(False)
				Gui.Form.Ac2.Visible(False)
				Gui.Form.Ac3.Visible(False)
				Gui.Form.Ac4.Visible(False)
				'Gui.Form.Ac5.Visible(False)
				Gui.Form.Ac6.Visible(False)
				F.Intrinsic.Control.CallSub(LoaddtQALog)	
				gui.Form.GSGCQALog.Visible(True)
				Gui.Form.Ac5.Visible(True)
				
		f.Intrinsic.Control.Case("Invoicing")
				gui.Form.chkInvoiced.Visible(False)
				gui.Form.chkNoRefresh.Visible(False)
				gui.Form.chkCompleted.Visible(False)
				Gui.Form.AccordionControl1.Visible(False)
				Gui.Form.Ac1.Visible(False)
				Gui.Form.Ac2.Visible(False)
				Gui.Form.Ac3.Visible(False)
				Gui.Form.Ac4.Visible(False)
				Gui.Form.Ac5.Visible(False)
				'Gui.Form.Ac6.Visible(False)
				F.Intrinsic.Control.CallSub(LoaddtInvoicing)	
				F.Intrinsic.Control.CallSub(LoaddtInvoiced)	
				gui.Form.GSGCInvoicing.Visible(True)
				Gui.Form.Ac6.Visible(True)
				gui.Form.GSGCInvoiced.Visible(True)
				gui.Form.tabInvoicing.Visible(True)
				gui.Form.tabInvoicing.SetTab(0)
				
				
	f.Intrinsic.Control.EndSelect

	F.Intrinsic.Control.UnBlockEvents
	Gui.Form..SetFocus
	
f.Intrinsic.Control.Catch
	F.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.Form_UserButtonClicked.End

#End Region ' Initialize

#Region "Unload"

Program.Sub.CloseMainForm.Start
V.Local.sError.Declare
F.Intrinsic.Control.Try

	gui.Form..Visible(False)
	
	'F.Intrinsic.Control.CallSub(SerializeAll)
	
	F.Intrinsic.Control.If(V.ODBC.Con.Exists)
		F.ODBC.Connection!con.Close
	F.Intrinsic.Control.EndIf
	
	Gui.Form..SaveSettings
	F.Intrinsic.Control.End

F.Intrinsic.Control.Catch

'	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} at {6} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Ambient.Now, V.Local.sError)
'	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End()

F.Intrinsic.Control.EndTry
Program.Sub.CloseMainForm.End

Program.Sub.SerializeAll.Start
f.Intrinsic.Control.Try

	'Serialize all GVs
	F.Intrinsic.Control.CallSub(Serialize, "Form", "Form", "GridControl", "GSGCMainGalvaware", "GridView", "gvMainGALVAWARE", "RegID", 6559)
	F.Intrinsic.Control.CallSub(Serialize, "Form", "FormWorkOrderDetails", "GridControl", "GSGCOrderItemstab", "GridView", "gvOrderItemstab", "RegID", 6559)
	'F.Intrinsic.Control.CallSub(Serialize, "Form", "FormQuotesandPricing", "GridControl", "GSGCPriceList", "GridView", "gvPriceList", "RegID", 6559)
'	F.Intrinsic.Control.CallSub(Serialize, "Form", "FormQuotesandPricing", "GridControl", "GSGCQuotes", "GridView", "gvQuoteList", "RegID", 6559)
'	'F.Intrinsic.Control.CallSub(Serialize, "Form", "FormWorkOrderDetails", "GridControl", "GSGCTransportNoteItems", "GridView", "gvOrderItemsTransport", "RegID", 6559)

	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.SerializeAll.End

Program.Sub.Serialize.Start
F.Intrinsic.Control.Try

V.Local.sError.Declare
V.Local.sSerialize.Declare
V.Local.sForm.Declare
V.Local.sGridControl.Declare
V.Local.sGridView.Declare
V.Local.sREGID.Declare
V.Local.bEditOpt.Declare

V.Local.sForm.Set(V.Args.Form.Trim)
V.Local.sGridControl.Set(V.Args.GridControl.Trim)
V.Local.sGridView.Set(V.Args.GridView.Trim)
V.Local.sREGID.Set(V.Args.REGID.Trim)
'V.Local.bEditOpt.Set(V.Args.EditOpt)

GUI.[V.Local.sForm].[V.Local.sGridControl].Serialize(V.Local.sGridView, V.Local.sSerialize)
F.Global.Registry.AddValue(V.Caller.User, V.Caller.CompanyCode, V.Local.sGridView, V.Local.sREGID, 1000, False, "Serialize", V.Local.bEditOpt, 0, -999.0 , 1/1/1980, 12:00:00 AM, V.Local.sSerialize)

F.Intrinsic.Control.Catch

	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} at {6} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Ambient.Now, V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End()

F.Intrinsic.Control.EndTry
Program.Sub.Serialize.End

#End Region ' Unload

#Region "Main Form"

Program.Sub.Ac1_ElementClick.Start
f.Intrinsic.Control.Try
	v.Local.iRet.Declare
	V.Local.sSQL.Declare
	V.Local.sRet.Declare
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	
	'This will prevent from multi-clicking too fast the button
	f.Intrinsic.Control.If(v.Global.bLoading)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bLoading.Set(True)	
		
	
	f.Intrinsic.Control.SelectCase(v.Args.ElementID.UCase)
		f.Intrinsic.Control.Case("SERVICEWEB")
			F.Intrinsic.Task.ShellExec(0,"Open","https://www.gss-service.com/","","",0)	

		
		f.Intrinsic.Control.Case("ADDWO")
			'V.Local.sSQL.Set("select RTRIM(CUSTOMER) as CUSTOMER, RTRIM(SHIP_SEQ) as SHIP_SEQ, RTRIM(CUSTOMER_NAME) as CUSTOMER_NAME, TurnAroundDays from GAB_6559_Customer_Xref Union (Select RTRIM(CUSTOMER) as CUSTOMER, 'DEFLT' as SHIP_SEQ, RTRIM(NAME_CUSTOMER) as CUSTOMER_NAME, '7' as TurnAroundDays FROM V_CUSTOMER_MASTER where CUSTOMER + '-' + 'DEFLT' not in (select RTRIM(SHIP_KEY) as SHIP_KEY from GAB_6559_Customer_Xref)) order by CUSTOMER ASC;")
			V.Local.sSQL.Set("select RTRIM(CUSTOMER) as CUSTOMER, RTRIM(SHIP_SEQ) as SHIP_SEQ, RTRIM(CUSTOMER_NAME) as CUSTOMER_NAME, TurnAroundDays from GAB_6559_Customer_Xref order by CUSTOMER ASC;")
			'Split Column Names into an array (*!* delimited string)
			F.Intrinsic.String.Split("Customer*!*Ship Seq*!*Name Customer*!*Turn Around Days","*!*",V.Local.sCol)
			'Split Column widths into an array (*!* delimited string)
			F.Intrinsic.String.Split("600*!*600*!*3000*!*1300","*!*",V.Local.sColW)
			F.Intrinsic.UI.Browser("Customer Browser","Con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
				F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
				'F.Intrinsic.Control.CallSub(CreateWorkOrder,"CUSTOMER",V.Local.sRet(0),"NAME_CUSTOMER",V.Local.sRet(1),"TELEPHONE",V.Local.sRet(2))
				F.Intrinsic.Control.CallSub(CreateWorkOrder,"CUSTOMER",V.Local.sRet(0),"SHIP_SEQ",V.Local.sRet(1),"NAME_CUSTOMER",V.Local.sRet(2))
			F.Intrinsic.Control.EndIf
			
			
			
		'f.Intrinsic.Control.Case("TRANSPORTNOTE")
			
			
	f.Intrinsic.Control.EndSelect
	
	v.Global.bLoading.Set(False)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Ac1_ElementClick.End

Program.Sub.CreateWorkOrder.Start
f.Intrinsic.Control.Try
	'f.Intrinsic.Debug.InvokeDebugger
	'f.Intrinsic.Debug.Stop
	v.Local.ssql.Declare
	v.Local.sRowid.Declare
	v.Local.sColumnid.Declare
'	v.Local.sRowid.Set(v.Args.RowIndex)
'	v.Local.sColumnid.Set(v.Args.Column)
	v.Local.iNewWOID.Declare
	v.Local.sCustomerCode.Declare
	v.Local.sCustomerName.Declare
	v.Local.sCustomerPhonenumber.Declare
	v.Local.slocaldate.Declare
	v.Local.slocaldate.Set(v.Ambient.Now.DateComp)
	v.local.sSplitting.Declare
	v.Local.syear.Declare
	v.Local.smonth.Declare
	v.Local.sday.Declare
	v.Local.sID.Declare
	V.Local.sNow.Declare
	F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
	
 	V.Local.dToday.Declare
 	V.Local.dDelivery.Declare
	V.Local.sShipKey.Declare
	V.Local.sRet.Declare
	V.Local.sInbound.Declare
	V.Local.sOutbound.Declare
	V.Local.sPossession.Declare
	V.Local.iTurnAroundDays.Declare
	v.Local.sShipSEQ.Declare
	
	'f.Intrinsic.Debug.ShowCallerInfo
	v.Local.sCustomerCode.Set(V.Args.CUSTOMER)
	v.Local.sCustomerName.Set(V.Args.NAME_CUSTOMER)
	'v.Local.sCustomerPhonenumber.Set(V.Args.Telephone)
	v.Local.sShipSEQ.Set(V.Args.SHIP_SEQ)
	

	'Get default Transports
	F.Intrinsic.String.Build("{0}-{1}",v.Local.sCustomerCode.RTrim,v.Local.sShipSEQ.RTrim,V.Local.sShipKey)
	F.Intrinsic.String.Build("select InboundDefault, OutboundDefault, PossessionDefault, TurnAroundDays from GAB_6559_Customer_Xref where SHIP_KEY  = '{0}'",V.Local.sShipKey,V.Local.sSQL)
	f.ODBC.Connection!con.executeandreturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
		V.Local.sInbound.Set("22")
		V.Local.sOutbound.Set("23")
		V.Local.sPossession.Set("24")
		V.Local.iTurnAroundDays.Set(7)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		V.Local.sRet.RedimPreserve(0,3)
		V.Local.sInbound.Set(V.Local.sRet(0))
		V.Local.sOutbound.Set(V.Local.sRet(1))
		V.Local.sPossession.Set(V.Local.sRet(2))
		V.Local.iTurnAroundDays.Set(V.Local.sRet(3).long)		
	F.Intrinsic.Control.EndIf
	
	V.Local.dToday.Set(V.Ambient.Now)
	V.Local.dDelivery.Set(V.Ambient.Now)
	F.Intrinsic.Date.DateAdd("D",V.Local.iTurnAroundDays,V.Local.dToday,V.Local.dDelivery)
	'F.Intrinsic.Date.DateAddWorkdays(v.Local.dToday,10,30,V.Local.dDelivery)
	'F.Intrinsic.UI.Msgbox(v.Local.dToday)
	'F.Intrinsic.UI.Msgbox(v.Local.dDelivery)
	
	f.Intrinsic.String.Build("INSERT INTO GAB_6559_GALVAWARE (CUSTOMER,ReleaseToPrep,Priority,QA,NotifiedFlag,RECEIPTED,DELIVERY_DATE,DATE_INVOICED,RECEIPTED_BY,STATUS,SHIP_SEQ,INBOUND,OUTBOUND,POSSESSION,EstimateRacks,FirstDip,LastDip,MinChargeExempt,Commit_Date,DATE_INSPECTED) VALUES ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','0.5','1900-01-01 00:00:00','1900-01-01 00:00:00','0','1900-01-01','1900-01-01 00:00:00')",v.Local.sCustomerCode.PSQLFriendly,"0","0","0","0",V.Local.sNow,V.Local.dDelivery.PervasiveDate,"1900-01-01",V.Caller.User,"REGISTERED",V.Local.sShipSEQ,V.Local.sInbound,V.Local.sOutbound,V.Local.sPossession,v.Local.ssql)
	f.ODBC.Connection!con.Execute(v.Local.ssql)
	f.ODBC.Connection!con.executeandreturn("Select top 1 ID from GAB_6559_GALVAWARE order by ID DESC",v.Local.iNewWOID)
	
	F.Intrinsic.Control.CallSub(OpenExistingWorkOrder,"WOID",v.Local.iNewWOID)
	
	f.Data.Datatable.AddRow("dtMainGALVAWARE","WO_ID",v.Local.iNewWOID,"CUSTOMER",v.Local.sCustomerCode,"CUSTOMER_NAME",v.Local.sCustomerName,"Value",0.00)
	
	F.Intrinsic.Control.CallSub(InsertWOIDLock,"WOID",V.Local.iNewWOID)
	
	'Dont need to call this since there would not be any data in the lines table since its a new WO and we have already set up the Blank DT and GV on the main load.
	'F.Intrinsic.Control.CallSub(LoaddtOrderItemstab,"WOID",V.Local.iNewWOID)
	
	gui.FormWorkOrderDetails..Visible(True) ' Open new gui
	
	
	'f.Intrinsic.Debug.ShowCallerInfo
	'v.Local.iID.Declare
	'f.ODBC.Connection!con.GetID("GAB_6559_GALVAWARE","ID",FALSE,V.Local.iID)
	'f.Data.DataTable.SaveToDB("dtWC","con","GAB_6016_X1EXTCENTREDESC","ID",7)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.CreateWorkOrder.End


'This should just be a Load data --> Merge data into exisiting DT
Program.Sub.cmdRefresh_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	
	F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","MainView")
	
'	F.Intrinsic.Control.BlockEvents
'	gui.Form.GSGCMainGalvaware.Visible(False)
'	
'	F.Intrinsic.Control.CallSub(LoaddtMainGALVAWARE)	
'	Gui.Form.GSGCMainGalvaware.Visible(True)
'	F.Intrinsic.Control.UnBlockEvents
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",v.Caller.ScriptFile,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cmdRefresh_Click.End

'Not using reset feature currently
Program.Sub.ctxResetFormatting_Click.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.CallSub(ResetSerialization, "GridView", "gvMainGALVAWARE", "RegID", "6559")
'F.Intrinsic.Control.CallSub(ResetSerialization, "GridView", "gvEmployee", "RegID", "6559")
'F.Intrinsic.Control.CallSub(ResetSerialization, "GridView", "gvService", "RegID", "6559")

Gui.Form.GSGCMainGalvaware.Visible(False)
Gui.Form.GSGCMainGalvaware.SuspendLayout
F.Intrinsic.Control.CallSub(LoadgvMainGalvaware)
Gui.Form.GSGCMainGalvaware.ResumeLayout
Gui.Form.GSGCMainGalvaware.Visible(True)

F.Intrinsic.Control.Catch

	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} at {6} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Ambient.Now, V.Global.sError)
	F.Intrinsic.UI.Msgbox(V.Global.sError)
	F.Intrinsic.Control.End()

F.Intrinsic.Control.EndTry
Program.Sub.ctxResetFormatting_Click.End

'Not using reset feature currently
'Should just call the Clear the GS_REGISTRY ---> Call GV load and do not Serialize
Program.Sub.ResetSerialization.Start
V.Local.sError.Declare
F.Intrinsic.Control.Try



F.Global.Registry.AddValue(V.Caller.User, V.Caller.CompanyCode, V.Args.GridView, V.Args.REGID, 1000, False, "Serialize", False, 0, -999.0 , 1/1/1980, 12:00:00 AM, "")


'Need to look into reset feature

'Call a sub to hide GSGC and Deserialize. Is there a way to clear serialization(grid formatting w/o refreshing data?) 

'Maybe dont refresh data here unless there is no data
'F.Intrinsic.Control.CallSub(cmdRefresh_Click)


F.Intrinsic.Control.Catch

	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} at {6} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Ambient.Now, V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End()

F.Intrinsic.Control.EndTry
Program.Sub.ResetSerialization.End

Program.Sub.GSGCMainGalvaware_RowCellClick.Start
f.Intrinsic.Control.Try
	'f.Intrinsic.Debug.ShowCallerInfo
	v.Local.iRowIndex.Declare
	V.Local.iWOID.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
'	v.Local.iRowIndex.set(v.Screen.Form!txtMainYLineLocation.Text)
'	gui.Form.txtMainYLineLocation.Text(v.Args.RowIndex)

	F.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.SelectCase(V.Args.Column)
	F.Intrinsic.Control.Case("WO_ID")
		Gui.Form.GSGCMainGalvaware.GetCellValueByColumnName("gvMainGALVAWARE","WO_ID",V.Args.RowIndex,V.Local.iWOID)
		'Check if the WOID is in use by checking the table (GAB_6559_TL)
		f.Intrinsic.String.Build("SELECT TOP 1 WOID FROM GAB_6559_TL WHERE WOID = '{0}'",V.Local.iWOID,v.Local.sSQL)
		f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
		F.Intrinsic.Control.If(v.Ambient.ExecuteAndReturnEOF)
		'If its not in use then open that WOID
			'insert WOID lock
			F.Intrinsic.Control.CallSub(InsertWOIDLock,"WOID",V.Local.iWOID)
			'Load WO header information
			F.Intrinsic.Control.CallSub(OpenExistingWorkOrder,"WOID",V.Local.iWOID)
			'Load WO Lines information
			F.Intrinsic.Control.CallSub(LoaddtOrderItemstab,"WOID",V.Local.iWOID)
			
			gui.FormWorkOrderDetails.tabWorkOrderDetails.SetTab(0)
			gui.FormWorkOrderDetails..Visible(True) ' Open new gui
			gui.FormWorkOrderDetails..WindowState(0)
			Gui.FormWorkOrderDetails..SetFocus
		
		F.Intrinsic.Control.Else	
			'Display message that the WOID is locked
			F.Intrinsic.UI.Msgbox("Work Order ID is currently locked")
		F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.EndSelect
	F.Intrinsic.Control.UnBlockEvents
		

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.GSGCMainGalvaware_RowCellClick.End

Program.Sub.OpenExistingWorkOrder.Start
f.Intrinsic.Control.Try
	'f.Intrinsic.Debug.ShowCallerInfo
	v.Local.sRowid.Declare
	'v.Local.sRowid.set(V.Args.Rowindex)
	v.Local.sSql.Declare
	v.Local.iNewWOID.Declare
	v.Local.sWOID.Declare
	V.Local.sRet.Declare
	V.Local.sCustomer.Declare
	v.Local.sCustomerName.Declare
	v.Local.sCustomerPhonenumber.Declare
	v.Local.sReleaseToPrep.Declare
	v.Local.sPriority.Declare
	v.Local.sQA.Declare
	v.Local.sNotifiedFlag.Declare
	v.Local.sFaxFlag.Declare
	v.Local.sAdminNote.Declare
	v.Local.sProcessingNote.Declare
	v.Local.sShipSEQ.Declare
	v.Local.sStatus.Declare
	v.Local.sCustomerReference.Declare
	V.Local.sInbound.Declare
	V.Local.sOutbound.Declare
	V.Local.sPossession.Declare
	V.Local.sEstimateRacks.Declare
	
	'Pull freshest info for the WOID from the DB.
	F.Intrinsic.String.Build("Select RTRIM(CUSTOMER) as CUSTOMER, ReleaseToPrep, Priority, QA, NotifiedFlag,  RTRIM(ADMINNOTE) as ADMINNOTE, RTRIM(ProcessingNote) as ProcessingNote, RTRIM(SHIP_SEQ) as SHIP_SEQ, STATUS, RTRIM(CUSTOMER_REFERENCE) as CUSTOMER_REFERENCE, INBOUND, OUTBOUND, POSSESSION, EstimateRacks FROM GAB_6559_Galvaware where ID = '{0}'",V.Args.WOID,V.Local.sSQL)
	F.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	V.Local.sCustomer.Set(V.Local.sRet(0))
	V.Local.sCustomerName.Set(V.Dictionary.dictCustomer![V.Local.sCustomer])
	v.Local.sReleaseToPrep.Set(V.Local.sRet(1))
	v.Local.sPriority.Set(V.Local.sRet(2))
	v.Local.sQA.Set(V.Local.sRet(3))
	v.Local.sNotifiedFlag.Set(V.Local.sRet(4))
	v.Local.sAdminNote.Set(V.Local.sRet(5))
	v.Local.sProcessingNote.Set(V.Local.sRet(6))
	v.Local.sShipSEQ.Set(V.Local.sRet(7))
	v.Local.sStatus.Set(V.Local.sRet(8))
	v.Local.sCustomerReference.Set(V.Local.sRet(9))
	V.Local.sInbound.Set(V.Local.sRet(10))
	V.Local.sOutbound.Set(V.Local.sRet(11))
	V.Local.sPossession.Set(V.Local.sRet(12))
	V.Local.sEstimateRacks.Set(V.Local.sRet(13))
	F.Intrinsic.String.Format(V.Local.sEstimateRacks,#0.0#,V.Local.sEstimateRacks)
	
	f.Intrinsic.String.Concat("select top 1 Telephone from V_CUSTOMER_MASTER where CUSTOMER = '",V.Local.sCustomer.PSQLFriendly,"'", v.Local.sSql)
	f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSql,v.Local.sCustomerPhonenumber)
	
	gui.FormWorkOrderDetails.txtStatus.Text(v.Local.sStatus)
	gui.FormWorkOrderDetails.txtCustomerCode.Text(v.Local.sCustomer)
	gui.FormWorkOrderDetails.txtCustomerName.Text(v.Local.sCustomerName)
	gui.FormWorkOrderDetails.txtWOID.Text(v.Args.WOID)
	gui.FormWorkOrderDetails.txtAdminNote.Text(v.Local.sAdminNote)
	gui.FormWorkOrderDetails.txtProcessingNote.Text(v.Local.sProcessingNote)
	gui.FormWorkOrderDetails.chkReleaseToPrep.Value(v.Local.sReleaseToPrep)
	gui.FormWorkOrderDetails.chkPriority.Value(v.Local.sPriority)
	gui.FormWorkOrderDetails.chkQA.Value(v.Local.sQA)
	'gui.FormWorkOrderDetails.chkFaxFlag.Value(v.Local.sFaxFlag)
	gui.FormWorkOrderDetails.chkNotifiedFlag.Value(v.Local.sNotifiedFlag)
	gui.FormWorkOrderDetails.txtCustomerPhoneNumber.Text(v.Local.sCustomerPhonenumber)
	gui.FormWorkOrderDetails.txtCustomerShipTo.Text(v.Local.sShipSEQ)
	gui.FormWorkOrderDetails.txtCustomerReference.Text(v.Local.sCustomerReference)
	gui.FormWorkOrderDetails.txtEstimateRacks.Text(v.Local.sEstimateRacks)
	Gui.FormWorkOrderDetails.txtAggregateWeight.Text("")
	
	'Load Ship to name
	F.Intrinsic.String.Build("{0}-{1}",V.Local.sCustomer,V.Local.sShipSEQ,V.Local.sShipSEQ)
	gui.FormWorkOrderDetails.txtCustomerShipTo2.Text(V.Dictionary.dictCustMultiShip![v.Local.sShipSEQ])

	
	'Load dtOrderItemstab
	'F.Intrinsic.Control.CallSub(LoaddtOrderItemstab,"WOID",V.Local.iNewWOID)
	
	'Load Transport note DDLs
	gui.FormWorkOrderDetails.ddlTransportNotesInbound.Text(V.Dictionary.dictTransportDesc![V.Local.sInbound])
	gui.FormWorkOrderDetails.ddlTransportNotesOutbound.Text(V.Dictionary.dictTransportDesc![V.Local.sOutbound])
	gui.FormWorkOrderDetails.ddlTransportNotesPos.Text(V.Dictionary.dictTransportDesc![V.Local.sPossession])
	
	F.Intrinsic.Control.CallSub(LoadReceiptingInfo)
	gui.FormWorkOrderDetails.tabWorkOrderDetails.SetTab(0)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.OpenExistingWorkOrder.End

Program.Sub.Form_ExportClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare
	V.Local.sControl.Declare
	
	F.Intrinsic.Control.If(V.Screen.Form!Ac1.Visible)
		V.Local.sControl.Set("GSGCMainGalvaware")
	F.Intrinsic.Control.ElseIf(V.Screen.Form!Ac2.Visible)
		V.Local.sControl.Set("GSGCJobSheet")
	F.Intrinsic.Control.ElseIf(V.Screen.Form!Ac3.Visible)
		V.Local.sControl.Set("GSGCMaterial")
	F.Intrinsic.Control.ElseIf(V.Screen.Form!Ac4.Visible)
		V.Local.sControl.Set("GSGCIssue")
	F.Intrinsic.Control.ElseIf(V.Screen.Form!Ac5.Visible)
		V.Local.sControl.Set("GSGCQALog")
	F.Intrinsic.Control.ElseIf(V.Screen.Form!Ac6.Visible)
		V.Local.sControl.Set("GSGCInvoicing")
	F.Intrinsic.Control.EndIf

	F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
	F.Intrinsic.Control.If(V.Local.bExcel)
		F.Intrinsic.String.Build("{0}\GAB_6559_{1}_Export.xlsx",V.Caller.LocalGssTempDir,V.Local.sControl,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.Form.[V.Local.sControl].Export(V.Local.sFileExport,"xlsx")
			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}\GAB_6559_{1}_Export.csv",V.Caller.LocalGssTempDir,V.Local.sControl,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.Form.[V.Local.sControl].Export(V.Local.sFileExport,"csv")
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
	F.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Form_ExportClick.End

Program.Sub.chkInvoiced_Change.Start
F.Intrinsic.Control.Try
	F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","MainView")
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.chkInvoiced_Change.End

Program.Sub.chkCompleted_Change.Start
F.Intrinsic.Control.Try
	F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","JobSheetView")
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.chkCompleted_Change.End

#End Region ' Main Form

#Region "LoadGV"

Program.Sub.LoadAllgv.Start
f.Intrinsic.Control.Try

F.Intrinsic.Control.CallSub(LoadgvMainGalvaware)
F.Intrinsic.Control.CallSub(LoadgvJobSheet)
F.Intrinsic.Control.CallSub(LoadgvOrderItemsTab)
F.Intrinsic.Control.CallSub(LoadgvPriceList)
F.Intrinsic.Control.CallSub(LoadgvQuoteList)
F.Intrinsic.Control.CallSub(LoadgvTransportDelivery)
F.Intrinsic.Control.CallSub(LoadgvTransportNoteItems)
F.Intrinsic.Control.CallSub(LoadgvWMLines)
F.Intrinsic.Control.CallSub(LoadgvWMAggregate)
F.Intrinsic.Control.CallSub(LoadgvJobAllocation)
F.Intrinsic.Control.CallSub(LoadgvJobCurrent)
F.Intrinsic.Control.CallSub(LoadgvJobAvailable)
F.Intrinsic.Control.CallSub(LoadgvLabel)
F.Intrinsic.Control.CallSub(LoadgvQALog)
F.Intrinsic.Control.CallSub(LoadgvQALogDetails)
F.Intrinsic.Control.CallSub(LoadgvInvoicing)
F.Intrinsic.Control.CallSub(LoadgvInvoiced)
F.Intrinsic.Control.CallSub(LoadgvMaterial)
F.Intrinsic.Control.CallSub(LoadgvIssue)
F.Intrinsic.Control.CallSub(LoadgvContactDeallocate)
F.Intrinsic.Control.CallSub(LoadgvContactAllocate)
F.Intrinsic.Control.CallSub(LoadgvReworktab)
F.Intrinsic.Control.CallSub(LoadgvNotificationLog)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadAllgv.End

Program.Sub.addrelation.Start
F.Data.DataTable.AddRelation("dtMainGALVAWARE","WO_ID","dtMainGALVAWARE$dtOPS","WO_ID","Lines")
F.Data.DataView.Create("dtMainGALVAWARE$dtOPS","dvOPS")
Gui.Form.GSGCMainGalvaware.AddGridviewFromDataview("gvOPS","dtMainGALVAWARE","dvOPS")

F.Data.DataTable.AddRelation("dtMainGALVAWARE","WO_ID","dtMainGALVAWARE$dtTNID","WO_ID","TransportNotes")
F.Data.DataView.Create("dtMainGALVAWARE$dtTNID","dvTNID")
Gui.Form.GSGCMainGalvaware.AddGridviewFromDataview("gvTNID","dtMainGALVAWARE","dvTNID")

Program.Sub.addrelation.End

Program.Sub.addrelationJobSheet.Start
F.Data.DataTable.AddRelation("dtJobSheet","JobID","dtJobSheet$dtLines","JobID","Lines")
F.Data.DataView.Create("dtJobSheet$dtLines","dvJobLines")
Gui.Form.GSGCJobSheet.AddGridviewFromDataview("gvJobLines","dtJobSheet","dvJobLines")

Program.Sub.addrelationJobSheet.End

Program.Sub.addrelationInvoicing.Start
F.Data.DataTable.AddRelation("dtInvoicing","WorkOrderID","dtInvoicing$dtLine","WO_ID","Lines")
F.Data.DataView.Create("dtInvoicing$dtLine","dvInvoiceLines")
Gui.Form.GSGCInvoicing.AddGridviewFromDataview("gvInvoiceLines","dtInvoicing","dvInvoiceLines")

Program.Sub.addrelationInvoicing.End

Program.Sub.LoadgvMainGalvaware.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare

	'main grid control
	gui.Form.GSGCMainGalvaware.AddGridviewFromDatatable("gvMainGALVAWARE","dtMainGALVAWARE")
	Gui.Form.GSGCMainGalvaware.SuspendLayout()
	
	gui.Form.GSGCMainGalvaware.SetGridViewProperty("gvMainGALVAWARE","MultiSelect",True)
	gui.Form.GSGCMainGalvaware.SetGridViewProperty("gvMainGALVAWARE","AllowSort",True)
	gui.Form.GSGCMainGalvaware.SetGridViewProperty("gvMainGALVAWARE","AllowFilter",True)
	gui.Form.GSGCMainGalvaware.SetGridViewProperty("gvMainGALVAWARE","OptionsDetailShowDetailTabs",True)
	gui.Form.GSGCMainGalvaware.SetGridViewProperty("gvMainGALVAWARE","OptionsViewShowGroupPanel",True)
	gui.Form.GSGCMainGalvaware.SetGridViewProperty("gvMainGALVAWARE","EnableAppearanceOddRow",True)
	gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvMainGALVAWARE",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvMainGALVAWARE","OptionsViewColumnAutoWidth",False)
	gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvMainGALVAWARE","AllowColumnResizing",True)	
	gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvMainGALVAWARE","ColumnPanelRowHeight","50")
	gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvMainGALVAWARE",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvMainGALVAWARE", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_MainGalvaware,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_MainGalvaware,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_MainGalvaware,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_MainGalvaware,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_MainGalvaware,"sProp","MinWidth","sValue","40")
	
		
	'Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Due",V.Enum.ColumnPropertyNames!ShowCaption,False)
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","VALUEUNIT",V.Enum.ColumnPropertyNames!Visible,False)
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","VALUEITEM",V.Enum.ColumnPropertyNames!Visible,False)
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","INBOUND",V.Enum.ColumnPropertyNames!Visible,False)
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","OUTBOUND",V.Enum.ColumnPropertyNames!Visible,False)
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","POSSESSION",V.Enum.ColumnPropertyNames!Visible,False)
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","SHIPKEY",V.Enum.ColumnPropertyNames!Visible,False)
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyScheduled",V.Enum.ColumnPropertyNames!Visible,False)
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyHung",V.Enum.ColumnPropertyNames!Visible,False)
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyDipped",V.Enum.ColumnPropertyNames!Visible,False)
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyPacked",V.Enum.ColumnPropertyNames!Visible,False)

	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","VALUEUNIT",V.Enum.ColumnPropertyNames!AllowShowHide,False)
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","VALUEITEM",V.Enum.ColumnPropertyNames!AllowShowHide,False)
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","INBOUND",V.Enum.ColumnPropertyNames!AllowShowHide,False)
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","OUTBOUND",V.Enum.ColumnPropertyNames!AllowShowHide,False)
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","POSSESSION",V.Enum.ColumnPropertyNames!AllowShowHide,False)
	'Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","POSSESSION",V.Enum.ColumnPropertyNames!AllowShowHide,False)
	
	F.Intrinsic.Control.If(V.Global.bCash.Not)
		Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","VALUE",V.Enum.ColumnPropertyNames!Visible,False)
		Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","VALUE",V.Enum.ColumnPropertyNames!AllowShowHide,False)
	F.Intrinsic.Control.EndIf
	
	v.Local.sProp.Set("Caption")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Due",v.Local.sProp,"Due")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","WO_ID",v.Local.sProp,"Work Order ID")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CUSTOMER",v.Local.sProp,"Cust. Code")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CUSTOMER_NAME",v.Local.sProp,"Cust. Name (Bill To)")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CUSTOMER_REFERENCE",v.Local.sProp,"Cust. Reference")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","VALUE",v.Local.sProp,"Value ($)")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DELIVERY_DATE",v.Local.sProp,"Delivery Date")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","RECEIPTED",v.Local.sProp,"Receipted Date")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATE_INVOICED",v.Local.sProp,"Date Invoiced")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATE_INSPECTED",v.Local.sProp,"Date Inspected")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","COMMIT_DATE",v.Local.sProp,"Commit Date (For Prod.)")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","RECEIPTED_BY",v.Local.sProp,"Recipted By")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","PAYMENT_METHOD_ID",v.Local.sProp,"Payment Method ID")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","STATUS",v.Local.sProp,"Status")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","LOCATION",v.Local.sProp,"Loc.")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ToGo",v.Local.sProp,"ToGo")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Rewrk",v.Local.sProp,"Rewrk")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Schd",v.Local.sProp,"Schd")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Hung",v.Local.sProp,"Hung")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Dipped",v.Local.sProp,"Dipped")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Packed",v.Local.sProp,"Packed (Checked)")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Held",v.Local.sProp,"Held")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyInb",v.Local.sProp,"Inbnd")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyOut",v.Local.sProp,"Outbnd")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyPos",v.Local.sProp,"Pssss")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Possession",v.Local.sProp,"Possession")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","OutBound",v.Local.sProp,"Out Bound")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","InBound",v.Local.sProp,"In Bound")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ReleaseToPrep",v.Local.sProp,"Release To Prep")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Priority",v.Local.sProp,"Priority")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QA",v.Local.sProp,"QA")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","NotifiedFlag",v.Local.sProp,"Notified Flag")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","BILLING_ADDRESS_ID",v.Local.sProp,"Billing Addr. ID")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","BILLING_CONTACT_ID",v.Local.sProp,"Billing Contact ID")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","SHIP_SEQ",v.Local.sProp,"Ship Seq")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","AdminNote",v.Local.sProp,"Admin Note")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ProcessingNote",v.Local.sProp,"Processing Note")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","H_UF1",v.Local.sProp,"User Field 1")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","H_UF2",v.Local.sProp,"User Field 2")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","H_UF3",v.Local.sProp,"User Field 3")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","INBOUND_DESC",v.Local.sProp,"Inbound Transport")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","OUTBOUND_DESC",v.Local.sProp,"Outbound Transport")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","POSSESSION_DESC",v.Local.sProp,"Possession Transport")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","MULTI_SHIPTO_NAME",v.Local.sProp,"Ship-to Cust. Name")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TNID_INB",v.Local.sProp,"Inb. Transport Note ID")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TNID_OUT",v.Local.sProp,"Out. Transport Note ID")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TNID_POS",v.Local.sProp,"Pos. Transport Note ID")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_I",v.Local.sProp,"Inb. DateTime Delivery")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_O",v.Local.sProp,"Out. DateTime Delivery")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_P",v.Local.sProp,"Pos. DateTime Delivery")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","EstimateRacks",v.Local.sProp,"Estimate Racks")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyWOTotal",v.Local.sProp,"WO Total Item Qty")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","FirstDip",v.Local.sProp,"First Dip")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","LastDip",v.Local.sProp,"Last Dip")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ProcessingSpeed",v.Local.sProp,"Processing Speed (Hours)")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TotalWeight",v.Local.sProp,"Total Weight (kg)")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CreditHold",v.Local.sProp,"Credit Hold")
	
'CreditHold
	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Due",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","WO_ID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CUSTOMER",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CUSTOMER_NAME",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CUSTOMER_REFERENCE",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","VALUE",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DELIVERY_DATE",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","RECEIPTED",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATE_INVOICED",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATE_INSPECTED",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","COMMIT_DATE",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","RECEIPTED_BY",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","PAYMENT_METHOD_ID",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","STATUS",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","LOCATION",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ToGo",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Rewrk",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Schd",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Hung",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Dipped",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Packed",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Held",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyInb",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyOut",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyPos",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Possession",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","OutBound",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","InBound",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ReleaseToPrep",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Priority",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QA",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","NotifiedFlag",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","BILLING_ADDRESS_ID",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","BILLING_CONTACT_ID",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","SHIP_SEQ",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","AdminNote",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ProcessingNote",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","H_UF1",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","H_UF2",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","H_UF3",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","INBOUND_DESC",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","OUTBOUND_DESC",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","POSSESSION_DESC",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","MULTI_SHIPTO_NAME",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","WOID_LOCK",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TNID_INB",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TNID_OUT",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TNID_POS",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_I",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_O",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_P",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","EstimateRacks",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyWOTotal",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","FirstDip",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","LastDip",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ProcessingSpeed",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TotalWeight",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CreditHold",v.Local.sProp,v.Local.sValue2)
	
			
	v.Local.sProp.Set("CellHAlignment")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Due",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","WO_ID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CUSTOMER",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CUSTOMER_NAME",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CUSTOMER_REFERENCE",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","VALUE",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DELIVERY_DATE",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","RECEIPTED",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATE_INVOICED",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATE_INSPECTED",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","COMMIT_DATE",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","RECEIPTED_BY",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","PAYMENT_METHOD_ID",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","STATUS",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","LOCATION",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ToGo",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Rewrk",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Schd",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Hung",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Dipped",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Packed",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Held",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyInb",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyOut",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyPos",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Possession",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","OutBound",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","InBound",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ReleaseToPrep",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Priority",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QA",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","NotifiedFlag",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","BILLING_ADDRESS_ID",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","BILLING_CONTACT_ID",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","SHIP_SEQ",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","AdminNote",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ProcessingNote",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","H_UF1",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","H_UF2",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","H_UF3",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","INBOUND_DESC",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","OUTBOUND_DESC",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","POSSESSION_DESC",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","MULTI_SHIPTO_NAME",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","WOID_LOCK",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TNID_INB",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TNID_OUT",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TNID_POS",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_I",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_O",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_P",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","EstimateRacks",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyWOTotal",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","FirstDip",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","LastDip",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ProcessingSpeed",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TotalWeight",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CreditHold",v.Local.sProp,v.Local.sValue2)
	
	v.Local.sProp.Set("Width")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Due",v.Local.sProp,"50")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","WO_ID",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CUSTOMER",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CUSTOMER_NAME",v.Local.sProp,"100")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CUSTOMER_REFERENCE",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","VALUE",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DELIVERY_DATE",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","RECEIPTED",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATE_INVOICED",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATE_INSPECTED",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","COMMIT_DATE",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","RECEIPTED_BY",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","PAYMENT_METHOD_ID",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","STATUS",v.Local.sProp,"100")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","LOCATION",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ToGo",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Rewrk",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Schd",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Hung",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Dipped",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Packed",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Held",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyInb",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyOut",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyPos",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Possession",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","OutBound",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","InBound",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ReleaseToPrep",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Priority",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QA",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","NotifiedFlag",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","BILLING_ADDRESS_ID",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","BILLING_CONTACT_ID",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","SHIP_SEQ",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","AdminNote",v.Local.sProp,"150")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ProcessingNote",v.Local.sProp,"150")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","H_UF1",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","H_UF2",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","H_UF3",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","INBOUND_DESC",v.Local.sProp,"100")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","OUTBOUND_DESC",v.Local.sProp,"100")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","POSSESSION_DESC",v.Local.sProp,"100")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","MULTI_SHIPTO_NAME",v.Local.sProp,"100")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","WOID_LOCK",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TNID_INB",v.Local.sProp,"100")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TNID_OUT",v.Local.sProp,"100")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TNID_POS",v.Local.sProp,"100")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_I",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_O",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_P",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","EstimateRacks",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyWOTotal",v.Local.sProp,"75")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","FirstDip",v.Local.sProp,"100")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","LastDip",v.Local.sProp,"100")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ProcessingSpeed",v.Local.sProp,"100")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TotalWeight",v.Local.sProp,"100")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CreditHold",v.Local.sProp,"75")
	
	
	
	v.Local.sProp.Set("AllowEdit")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Due",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","WO_ID",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CUSTOMER",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CUSTOMER_NAME",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CUSTOMER_REFERENCE",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","VALUE",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DELIVERY_DATE",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","RECEIPTED",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATE_INVOICED",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATE_INSPECTED",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","COMMIT_DATE",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","RECEIPTED_BY",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","PAYMENT_METHOD_ID",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","STATUS",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","LOCATION",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ToGo",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Rewrk",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Schd",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Hung",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Dipped",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Packed",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Held",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyInb",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyOut",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyPos",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Possession",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","OutBound",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","InBound",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ReleaseToPrep",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Priority",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QA",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","NotifiedFlag",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","BILLING_ADDRESS_ID",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","BILLING_CONTACT_ID",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","SHIP_SEQ",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","AdminNote",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ProcessingNote",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","H_UF1",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","H_UF2",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","H_UF3",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","INBOUND_DESC",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","OUTBOUND_DESC",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","POSSESSION_DESC",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","MULTI_SHIPTO_NAME",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","WOID_LOCK",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TNID_INB",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TNID_OUT",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TNID_POS",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_I",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_O",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_P",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","EstimateRacks",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyWOTotal",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","FirstDip",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","LastDip",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ProcessingSpeed",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TotalWeight",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CreditHold",v.Local.sProp,False)

	v.Local.sProp.Set("ReadOnly")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Due",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","WO_ID",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CUSTOMER",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CUSTOMER_NAME",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CUSTOMER_REFERENCE",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","VALUE",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DELIVERY_DATE",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","RECEIPTED",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATE_INVOICED",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATE_INSPECTED",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","COMMIT_DATE",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","RECEIPTED_BY",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","PAYMENT_METHOD_ID",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","STATUS",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","LOCATION",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ToGo",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Rewrk",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Schd",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Hung",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Dipped",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Packed",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Held",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyInb",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyOut",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyPos",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Possession",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","OutBound",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","InBound",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ReleaseToPrep",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Priority",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QA",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","NotifiedFlag",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","BILLING_ADDRESS_ID",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","BILLING_CONTACT_ID",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","SHIP_SEQ",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","AdminNote",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ProcessingNote",v.Local.sProp,False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","H_UF1",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","H_UF2",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","H_UF3",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","INBOUND_DESC",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","OUTBOUND_DESC",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","POSSESSION_DESC",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","MULTI_SHIPTO_NAME",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","WOID_LOCK",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TNID_INB",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TNID_OUT",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TNID_POS",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_I",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_O",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_P",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","EstimateRacks",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyWOTotal",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","FirstDip",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","LastDip",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ProcessingSpeed",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TotalWeight",v.Local.sProp,True)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CreditHold",v.Local.sProp,True)
	
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","WO_ID",V.Enum.ColumnPropertyNames!IsHyperlink,True)
	
	
	'BackForeColor
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("LightYellow")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","AdminNote",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ProcessingNote",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("DisplayCustomDatetime")
	v.Local.sValue.Set("g")	
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_I",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_O",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_P",v.Local.sProp,v.Local.sValue)
	v.Local.sValue.Set("d")	
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DELIVERY_DATE",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATE_INVOICED",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","COMMIT_DATE",v.Local.sProp,v.Local.sValue)
	
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","VALUE","DisplayCustomNumeric","$###,###,###,##0.00")
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","EstimateRacks","DisplayCustomNumeric","###,###,###,##0.0#")
	Gui.Form.GSGCMainGalvaware.AddSummaryItem("gvMainGALVAWARE","EstimateRacks","Total Racks","Sum","Total:","")
	Gui.Form.GSGCMainGalvaware.AddSummaryItem("gvMainGALVAWARE","VALUE","Total Value","Sum","Total:","","$###,###,###,##0.00")
	
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ProcessingSpeed","DisplayCustomNumeric","###,###,###,##0.00")
	Gui.Form.GSGCMainGalvaware.AddSummaryItem("gvMainGALVAWARE","ProcessingSpeed","Processing Speed","Average","Avg:","Hrs","###,###,###,##0.00")
	
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TotalWeight","DisplayCustomNumeric","###,###,###,##0.0000")
	Gui.Form.GSGCMainGalvaware.AddSummaryItem("gvMainGALVAWARE","TotalWeight","Total Value","Sum","Total:","","###,###,###,###,###,##0.00")
	
	gui.Form.GSGCMainGalvaware.AddStyleFormatCondition("gvMainGALVAWARE","Priority","Priority","Expression","[Priority] = True")
	gui.Form.GSGCMainGalvaware.SetStyleFormatConditionProperty("gvMainGALVAWARE","Priority","Priority","BackColor","OrangeRed")
	
	gui.Form.GSGCMainGalvaware.AddStyleFormatCondition("gvMainGALVAWARE","CreditHold","CreditHold","Expression","[CreditHold] = True")
	gui.Form.GSGCMainGalvaware.SetStyleFormatConditionProperty("gvMainGALVAWARE","CreditHold","CreditHold","BackColor","Red")
	
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Plus","ShowCaption",False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Plus","MinWidth","20")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Plus","Width","20")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Plus","AllowEdit",False)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Plus","ReadOnly",True)
	
	
	Gui.Form.GSGCMainGalvaware.BestFitColumns("gvMainGALVAWARE")
	Gui.Form.GSGCMainGalvaware.ResumeLayout()
	Gui.Form.GSGCMainGalvaware.MainView("gvMainGALVAWARE")
	
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvMainGalvaware.End

Program.Sub.Bulk_Format_MainGalvaware.Start
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Due",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","WO_ID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CUSTOMER",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CUSTOMER_NAME",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CUSTOMER_REFERENCE",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","VALUE",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DELIVERY_DATE",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","RECEIPTED",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATE_INVOICED",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATE_INSPECTED",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","COMMIT_DATE",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","RECEIPTED_BY",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","PAYMENT_METHOD_ID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","STATUS",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","LOCATION",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ToGo",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Rewrk",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Schd",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Hung",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Dipped",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Packed",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Held",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyInb",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyOut",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyPos",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Possession",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","OutBound",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","InBound",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ReleaseToPrep",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","Priority",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QA",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","NotifiedFlag",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","BILLING_ADDRESS_ID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","BILLING_CONTACT_ID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","SHIP_SEQ",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","AdminNote",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ProcessingNote",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","H_UF1",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","H_UF2",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","H_UF3",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","INBOUND_DESC",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","OUTBOUND_DESC",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","POSSESSION_DESC",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","MULTI_SHIPTO_NAME",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","WOID_LOCK",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TNID_INB",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TNID_OUT",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TNID_POS",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_I",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_O",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","DATETIMEDELIVERY_P",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyWOTotal",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyScheduled",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyHung",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyDipped",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","QtyPacked",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","EstimateRacks",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","FirstDip",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","LastDip",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","ProcessingSpeed",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","TotalWeight",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","CreditHold",v.Args.sProp,v.Args.sValue)
	
Program.Sub.Bulk_Format_MainGalvaware.End

Program.Sub.LoadChildgvTNID.Start
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare
	Gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvTNID","multiSelect",True)
	Gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvTNID","OptionBehaviorEditable",False)
	Gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvTNID","ReadOnly",True)
	Gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvTNID","AllowSort",True)
	Gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvTNID","AllowFilter",True)
	Gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvTNID","OptionsDetailShowDetailTabs",False)
	Gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvTNID","OptionsViewShowGroupPanel",False)
	'Gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvTNID","AllowColumnMoving",False)
	Gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvTNID",V.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	Gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvTNID","OptionsViewColumnAutoWidth",False)
	gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvTNID", "ShowConditionalFormattingItem", True)
	
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvTNID","WO_ID","Visible",False)
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvTNID","TransportArrangementID","Visible",False)
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvTNID","MovementType","Visible",False)
	
	'TransportArrangementID
	'MovementType
	'
	'DATETIMEDELIVERY
	'DriverName
	'TransportArrangementDesc
	'MovementDesc
	

	
	f.Intrinsic.Control.CallSub(Bulk_Format_TNID,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_TNID,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_TNID,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_TNID,"sProp","MinWidth","sValue","40")
	
	v.Local.sProp.Set("Caption")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvTNID","TransportNoteID",v.Local.sProp,"Transport Note ID")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvTNID","DATETIMEDELIVERY",v.Local.sProp,"Date Time Delivery (TNote)")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvTNID","DriverName",v.Local.sProp,"Driver Name")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvTNID","TransportArrangementDesc",v.Local.sProp,"Transport Arrangement")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvTNID","MovementDesc",v.Local.sProp,"Movement Type")
	
	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	v.Local.sProp.Set("CellHAlignment")
	
	v.Local.sProp.Set("Width")
	'gui.Form.GSGCMainGalvaware.SetColumnProperty("gvTNID","TNID_POS",v.Local.sProp,"100")
	
	'Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvTNID","Price","DisplayCustomNumeric","###,###,##0.00")
	
	v.Local.sProp.Set("DisplayCustomDatetime")
	v.Local.sValue.Set("g")	
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvTNID","DATETIMEDELIVERY",v.Local.sProp,v.Local.sValue)
	
	Gui.Form.GSGCMainGalvaware.BestFitColumns("gvTNID")
	
	
	
Program.Sub.LoadChildgvTNID.End

Program.Sub.Bulk_Format_TNID.Start
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvTNID","WO_ID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvTNID","TransportNoteID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvTNID","DATETIMEDELIVERY",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvTNID","DriverName",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvTNID","TransportArrangementDesc",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvTNID","MovementDesc",v.Args.sProp,v.Args.sValue)

Program.Sub.Bulk_Format_TNID.End

Program.Sub.LoadChildgvOPS.Start
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare

	Gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvOPS","multiSelect",True)
	Gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvOPS","OptionBehaviorEditable",False)
	Gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvOPS","ReadOnly",True)
	Gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvOPS","AllowSort",True)
	Gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvOPS","AllowFilter",True)
	Gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvOPS","OptionsDetailShowDetailTabs",False)
	Gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvOPS","OptionsViewShowGroupPanel",False)
	'Gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvOPS","AllowColumnMoving",False)
	Gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvOPS",V.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	Gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvOPS","OptionsViewColumnAutoWidth",False)
	gui.Form.GSGCMainGalvaware.SetGridviewProperty("gvOPS", "ShowConditionalFormattingItem", True)
	
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","WO_ID","Visible",False)
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","WOStatusID","Visible",False)
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","ServiceID","Visible",False)
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyScheduled0","Visible",False)
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyHung0","Visible",False)
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyDipped0","Visible",False)
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyPacked0","Visible",False)
	
	f.Intrinsic.Control.CallSub(Bulk_Format_OPS,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_OPS,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_OPS,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_OPS,"sProp","MinWidth","sValue","40")
	
	v.Local.sProp.Set("Caption")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","Description",v.Local.sProp," Part Desc.")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","WOStatusID",v.Local.sProp,"WOStatusID")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","WOStatus",v.Local.sProp,"Line Status")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","ServiceID",v.Local.sProp,"Service ID")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","ServiceDesc",v.Local.sProp,"Service Desc")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","WOStatus",v.Local.sProp,"Line Status")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","ItemQTY",v.Local.sProp,"Item Qty")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","TagID",v.Local.sProp,"Tag ID")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","PriorityFlag",v.Local.sProp,"Priority Flag")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","UnitQty",v.Local.sProp,"Unit Qty (kg)")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","ToGo",v.Local.sProp,"ToGo")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","Hold",v.Local.sProp,"Hold")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyHung",v.Local.sProp,"Hung")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyScheduled",v.Local.sProp,"Schd")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyPacked",v.Local.sProp,"Pack")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyDipped",v.Local.sProp,"Dipped")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyInbound",v.Local.sProp,"Inbnd")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyOutbound",v.Local.sProp,"Outbnd")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyPossession",v.Local.sProp,"Pssed")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","Freight",v.Local.sProp,"Freight")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QA",v.Local.sProp,"QA")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","TotalWeight",v.Local.sProp,"Total Weight (kg)")
	
	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	v.Local.sProp.Set("CellHAlignment")
	
	v.Local.sProp.Set("Width")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","ToGo",v.Local.sProp,"45")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","Hold",v.Local.sProp,"45")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyHung",v.Local.sProp,"45")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyScheduled",v.Local.sProp,"45")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyPacked",v.Local.sProp,"45")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyDipped",v.Local.sProp,"45")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyInbound",v.Local.sProp,"45")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyOutbound",v.Local.sProp,"45")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyPossession",v.Local.sProp,"45")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","Freight",v.Local.sProp,"45")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QA",v.Local.sProp,"45")
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","TotalWeight",v.Local.sProp,"70")
	'gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","TNID_POS",v.Local.sProp,"100")
	
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","UnitQty","DisplayCustomNumeric","###,###,###,##0.0000")
	Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","TotalWeight","DisplayCustomNumeric","###,###,###,##0.0000")
	
	v.Local.sProp.Set("DisplayCustomDatetime")
	v.Local.sValue.Set("g")	
	'gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","DATETIMEDELIVERY",v.Local.sProp,v.Local.sValue)
	
	Gui.Form.GSGCMainGalvaware.BestFitColumns("gvOPS")
	
Program.Sub.LoadChildgvOPS.End

Program.Sub.Bulk_Format_OPS.Start
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","WO_ID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","Line",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","Description",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","WOStatusID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","WOStatus",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","ServiceID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","ServiceDesc",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","ItemQTY",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","TagID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","PriorityFlag",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","UnitQty",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","ToGo",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","Hold",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyHung",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyScheduled",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyPacked",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyDipped",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyInbound",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyOutbound",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyPossession",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyScheduled0",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyHung0",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyDipped0",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QtyPacked0",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","Freight",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","QA",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMainGalvaware.SetColumnProperty("gvOPS","TotalWeight",v.Args.sProp,v.Args.sValue)



Program.Sub.Bulk_Format_OPS.End

Program.Sub.LoadgvJobSheet.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare

	gui.Form.GSGCJobSheet.AddGridviewFromDatatable("gvJobSheet","dtJobSheet")
	
'	gui.Form.GSGCJobSheet.SetGridViewProperty("gvJobSheet","MultiSelect",True)
	gui.Form.GSGCJobSheet.SetGridViewProperty("gvJobSheet","AllowSort",True)
	gui.Form.GSGCJobSheet.SetGridViewProperty("gvJobSheet","AllowFilter",True)
	gui.Form.GSGCJobSheet.SetGridViewProperty("gvJobSheet","OptionsDetailShowDetailTabs",True)
	gui.Form.GSGCJobSheet.SetGridViewProperty("gvJobSheet","OptionsViewShowGroupPanel",True)
	gui.Form.GSGCJobSheet.SetGridViewProperty("gvJobSheet","EnableAppearanceOddRow",True)
	gui.Form.GSGCJobSheet.SetGridviewProperty("gvJobSheet",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.GSGCJobSheet.SetGridviewProperty("gvJobSheet","OptionsViewColumnAutoWidth",False)
	gui.Form.GSGCJobSheet.SetGridviewProperty("gvJobSheet","AllowColumnResizing",True)	
	gui.Form.GSGCJobSheet.SetGridviewProperty("gvJobSheet","ColumnPanelRowHeight","50")
	gui.Form.GSGCJobSheet.SetGridviewProperty("gvJobSheet",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.Form.GSGCJobSheet.SetGridviewProperty("gvJobSheet", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_JobSheet,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobSheet,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobSheet,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobSheet,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobSheet,"sProp","MinWidth","sValue","40")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobSheet,"sProp","AllowEdit","sValue","False")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobSheet,"sProp","ReadOnly","sValue","True")


'Hrs
'JobID
'JobResourceID
'JobResource
'DateTimeScheduled
'DateTimeCreated
'DateTimeCompleted
'PreparedByEmployeeID
'EmployeeName
'ProcessCount
'JobReleaseFlag
'Estimate
'Note

	v.Local.sProp.Set("Caption")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Hrs",v.Local.sProp,"Hrs")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","JobID",v.Local.sProp,"Job ID")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","JobResourceID",v.Local.sProp,"Job Resource ID")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","JobResource",v.Local.sProp,"Job Resource")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DateTimeScheduled",v.Local.sProp,"Scheduled Date Time")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DateTimeCreated",v.Local.sProp,"Created Date Time")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DateTimeCompleted",v.Local.sProp,"Completed Date Time")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","PreparedByEmployeeID",v.Local.sProp,"Prepared By Employee ID")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","EmployeeName",v.Local.sProp,"Prepared By Employee")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","ProcessCount",v.Local.sProp,"Process Count")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","JobReleaseFlag",v.Local.sProp,"Job Release Flag")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Estimate",v.Local.sProp,"Estimate (kg)")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Note",v.Local.sProp,"Note")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Value0",v.Local.sProp,"$/Part (weight)")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Value1",v.Local.sProp,"$/Part (ItmQtyBased)")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DollarsPerJobID",v.Local.sProp,"Value ($/JobID)")


'DollarsPerJobID


	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Hrs",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","JobID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","JobResourceID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","JobResource",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DateTimeScheduled",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DateTimeCreated",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DateTimeCompleted",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","PreparedByEmployeeID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","EmployeeName",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","ProcessCount",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","JobReleaseFlag",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Estimate",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Value0",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Value1",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DollarsPerJobID",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Note",v.Local.sProp,v.Local.sValue)


	
	v.Local.sProp.Set("CellHAlignment")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Hrs",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","JobID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","JobResourceID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","JobResource",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DateTimeScheduled",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DateTimeCreated",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DateTimeCompleted",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","PreparedByEmployeeID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","EmployeeName",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","ProcessCount",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","JobReleaseFlag",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Estimate",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Value0",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Value1",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DollarsPerJobID",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Note",v.Local.sProp,v.Local.sValue)


'	
'	v.Local.sProp.Set("Width")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Hrs",v.Local.sProp,"60")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","JobID",v.Local.sProp,"75")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","JobResourceID",v.Local.sProp,"75")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","JobResource",v.Local.sProp,"125")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DateTimeScheduled",v.Local.sProp,"125")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DateTimeCreated",v.Local.sProp,"125")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DateTimeCompleted",v.Local.sProp,"125")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","PreparedByEmployeeID",v.Local.sProp,"75")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","EmployeeName",v.Local.sProp,"125")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","ProcessCount",v.Local.sProp,"75")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","JobReleaseFlag",v.Local.sProp,"75")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Estimate",v.Local.sProp,"100")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Value0",v.Local.sProp,"100")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Value1",v.Local.sProp,"100")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DollarsPerJobID",v.Local.sProp,"100")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Note",v.Local.sProp,"200")


	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet", "JobResourceID","Visible", False)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet", "PreparedByEmployeeID","Visible", False)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet", "Value0","Visible", False)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet", "Value1","Visible", False)

	F.Intrinsic.Control.If(V.Global.bCash.Not)
		gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet", "DollarsPerJobID","Visible", False)
		Gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DollarsPerJobID",V.Enum.ColumnPropertyNames!AllowShowHide,False)
		Gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Value0",V.Enum.ColumnPropertyNames!AllowShowHide,False)
		Gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Value1",V.Enum.ColumnPropertyNames!AllowShowHide,False)
	F.Intrinsic.Control.EndIf

	Gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","JobID",V.Enum.ColumnPropertyNames!IsHyperlink,True)
	Gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DollarsPerJobID","DisplayCustomNumeric","$###,###,##0.00")
	
	
	'BackForeColor
'	v.Local.sProp.Set("CellBackColor")
'	v.Local.sValue.Set("LightYellow")
'	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","AdminNote",v.Local.sProp,v.Local.sValue)
'	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","ProcessingNote",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("DisplayCustomDatetime")
	v.Local.sValue.Set("g")	
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DateTimeScheduled",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DateTimeCreated",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DateTimeCompleted",v.Local.sProp,v.Local.sValue)
	
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Plus","ShowCaption",False)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Plus","MinWidth","20")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Plus","Width","20")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Plus","AllowEdit",False)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Plus","ReadOnly",True)
	
	Gui.Form.GSGCJobSheet.AddSummaryItem("gvJobSheet","ProcessCount","Total Dips","Sum","Total:","Dips")
	Gui.Form.GSGCJobSheet.AddSummaryItem("gvJobSheet","DollarsPerJobID","Total $","Sum","Total:","","$###,###,###,###,###,##0.00")
	Gui.Form.GSGCJobSheet.AddSummaryItem("gvJobSheet","Estimate","Total kg","Sum","Total:","kg","###,###,###,###,###,##0.00")
	
	
	Gui.Form.GSGCJobSheet.BestFitColumns("gvJobSheet")
	Gui.Form.GSGCJobSheet.MainView("gvJobSheet")

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvJobSheet.End

Program.Sub.Bulk_Format_JobSheet.Start
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Hrs",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","JobID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","JobResourceID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","JobResource",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DateTimeScheduled",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DateTimeCreated",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DateTimeCompleted",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","PreparedByEmployeeID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","EmployeeName",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","ProcessCount",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","JobReleaseFlag",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Estimate",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Value0",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Value1",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","DollarsPerJobID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobSheet","Note",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_JobSheet.End

Program.Sub.LoadChildgvJobLines.Start
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare

	Gui.Form.GSGCJobSheet.SetGridviewProperty("gvJobLines","multiSelect",True)
	Gui.Form.GSGCJobSheet.SetGridviewProperty("gvJobLines","OptionBehaviorEditable",False)
	Gui.Form.GSGCJobSheet.SetGridviewProperty("gvJobLines","ReadOnly",True)
	Gui.Form.GSGCJobSheet.SetGridviewProperty("gvJobLines","AllowSort",True)
	Gui.Form.GSGCJobSheet.SetGridviewProperty("gvJobLines","AllowFilter",True)
	Gui.Form.GSGCJobSheet.SetGridviewProperty("gvJobLines","OptionsDetailShowDetailTabs",True)
	Gui.Form.GSGCJobSheet.SetGridviewProperty("gvJobLines","OptionsViewShowGroupPanel",False)
	'Gui.Form.GSGCJobSheet.SetGridviewProperty("gvJobLines","AllowColumnMoving",False)
	Gui.Form.GSGCJobSheet.SetGridviewProperty("gvJobLines",V.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	Gui.Form.GSGCJobSheet.SetGridviewProperty("gvJobLines","OptionsViewColumnAutoWidth",False)
	gui.Form.GSGCJobSheet.SetGridviewProperty("gvJobLines", "ShowConditionalFormattingItem", True)
	
	Gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","JobID","Visible",False)
	Gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","ServiceID","Visible",False)
	Gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","LID","Visible",False)

	
	f.Intrinsic.Control.CallSub(Bulk_Format_JobLines,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobLines,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobLines,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobLines,"sProp","MinWidth","sValue","40")

'JobID
'WO_ID
'LID
'QuantityHung
'Line
'ItemQty
'Description
'ServiceID
'ServiceDesc
'ProdNotes
'Customer

	v.Local.sProp.Set("Caption")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","Description",v.Local.sProp,"Part Desc.")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","QuantityHung",v.Local.sProp,"Hung Qty (Job)")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","WO_ID",v.Local.sProp,"WO ID")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","ServiceID",v.Local.sProp,"Service ID")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","ServiceDesc",v.Local.sProp,"Service Desc")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","ItemQTY",v.Local.sProp,"Item Qty (WO)")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","ProdNotes",v.Local.sProp,"Processing Notes")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","WOStatus",v.Local.sProp,"WO Status")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","ShipKey",v.Local.sProp,"Ship Key")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","ShipToName",v.Local.sProp,"Ship-To Name")
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","BillToName",v.Local.sProp,"Bill-To Name")
	
	'gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","ServiceID","Visible",False)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","Customer","Visible",False)
	
'	v.Local.sProp.Set("HeaderHAlignment")
'	v.Local.sValue.Set("Near")
'	v.Local.sValue2.Set("Center")
'	v.Local.sValue3.Set("Far")
'	v.Local.sProp.Set("CellHAlignment")
'	
'	v.Local.sProp.Set("Width")
'	'gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","TNID_POS",v.Local.sProp,"100")
'	
'	Gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","UnitQty","DisplayCustomNumeric","###,###,##0.00")
'	
'	v.Local.sProp.Set("DisplayCustomDatetime")
'	v.Local.sValue.Set("g")	
'	'gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","DATETIMEDELIVERY",v.Local.sProp,v.Local.sValue)


	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines", "WO_ID","AllowEdit", False)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines", "WO_ID","ReadOnly", False)

	'Gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","WO_ID",V.Enum.ColumnPropertyNames!IsHyperlink,True)

'	
	Gui.Form.GSGCJobSheet.BestFitColumns("gvJobLines")
	
Program.Sub.LoadChildgvJobLines.End

Program.Sub.Bulk_Format_JobLines.Start
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","JobID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","WO_ID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","LID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","Line",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","QuantityHung",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","ItemQty",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","Description",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","ServiceID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","ServiceDesc",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","ProdNotes",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","Customer",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","WOStatus",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","ShipKey",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","ShipToName",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCJobSheet.SetColumnProperty("gvJobLines","BillToName",v.Args.sProp,v.Args.sValue)


Program.Sub.Bulk_Format_JobLines.End

Program.Sub.LoadgvOrderItemsTab.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare

	gui.FormWorkOrderDetails.GSGCOrderItemstab.AddGridviewFromDatatable("gvOrderItemstab","dtOrderItemsTab")
	
'	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetGridViewProperty("gvOrderItemstab","MultiSelect",True)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetGridViewProperty("gvOrderItemstab","AllowSort",True)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetGridViewProperty("gvOrderItemstab","AllowFilter",True)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetGridViewProperty("gvOrderItemstab","OptionsDetailShowDetailTabs",False)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetGridViewProperty("gvOrderItemstab","OptionsViewShowGroupPanel",False)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetGridViewProperty("gvOrderItemstab","EnableAppearanceOddRow",True)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetGridviewProperty("gvOrderItemstab",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetGridviewProperty("gvOrderItemstab","OptionsViewColumnAutoWidth",False)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetGridviewProperty("gvOrderItemstab","AllowColumnResizing",True)	
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetGridviewProperty("gvOrderItemstab","ColumnPanelRowHeight","50")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetGridviewProperty("gvOrderItemstab",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetGridviewProperty("gvOrderItemstab", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_OrderItemsTab,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_OrderItemsTab,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_OrderItemsTab,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_OrderItemsTab,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_OrderItemsTab,"sProp","MinWidth","sValue","40")
	f.Intrinsic.Control.CallSub(Bulk_Format_OrderItemsTab,"sProp","AllowEdit","sValue","False")
	f.Intrinsic.Control.CallSub(Bulk_Format_OrderItemsTab,"sProp","ReadOnly","sValue","True")
	
	v.Local.sProp.Set("Caption")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","LID",v.Local.sProp,"LID")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","WO_ID",v.Local.sProp,"Work Order ID")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","LINE",v.Local.sProp,"Line#")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","WOStatusID",v.Local.sProp,"Status ID")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Status",v.Local.sProp,"Status")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","ServiceID",v.Local.sProp,"ServiceID")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Service",v.Local.sProp,"Service")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","QuoteID",v.Local.sProp,"QuoteID")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","PriceMinCharge",v.Local.sProp,"Min Charge")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","UnitPrice",v.Local.sProp,"Unit Price")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","PricePriority",v.Local.sProp,"Priority Price")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","PriorityFlag",v.Local.sProp,"Priority Flag")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","UnitQty",v.Local.sProp,"Weight (Unit Qty)")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Unit",v.Local.sProp,"Unit")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","ItemQty",v.Local.sProp,"Item Qty")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Description",v.Local.sProp,"Description (Part)")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","TagID",v.Local.sProp,"Tag ID")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Yard",v.Local.sProp,"Yard Loc.")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Yard2",v.Local.sProp,"Yard 2 Loc.")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","ItmQtyBasedFlag",v.Local.sProp,"Itm Qty Based Flag")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","NoQuenchFlag",v.Local.sProp,"No Quench Flag")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Freight",v.Local.sProp,"Freight Flag")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","QA",v.Local.sProp,"QA Flag")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","SysUserLastAccess",v.Local.sProp,"SysUser Last Access")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","SysUserLastAccessDateTime",v.Local.sProp,"SysUser Last Access DateTime")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","TotalPrice",v.Local.sProp,"Total Price")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","TotalWeight",v.Local.sProp,"Total Weight")
	

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","LID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","WO_ID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","LINE",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","WOStatusID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Status",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","ServiceID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Service",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","QuoteID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","PriceMinCharge",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","UnitPrice",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","PricePriority",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","PriorityFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","UnitQty",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Unit",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","ItemQty",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Description",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","TagID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Yard",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Yard2",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","ItmQtyBasedFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","NoQuenchFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Freight",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","QA",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","SysUserLastAccess",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","TotalPrice",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","TotalWeight",v.Local.sProp,v.Local.sValue3)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","LID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","WO_ID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","LINE",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","WOStatusID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Status",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","ServiceID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Service",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","QuoteID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","PriceMinCharge",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","UnitPrice",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","PricePriority",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","PriorityFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","UnitQty",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Unit",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","ItemQty",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Description",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","TagID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Yard",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Yard2",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","ItmQtyBasedFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","NoQuenchFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Freight",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","QA",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","SysUserLastAccess",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","TotalPrice",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","TotalWeight",v.Local.sProp,v.Local.sValue3)
	
	v.Local.sProp.Set("Width")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","LID",v.Local.sProp,"50")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","WO_ID",v.Local.sProp,"50")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","LINE",v.Local.sProp,"50")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","WOStatusID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Status",v.Local.sProp,"100")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","ServiceID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Service",v.Local.sProp,"100")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","QuoteID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","PriceMinCharge",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","UnitPrice",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","PricePriority",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","PriorityFlag",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","UnitQty",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Unit",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","ItemQty",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Description",v.Local.sProp,"150")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","TagID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Yard",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Yard2",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","ItmQtyBasedFlag",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","NoQuenchFlag",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Freight",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","QA",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","SysUserLastAccess",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","SysUserLastAccessDateTime",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","TotalPrice",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","TotalWeight",v.Local.sProp,"75")
	
	
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab", "LID","Visible", False)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab", "WO_ID","Visible", False)
'	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab", "ServiceID","Visible", False)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab", "WOStatusID","Visible", False)
'	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab", "Yard","Visible", False)
'	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab", "UnitQty","Visible", False)
'	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab", "UnitPrice","Visible", False)
'	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab", "PriorityFlag","Visible", False)
'	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab", "ItmQtyBasedFlag","Visible", False)
'	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab", "Unit","Visible", False)
'	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab", "MinCharge","Visible", False)
'	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab", "Priority","Visible", False)
'	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab", "NoQuenchFlag","Visible", False)
'	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab", "LID","Visible", False)
'	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab", "ID","Visible", False)
	

	F.Intrinsic.Control.If(V.Global.bCash.Not)
		gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","UnitPrice","Visible", False)
		Gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","UnitPrice",V.Enum.ColumnPropertyNames!AllowShowHide,False)
		gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","PriceMinCharge","Visible", False)
		Gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","PriceMinCharge",V.Enum.ColumnPropertyNames!AllowShowHide,False)
		gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","PricePriority","Visible", False)
		Gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","PricePriority",V.Enum.ColumnPropertyNames!AllowShowHide,False)
		gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","TotalPrice","Visible", False)
		Gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","TotalPrice",V.Enum.ColumnPropertyNames!AllowShowHide,False)
	F.Intrinsic.Control.EndIf
	
	
	Gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","TotalPrice","DisplayCustomNumeric","$###,###,###,##0.00#")
	Gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","TotalWeight","DisplayCustomNumeric","###,###,##0.0000")
	Gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","UnitQty","DisplayCustomNumeric","###,###,##0.0000")
	Gui.FormWorkOrderDetails.GSGCOrderItemstab.AddSummaryItem("gvOrderItemstab","TotalPrice","Total Price","Sum","Total:","","$###,###,###,##0.00#")
	Gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","UnitPrice","DisplayCustomNumeric","###,###,##0.00")
	Gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","PricePriority","DisplayCustomNumeric","###,###,##0.00")
	Gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","PriceMinCharge","DisplayCustomNumeric","###,###,##0.00")
	
	Gui.FormWorkOrderDetails.GSGCOrderItemstab.BestFitColumns("gvOrderItemstab")
	Gui.FormWorkOrderDetails.GSGCOrderItemstab.MainView("gvOrderItemstab")

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvOrderItemsTab.End

Program.Sub.Bulk_Format_OrderItemsTab.Start
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","LID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","WO_ID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","LINE",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","WOStatusID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Status",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","ServiceID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Service",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","QuoteID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","PriceMinCharge",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","UnitPrice",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","PricePriority",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","PriorityFlag",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","UnitQty",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Unit",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","ItemQty",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Description",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","TagID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Yard",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Yard2",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","ItmQtyBasedFlag",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","NoQuenchFlag",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","Freight",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","QA",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","SysUserLastAccess",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","SysUserLastAccessDateTime",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","TotalPrice",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCOrderItemstab.SetColumnProperty("gvOrderItemstab","TotalWeight",v.Args.sProp,v.Args.sValue)
	
Program.Sub.Bulk_Format_OrderItemsTab.End

Program.Sub.LoadgvPriceList.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare
	
	gui.FormQuotesandPricing.GSGCPriceList.AddGridviewFromDatatable("gvPriceList","dtPriceList")
	
'	gui.FormQuotesandPricing.GSGCPriceList.SetGridViewProperty("gvPriceList","MultiSelect",True)
	gui.FormQuotesandPricing.GSGCPriceList.SetGridViewProperty("gvPriceList","AllowSort",True)
	gui.FormQuotesandPricing.GSGCPriceList.SetGridViewProperty("gvPriceList","AllowFilter",True)
	gui.FormQuotesandPricing.GSGCPriceList.SetGridViewProperty("gvPriceList","OptionsDetailShowDetailTabs",False)
	gui.FormQuotesandPricing.GSGCPriceList.SetGridViewProperty("gvPriceList","OptionsViewShowGroupPanel",False)
	gui.FormQuotesandPricing.GSGCPriceList.SetGridViewProperty("gvPriceList","EnableAppearanceOddRow",True)
	gui.FormQuotesandPricing.GSGCPriceList.SetGridviewProperty("gvPriceList",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.FormQuotesandPricing.GSGCPriceList.SetGridviewProperty("gvPriceList","OptionsViewColumnAutoWidth",False)
	gui.FormQuotesandPricing.GSGCPriceList.SetGridviewProperty("gvPriceList","AllowColumnResizing",True)	
	gui.FormQuotesandPricing.GSGCPriceList.SetGridviewProperty("gvPriceList","ColumnPanelRowHeight","50")
	gui.FormQuotesandPricing.GSGCPriceList.SetGridviewProperty("gvPriceList",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.FormQuotesandPricing.GSGCPriceList.SetGridviewProperty("gvPriceList", "ShowConditionalFormattingItem", True)
	
	f.Intrinsic.Control.CallSub(Bulk_Format_gvPriceList,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvPriceList,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvPriceList,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvPriceList,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvPriceList,"sProp","MinWidth","sValue","40")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvPriceList,"sProp","AllowEdit","sValue","False")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvPriceList,"sProp","ReadOnly","sValue","True")
	
	v.Local.sProp.Set("Caption")
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","ID",v.Local.sProp,"Service ID")
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Service",v.Local.sProp,"Service Desc.")
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Price",v.Local.sProp,"Price ($)")
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","MinCharge",v.Local.sProp,"Min Charge ($)")
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Priority",v.Local.sProp,"Priority ($)")
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Unit",v.Local.sProp,"Unit")
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","UnitAbbreviation",v.Local.sProp,"Unit")
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","ItmQtyBased",v.Local.sProp,"Item Qty Based Flag")
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Standard_Weight",v.Local.sProp,"Standard Weight")
	
	
	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","ID",v.Local.sProp,v.Local.sValue)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Service",v.Local.sProp,v.Local.sValue)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Price",v.Local.sProp,v.Local.sValue3)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","MinCharge",v.Local.sProp,v.Local.sValue3)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Priority",v.Local.sProp,v.Local.sValue3)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Unit",v.Local.sProp,v.Local.sValue)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","UnitAbbreviation",v.Local.sProp,v.Local.sValue)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","ItmQtyBased",v.Local.sProp,v.Local.sValue2)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Standard_Weight",v.Local.sProp,v.Local.sValue3)

	v.Local.sProp.Set("CellHAlignment")
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","ID",v.Local.sProp,v.Local.sValue)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Service",v.Local.sProp,v.Local.sValue)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Price",v.Local.sProp,v.Local.sValue3)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","MinCharge",v.Local.sProp,v.Local.sValue3)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Priority",v.Local.sProp,v.Local.sValue3)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Unit",v.Local.sProp,v.Local.sValue)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","UnitAbbreviation",v.Local.sProp,v.Local.sValue)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","ItmQtyBased",v.Local.sProp,v.Local.sValue2)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Standard_Weight",v.Local.sProp,v.Local.sValue3)
	
	v.Local.sProp.Set("Width")
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","ID",v.Local.sProp,"75")
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Service",v.Local.sProp,"400")
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Price",v.Local.sProp,"75")
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","MinCharge",v.Local.sProp,"75")
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Priority",v.Local.sProp,"75")
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Unit",v.Local.sProp,"100")
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","UnitAbbreviation",v.Local.sProp,"75")
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","ItmQtyBased",v.Local.sProp,"75")
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Standard_Weight",v.Local.sProp,"75")
	
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList", "UnitAbbreviation","Visible", False)
	
	Gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Price","DisplayCustomNumeric","###,###,##0.00")
	Gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","MinCharge","DisplayCustomNumeric","###,###,##0.00")
	Gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Priority","DisplayCustomNumeric","###,###,##0.00")
	Gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Standard_Weight","DisplayCustomNumeric","###,###,##0.00")
	
	
	Gui.FormQuotesandPricing.GSGCPriceList.BestFitColumns("gvPriceList")
	Gui.FormQuotesandPricing.GSGCPriceList.MainView("gvPriceList")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvPriceList.End

Program.Sub.Bulk_Format_gvPriceList.Start
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","ID",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Service",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Price",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","MinCharge",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Priority",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Unit",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","UnitAbbreviation",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","ItmQtyBased",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCPriceList.SetColumnProperty("gvPriceList","Standard_Weight",v.Args.sProp,v.Args.sValue)

Program.Sub.Bulk_Format_gvPriceList.End

Program.Sub.LoadgvQuoteList.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare

	gui.FormQuotesandPricing.GSGCQuotes.AddGridviewFromDatatable("gvQuoteList","dtQuoteList")
	
	gui.FormQuotesandPricing.GSGCQuotes.SetGridViewProperty("gvQuoteList","AllowSort",True)
	gui.FormQuotesandPricing.GSGCQuotes.SetGridViewProperty("gvQuoteList","AllowFilter",True)
	gui.FormQuotesandPricing.GSGCQuotes.SetGridViewProperty("gvQuoteList","OptionsDetailShowDetailTabs",False)
	gui.FormQuotesandPricing.GSGCQuotes.SetGridViewProperty("gvQuoteList","OptionsViewShowGroupPanel",True)
	gui.FormQuotesandPricing.GSGCQuotes.SetGridViewProperty("gvQuoteList","EnableAppearanceOddRow",True)
	gui.FormQuotesandPricing.GSGCQuotes.SetGridviewProperty("gvQuoteList",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.FormQuotesandPricing.GSGCQuotes.SetGridviewProperty("gvQuoteList","OptionsViewColumnAutoWidth",False)
	gui.FormQuotesandPricing.GSGCQuotes.SetGridviewProperty("gvQuoteList","AllowColumnResizing",True)	
	gui.FormQuotesandPricing.GSGCQuotes.SetGridviewProperty("gvQuoteList","ColumnPanelRowHeight","50")
	gui.FormQuotesandPricing.GSGCQuotes.SetGridviewProperty("gvQuoteList",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.FormQuotesandPricing.GSGCQuotes.SetGridviewProperty("gvQuoteList", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_gvQuoteList,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvQuoteList,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvQuoteList,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvQuoteList,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvQuoteList,"sProp","MinWidth","sValue","40")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvQuoteList,"sProp","AllowEdit","sValue","False")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvQuoteList,"sProp","ReadOnly","sValue","True")
	
	
	v.Local.sProp.Set("Caption")
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","ID",v.Local.sProp,"Service ID")
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Service",v.Local.sProp,"Service Desc.")
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Price",v.Local.sProp,"Price ($)")
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","MinCharge",v.Local.sProp,"Min Charge ($)")
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Priority",v.Local.sProp,"Priority ($)")
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Unit",v.Local.sProp,"Unit")
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","UnitAbbreviation",v.Local.sProp,"Unit")
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","ItmQtyBased",v.Local.sProp,"Item Qty Based Flag")
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Standard_Weight",v.Local.sProp,"Standard Weight")
	
	
	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","ID",v.Local.sProp,v.Local.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Service",v.Local.sProp,v.Local.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Price",v.Local.sProp,v.Local.sValue3)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","MinCharge",v.Local.sProp,v.Local.sValue3)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Priority",v.Local.sProp,v.Local.sValue3)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Unit",v.Local.sProp,v.Local.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","UnitAbbreviation",v.Local.sProp,v.Local.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","ItmQtyBased",v.Local.sProp,v.Local.sValue2)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Standard_Weight",v.Local.sProp,v.Local.sValue3)

	v.Local.sProp.Set("CellHAlignment")
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","ID",v.Local.sProp,v.Local.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Service",v.Local.sProp,v.Local.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Price",v.Local.sProp,v.Local.sValue3)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","MinCharge",v.Local.sProp,v.Local.sValue3)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Priority",v.Local.sProp,v.Local.sValue3)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Unit",v.Local.sProp,v.Local.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","UnitAbbreviation",v.Local.sProp,v.Local.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","ItmQtyBased",v.Local.sProp,v.Local.sValue2)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Standard_Weight",v.Local.sProp,v.Local.sValue3)
	
	v.Local.sProp.Set("Width")
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","ID",v.Local.sProp,"75")
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Service",v.Local.sProp,"400")
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Price",v.Local.sProp,"75")
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","MinCharge",v.Local.sProp,"75")
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Priority",v.Local.sProp,"75")
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Unit",v.Local.sProp,"100")
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","UnitAbbreviation",v.Local.sProp,"75")
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","ItmQtyBased",v.Local.sProp,"75")
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Standard_Weight",v.Local.sProp,"75")
	
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList", "UnitAbbreviation","Visible", False)
	
	Gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Price","DisplayCustomNumeric","###,###,##0.00")
	Gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","MinCharge","DisplayCustomNumeric","###,###,##0.00")
	Gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Priority","DisplayCustomNumeric","###,###,##0.00")
	Gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Standard_Weight","DisplayCustomNumeric","###,###,##0.00")
	
	Gui.FormQuotesandPricing.GSGCQuotes.BestFitColumns("gvQuoteList")
	Gui.FormQuotesandPricing.GSGCQuotes.MainView("gvQuoteList")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvQuoteList.End

Program.Sub.Bulk_Format_gvQuoteList.Start
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","QID",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","QHID",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","ID",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","QuoteID",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Service",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Price",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","MinCharge",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Priority",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Unit",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","UnitAbbreviation",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","ItmQtyBased",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","CustomerReference",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","INTDescription",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Estimate",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Actual_Weight",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","QuotedBy",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","ValidFrom",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","ValidUntil",v.Args.sProp,v.Args.sValue)
	gui.FormQuotesandPricing.GSGCQuotes.SetColumnProperty("gvQuoteList","Standard_Weight",v.Args.sProp,v.Args.sValue)

Program.Sub.Bulk_Format_gvQuoteList.End

Program.Sub.LoadgvTransportDelivery.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare

	gui.FormWorkOrderDetails.GSGCTransportDelivery.AddGridviewFromDatatable("gvTransportDelivery","dtTransportDelivery")
	
'	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetGridViewProperty("gvTransportDelivery","MultiSelect",True)
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetGridViewProperty("gvTransportDelivery","AllowSort",True)
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetGridViewProperty("gvTransportDelivery","AllowFilter",True)
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetGridViewProperty("gvTransportDelivery","OptionsDetailShowDetailTabs",False)
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetGridViewProperty("gvTransportDelivery","OptionsViewShowGroupPanel",False)
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetGridViewProperty("gvTransportDelivery","EnableAppearanceOddRow",True)
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetGridviewProperty("gvTransportDelivery",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetGridviewProperty("gvTransportDelivery","OptionsViewColumnAutoWidth",False)
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetGridviewProperty("gvTransportDelivery","AllowColumnResizing",True)	
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetGridviewProperty("gvTransportDelivery","ColumnPanelRowHeight","50")
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetGridviewProperty("gvTransportDelivery",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetGridviewProperty("gvTransportDelivery", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_TransportDelivery,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_TransportDelivery,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_TransportDelivery,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_TransportDelivery,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_TransportDelivery,"sProp","MinWidth","sValue","40")
	f.Intrinsic.Control.CallSub(Bulk_Format_TransportDelivery,"sProp","AllowEdit","sValue","False")
	f.Intrinsic.Control.CallSub(Bulk_Format_TransportDelivery,"sProp","ReadOnly","sValue","True")
	
	v.Local.sProp.Set("Caption")
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetColumnProperty("gvTransportDelivery","TransportNoteID",v.Local.sProp,"ID")
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetColumnProperty("gvTransportDelivery","DateTimeDelivery",v.Local.sProp,"Delivery")
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetColumnProperty("gvTransportDelivery","TransportArrangementID",v.Local.sProp,"ArrangementID")
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetColumnProperty("gvTransportDelivery","TransportArrangement",v.Local.sProp,"Arrangement")


	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetColumnProperty("gvTransportDelivery","TransportNoteID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetColumnProperty("gvTransportDelivery","DateTimeDelivery",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetColumnProperty("gvTransportDelivery","TransportArrangementID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetColumnProperty("gvTransportDelivery","TransportArrangement",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetColumnProperty("gvTransportDelivery","TransportNoteID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetColumnProperty("gvTransportDelivery","DateTimeDelivery",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetColumnProperty("gvTransportDelivery","TransportArrangementID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetColumnProperty("gvTransportDelivery","TransportArrangement",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("Width")
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetColumnProperty("gvTransportDelivery","TransportNoteID",v.Local.sProp,"50")
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetColumnProperty("gvTransportDelivery","DateTimeDelivery",v.Local.sProp,"120")
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetColumnProperty("gvTransportDelivery","TransportArrangementID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetColumnProperty("gvTransportDelivery","TransportArrangement",v.Local.sProp,"185")
	
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetColumnProperty("gvTransportDelivery", "TransportArrangementID","Visible", False)
	
	Gui.FormWorkOrderDetails.GSGCTransportDelivery.BestFitColumns("gvTransportDelivery")
	Gui.FormWorkOrderDetails.GSGCTransportDelivery.MainView("gvTransportDelivery")

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvTransportDelivery.End

Program.Sub.Bulk_Format_TransportDelivery.Start
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetColumnProperty("gvTransportDelivery","TransportNoteID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetColumnProperty("gvTransportDelivery","DateTimeDelivery",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetColumnProperty("gvTransportDelivery","TransportArrangementID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCTransportDelivery.SetColumnProperty("gvTransportDelivery","TransportArrangement",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_TransportDelivery.End

Program.Sub.LoadgvTransportNoteItems.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare

	gui.FormWorkOrderDetails.GSGCTransportNoteItems.AddGridviewFromDatatable("gvTransportNoteItems","dtTransportNoteItems")
	
'	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetGridViewProperty("gvTransportNoteItems","MultiSelect",True)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetGridViewProperty("gvTransportNoteItems","AllowSort",True)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetGridViewProperty("gvTransportNoteItems","AllowFilter",True)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetGridViewProperty("gvTransportNoteItems","OptionsDetailShowDetailTabs",False)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetGridViewProperty("gvTransportNoteItems","OptionsViewShowGroupPanel",False)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetGridViewProperty("gvTransportNoteItems","EnableAppearanceOddRow",True)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetGridviewProperty("gvTransportNoteItems",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetGridviewProperty("gvTransportNoteItems","OptionsViewColumnAutoWidth",False)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetGridviewProperty("gvTransportNoteItems","AllowColumnResizing",True)	
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetGridviewProperty("gvTransportNoteItems","ColumnPanelRowHeight","50")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetGridviewProperty("gvTransportNoteItems",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetGridviewProperty("gvTransportNoteItems", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_TransportNoteItems,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_TransportNoteItems,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_TransportNoteItems,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_TransportNoteItems,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_TransportNoteItems,"sProp","MinWidth","sValue","40")
	f.Intrinsic.Control.CallSub(Bulk_Format_TransportNoteItems,"sProp","AllowEdit","sValue","False")
	f.Intrinsic.Control.CallSub(Bulk_Format_TransportNoteItems,"sProp","ReadOnly","sValue","True")
	
	v.Local.sProp.Set("Caption")	
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","Final",v.Local.sProp,"Final")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","Line",v.Local.sProp,"Line")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","TagID",v.Local.sProp,"Tag")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","DESCRIPTION",v.Local.sProp,"Description")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","ToGo",v.Local.sProp,"ToGo")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","Hold",v.Local.sProp,"Hold")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyScheduled",v.Local.sProp,"Schd")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyHung",v.Local.sProp,"Hung")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyDipped",v.Local.sProp,"Dip")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyPacked",v.Local.sProp,"Pack")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyInbound",v.Local.sProp,"Inbnd")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyOutbound",v.Local.sProp,"Outbnd")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyPossession",v.Local.sProp,"Pssess")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","ServiceDesc",v.Local.sProp,"Service")


	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","Final",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","Line",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","TagID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","DESCRIPTION",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","ToGo",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","Hold",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyScheduled",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyHung",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyDipped",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyPacked",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyInbound",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyOutbound",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyPossession",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","ServiceDesc",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","Final",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","Line",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","TagID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","DESCRIPTION",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","ToGo",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","Hold",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyScheduled",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyHung",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyDipped",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyPacked",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyInbound",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyOutbound",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyPossession",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","ServiceDesc",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("Width")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","Final",v.Local.sProp,"45")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","Line",v.Local.sProp,"45")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","TagID",v.Local.sProp,"50")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","DESCRIPTION",v.Local.sProp,"175")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","ToGo",v.Local.sProp,"45")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","Hold",v.Local.sProp,"45")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyScheduled",v.Local.sProp,"45")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyHung",v.Local.sProp,"45")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyDipped",v.Local.sProp,"45")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyPacked",v.Local.sProp,"45")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyInbound",v.Local.sProp,"45")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyOutbound",v.Local.sProp,"45")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyPossession",v.Local.sProp,"45")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","ServiceDesc",v.Local.sProp,"150")
	
	'AllowEdit, ReadOnly
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","Final","AllowEdit",True)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","Final","ReadOnly",False)
	
	
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("PaleTurquoise")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","Final",v.Local.sProp,v.Local.sValue)
	
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems", "LID","Visible", False)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems", "WO_ID","Visible", False)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems", "WOStatusID","Visible", False)
	
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.AddStyleFormatCondition("gvTransportNoteItems","ToGo","ToGo","Expression","[ToGo] = 0")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetStyleFormatConditionProperty("gvTransportNoteItems","ToGo","ToGo","BackColor","Gray")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetStyleFormatConditionProperty("gvTransportNoteItems","ToGo","ToGo","ForeColor","Gray")
	
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.AddStyleFormatCondition("gvTransportNoteItems","Hold","Hold","Expression","[Hold] = 0")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetStyleFormatConditionProperty("gvTransportNoteItems","Hold","Hold","BackColor","Gray")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetStyleFormatConditionProperty("gvTransportNoteItems","Hold","Hold","ForeColor","Gray")
	
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.AddStyleFormatCondition("gvTransportNoteItems","QtyScheduled","QtyScheduled","Expression","[QtyScheduled] = 0")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetStyleFormatConditionProperty("gvTransportNoteItems","QtyScheduled","QtyScheduled","BackColor","Gray")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetStyleFormatConditionProperty("gvTransportNoteItems","QtyScheduled","QtyScheduled","ForeColor","Gray")
	
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.AddStyleFormatCondition("gvTransportNoteItems","QtyHung","QtyHung","Expression","[QtyHung] = 0")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetStyleFormatConditionProperty("gvTransportNoteItems","QtyHung","QtyHung","BackColor","Gray")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetStyleFormatConditionProperty("gvTransportNoteItems","QtyHung","QtyHung","ForeColor","Gray")
	
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.AddStyleFormatCondition("gvTransportNoteItems","QtyDipped","QtyDipped","Expression","[QtyDipped] = 0")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetStyleFormatConditionProperty("gvTransportNoteItems","QtyDipped","QtyDipped","BackColor","Gray")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetStyleFormatConditionProperty("gvTransportNoteItems","QtyDipped","QtyDipped","ForeColor","Gray")
	
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.AddStyleFormatCondition("gvTransportNoteItems","QtyPacked","QtyPacked","Expression","[QtyPacked] = 0")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetStyleFormatConditionProperty("gvTransportNoteItems","QtyPacked","QtyPacked","BackColor","Gray")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetStyleFormatConditionProperty("gvTransportNoteItems","QtyPacked","QtyPacked","ForeColor","Gray")
	
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.AddStyleFormatCondition("gvTransportNoteItems","QtyInbound","QtyInbound","Expression","[QtyInbound] = 0")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetStyleFormatConditionProperty("gvTransportNoteItems","QtyInbound","QtyInbound","BackColor","Gray")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetStyleFormatConditionProperty("gvTransportNoteItems","QtyInbound","QtyInbound","ForeColor","Gray")
	
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.AddStyleFormatCondition("gvTransportNoteItems","QtyOutbound","QtyOutbound","Expression","[QtyOutbound] = 0")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetStyleFormatConditionProperty("gvTransportNoteItems","QtyOutbound","QtyOutbound","BackColor","Gray")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetStyleFormatConditionProperty("gvTransportNoteItems","QtyOutbound","QtyOutbound","ForeColor","Gray")
	
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.AddStyleFormatCondition("gvTransportNoteItems","QtyPossession","QtyPossession","Expression","[QtyPossession] = 0")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetStyleFormatConditionProperty("gvTransportNoteItems","QtyPossession","QtyPossession","BackColor","Gray")
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetStyleFormatConditionProperty("gvTransportNoteItems","QtyPossession","QtyPossession","ForeColor","Gray")
	
	Gui.FormWorkOrderDetails.GSGCTransportNoteItems.BestFitColumns("gvTransportNoteItems")
	Gui.FormWorkOrderDetails.GSGCTransportNoteItems.MainView("gvTransportNoteItems")

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvTransportNoteItems.End

Program.Sub.Bulk_Format_TransportNoteItems.Start
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","Final",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","Line",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","TagID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","DESCRIPTION",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","ToGo",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","Hold",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyScheduled",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyHung",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyDipped",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyPacked",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyInbound",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyOutbound",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","QtyPossession",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.SetColumnProperty("gvTransportNoteItems","ServiceDesc",v.Args.sProp,v.Args.sValue)
	'
Program.Sub.Bulk_Format_TransportNoteItems.End

Program.Sub.LoadgvContactAllocate.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare

	gui.FormWorkOrderDetails.GSGCContactAllocate.AddGridviewFromDatatable("gvContactAllocate","dtContactAllocate")
	
'	gui.FormWorkOrderDetails.GSGCContactAllocate.SetGridViewProperty("gvContactAllocate","MultiSelect",True)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetGridViewProperty("gvContactAllocate","AllowSort",True)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetGridViewProperty("gvContactAllocate","AllowFilter",True)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetGridViewProperty("gvContactAllocate","OptionsDetailShowDetailTabs",False)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetGridViewProperty("gvContactAllocate","OptionsViewShowGroupPanel",False)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetGridViewProperty("gvContactAllocate","EnableAppearanceOddRow",True)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetGridviewProperty("gvContactAllocate",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetGridviewProperty("gvContactAllocate","OptionsViewColumnAutoWidth",False)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetGridviewProperty("gvContactAllocate","AllowColumnResizing",True)	
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetGridviewProperty("gvContactAllocate","ColumnPanelRowHeight","50")
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetGridviewProperty("gvContactAllocate",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetGridviewProperty("gvContactAllocate", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_ContactAllocate,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_ContactAllocate,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_ContactAllocate,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_ContactAllocate,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_ContactAllocate,"sProp","MinWidth","sValue","40")
	f.Intrinsic.Control.CallSub(Bulk_Format_ContactAllocate,"sProp","AllowEdit","sValue","False")
	f.Intrinsic.Control.CallSub(Bulk_Format_ContactAllocate,"sProp","ReadOnly","sValue","True")
	
	v.Local.sProp.Set("Caption")
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","Select",v.Local.sProp,"Allocate")
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","ID",v.Local.sProp,"ID")
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","NAME_PREFERRED",v.Local.sProp,"First Name")
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","NAME_LAST",v.Local.sProp,"Last Name")
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","EMAIL1",v.Local.sProp,"Email")
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","PHONE1",v.Local.sProp,"Phone 1")
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","PHONE2",v.Local.sProp,"Phone 2")
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","TITLE",v.Local.sProp,"Title")
	
	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","Select",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","ID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","NAME_PREFERRED",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","NAME_LAST",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","EMAIL1",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","PHONE1",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","PHONE2",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","TITLE",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","Select",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","ID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","NAME_PREFERRED",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","NAME_LAST",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","EMAIL1",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","PHONE1",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","PHONE2",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","TITLE",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("Width")
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","Select",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","ID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","NAME_PREFERRED",v.Local.sProp,"150")
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","NAME_LAST",v.Local.sProp,"150")
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","EMAIL1",v.Local.sProp,"150")
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","PHONE1",v.Local.sProp,"150")
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","PHONE2",v.Local.sProp,"150")
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","TITLE",v.Local.sProp,"150")
	
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate", "ID","Visible", False)
	
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate", "Select","CellBackColor", "PaleTurquoise")
	
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate", "Select","AllowEdit", True)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate", "Select","Readonly", False)
	
	
	Gui.FormWorkOrderDetails.GSGCContactAllocate.BestFitColumns("gvContactAllocate")
	Gui.FormWorkOrderDetails.GSGCContactAllocate.MainView("gvContactAllocate")

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvContactAllocate.End

Program.Sub.Bulk_Format_ContactAllocate.Start
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","Select",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","ID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","NAME_PREFERRED",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","NAME_LAST",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","EMAIL1",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","PHONE1",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","PHONE2",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCContactAllocate.SetColumnProperty("gvContactAllocate","TITLE",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_ContactAllocate.End

Program.Sub.LoadgvContactDeallocate.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare

	gui.FormWorkOrderDetails.GSGCContactDeallocate.AddGridviewFromDatatable("gvContactDeallocate","dtContactDeallocate")
	
'	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetGridViewProperty("gvContactDeallocate","MultiSelect",True)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetGridViewProperty("gvContactDeallocate","AllowSort",True)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetGridViewProperty("gvContactDeallocate","AllowFilter",True)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetGridViewProperty("gvContactDeallocate","OptionsDetailShowDetailTabs",False)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetGridViewProperty("gvContactDeallocate","OptionsViewShowGroupPanel",False)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetGridViewProperty("gvContactDeallocate","EnableAppearanceOddRow",True)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetGridviewProperty("gvContactDeallocate",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetGridviewProperty("gvContactDeallocate","OptionsViewColumnAutoWidth",False)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetGridviewProperty("gvContactDeallocate","AllowColumnResizing",True)	
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetGridviewProperty("gvContactDeallocate","ColumnPanelRowHeight","50")
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetGridviewProperty("gvContactDeallocate",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetGridviewProperty("gvContactDeallocate", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_ContactDeallocate,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_ContactDeallocate,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_ContactDeallocate,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_ContactDeallocate,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_ContactDeallocate,"sProp","MinWidth","sValue","40")
	f.Intrinsic.Control.CallSub(Bulk_Format_ContactDeallocate,"sProp","AllowEdit","sValue","False")
	f.Intrinsic.Control.CallSub(Bulk_Format_ContactDeallocate,"sProp","ReadOnly","sValue","True")
	
	v.Local.sProp.Set("Caption")
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","Select",v.Local.sProp,"Deallocate")
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","ID",v.Local.sProp,"ID")
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","NAME_PREFERRED",v.Local.sProp,"First Name")
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","NAME_LAST",v.Local.sProp,"Last Name")
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","EMAIL1",v.Local.sProp,"Email")
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","PHONE1",v.Local.sProp,"Phone 1")
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","PHONE2",v.Local.sProp,"Phone 2")
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","TITLE",v.Local.sProp,"Title")
	
	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","Select",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","ID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","NAME_PREFERRED",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","NAME_LAST",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","EMAIL1",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","PHONE1",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","PHONE2",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","TITLE",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","Select",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","ID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","NAME_PREFERRED",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","NAME_LAST",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","EMAIL1",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","PHONE1",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","PHONE2",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","TITLE",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("Width")
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","Select",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","ID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","NAME_PREFERRED",v.Local.sProp,"150")
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","NAME_LAST",v.Local.sProp,"150")
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","EMAIL1",v.Local.sProp,"150")
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","PHONE1",v.Local.sProp,"150")
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","PHONE2",v.Local.sProp,"150")
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","TITLE",v.Local.sProp,"150")
	
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate", "ID","Visible", False)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate", "Select","CellBackColor", "PaleTurquoise")
	
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate", "Select","AllowEdit", True)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate", "Select","Readonly", False)
	
	Gui.FormWorkOrderDetails.GSGCContactDeallocate.BestFitColumns("gvContactDeallocate")
	Gui.FormWorkOrderDetails.GSGCContactDeallocate.MainView("gvContactDeallocate")

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvContactDeallocate.End

Program.Sub.Bulk_Format_ContactDeallocate.Start
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","Select",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","ID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","NAME_PREFERRED",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","NAME_LAST",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","EMAIL1",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","PHONE1",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","PHONE2",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCContactDeallocate.SetColumnProperty("gvContactDeallocate","TITLE",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_ContactDeallocate.End

Program.Sub.LoadgvWMLines.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare

	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.AddGridviewFromDatatable("gvWMLines","dtWMLines")
	
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetGridViewProperty("gvWMLines","MultiSelect",True)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetGridViewProperty("gvWMLines","AllowSort",True)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetGridViewProperty("gvWMLines","AllowFilter",True)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetGridViewProperty("gvWMLines","OptionsDetailShowDetailTabs",False)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetGridViewProperty("gvWMLines","OptionsViewShowGroupPanel",False)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetGridViewProperty("gvWMLines","EnableAppearanceOddRow",True)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetGridviewProperty("gvWMLines",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetGridviewProperty("gvWMLines","OptionsViewColumnAutoWidth",False)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetGridviewProperty("gvWMLines","AllowColumnResizing",True)	
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetGridviewProperty("gvWMLines","ColumnPanelRowHeight","50")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetGridviewProperty("gvWMLines",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetGridviewProperty("gvWMLines", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_gvWMLines,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvWMLines,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvWMLines,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvWMLines,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvWMLines,"sProp","MinWidth","sValue","40")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvWMLines,"sProp","AllowEdit","sValue","False")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvWMLines,"sProp","ReadOnly","sValue","True")
	
	v.Local.sProp.Set("Caption")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Select",v.Local.sProp," ")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","LID",v.Local.sProp,"LID")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","WO_ID",v.Local.sProp,"Work Order ID")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","LINE",v.Local.sProp,"Line#")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","WOStatusID",v.Local.sProp,"Status ID")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Status",v.Local.sProp,"Status")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","ServiceID",v.Local.sProp,"ServiceID")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Service",v.Local.sProp,"Service")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","QuoteID",v.Local.sProp,"QuoteID")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","PriceMinCharge",v.Local.sProp,"Min Charge")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","UnitPrice",v.Local.sProp,"Unit Price")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","PricePriority",v.Local.sProp,"Priority Price")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","PriorityFlag",v.Local.sProp,"Priority Flag")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","UnitQty",v.Local.sProp,"Weight (Unit Qty)")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Unit",v.Local.sProp,"Unit")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","ItemQty",v.Local.sProp,"Item Qty")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Description",v.Local.sProp,"Description (Part)")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","TagID",v.Local.sProp,"Tag ID")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Yard",v.Local.sProp,"Yard Loc.")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","ItmQtyBasedFlag",v.Local.sProp,"Itm Qty Based Flag")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","NoQuenchFlag",v.Local.sProp,"No Quench Flag")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","SysUserLastAccess",v.Local.sProp,"SysUser Last Access")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","SysUserLastAccessDateTime",v.Local.sProp,"SysUser Last Access DateTime")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","TotalWeight",v.Local.sProp,"Total Weight (Line)")
	

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","LID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","WO_ID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","LINE",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","WOStatusID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Status",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","ServiceID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Service",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","QuoteID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","PriceMinCharge",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","UnitPrice",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","PricePriority",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","PriorityFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","UnitQty",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Unit",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","ItemQty",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Description",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","TagID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Yard",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","ItmQtyBasedFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","NoQuenchFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","SysUserLastAccess",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Select",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","LID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","WO_ID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","LINE",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","WOStatusID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Status",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","ServiceID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Service",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","QuoteID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","PriceMinCharge",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","UnitPrice",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","PricePriority",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","PriorityFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","UnitQty",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Unit",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","ItemQty",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Description",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","TagID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Yard",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","ItmQtyBasedFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","NoQuenchFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","SysUserLastAccess",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)
	
	v.Local.sProp.Set("Width")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Select",v.Local.sProp,"50")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","LID",v.Local.sProp,"50")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","WO_ID",v.Local.sProp,"50")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","LINE",v.Local.sProp,"50")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","WOStatusID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Status",v.Local.sProp,"100")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","ServiceID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Service",v.Local.sProp,"150")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","QuoteID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","PriceMinCharge",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","UnitPrice",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","PricePriority",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","PriorityFlag",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","UnitQty",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Unit",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","ItemQty",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Description",v.Local.sProp,"150")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","TagID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Yard",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","ItmQtyBasedFlag",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","NoQuenchFlag",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","SysUserLastAccess",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","SysUserLastAccessDateTime",v.Local.sProp,"75")
	
	
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Select","AllowEdit",True)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Select","Readonly",False)
	
	
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines", "LID","Visible", False)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines", "WeightsKey","Visible", False)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines", "WO_ID","Visible", False)
	'gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines", "ServiceID","Visible", False)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines", "WOStatusID","Visible", False)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines", "Yard","Visible", False)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines", "TagID","Visible", False)
'	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines", "UnitQty","Visible", False)
'	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines", "UnitPrice","Visible", False)
'	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines", "PriorityFlag","Visible", False)
'	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines", "ItmQtyBasedFlag","Visible", False)
'	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines", "Unit","Visible", False)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines", "PriceMinCharge","Visible", False)
'	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines", "Priority","Visible", False)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines", "NoQuenchFlag","Visible", False)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines", "SysUserLastAccess","Visible", False)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines", "SysUserLastAccessDateTime","Visible", False)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines", "PricePriority","Visible", False)
	
	F.Intrinsic.Control.If(V.Global.bCash.Not)
		gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","UnitPrice","Visible", False)
		Gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","UnitPrice",V.Enum.ColumnPropertyNames!AllowShowHide,False)
		gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","PriceMinCharge","Visible", False)
		Gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","PriceMinCharge",V.Enum.ColumnPropertyNames!AllowShowHide,False)
		gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","PricePriority","Visible", False)
		Gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","PricePriority",V.Enum.ColumnPropertyNames!AllowShowHide,False)	
	F.Intrinsic.Control.EndIf

	Gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","TotalWeight","DisplayCustomNumeric","###,###,###,##0.0000")
	Gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","UnitQty","DisplayCustomNumeric","###,###,###,##0.0000")
	Gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","UnitPrice","DisplayCustomNumeric","###,###,###,##0.00")
	
	Gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.BestFitColumns("gvWMLines")
	Gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.MainView("gvWMLines")

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvWMLines.End

Program.Sub.Bulk_Format_gvWMLines.Start
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Select",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","LID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","WO_ID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","LINE",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","WOStatusID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Status",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","ServiceID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Service",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","QuoteID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","PriceMinCharge",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","UnitPrice",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","PricePriority",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","PriorityFlag",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","UnitQty",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Unit",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","ItemQty",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Description",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","TagID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","Yard",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","ItmQtyBasedFlag",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","NoQuenchFlag",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","SysUserLastAccess",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","SysUserLastAccessDateTime",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.SetColumnProperty("gvWMLines","TotalWeight",v.Args.sProp,v.Args.sValue)

Program.Sub.Bulk_Format_gvWMLines.End

Program.Sub.LoadgvWMAggregate.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare

	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.AddGridviewFromDatatable("gvWMAggregate","dtWMAggregate")
	
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetGridViewProperty("gvWMAggregate","MultiSelect",True)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetGridViewProperty("gvWMAggregate","AllowSort",True)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetGridViewProperty("gvWMAggregate","AllowFilter",True)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetGridViewProperty("gvWMAggregate","OptionsDetailShowDetailTabs",False)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetGridViewProperty("gvWMAggregate","OptionsViewShowGroupPanel",False)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetGridViewProperty("gvWMAggregate","EnableAppearanceOddRow",True)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetGridviewProperty("gvWMAggregate",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetGridviewProperty("gvWMAggregate","OptionsViewColumnAutoWidth",False)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetGridviewProperty("gvWMAggregate","AllowColumnResizing",True)	
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetGridviewProperty("gvWMAggregate","ColumnPanelRowHeight","50")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetGridviewProperty("gvWMAggregate",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetGridviewProperty("gvWMAggregate", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_gvWMAggregate,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvWMAggregate,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvWMAggregate,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvWMAggregate,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvWMAggregate,"sProp","MinWidth","sValue","40")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvWMAggregate,"sProp","AllowEdit","sValue","False")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvWMAggregate,"sProp","ReadOnly","sValue","True")
	
	v.Local.sProp.Set("Caption")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","Select",v.Local.sProp," ")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","WO_ID",v.Local.sProp,"Work Order ID")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","ServiceID",v.Local.sProp,"ServiceID")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","Service",v.Local.sProp,"Service")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","TotalWeight1",v.Local.sProp,"Total Weight")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","Unit",v.Local.sProp,"Unit")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","UnitPrice",v.Local.sProp,"Unit Price")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","PriorityFlag",v.Local.sProp,"Priority Flag")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","TotalItemQty",v.Local.sProp,"Total Item Qty")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","ItmQtyBasedFlag",v.Local.sProp,"Itm Qty Based Flag")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","QuoteID",v.Local.sProp,"QuoteID")
	

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","Select",v.Local.sProp,V.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","WO_ID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","ServiceID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","Service",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","UnitPrice",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","PriorityFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","TotalWeight1",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","Unit",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","TotalItemQty",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","ItmQtyBasedFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","QuoteID",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","Select",v.Local.sProp,V.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","WO_ID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","ServiceID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","Service",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","UnitPrice",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","PriorityFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","TotalWeight1",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","Unit",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","TotalItemQty",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","ItmQtyBasedFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","QuoteID",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("Width")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","Select",v.Local.sProp,"50")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","WO_ID",v.Local.sProp,"50")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","ServiceID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","Service",v.Local.sProp,"150")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","UnitPrice",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","PriorityFlag",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","TotalWeight1",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","Unit",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","TotalItemQty",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","ItmQtyBasedFlag",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","QuoteID",v.Local.sProp,"75")
	
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","Select","AllowEdit",True)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","Select","Readonly",False)
	
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate", "WO_ID","Visible", False)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate", "WeightsKey","Visible", False)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate", "TotalWeight","Visible", False)

	F.Intrinsic.Control.If(V.Global.bCash.Not)
		gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","UnitPrice","Visible", False)
		Gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","UnitPrice",V.Enum.ColumnPropertyNames!AllowShowHide,False)
	F.Intrinsic.Control.EndIf
	
	Gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","TotalWeight1","DisplayCustomNumeric","###,###,###,##0.0000")
	Gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","UnitPrice","DisplayCustomNumeric","###,###,###,##0.00")
	

	
	Gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.BestFitColumns("gvWMAggregate")
	Gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.MainView("gvWMAggregate")

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvWMAggregate.End

Program.Sub.Bulk_Format_gvWMAggregate.Start
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","Select",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","WO_ID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","ServiceID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","Service",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","UnitPrice",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","PriorityFlag",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","TotalWeight1",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","Unit",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","TotalItemQty",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","ItmQtyBasedFlag",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.SetColumnProperty("gvWMAggregate","QuoteID",v.Args.sProp,v.Args.sValue)
	

Program.Sub.Bulk_Format_gvWMAggregate.End

Program.Sub.LoadgvJobAllocation.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare

	gui.FormWorkOrderDetails.GSGCJobAllocation.AddGridviewFromDatatable("gvJobAllocation","dtJobAllocation")
	
'	gui.FormWorkOrderDetails.GSGCJobAllocation.SetGridViewProperty("gvJobAllocation","MultiSelect",True)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetGridViewProperty("gvJobAllocation","AllowSort",True)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetGridViewProperty("gvJobAllocation","AllowFilter",True)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetGridViewProperty("gvJobAllocation","OptionsDetailShowDetailTabs",False)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetGridViewProperty("gvJobAllocation","OptionsViewShowGroupPanel",False)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetGridViewProperty("gvJobAllocation","EnableAppearanceOddRow",True)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetGridviewProperty("gvJobAllocation",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetGridviewProperty("gvJobAllocation","OptionsViewColumnAutoWidth",False)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetGridviewProperty("gvJobAllocation","AllowColumnResizing",True)	
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetGridviewProperty("gvJobAllocation","ColumnPanelRowHeight","50")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetGridviewProperty("gvJobAllocation",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetGridviewProperty("gvJobAllocation", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_JobAllocation,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobAllocation,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobAllocation,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobAllocation,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobAllocation,"sProp","MinWidth","sValue","40")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobAllocation,"sProp","AllowEdit","sValue","False")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobAllocation,"sProp","ReadOnly","sValue","True")
	
	v.Local.sProp.Set("Caption")	
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","CheckedFlag",v.Local.sProp,"Checked")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","JobID",v.Local.sProp,"Job ID")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","LID",v.Local.sProp,"LID")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","LINE",v.Local.sProp,"Line# (WO)")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","QuantityHung",v.Local.sProp,"Qty Hung")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","DateTimeScheduled",v.Local.sProp,"Scheduled")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","DateTimeCreated",v.Local.sProp,"Created")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","DateTimeCompleted",v.Local.sProp,"Completed")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","JobResourceID",v.Local.sProp,"JobResourceID")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","JobResource",v.Local.sProp,"Job Resource")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","ProcessCount",v.Local.sProp,"Process Count")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","PriorityFlag",v.Local.sProp,"Priority Flag")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","JobReleaseFlag",v.Local.sProp,"Job Release Flag")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","ItemQty",v.Local.sProp,"Item Qty (WO)")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","Description",v.Local.sProp,"Part Desc.")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","TagID",v.Local.sProp,"Tag ID")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","QA",v.Local.sProp,"QA Req.")

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","CheckedFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","JobID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","LID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","LINE",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","QuantityHung",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","DateTimeScheduled",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","DateTimeCreated",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","DateTimeCompleted",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","JobResourceID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","JobResource",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","ProcessCount",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","PriorityFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","JobReleaseFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","ItemQty",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","Description",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","TagID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","QA",v.Local.sProp,v.Local.sValue2)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","CheckedFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","JobID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","LID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","LINE",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","QuantityHung",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","DateTimeScheduled",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","DateTimeCreated",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","DateTimeCompleted",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","JobResourceID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","JobResource",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","ProcessCount",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","PriorityFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","JobReleaseFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","ItemQty",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","Description",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","TagID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","QA",v.Local.sProp,v.Local.sValue2)
	
	v.Local.sProp.Set("Width")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","CheckedFlag",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","JobID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","LID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","LINE",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","QuantityHung",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","DateTimeScheduled",v.Local.sProp,"125")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","DateTimeCreated",v.Local.sProp,"125")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","DateTimeCompleted",v.Local.sProp,"125")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","JobResourceID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","JobResource",v.Local.sProp,"125")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","ProcessCount",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","PriorityFlag",v.Local.sProp,"50")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","JobReleaseFlag",v.Local.sProp,"50")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","ItemQty",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","Description",v.Local.sProp,"150")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","TagID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","QA",v.Local.sProp,"75")
	
	
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation", "LID","Visible", False)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation", "JobResourceID","Visible", False)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation", "WorkOrderID","Visible", False)
	
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation", "CheckedFlag","AllowEdit", True)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation", "CheckedFlag","ReadOnly", False)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation", "JobID","AllowEdit", False)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation", "JobID","ReadOnly", False)
	
	Gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","JobID",V.Enum.ColumnPropertyNames!IsHyperlink,True)
	
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("PaleTurquoise")
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","QA",v.Local.sProp,v.Local.sValue)
	
	Gui.FormWorkOrderDetails.GSGCJobAllocation.BestFitColumns("gvJobAllocation")
	Gui.FormWorkOrderDetails.GSGCJobAllocation.MainView("gvJobAllocation")

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvJobAllocation.End

Program.Sub.Bulk_Format_JobAllocation.Start
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","CheckedFlag",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","JobID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","LID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","LINE",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","QuantityHung",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","DateTimeScheduled",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","DateTimeCreated",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","DateTimeCompleted",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","JobResourceID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","JobResource",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","ProcessCount",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","PriorityFlag",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","JobReleaseFlag",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","ItemQty",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","Description",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","TagID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","QA",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCJobAllocation.SetColumnProperty("gvJobAllocation","WorkOrderID",v.Args.sProp,v.Args.sValue)



Program.Sub.Bulk_Format_JobAllocation.End

Program.Sub.LoadgvJobCurrent.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare
	
	gui.FormJobSheet.GSGCJobCurrent.AddGridviewFromDatatable("gvJobCurrent","dtJobCurrent")
	
'	gui.FormJobSheet.GSGCJobCurrent.SetGridViewProperty("gvJobCurrent","MultiSelect",True)
	gui.FormJobSheet.GSGCJobCurrent.SetGridViewProperty("gvJobCurrent","AllowSort",True)
	gui.FormJobSheet.GSGCJobCurrent.SetGridViewProperty("gvJobCurrent","AllowFilter",True)
	gui.FormJobSheet.GSGCJobCurrent.SetGridViewProperty("gvJobCurrent","OptionsDetailShowDetailTabs",False)
	gui.FormJobSheet.GSGCJobCurrent.SetGridViewProperty("gvJobCurrent","OptionsViewShowGroupPanel",False)
	gui.FormJobSheet.GSGCJobCurrent.SetGridViewProperty("gvJobCurrent","EnableAppearanceOddRow",True)
	gui.FormJobSheet.GSGCJobCurrent.SetGridviewProperty("gvJobCurrent",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.FormJobSheet.GSGCJobCurrent.SetGridviewProperty("gvJobCurrent","OptionsViewColumnAutoWidth",False)
	gui.FormJobSheet.GSGCJobCurrent.SetGridviewProperty("gvJobCurrent","AllowColumnResizing",True)	
	gui.FormJobSheet.GSGCJobCurrent.SetGridviewProperty("gvJobCurrent","ColumnPanelRowHeight","50")
	gui.FormJobSheet.GSGCJobCurrent.SetGridviewProperty("gvJobCurrent",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.FormJobSheet.GSGCJobCurrent.SetGridviewProperty("gvJobCurrent", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_JobCurrent,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobCurrent,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobCurrent,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobCurrent,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobCurrent,"sProp","MinWidth","sValue","40")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobCurrent,"sProp","AllowEdit","sValue","False")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobCurrent,"sProp","ReadOnly","sValue","True")
	
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","Select","ShowCaption",False)
	
	v.Local.sProp.Set("Caption")	
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","Select",v.Local.sProp,"Select")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","JobID",v.Local.sProp,"Job ID")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","LID",v.Local.sProp,"LID")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","LINE",v.Local.sProp,"Line# (WO)")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","QuantityHung",v.Local.sProp,"Qty Hung")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","PriorityFlag",v.Local.sProp,"Priority Flag")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","ItemQty",v.Local.sProp,"Item Qty (WO)")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","Description",v.Local.sProp,"Part Desc.")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","TagID",v.Local.sProp,"Tag ID")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","WorkOrderID",v.Local.sProp,"WO ID")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","NoQuenchFlag",v.Local.sProp,"No Quench")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","ServiceID",v.Local.sProp,"Service ID")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","ServiceDesc",v.Local.sProp,"Service Desc")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","UnitQty",v.Local.sProp,"Unit Qty (kg/part)")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","Note",v.Local.sProp,"Note")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","CustName",v.Local.sProp,"Cust. Name")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","CustKey",v.Local.sProp,"Cust Key")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","QA",v.Local.sProp,"QA Req.")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","HasQALog",v.Local.sProp,"QA Created")
	

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","Select",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","JobID",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","LID",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","LINE",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","QuantityHung",v.Local.sProp,v.Local.sValue3)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","PriorityFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","ItemQty",v.Local.sProp,v.Local.sValue3)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","Description",v.Local.sProp,v.Local.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","TagID",v.Local.sProp,v.Local.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","WorkOrderID",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","NoQuenchFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","ServiceID",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","ServiceDesc",v.Local.sProp,v.Local.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","UnitQty",v.Local.sProp,v.Local.sValue3)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","Note",v.Local.sProp,v.Local.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","CustName",v.Local.sProp,v.Local.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","CustKey",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","CheckedFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","QA",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","HasQALog",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","TotalCompleted",v.Local.sProp,v.Local.sValue3)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","Select",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","JobID",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","LID",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","LINE",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","QuantityHung",v.Local.sProp,v.Local.sValue3)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","PriorityFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","ItemQty",v.Local.sProp,v.Local.sValue3)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","Description",v.Local.sProp,v.Local.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","TagID",v.Local.sProp,v.Local.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","WorkOrderID",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","NoQuenchFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","ServiceID",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","ServiceDesc",v.Local.sProp,v.Local.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","UnitQty",v.Local.sProp,v.Local.sValue3)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","Note",v.Local.sProp,v.Local.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","CustName",v.Local.sProp,v.Local.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","CustKey",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","CheckedFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","QA",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","HasQALog",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","TotalCompleted",v.Local.sProp,v.Local.sValue3)
	
	v.Local.sProp.Set("Width")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","Select",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","JobID",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","LID",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","LINE",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","QuantityHung",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","PriorityFlag",v.Local.sProp,"50")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","ItemQty",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","Description",v.Local.sProp,"150")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","TagID",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","WorkOrderID",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","NoQuenchFlag",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","ServiceID",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","ServiceDesc",v.Local.sProp,"125")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","UnitQty",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","Note",v.Local.sProp,"150")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","CustName",v.Local.sProp,"125")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","CustKey",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","CheckedFlag",v.Local.sProp,"50")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","QA",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","HasQALog",v.Local.sProp,"90")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","TotalCompleted",v.Local.sProp,"75")
	
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent", "LID","Visible", False)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent", "CustKey","Visible", False)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent", "ServiceID","Visible", False)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent", "JobID","Visible", False)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent", "WO_ID","Visible", False)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent", "WO_ID","AllowShowHide", False)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent", "FirstDip","Visible", False)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent", "LastDip","Visible", False)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent", "TotalCompleted","Visible", False)
	
	'
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent", "Select","AllowEdit", True)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent", "Select","ReadOnly", False)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent", "QuantityHung","AllowEdit", True)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent", "QuantityHung","ReadOnly", False)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent", "WorkOrderID","AllowEdit", False)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent", "WorkOrderID","ReadOnly", False)

	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("lightblue")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","QuantityHung",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("PaleTurquoise")
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","QA",v.Local.sProp,v.Local.sValue)
	
	Gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","UnitQty","DisplayCustomNumeric","###,###,##0.00")
	
	Gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","WorkOrderID",V.Enum.ColumnPropertyNames!IsHyperlink,True)
	
	'Mark Prio WO lines Red
	gui.FormJobSheet.GSGCJobCurrent.AddStyleFormatCondition("gvJobCurrent","PriorityFlag","PriorityFlag","Expression","[PriorityFlag] = True")
	gui.FormJobSheet.GSGCJobCurrent.SetStyleFormatConditionProperty("gvJobCurrent","PriorityFlag","PriorityFlag","BackColor","OrangeRed")
	
	Gui.FormJobSheet.GSGCJobCurrent.BestFitColumns("gvJobCurrent")
	Gui.FormJobSheet.GSGCJobCurrent.MainView("gvJobCurrent")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvJobCurrent.End

Program.Sub.Bulk_Format_JobCurrent.Start
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","Select",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","JobID",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","LID",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","LINE",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","QuantityHung",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","WorkOrderID",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","NoQuenchFlag",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","ServiceID",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","ServiceDesc",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","UnitQty",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","PriorityFlag",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","Note",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","ItemQty",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","Description",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","TagID",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","CustName",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","CustKey",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","CheckedFlag",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","QA",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","HasQALog",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobCurrent.SetColumnProperty("gvJobCurrent","TotalCompleted",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_JobCurrent.End

Program.Sub.LoadgvJobAvailable.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare

	gui.FormJobSheet.GSGCJobAvailable.AddGridviewFromDatatable("gvJobAvailable","dtJobAvailable")
	
'	gui.FormJobSheet.GSGCJobAvailable.SetGridViewProperty("gvJobAvailable","MultiSelect",True)
	gui.FormJobSheet.GSGCJobAvailable.SetGridViewProperty("gvJobAvailable","AllowSort",True)
	gui.FormJobSheet.GSGCJobAvailable.SetGridViewProperty("gvJobAvailable","AllowFilter",True)
	gui.FormJobSheet.GSGCJobAvailable.SetGridViewProperty("gvJobAvailable","OptionsDetailShowDetailTabs",False)
	gui.FormJobSheet.GSGCJobAvailable.SetGridViewProperty("gvJobAvailable","OptionsViewShowGroupPanel",False)
	gui.FormJobSheet.GSGCJobAvailable.SetGridViewProperty("gvJobAvailable","EnableAppearanceOddRow",True)
	gui.FormJobSheet.GSGCJobAvailable.SetGridviewProperty("gvJobAvailable",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.FormJobSheet.GSGCJobAvailable.SetGridviewProperty("gvJobAvailable","OptionsViewColumnAutoWidth",False)
	gui.FormJobSheet.GSGCJobAvailable.SetGridviewProperty("gvJobAvailable","AllowColumnResizing",True)	
	gui.FormJobSheet.GSGCJobAvailable.SetGridviewProperty("gvJobAvailable","ColumnPanelRowHeight","50")
	gui.FormJobSheet.GSGCJobAvailable.SetGridviewProperty("gvJobAvailable",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.FormJobSheet.GSGCJobAvailable.SetGridviewProperty("gvJobAvailable", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_JobAvailable,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobAvailable,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobAvailable,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobAvailable,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobAvailable,"sProp","MinWidth","sValue","40")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobAvailable,"sProp","AllowEdit","sValue","False")
	f.Intrinsic.Control.CallSub(Bulk_Format_JobAvailable,"sProp","ReadOnly","sValue","True")
	
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Select","ShowCaption",False)
	
	v.Local.sProp.Set("Caption")	
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Select",v.Local.sProp,"Select")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Due",v.Local.sProp,"Due")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","LID",v.Local.sProp,"LID")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","LINE",v.Local.sProp,"Line# (WO)")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Hang",v.Local.sProp,"Hang")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","QuantityHung",v.Local.sProp,"Qty Hung")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","PriorityFlag",v.Local.sProp,"Priority Flag")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","ItemQty",v.Local.sProp,"Item Qty (WO)")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Description",v.Local.sProp,"Part Desc.")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","TagID",v.Local.sProp,"Tag ID")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","WorkOrderID",v.Local.sProp,"WO ID")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","NoQuenchFlag",v.Local.sProp,"No Quench")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","ServiceID",v.Local.sProp,"Service ID")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","ServiceDesc",v.Local.sProp,"Service Desc")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","UnitQty",v.Local.sProp,"Unit Qty (kg/part)")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Note",v.Local.sProp,"Note")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","CustName",v.Local.sProp,"Cust. Name")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","CustKey",v.Local.sProp,"Cust Key")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","QA",v.Local.sProp,"QA Req.")
	

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Select",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Due",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","LID",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","LINE",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Hang",v.Local.sProp,v.Local.sValue3)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","QuantityHung",v.Local.sProp,v.Local.sValue3)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","PriorityFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","ItemQty",v.Local.sProp,v.Local.sValue3)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Description",v.Local.sProp,v.Local.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","TagID",v.Local.sProp,v.Local.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","WorkOrderID",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","NoQuenchFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","ServiceID",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","ServiceDesc",v.Local.sProp,v.Local.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","UnitQty",v.Local.sProp,v.Local.sValue3)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Note",v.Local.sProp,v.Local.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","CustName",v.Local.sProp,v.Local.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","CustKey",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","QA",v.Local.sProp,v.Local.sValue2)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Select",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Due",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","LID",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","LINE",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Hang",v.Local.sProp,v.Local.sValue3)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","QuantityHung",v.Local.sProp,v.Local.sValue3)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","PriorityFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","ItemQty",v.Local.sProp,v.Local.sValue3)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Description",v.Local.sProp,v.Local.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","TagID",v.Local.sProp,v.Local.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","WorkOrderID",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","NoQuenchFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","ServiceID",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","ServiceDesc",v.Local.sProp,v.Local.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","UnitQty",v.Local.sProp,v.Local.sValue3)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Note",v.Local.sProp,v.Local.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","CustName",v.Local.sProp,v.Local.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","CustKey",v.Local.sProp,v.Local.sValue2)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","QA",v.Local.sProp,v.Local.sValue2)
	
	v.Local.sProp.Set("Width")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Select",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Due",v.Local.sProp,"50")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","LID",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","LINE",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Hang",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","QuantityHung",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","PriorityFlag",v.Local.sProp,"50")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","ItemQty",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Description",v.Local.sProp,"150")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","TagID",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","WorkOrderID",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","NoQuenchFlag",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","ServiceID",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","ServiceDesc",v.Local.sProp,"125")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","UnitQty",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Note",v.Local.sProp,"150")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","CustName",v.Local.sProp,"125")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","CustKey",v.Local.sProp,"75")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","QA",v.Local.sProp,"75")
	
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable", "LID","Visible", False)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable", "CustKey","Visible", False)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable", "ServiceID","Visible", False)
	
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable", "Select","AllowEdit", True)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable", "Select","ReadOnly", False)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable", "Hang","AllowEdit", True)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable", "Hang","ReadOnly", False)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable", "WorkOrderID","AllowEdit", False)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable", "WorkOrderID","ReadOnly", False)
	
	
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("lightblue")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Hang",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("PaleTurquoise")
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","QA",v.Local.sProp,v.Local.sValue)
	'gui.FormJobSheet.GSGCJobAvailable.AddStyleFormatCondition("gvJobAvailable","QA","QA","Expression","[QA] = True")
	
	
	Gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","UnitQty","DisplayCustomNumeric","###,###,##0.00")
	
	Gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","WorkOrderID",V.Enum.ColumnPropertyNames!IsHyperlink,True)
	
	Gui.FormJobSheet.GSGCJobAvailable.BestFitColumns("gvJobAvailable")
	Gui.FormJobSheet.GSGCJobAvailable.MainView("gvJobAvailable")

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvJobAvailable.End

Program.Sub.Bulk_Format_JobAvailable.Start
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Select",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Due",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","LID",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","LINE",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Hang",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","QuantityHung",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","WorkOrderID",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","NoQuenchFlag",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","ServiceID",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","ServiceDesc",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","UnitQty",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","PriorityFlag",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Note",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","ItemQty",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","Description",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","TagID",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","CustName",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","CustKey",v.Args.sProp,v.Args.sValue)
	gui.FormJobSheet.GSGCJobAvailable.SetColumnProperty("gvJobAvailable","QA",v.Args.sProp,v.Args.sValue)

Program.Sub.Bulk_Format_JobAvailable.End

Program.Sub.LoadgvLabel.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare

	gui.FormLabel.GSGCLabel.AddGridviewFromDatatable("gvLabel","dtLabel")
	
	gui.FormLabel.GSGCLabel.SetGridViewProperty("gvLabel","MultiSelect",False)
	gui.FormLabel.GSGCLabel.SetGridViewProperty("gvLabel","AllowSort",False)
	gui.FormLabel.GSGCLabel.SetGridViewProperty("gvLabel","AllowFilter",False)
	gui.FormLabel.GSGCLabel.SetGridViewProperty("gvLabel","OptionsDetailShowDetailTabs",False)
	gui.FormLabel.GSGCLabel.SetGridViewProperty("gvLabel","OptionsViewShowGroupPanel",False)
	gui.FormLabel.GSGCLabel.SetGridViewProperty("gvLabel","EnableAppearanceOddRow",True)
	gui.FormLabel.GSGCLabel.SetGridviewProperty("gvLabel",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.FormLabel.GSGCLabel.SetGridviewProperty("gvLabel","OptionsViewColumnAutoWidth",False)
	gui.FormLabel.GSGCLabel.SetGridviewProperty("gvLabel","AllowColumnResizing",True)	
	gui.FormLabel.GSGCLabel.SetGridviewProperty("gvLabel","ColumnPanelRowHeight","50")
	gui.FormLabel.GSGCLabel.SetGridviewProperty("gvLabel",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.FormLabel.GSGCLabel.SetGridviewProperty("gvLabel", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_gvLabel,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvLabel,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvLabel,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvLabel,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvLabel,"sProp","MinWidth","sValue","40")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvLabel,"sProp","AllowEdit","sValue","False")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvLabel,"sProp","ReadOnly","sValue","True")
	
	
	
	v.Local.sProp.Set("Caption")
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","LID",v.Local.sProp,"LID")
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","WO_ID",v.Local.sProp,"Work Order ID")
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","LINE",v.Local.sProp,"Line#")
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","PriorityFlag",v.Local.sProp,"Priority Flag")
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","Description",v.Local.sProp,"Description (Part)")
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","ItemQty",v.Local.sProp,"Item Qty (WO)")
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","PACK_QTY",v.Local.sProp,"Pack Qty (Rack)")
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","LABEL_COPY",v.Local.sProp,"Label Qty")
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","PrintButton",v.Local.sProp,"")

	

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","LID",v.Local.sProp,v.Local.sValue2)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","WO_ID",v.Local.sProp,v.Local.sValue2)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","LINE",v.Local.sProp,v.Local.sValue2)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","PriorityFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","Description",v.Local.sProp,v.Local.sValue)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","ItemQty",v.Local.sProp,v.Local.sValue3)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","PACK_QTY",v.Local.sProp,v.Local.sValue2)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","LABEL_COPY",v.Local.sProp,v.Local.sValue2)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","PrintButton",v.Local.sProp,v.Local.sValue2)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","LID",v.Local.sProp,v.Local.sValue2)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","WO_ID",v.Local.sProp,v.Local.sValue2)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","LINE",v.Local.sProp,v.Local.sValue2)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","PriorityFlag",v.Local.sProp,v.Local.sValue2)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","Description",v.Local.sProp,v.Local.sValue)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","ItemQty",v.Local.sProp,v.Local.sValue3)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","PACK_QTY",v.Local.sProp,v.Local.sValue2)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","LABEL_COPY",v.Local.sProp,v.Local.sValue2)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","PrintButton",v.Local.sProp,v.Local.sValue2)

	
	v.Local.sProp.Set("Width")
	
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","LID",v.Local.sProp,"50")
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","WO_ID",v.Local.sProp,"75")
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","LINE",v.Local.sProp,"50")
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","PriorityFlag",v.Local.sProp,"75")
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","Description",v.Local.sProp,"150")
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","ItemQty",v.Local.sProp,"75")
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","PACK_QTY",v.Local.sProp,"80")
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","LABEL_COPY",v.Local.sProp,"75")
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","PrintButton",v.Local.sProp,"75")
	
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","PACK_QTY","AllowEdit",True)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","PACK_QTY","Readonly",False)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","LABEL_COPY","AllowEdit",True)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","LABEL_COPY","Readonly",False)
	
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","PrintButton","AllowEdit",False)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","PrintButton","Readonly",False)
	
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel", "LID","Visible", False)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel", "CustomerPO","Visible", False)
	'gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel", "WO_ID","Visible", False)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel", "CustName","Visible", False)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel", "Outbound","Visible", False)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel", "QualityFlag","Visible", False)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel", "TagID","Visible", False)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel", "Possession","Visible", False)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel", "PRI","Visible", False)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel", "Quality","Visible", False)


	Gui.FormLabel.GSGCLabel.ColumnEdit("gvLabel","PrintButton","EditorButton","Print")
	
	'Color
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("LightYellow")
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","PACK_QTY",v.Local.sProp,v.Local.sValue)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","LABEL_COPY",v.Local.sProp,v.Local.sValue)
	

	
	Gui.FormLabel.GSGCLabel.BestFitColumns("gvLabel")
	Gui.FormLabel.GSGCLabel.MainView("gvLabel")

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvLabel.End

Program.Sub.Bulk_Format_gvLabel.Start
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","LID",v.Args.sProp,v.Args.sValue)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","WO_ID",v.Args.sProp,v.Args.sValue)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","LINE",v.Args.sProp,v.Args.sValue)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","PriorityFlag",v.Args.sProp,v.Args.sValue)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","ItemQty",v.Args.sProp,v.Args.sValue)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","Description",v.Args.sProp,v.Args.sValue)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","PACK_QTY",v.Args.sProp,v.Args.sValue)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","LABEL_COPY",v.Args.sProp,v.Args.sValue)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","PrintButton",v.Args.sProp,v.Args.sValue)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","CustName",v.Args.sProp,v.Args.sValue)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","Outbound",v.Args.sProp,v.Args.sValue)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","QualityFlag",v.Args.sProp,v.Args.sValue)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","TagID",v.Args.sProp,v.Args.sValue)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","Possession",v.Args.sProp,v.Args.sValue)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","PRI",v.Args.sProp,v.Args.sValue)
	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","Quality",v.Args.sProp,v.Args.sValue)


Program.Sub.Bulk_Format_gvLabel.End

Program.Sub.LoadgvQALog.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare
	
	gui.Form.GSGCQALog.AddGridviewFromDatatable("gvQALog","dtQALog")
	
	gui.Form.GSGCQALog.SetGridViewProperty("gvQALog","AllowSort",True)
	gui.Form.GSGCQALog.SetGridViewProperty("gvQALog","AllowFilter",True)
	gui.Form.GSGCQALog.SetGridViewProperty("gvQALog","OptionsDetailShowDetailTabs",False)
	gui.Form.GSGCQALog.SetGridViewProperty("gvQALog","OptionsViewShowGroupPanel",False)
	gui.Form.GSGCQALog.SetGridViewProperty("gvQALog","EnableAppearanceOddRow",True)
	gui.Form.GSGCQALog.SetGridviewProperty("gvQALog",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.GSGCQALog.SetGridviewProperty("gvQALog","OptionsViewColumnAutoWidth",False)
	gui.Form.GSGCQALog.SetGridviewProperty("gvQALog","AllowColumnResizing",True)	
	gui.Form.GSGCQALog.SetGridviewProperty("gvQALog","ColumnPanelRowHeight","50")
	gui.Form.GSGCQALog.SetGridviewProperty("gvQALog",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.Form.GSGCQALog.SetGridviewProperty("gvQALog", "ShowConditionalFormattingItem", True)
	gui.Form.GSGCQALog.Setgridviewproperty("gvQALog","multiselect",true)
	gui.Form.GSGCQALog.Setgridviewproperty("gvQALog","multiselectmode",2)
	gui.Form.GSGCQALog.Setgridviewproperty("gvQALog","CheckBoxSelectorField","Select")
	
	f.Intrinsic.Control.CallSub(Bulk_Format_QALog,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_QALog,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_QALog,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_QALog,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_QALog,"sProp","MinWidth","sValue","40")
	f.Intrinsic.Control.CallSub(Bulk_Format_QALog,"sProp","AllowEdit","sValue","False")
	f.Intrinsic.Control.CallSub(Bulk_Format_QALog,"sProp","ReadOnly","sValue","True")
	
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","Select","ShowCaption",False)
	
	v.Local.sProp.Set("Caption")	
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","Select",v.Local.sProp,"Select")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","QALogID",v.Local.sProp,"QALog ID")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","JobID",v.Local.sProp,"Job ID")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","LID",v.Local.sProp,"LID")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","LINE",v.Local.sProp,"Line# (WO)")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","MeasurementDeviceID",v.Local.sProp,"Measurement Device ID")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","MeasurementDevice",v.Local.sProp,"Measurement Device")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","EmployeeID",v.Local.sProp,"Employee ID")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","Employee",v.Local.sProp,"Logged By Employee")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","PriorityFlag",v.Local.sProp,"Priority Flag")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","Description",v.Local.sProp,"Part Desc.")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","TagID",v.Local.sProp,"Tag ID")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","WorkOrderID",v.Local.sProp,"WO ID")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","NoQuenchFlag",v.Local.sProp,"No Quench")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","ServiceID",v.Local.sProp,"Service ID")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","ServiceDesc",v.Local.sProp,"Service Desc")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","CustName",v.Local.sProp,"Cust. Name")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","CustKey",v.Local.sProp,"Cust Key")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","DateTimeLogged",v.Local.sProp,"Logged Date")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","POS1",v.Local.sProp,"Local Thickness 1")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","POS2",v.Local.sProp,"Local Thickness 2")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","POS3",v.Local.sProp,"Local Thickness 3")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","TotalAVG",v.Local.sProp,"Avg. Thickness")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","STDDev",v.Local.sProp,"Standard Deviation")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","SysUserLastAccess",v.Local.sProp,"SysUser Last Access")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","SysUserLastAccessDateTime",v.Local.sProp,"SysUser Last Access DateTime")
	

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")		
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","Select",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","QALogID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","JobID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","LID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","LINE",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","WorkOrderID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","NoQuenchFlag",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","ServiceID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","ServiceDesc",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","MeasurementDeviceID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","MeasurementDevice",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","PriorityFlag",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","EmployeeID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","Employee",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","Description",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","TagID",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","CustName",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","CustKey",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","DateTimeLogged",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","POS1",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","POS2",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","POS3",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","TotalAVG",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","STDDev",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","SysUserLastAccess",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","Select",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","QALogID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","JobID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","LID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","LINE",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","WorkOrderID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","NoQuenchFlag",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","ServiceID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","ServiceDesc",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","MeasurementDeviceID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","MeasurementDevice",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","PriorityFlag",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","EmployeeID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","Employee",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","Description",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","TagID",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","CustName",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","CustKey",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","DateTimeLogged",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","POS1",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","POS2",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","POS3",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","TotalAVG",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","STDDev",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","SysUserLastAccess",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)
	
	v.Local.sProp.Set("Width")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","Select",v.Local.sProp,"75")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","QALogID",v.Local.sProp,"75")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","JobID",v.Local.sProp,"75")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","LID",v.Local.sProp,"75")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","LINE",v.Local.sProp,"75")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","WorkOrderID",v.Local.sProp,"75")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","NoQuenchFlag",v.Local.sProp,"75")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","ServiceID",v.Local.sProp,"75")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","ServiceDesc",v.Local.sProp,"125")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","MeasurementDeviceID",v.Local.sProp,"75")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","MeasurementDevice",v.Local.sProp,"150")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","PriorityFlag",v.Local.sProp,"50")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","EmployeeID",v.Local.sProp,"75")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","Employee",v.Local.sProp,"125")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","Description",v.Local.sProp,"150")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","TagID",v.Local.sProp,"75")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","CustName",v.Local.sProp,"125")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","CustKey",v.Local.sProp,"75")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","DateTimeLogged",v.Local.sProp,"150")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","POS1",v.Local.sProp,"75")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","POS2",v.Local.sProp,"75")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","POS3",v.Local.sProp,"75")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","TotalAVG",v.Local.sProp,"75")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","STDDev",v.Local.sProp,"75")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","SysUserLastAccess",v.Local.sProp,"100")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","SysUserLastAccessDateTime",v.Local.sProp,"150")
	
	
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "LID","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "MeasurementDeviceID","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "ServiceID","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "EmployeeID","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Select","Visible", False)
	
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "STDDev","Visible", False)
	'gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "WO_ID","AllowShowHide", False)
	
	
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Select","AllowEdit", True)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Select","ReadOnly", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "QALogID","AllowEdit", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "QALogID","ReadOnly", False)

	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("lightblue")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","TotalAVG",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","STDDev",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("PaleTurquoise")
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","POS1",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","POS2",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","POS3",v.Local.sProp,v.Local.sValue)
	
	Gui.Form.GSGCQALog.SetColumnProperty("gvQALog","TotalAVG","DisplayCustomNumeric","###,###,##0")
	Gui.Form.GSGCQALog.SetColumnProperty("gvQALog","POS1","DisplayCustomNumeric","###,###,##0")
	Gui.Form.GSGCQALog.SetColumnProperty("gvQALog","POS2","DisplayCustomNumeric","###,###,##0")
	Gui.Form.GSGCQALog.SetColumnProperty("gvQALog","POS3","DisplayCustomNumeric","###,###,##0")
	Gui.Form.GSGCQALog.SetColumnProperty("gvQALog","STDDev","DisplayCustomNumeric","###,###,##0")
	
	Gui.Form.GSGCQALog.SetColumnProperty("gvQALog","QALogID",V.Enum.ColumnPropertyNames!IsHyperlink,True)
	
	
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value1","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value2","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value3","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value4","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value5","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value6","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value7","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value8","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value9","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value10","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value11","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value12","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value13","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value14","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value15","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value16","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value17","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value18","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value19","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value20","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value21","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value22","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value23","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value24","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value25","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value26","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value27","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value28","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value29","Visible", False)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog", "Value30","Visible", False)
	
	Gui.Form.GSGCQALog.BestFitColumns("gvQALog")
	Gui.Form.GSGCQALog.MainView("gvQALog")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvQALog.End

Program.Sub.Bulk_Format_QALog.Start
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","Select",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","QALogID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","JobID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","LID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","LINE",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","WorkOrderID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","NoQuenchFlag",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","ServiceID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","ServiceDesc",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","MeasurementDeviceID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","MeasurementDevice",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","PriorityFlag",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","EmployeeID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","Employee",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","Description",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","TagID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","CustName",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","CustKey",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","DateTimeLogged",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","POS1",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","POS2",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","POS3",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","TotalAVG",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","STDDev",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","SysUserLastAccess",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCQALog.SetColumnProperty("gvQALog","SysUserLastAccessDateTime",v.Args.sProp,v.Args.sValue)
	

Program.Sub.Bulk_Format_QALog.End

Program.Sub.LoadgvQALogDetails.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare
	
	gui.FormWorkOrderDetails.GSGCQALogDetails.AddGridviewFromDatatable("gvQALogDetails","dtQALogDetails")
	
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetGridViewProperty("gvQALogDetails","AllowSort",True)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetGridViewProperty("gvQALogDetails","AllowFilter",True)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetGridViewProperty("gvQALogDetails","OptionsDetailShowDetailTabs",False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetGridViewProperty("gvQALogDetails","OptionsViewShowGroupPanel",False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetGridViewProperty("gvQALogDetails","EnableAppearanceOddRow",True)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetGridviewProperty("gvQALogDetails",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetGridviewProperty("gvQALogDetails","OptionsViewColumnAutoWidth",False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetGridviewProperty("gvQALogDetails","AllowColumnResizing",True)	
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetGridviewProperty("gvQALogDetails","ColumnPanelRowHeight","50")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetGridviewProperty("gvQALogDetails",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetGridviewProperty("gvQALogDetails", "ShowConditionalFormattingItem", True)
	gui.FormWorkOrderDetails.GSGCQALogDetails.Setgridviewproperty("gvQALogDetails","multiselect",true)
	gui.FormWorkOrderDetails.GSGCQALogDetails.Setgridviewproperty("gvQALogDetails","multiselectmode",2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.Setgridviewproperty("gvQALogDetails","CheckBoxSelectorField","Select")
	
	f.Intrinsic.Control.CallSub(Bulk_Format_QALogDetails,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_QALogDetails,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_QALogDetails,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_QALogDetails,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_QALogDetails,"sProp","MinWidth","sValue","40")
	f.Intrinsic.Control.CallSub(Bulk_Format_QALogDetails,"sProp","AllowEdit","sValue","False")
	f.Intrinsic.Control.CallSub(Bulk_Format_QALogDetails,"sProp","ReadOnly","sValue","True")
	
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","Select","ShowCaption",False)
	
	v.Local.sProp.Set("Caption")	
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","Select",v.Local.sProp,"Select")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","QALogID",v.Local.sProp,"QA Log ID")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","JobID",v.Local.sProp,"Job ID")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","LID",v.Local.sProp,"LID")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","LINE",v.Local.sProp,"Line# (WO)")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","MeasurementDeviceID",v.Local.sProp,"Measurement Device ID")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","MeasurementDevice",v.Local.sProp,"Measurement Device")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","EmployeeID",v.Local.sProp,"Employee ID")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","Employee",v.Local.sProp,"Logged By Employee")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","Description",v.Local.sProp,"Part Desc.")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","TagID",v.Local.sProp,"Tag ID")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","WorkOrderID",v.Local.sProp,"WO ID")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","ServiceID",v.Local.sProp,"Service ID")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","ServiceDesc",v.Local.sProp,"Service Desc")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","CustName",v.Local.sProp,"Cust. Name")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","CustKey",v.Local.sProp,"Cust Key")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","DateTimeLogged",v.Local.sProp,"Logged Date")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","POS1",v.Local.sProp,"Local Thickness 1")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","POS2",v.Local.sProp,"Local Thickness 2")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","POS3",v.Local.sProp,"Local Thickness 3")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","TotalAVG",v.Local.sProp,"Avg. Thickness")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","STDDev",v.Local.sProp,"Standard Deviation")
	

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")		
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","Select",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","QALogID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","JobID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","LID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","LINE",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","WorkOrderID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","ServiceID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","ServiceDesc",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","MeasurementDeviceID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","MeasurementDevice",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","EmployeeID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","Employee",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","Description",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","TagID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","CustName",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","CustKey",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","DateTimeLogged",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","POS1",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","POS2",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","POS3",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","TotalAVG",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","STDDev",v.Local.sProp,v.Local.sValue3)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","Select",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","QALogID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","JobID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","LID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","LINE",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","WorkOrderID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","ServiceID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","ServiceDesc",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","MeasurementDeviceID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","MeasurementDevice",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","EmployeeID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","Employee",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","Description",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","TagID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","CustName",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","CustKey",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","DateTimeLogged",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","POS1",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","POS2",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","POS3",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","TotalAVG",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","STDDev",v.Local.sProp,v.Local.sValue3)
	
	v.Local.sProp.Set("Width")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","Select",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","QALogID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","JobID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","LID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","LINE",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","WorkOrderID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","ServiceID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","ServiceDesc",v.Local.sProp,"125")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","MeasurementDeviceID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","MeasurementDevice",v.Local.sProp,"150")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","EmployeeID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","Employee",v.Local.sProp,"125")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","Description",v.Local.sProp,"150")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","TagID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","CustName",v.Local.sProp,"125")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","CustKey",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","DateTimeLogged",v.Local.sProp,"150")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","POS1",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","POS2",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","POS3",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","TotalAVG",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","STDDev",v.Local.sProp,"75")
	
	
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "LID","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "MeasurementDeviceID","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "ServiceID","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "EmployeeID","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Select","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "WorkOrderID","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "ServiceDesc","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Description","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "TagID","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "CustName","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "CustKey","Visible", False)
	
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "STDDev","Visible", False)
	'gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "WO_ID","AllowShowHide", False)
	
	
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Select","AllowEdit", True)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Select","ReadOnly", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "QALogID","AllowEdit", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "QALogID","ReadOnly", False)

	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("lightblue")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","TotalAVG",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","STDDev",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("PaleTurquoise")
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","POS1",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","POS2",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","POS3",v.Local.sProp,v.Local.sValue)
	
	Gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","TotalAVG","DisplayCustomNumeric","###,###,##0")
	Gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","POS1","DisplayCustomNumeric","###,###,##0")
	Gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","POS2","DisplayCustomNumeric","###,###,##0")
	Gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","POS3","DisplayCustomNumeric","###,###,##0")
	Gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","STDDev","DisplayCustomNumeric","###,###,##0")
	
	Gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","QALogID",V.Enum.ColumnPropertyNames!IsHyperlink,True)
	
	
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value1","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value2","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value3","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value4","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value5","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value6","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value7","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value8","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value9","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value10","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value11","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value12","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value13","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value14","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value15","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value16","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value17","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value18","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value19","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value20","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value21","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value22","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value23","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value24","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value25","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value26","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value27","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value28","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value29","Visible", False)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails", "Value30","Visible", False)
	
	Gui.FormWorkOrderDetails.GSGCQALogDetails.BestFitColumns("gvQALogDetails")
	Gui.FormWorkOrderDetails.GSGCQALogDetails.MainView("gvQALogDetails")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvQALogDetails.End

Program.Sub.Bulk_Format_QALogDetails.Start
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","Select",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","QALogID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","JobID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","LID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","LINE",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","WorkOrderID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","ServiceID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","ServiceDesc",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","MeasurementDeviceID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","MeasurementDevice",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","EmployeeID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","Employee",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","Description",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","TagID",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","CustName",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","CustKey",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","DateTimeLogged",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","POS1",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","POS2",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","POS3",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","TotalAVG",v.Args.sProp,v.Args.sValue)
	gui.FormWorkOrderDetails.GSGCQALogDetails.SetColumnProperty("gvQALogDetails","STDDev",v.Args.sProp,v.Args.sValue)
	

Program.Sub.Bulk_Format_QALogDetails.End

Program.Sub.LoadgvInvoicing.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare
	
	gui.Form.GSGCInvoicing.AddGridviewFromDatatable("gvInvoicing","dtInvoicing")
	
	gui.Form.GSGCInvoicing.SetGridViewProperty("gvInvoicing","AllowSort",True)
	gui.Form.GSGCInvoicing.SetGridViewProperty("gvInvoicing","AllowFilter",True)
	gui.Form.GSGCInvoicing.SetGridViewProperty("gvInvoicing","OptionsDetailShowDetailTabs",True)
	gui.Form.GSGCInvoicing.SetGridViewProperty("gvInvoicing","OptionsViewShowGroupPanel",True)
	gui.Form.GSGCInvoicing.SetGridViewProperty("gvInvoicing","EnableAppearanceOddRow",True)
	gui.Form.GSGCInvoicing.SetGridviewProperty("gvInvoicing",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.GSGCInvoicing.SetGridviewProperty("gvInvoicing","OptionsViewColumnAutoWidth",False)
	gui.Form.GSGCInvoicing.SetGridviewProperty("gvInvoicing","AllowColumnResizing",True)	
	gui.Form.GSGCInvoicing.SetGridviewProperty("gvInvoicing","ColumnPanelRowHeight","50")
	gui.Form.GSGCInvoicing.SetGridviewProperty("gvInvoicing",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.Form.GSGCInvoicing.SetGridviewProperty("gvInvoicing", "ShowConditionalFormattingItem", True)
	gui.Form.GSGCInvoicing.Setgridviewproperty("gvInvoicing","multiselect",true)
'	gui.Form.GSGCInvoicing.Setgridviewproperty("gvInvoicing","multiselectmode",2)
'	gui.Form.GSGCInvoicing.Setgridviewproperty("gvInvoicing","CheckBoxSelectorField","Select")

	
	f.Intrinsic.Control.CallSub(Bulk_Format_Invoicing,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Invoicing,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Invoicing,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_Invoicing,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_Invoicing,"sProp","MinWidth","sValue","40")
	f.Intrinsic.Control.CallSub(Bulk_Format_Invoicing,"sProp","AllowEdit","sValue","False")
	f.Intrinsic.Control.CallSub(Bulk_Format_Invoicing,"sProp","ReadOnly","sValue","True")
	
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","Select","ShowCaption",False)
	
	'Plus (for child Table)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","Plus","ShowCaption",False)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","Plus","MinWidth","20")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","Plus","Width","20")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","Plus","AllowEdit",False)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","Plus","ReadOnly",True)
	
	
	v.Local.sProp.Set("Caption")		
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","Select",v.Local.sProp,"Select")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CUSTOMER",v.Local.sProp,"Customer")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","SHIP_SEQ",v.Local.sProp,"Ship Seq")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","ShipKey",v.Local.sProp,"Cust Key")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CUST_SHIP_TO",v.Local.sProp,"Cust. Ship To")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CUST_BILL_TO",v.Local.sProp,"Cust. Bill To")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WorkOrderID",v.Local.sProp,"Work Order ID")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","PriorityFlag",v.Local.sProp,"Priority Flag")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","Description",v.Local.sProp,"Description")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","QA",v.Local.sProp,"QA")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WOStatusID",v.Local.sProp,"WO Status ID")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","Status",v.Local.sProp," WO Status")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CUSTOMER_REFERENCE",v.Local.sProp,"Customer Reference")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","DELIVERY_DATE",v.Local.sProp,"Delivery Date")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","RECEIPTED",v.Local.sProp,"Receipted Date")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","PAYMENT_METHOD_ID",v.Local.sProp,"Payment Method ID")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","VALUE",v.Local.sProp,"Value ($)")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","DATE_INVOICED",v.Local.sProp,"Date Invoiced")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","AdminNote",v.Local.sProp,"Admin Note")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CreditHold",v.Local.sProp,"Credit Hold")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","MinChargeExempt",v.Local.sProp,"Min Charge Exempt")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WorkOrderMinCharge",v.Local.sProp,"WO Min Charge")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","PriceGroupID",v.Local.sProp,"Price Group ID")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","TotalPriceWO",v.Local.sProp,"Total Price ($)")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WOMinChargeRemainder",v.Local.sProp,"WO Min Charge Difference ($)")

''WOMinChargeRemainder
'TotalPriceWO

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")		
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","Select",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CUSTOMER",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","SHIP_SEQ",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","ShipKey",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CUST_SHIP_TO",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CUST_BILL_TO",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WorkOrderID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","PriorityFlag",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","Description",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","QA",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WOStatusID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","Status",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CUSTOMER_REFERENCE",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","DELIVERY_DATE",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","RECEIPTED",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","PAYMENT_METHOD_ID",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","VALUE",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","DATE_INVOICED",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","AdminNote",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CreditHold",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","MinChargeExempt",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WorkOrderMinCharge",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","PriceGroupID",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","TotalPriceWO",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WOMinChargeRemainder",v.Local.sProp,v.Local.sValue3)

	v.Local.sProp.Set("CellHAlignment")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","Select",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CUSTOMER",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","SHIP_SEQ",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","ShipKey",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CUST_SHIP_TO",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CUST_BILL_TO",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WorkOrderID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","PriorityFlag",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","Description",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","QA",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WOStatusID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","Status",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CUSTOMER_REFERENCE",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","DELIVERY_DATE",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","RECEIPTED",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","PAYMENT_METHOD_ID",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","VALUE",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","DATE_INVOICED",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","AdminNote",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CreditHold",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","MinChargeExempt",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WorkOrderMinCharge",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","PriceGroupID",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","TotalPriceWO",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WOMinChargeRemainder",v.Local.sProp,v.Local.sValue3)
	
	v.Local.sProp.Set("Width")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","Select",v.Local.sProp,"75")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CUSTOMER",v.Local.sProp,"75")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","SHIP_SEQ",v.Local.sProp,"75")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","ShipKey",v.Local.sProp,"85")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CUST_SHIP_TO",v.Local.sProp,"150")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CUST_BILL_TO",v.Local.sProp,"150")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WorkOrderID",v.Local.sProp,"75")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","PriorityFlag",v.Local.sProp,"75")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","Description",v.Local.sProp,"75")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","QA",v.Local.sProp,"75")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WOStatusID",v.Local.sProp,"75")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","Status",v.Local.sProp,"135")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CUSTOMER_REFERENCE",v.Local.sProp,"140")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","DELIVERY_DATE",v.Local.sProp,"80")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","RECEIPTED",v.Local.sProp,"80")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","PAYMENT_METHOD_ID",v.Local.sProp,"75")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","VALUE",v.Local.sProp,"100")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","DATE_INVOICED",v.Local.sProp,"80")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","AdminNote",v.Local.sProp,"175")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CreditHold",v.Local.sProp,"75")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WorkOrderMinCharge",v.Local.sProp,"75")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","MinChargeExempt",v.Local.sProp,"75")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","PriceGroupID",v.Local.sProp,"75")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","TotalPriceWO",v.Local.sProp,"100")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WOMinChargeRemainder",v.Local.sProp,"100")

	
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing", "WOStatusID","Visible", False)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing", "PAYMENT_METHOD_ID","Visible", False)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing", "VALUE","Visible", False)


'	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing", "STDDev","Visible", False)
'	'gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing", "WO_ID","AllowShowHide", False)
	
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing", "Select","AllowEdit", True)
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing", "Select","ReadOnly", False)
	
	Gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WorkOrderID",V.Enum.ColumnPropertyNames!IsHyperlink,True)



	Gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","VALUE","DisplayCustomNumeric","$###,###,###,##0.000")
	Gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","TotalPriceWO","DisplayCustomNumeric","$###,###,###,##0.000")
	Gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WorkOrderMinCharge","DisplayCustomNumeric","$###,###,###,##0.00##")
	Gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WOMinChargeRemainder","DisplayCustomNumeric","$###,###,###,##0.00##")

	gui.Form.GSGCInvoicing.AddStyleFormatCondition("gvInvoicing","CreditHold","CreditHold","Expression","[CreditHold] = True")
	gui.Form.GSGCInvoicing.SetStyleFormatConditionProperty("gvInvoicing","CreditHold","CreditHold","BackColor","Red")
	
	gui.Form.GSGCInvoicing.AddStyleFormatCondition("gvInvoicing","PriorityFlag","PriorityFlag","Expression","[PriorityFlag] = True")
	gui.Form.GSGCInvoicing.SetStyleFormatConditionProperty("gvInvoicing","PriorityFlag","PriorityFlag","BackColor","OrangeRed")
	
	gui.Form.GSGCInvoicing.AddStyleFormatCondition("gvInvoicing","MinChargeExempt","MinChargeExempt","Expression","[MinChargeExempt] = True")
	gui.Form.GSGCInvoicing.SetStyleFormatConditionProperty("gvInvoicing","MinChargeExempt","MinChargeExempt","BackColor","Red")
	
	gui.Form.GSGCInvoicing.AddStyleFormatCondition("gvInvoicing","WorkOrderMinCharge","WorkOrderMinCharge","Expression","[WorkOrderMinCharge] > [VALUE]")
	gui.Form.GSGCInvoicing.SetStyleFormatConditionProperty("gvInvoicing","WorkOrderMinCharge","WorkOrderMinCharge","BackColor","Red")
	
	Gui.Form.GSGCInvoicing.AddSummaryItem("gvInvoicing","TotalPriceWO","Total Price","Sum","Total:","","$###,###,###,##0.000")
	
'	Gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WorkOrderID",V.Enum.ColumnPropertyNames!IsHyperlink,True)
	
	Gui.Form.GSGCInvoicing.BestFitColumns("gvInvoicing")
	Gui.Form.GSGCInvoicing.MainView("gvInvoicing")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvInvoicing.End

Program.Sub.Bulk_Format_Invoicing.Start
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","Select",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CUSTOMER",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","SHIP_SEQ",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","ShipKey",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CUST_SHIP_TO",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CUST_BILL_TO",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WorkOrderID",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","PriorityFlag",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","Description",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","QA",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WOStatusID",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","Status",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CUSTOMER_REFERENCE",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","DELIVERY_DATE",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","RECEIPTED",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","PAYMENT_METHOD_ID",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","VALUE",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","DATE_INVOICED",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","AdminNote",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","CreditHold",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WorkOrderMinCharge",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","MinChargeExempt",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","PriceGroupID",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","TotalPriceWO",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoicing","WOMinChargeRemainder",v.Args.sProp,v.Args.sValue)


Program.Sub.Bulk_Format_Invoicing.End

Program.Sub.LoadChildgvInvoiceLines.Start
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare

	Gui.Form.GSGCInvoicing.SetGridviewProperty("gvInvoiceLines","multiSelect",True)
	Gui.Form.GSGCInvoicing.SetGridviewProperty("gvInvoiceLines","OptionBehaviorEditable",False)
	Gui.Form.GSGCInvoicing.SetGridviewProperty("gvInvoiceLines","ReadOnly",True)
	Gui.Form.GSGCInvoicing.SetGridviewProperty("gvInvoiceLines","AllowSort",True)
	Gui.Form.GSGCInvoicing.SetGridviewProperty("gvInvoiceLines","AllowFilter",True)
	Gui.Form.GSGCInvoicing.SetGridviewProperty("gvInvoiceLines","OptionsDetailShowDetailTabs",False)
	Gui.Form.GSGCInvoicing.SetGridviewProperty("gvInvoiceLines","OptionsViewShowGroupPanel",False)
	'Gui.Form.GSGCInvoicing.SetGridviewProperty("gvInvoiceLines","AllowColumnMoving",False)
	Gui.Form.GSGCInvoicing.SetGridviewProperty("gvInvoiceLines",V.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	Gui.Form.GSGCInvoicing.SetGridviewProperty("gvInvoiceLines","OptionsViewColumnAutoWidth",False)
	gui.Form.GSGCInvoicing.SetGridviewProperty("gvInvoiceLines", "ShowConditionalFormattingItem", True)
	
	Gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","WO_ID","Visible",False)
	Gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","LID","Visible",False)
	Gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","WOStatusID","Visible",False)
	Gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","ServiceID","Visible",False)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_InvoiceLines,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_InvoiceLines,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_InvoiceLines,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_InvoiceLines,"sProp","MinWidth","sValue","40")
	
	v.Local.sProp.Set("Caption")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","LID",v.Local.sProp,"LID")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","LINE",v.Local.sProp,"Line")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","WOStatusID",v.Local.sProp,"WOStatusID")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","Status",v.Local.sProp,"Status")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","ServiceID",v.Local.sProp,"ServiceID")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","Service",v.Local.sProp,"Service")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","QuoteID",v.Local.sProp,"Quote ID")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","PriceMinCharge",v.Local.sProp,"Price Min Charge")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","UnitPrice",v.Local.sProp,"Unit Price")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","PricePriority",v.Local.sProp,"Price Priority")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","PriorityFlag",v.Local.sProp,"PriorityFlag")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","UnitQty",v.Local.sProp,"Unit Qty (kg)")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","Unit",v.Local.sProp,"Unit")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","ItemQty",v.Local.sProp,"Item Qty")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","Description",v.Local.sProp,"Part Desc.")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","ItmQtyBasedFlag",v.Local.sProp,"ItmQtyBasedFlag")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","Freight",v.Local.sProp,"Freight")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","QA",v.Local.sProp,"QA")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","TotalPrice",v.Local.sProp,"Total Price")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","TotalWeight",v.Local.sProp,"Total Weight")

	
	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	v.Local.sProp.Set("CellHAlignment")
	
	v.Local.sProp.Set("Width")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","ItmQtyBasedFlag",v.Local.sProp,"45")
'	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","Hold",v.Local.sProp,"45")
'	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","QtyHung",v.Local.sProp,"45")
'	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","QtyScheduled",v.Local.sProp,"45")
'	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","QtyPacked",v.Local.sProp,"45")
'	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","QtyDipped",v.Local.sProp,"45")
'	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","QtyInbound",v.Local.sProp,"45")
'	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","QtyOutbound",v.Local.sProp,"45")
'	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","QtyPossession",v.Local.sProp,"45")
	'gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","TNID_POS",v.Local.sProp,"100")
	
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","ItemQty","DisplayCustomNumeric","###,###,##0")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","UnitQty","DisplayCustomNumeric","###,###,##0.0000")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","TotalPrice","DisplayCustomNumeric","###,###,##0.000")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","UnitPrice","DisplayCustomNumeric","###,###,##0.000")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","PricePriority","DisplayCustomNumeric","###,###,##0.000")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","PriceMinCharge","DisplayCustomNumeric","###,###,##0.000")
	gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","TotalWeight","DisplayCustomNumeric","###,###,##0.0000")
	
	Gui.Form.GSGCInvoicing.AddSummaryItem("gvInvoiceLines","TotalPrice","Total Price","Sum","Total:","","###,###,##0.000")
	
	v.Local.sProp.Set("DisplayCustomDatetime")
	v.Local.sValue.Set("g")	
	'gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","DATETIMEDELIVERY",v.Local.sProp,v.Local.sValue)
	
	Gui.Form.GSGCInvoicing.BestFitColumns("gvInvoiceLines")
	
Program.Sub.LoadChildgvInvoiceLines.End

Program.Sub.Bulk_Format_InvoiceLines.Start
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","LID",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","LINE",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","WOStatusID",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","Status",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","ServiceID",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","Service",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","QuoteID",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","PriceMinCharge",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","UnitPrice",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","PricePriority",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","PriorityFlag",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","UnitQty",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","Unit",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","ItemQty",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","Description",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","ItmQtyBasedFlag",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","Freight",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","QA",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","TotalPrice",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoicing.SetColumnProperty("gvInvoiceLines","TotalWeight",v.Args.sProp,v.Args.sValue)

Program.Sub.Bulk_Format_InvoiceLines.End

Program.Sub.LoadgvInvoiced.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare
	
	gui.Form.GSGCInvoiced.AddGridviewFromDatatable("gvInvoiced","dtInvoiced")
	
	gui.Form.GSGCInvoiced.SetGridViewProperty("gvInvoiced","AllowSort",True)
	gui.Form.GSGCInvoiced.SetGridViewProperty("gvInvoiced","AllowFilter",True)
	gui.Form.GSGCInvoiced.SetGridViewProperty("gvInvoiced","OptionsDetailShowDetailTabs",False)
	gui.Form.GSGCInvoiced.SetGridViewProperty("gvInvoiced","OptionsViewShowGroupPanel",False)
	gui.Form.GSGCInvoiced.SetGridViewProperty("gvInvoiced","EnableAppearanceOddRow",True)
	gui.Form.GSGCInvoiced.SetGridviewProperty("gvInvoiced",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.GSGCInvoiced.SetGridviewProperty("gvInvoiced","OptionsViewColumnAutoWidth",False)
	gui.Form.GSGCInvoiced.SetGridviewProperty("gvInvoiced","AllowColumnResizing",True)	
	gui.Form.GSGCInvoiced.SetGridviewProperty("gvInvoiced","ColumnPanelRowHeight","50")
	gui.Form.GSGCInvoiced.SetGridviewProperty("gvInvoiced",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.Form.GSGCInvoiced.SetGridviewProperty("gvInvoiced", "ShowConditionalFormattingItem", True)
	gui.Form.GSGCInvoiced.Setgridviewproperty("gvInvoiced","multiselect",true)
'	gui.Form.GSGCInvoiced.Setgridviewproperty("gvInvoiced","multiselectmode",2)
'	gui.Form.GSGCInvoiced.Setgridviewproperty("gvInvoiced","CheckBoxSelectorField","Select")
	
	f.Intrinsic.Control.CallSub(Bulk_Format_Invoiced,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Invoiced,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Invoiced,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_Invoiced,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_Invoiced,"sProp","MinWidth","sValue","40")
	f.Intrinsic.Control.CallSub(Bulk_Format_Invoiced,"sProp","AllowEdit","sValue","False")
	f.Intrinsic.Control.CallSub(Bulk_Format_Invoiced,"sProp","ReadOnly","sValue","True")
	
	'gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","Select","ShowCaption",False)
	
	v.Local.sProp.Set("Caption")		
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","WorkOrderID",v.Local.sProp,"Work Order ID")
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","LID",v.Local.sProp,"LID")
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","Line",v.Local.sProp,"Line")
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","ORDER_NO",v.Local.sProp,"Sales Order")
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","RECORD_NO",v.Local.sProp,"Record No.")
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","INVOICEDQTY",v.Local.sProp,"Invoiced Qty")
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","INVOICEDDATE",v.Local.sProp,"Invoiced Date")

	


	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","WorkOrderID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","LID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","Line",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","ORDER_NO",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","RECORD_NO",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","INVOICEDQTY",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","INVOICEDDATE",v.Local.sProp,v.Local.sValue2)

	v.Local.sProp.Set("CellHAlignment")
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","WorkOrderID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","LID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","Line",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","ORDER_NO",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","RECORD_NO",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","INVOICEDQTY",v.Local.sProp,v.Local.sValue3)
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","INVOICEDDATE",v.Local.sProp,v.Local.sValue2)
	
	v.Local.sProp.Set("Width")
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","WorkOrderID",v.Local.sProp,"75")
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","LID",v.Local.sProp,"75")
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","Line",v.Local.sProp,"75")
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","ORDER_NO",v.Local.sProp,"100")
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","RECORD_NO",v.Local.sProp,"75")
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","INVOICEDQTY",v.Local.sProp,"75")
	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","INVOICEDDATE",v.Local.sProp,"150")

	gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced", "LID","Visible", False)

'	Gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","VALUE","DisplayCustomNumeric","###,###,###,##0")
'	Gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","WorkOrderID",V.Enum.ColumnPropertyNames!IsHyperlink,True)
	
	Gui.Form.GSGCInvoiced.BestFitColumns("gvInvoiced")
	Gui.Form.GSGCInvoiced.MainView("gvInvoiced")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvInvoiced.End

Program.Sub.Bulk_Format_Invoiced.Start
gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","WorkOrderID",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","LID",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","Line",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","ORDER_NO",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","RECORD_NO",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","INVOICEDQTY",v.Args.sProp,v.Args.sValue)
gui.Form.GSGCInvoiced.SetColumnProperty("gvInvoiced","INVOICEDDATE",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_Invoiced.End

Program.Sub.LoadgvMaterial.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare
V.Local.sSQL.Declare

	gui.Form.GSGCMaterial.AddGridviewFromDatatable("gvMaterial","dtMaterial")
	
	gui.Form.GSGCMaterial.SetGridViewProperty("gvMaterial","AllowSort",True)
	gui.Form.GSGCMaterial.SetGridViewProperty("gvMaterial","AllowFilter",True)
	gui.Form.GSGCMaterial.SetGridViewProperty("gvMaterial","OptionsDetailShowDetailTabs",False)
	gui.Form.GSGCMaterial.SetGridViewProperty("gvMaterial","OptionsViewShowGroupPanel",False)
	gui.Form.GSGCMaterial.SetGridViewProperty("gvMaterial","EnableAppearanceOddRow",True)
	gui.Form.GSGCMaterial.SetGridviewProperty("gvMaterial",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.GSGCMaterial.SetGridviewProperty("gvMaterial","OptionsViewColumnAutoWidth",False)
	gui.Form.GSGCMaterial.SetGridviewProperty("gvMaterial","AllowColumnResizing",True)	
	gui.Form.GSGCMaterial.SetGridviewProperty("gvMaterial","ColumnPanelRowHeight","50")
	gui.Form.GSGCMaterial.SetGridviewProperty("gvMaterial",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.Form.GSGCMaterial.SetGridviewProperty("gvMaterial", "ShowConditionalFormattingItem", True)
'	gui.Form.GSGCMaterial.Setgridviewproperty("gvMaterial","multiselect",true)
'	gui.Form.GSGCMaterial.Setgridviewproperty("gvMaterial","multiselectmode",2)
	'gui.Form.GSGCMaterial.Setgridviewproperty("gvMaterial","CheckBoxSelectorField","Select")
	
	f.Intrinsic.Control.CallSub(Bulk_Format_Material,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Material,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Material,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_Material,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_Material,"sProp","MinWidth","sValue","40")
	f.Intrinsic.Control.CallSub(Bulk_Format_Material,"sProp","AllowEdit","sValue","False")
	f.Intrinsic.Control.CallSub(Bulk_Format_Material,"sProp","ReadOnly","sValue","True")
	
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Select","ShowCaption",False)
	
	v.Local.sProp.Set("Caption")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Select",v.Local.sProp,"Select")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","MaterialLogID",v.Local.sProp,"Material Log ID")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","DateLogged",v.Local.sProp,"Logged Date")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","TimeLogged",v.Local.sProp,"Logged Time")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","EmployeeID",v.Local.sProp,"EmployeeID")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Employee",v.Local.sProp,"Employee")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","MaterialID",v.Local.sProp,"MaterialID")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Material",v.Local.sProp,"Material")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","UnitQuantity",v.Local.sProp,"Unit Qty")	
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Unit",v.Local.sProp,"Unit")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Note",v.Local.sProp,"Note")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Location",v.Local.sProp,"Location")

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")		
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Select",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","MaterialLogID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","DateLogged",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","TimeLogged",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","EmployeeID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Employee",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","MaterialID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Material",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","UnitQuantity",v.Local.sProp,v.Local.sValue3)	
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Unit",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Note",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Location",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Select",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","MaterialLogID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","DateLogged",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","TimeLogged",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","EmployeeID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Employee",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","MaterialID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Material",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","UnitQuantity",v.Local.sProp,v.Local.sValue3)	
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Unit",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Note",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Location",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("Width")
	
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Select",v.Local.sProp,"75")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","MaterialLogID",v.Local.sProp,"75")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","DateLogged",v.Local.sProp,"100")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","TimeLogged",v.Local.sProp,"100")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","EmployeeID",v.Local.sProp,"75")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Employee",v.Local.sProp,"150")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","MaterialID",v.Local.sProp,"75")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Material",v.Local.sProp,"150")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","UnitQuantity",v.Local.sProp,"100")	
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Unit",v.Local.sProp,"75")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Note",v.Local.sProp,"200")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Location",v.Local.sProp,"150")
	
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial", "Select","AllowEdit", True)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial", "Select","ReadOnly", False)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial", "UnitQuantity","AllowEdit", True)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial", "UnitQuantity","ReadOnly", False)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial", "Material","AllowEdit", True)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial", "Material","ReadOnly", False)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial", "Note","AllowEdit", True)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial", "Note","ReadOnly", False)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial", "Employee","AllowEdit", True)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial", "Employee","ReadOnly", False)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial", "DateLogged","AllowEdit", True)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial", "DateLogged","ReadOnly", False)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial", "TimeLogged","AllowEdit", True)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial", "TimeLogged","ReadOnly", False)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial", "Location","AllowEdit", True)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial", "Location","ReadOnly", False)
	
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("lightYellow")
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","UnitQuantity",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Material",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Note",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Employee",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","DateLogged",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","TimeLogged",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Location",v.Local.sProp,v.Local.sValue)
	
	Gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","UnitQuantity","DisplayCustomNumeric","###,###,##0.00")	
	
	Gui.Form.GSGCMaterial.AddSummaryItem("gvMaterial","UnitQuantity","Total Qty","Sum","Total:","","###,###,###,###,###,##0.00")
	
	v.Local.sProp.Set("DisplayCustomDatetime")
	v.Local.sValue.Set("d")	
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","DateLogged",v.Local.sProp,v.Local.sValue)
	
	'Making Material a DDL
	V.Local.sSql.Set("Select RTRIM(Description) as Description FROM GAB_6559_Material order by Description ASC")
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSql,V.Local.sSql)
	F.Intrinsic.String.Replace(V.Local.sSql,"#$#","*!*",V.Local.sSql)
	'F.Intrinsic.String.Build("*!*{0}",V.Local.sSql,V.Local.sSql)
	Gui.Form.GSGCMaterial.ColumnEdit("gvMaterial","Material","Dropdownlist",V.Local.sSql)
	
	'Making Employee a DDL
	V.Local.sSql.Set("Select RTRIM(LastName) + ', ' + RTRIM(FirstName) as Name FROM GAB_6559_Employee order by CeasedEmployment Asc, LastName ASC")
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSql,V.Local.sSql)
	F.Intrinsic.String.Replace(V.Local.sSql,"#$#","*!*",V.Local.sSql)
	'F.Intrinsic.String.Build("*!*{0}",V.Local.sSql,V.Local.sSql)
	Gui.Form.GSGCMaterial.ColumnEdit("gvMaterial","Employee","Dropdownlist",V.Local.sSql)
	
	'Making Location a ComboBox
	V.Local.sSql.Set("Select Distinct RTRIM(Location) as Location FROM GAB_6559_Material_Log order by Location ASC")
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSql,V.Local.sSql)
	F.Intrinsic.String.Replace(V.Local.sSql,"#$#","*!*",V.Local.sSql)
	Gui.Form.GSGCMaterial.ColumnEdit("gvMaterial","Location","ComboBox",V.Local.sSql)
	
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial", "EmployeeID","Visible", False)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial", "MaterialID","Visible", False)

	
	Gui.Form.GSGCMaterial.BestFitColumns("gvMaterial")
	Gui.Form.GSGCMaterial.MainView("gvMaterial")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvMaterial.End

Program.Sub.Bulk_Format_Material.Start
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Select",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","MaterialLogID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","DateLogged",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","TimeLogged",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","EmployeeID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Employee",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","MaterialID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Material",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","UnitQuantity",v.Args.sProp,v.Args.sValue)	
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Unit",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Note",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCMaterial.SetColumnProperty("gvMaterial","Location",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_Material.End

Program.Sub.LoadgvIssue.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare
V.Local.sSql.Declare

	gui.Form.GSGCIssue.AddGridviewFromDatatable("gvIssue","dtIssue")
	
	gui.Form.GSGCIssue.SetGridViewProperty("gvIssue","AllowSort",True)
	gui.Form.GSGCIssue.SetGridViewProperty("gvIssue","AllowFilter",True)
	gui.Form.GSGCIssue.SetGridViewProperty("gvIssue","OptionsDetailShowDetailTabs",False)
	gui.Form.GSGCIssue.SetGridViewProperty("gvIssue","OptionsViewShowGroupPanel",False)
	gui.Form.GSGCIssue.SetGridViewProperty("gvIssue","EnableAppearanceOddRow",True)
	gui.Form.GSGCIssue.SetGridviewProperty("gvIssue",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.GSGCIssue.SetGridviewProperty("gvIssue","OptionsViewColumnAutoWidth",False)
	gui.Form.GSGCIssue.SetGridviewProperty("gvIssue","AllowColumnResizing",True)	
	gui.Form.GSGCIssue.SetGridviewProperty("gvIssue","ColumnPanelRowHeight","50")
	gui.Form.GSGCIssue.SetGridviewProperty("gvIssue",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.Form.GSGCIssue.SetGridviewProperty("gvIssue", "ShowConditionalFormattingItem", True)
'	gui.Form.GSGCIssue.Setgridviewproperty("gvIssue","multiselect",true)
'	gui.Form.GSGCIssue.Setgridviewproperty("gvIssue","multiselectmode",2)
	'gui.Form.GSGCIssue.Setgridviewproperty("gvIssue","CheckBoxSelectorField","Select")
	
	f.Intrinsic.Control.CallSub(Bulk_Format_Issue,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Issue,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Issue,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_Issue,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_Issue,"sProp","MinWidth","sValue","40")
	f.Intrinsic.Control.CallSub(Bulk_Format_Issue,"sProp","AllowEdit","sValue","False")
	f.Intrinsic.Control.CallSub(Bulk_Format_Issue,"sProp","ReadOnly","sValue","True")
	
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Select","ShowCaption",False)
	
	v.Local.sProp.Set("Caption")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Select",v.Local.sProp,"Select")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","IssueLogID",v.Local.sProp,"Issue Log ID")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","DateStart",v.Local.sProp,"Start Date")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","DateEnd",v.Local.sProp,"End Date")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","TimeStart",v.Local.sProp,"Start Time")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","TimeEnd",v.Local.sProp,"End Time")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","EmployeeID",v.Local.sProp,"EmployeeID")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Employee",v.Local.sProp,"Employee")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","IssueID",v.Local.sProp,"IssueID")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Issue",v.Local.sProp,"Issue")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Note",v.Local.sProp,"Note")	
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Hours",v.Local.sProp,"Hours")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","CraneNumber",v.Local.sProp,"Crane No.")

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")		
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Select",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","IssueLogID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","DateStart",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","DateEnd",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","TimeStart",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","TimeEnd",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","EmployeeID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Employee",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","IssueID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Issue",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Note",v.Local.sProp,v.Local.sValue)	
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Hours",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","CraneNumber",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Select",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","IssueLogID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","DateStart",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","DateEnd",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","TimeStart",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","TimeEnd",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","EmployeeID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Employee",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","IssueID",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Issue",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Note",v.Local.sProp,v.Local.sValue)	
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Hours",v.Local.sProp,v.Local.sValue2)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","CraneNumber",v.Local.sProp,v.Local.sValue)
	
	v.Local.sProp.Set("Width")
	
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Select",v.Local.sProp,"75")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","IssueLogID",v.Local.sProp,"75")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","DateStart",v.Local.sProp,"100")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","DateEnd",v.Local.sProp,"100")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","TimeStart",v.Local.sProp,"100")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","TimeEnd",v.Local.sProp,"100")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","EmployeeID",v.Local.sProp,"75")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Employee",v.Local.sProp,"150")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","IssueID",v.Local.sProp,"75")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Issue",v.Local.sProp,"175")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Note",v.Local.sProp,"200")	
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Hours",v.Local.sProp,"75")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","CraneNumber",v.Local.sProp,"100")
	
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue", "Select","AllowEdit", True)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue", "Select","ReadOnly", False)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue", "Note","AllowEdit", True)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue", "Note","ReadOnly", False)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue", "Issue","AllowEdit", True)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue", "Issue","ReadOnly", False)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue", "DateStart","AllowEdit", True)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue", "DateStart","ReadOnly", False)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue", "DateEnd","AllowEdit", True)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue", "DateEnd","ReadOnly", False)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue", "TimeStart","AllowEdit", True)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue", "TimeStart","ReadOnly", False)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue", "TimeEnd","AllowEdit", True)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue", "TimeEnd","ReadOnly", False)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue", "Employee","AllowEdit", True)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue", "Employee","ReadOnly", False)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue", "CraneNumber","AllowEdit", True)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue", "CraneNumber","ReadOnly", False)
	
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("lightYellow")
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Issue",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","DateStart",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","DateEnd",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","TimeStart",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","TimeEnd",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Note",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Employee",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","CraneNumber",v.Local.sProp,v.Local.sValue)
	
	Gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Hours","DisplayCustomNumeric","###,###,##0.00")	
	
	v.Local.sProp.Set("DisplayCustomDatetime")
	v.Local.sValue.Set("d")	
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","DateStart",v.Local.sProp,v.Local.sValue)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","DateEnd",v.Local.sProp,v.Local.sValue)
	
	Gui.Form.GSGCIssue.AddSummaryItem("gvIssue","Hours","Total hrs","Sum","Total:","hrs","###,###,###,###,###,##0.00")
	
	'Making Issue a DDL
	V.Local.sSql.Set("Select RTRIM(Description) as Description FROM GAB_6559_Issue order by Description ASC")
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSql,V.Local.sSql)
	F.Intrinsic.String.Replace(V.Local.sSql,"#$#","*!*",V.Local.sSql)
	'F.Intrinsic.String.Build("*!*{0}",V.Local.sSql,V.Local.sSql)
	Gui.Form.GSGCIssue.ColumnEdit("gvIssue","Issue","Dropdownlist",V.Local.sSql)
	
	'Making Employee a DDL
	V.Local.sSql.Set("Select RTRIM(LastName) + ', ' + RTRIM(FirstName) as Name FROM GAB_6559_Employee order by CeasedEmployment Asc, LastName ASC")
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSql,V.Local.sSql)
	F.Intrinsic.String.Replace(V.Local.sSql,"#$#","*!*",V.Local.sSql)
	'F.Intrinsic.String.Build("*!*{0}",V.Local.sSql,V.Local.sSql)
	Gui.Form.GSGCIssue.ColumnEdit("gvIssue","Employee","Dropdownlist",V.Local.sSql)
	
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue", "EmployeeID","Visible", False)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue", "IssueID","Visible", False)

	Gui.Form.GSGCIssue.BestFitColumns("gvIssue")
	Gui.Form.GSGCIssue.MainView("gvIssue")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvIssue.End

Program.Sub.Bulk_Format_Issue.Start
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Select",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","IssueLogID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","DateStart",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","DateEnd",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","TimeStart",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","TimeEnd",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","EmployeeID",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Employee",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Note",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","IssueID",v.Args.sProp,v.Args.sValue)	
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Issue",v.Args.sProp,v.Args.sValue)	
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","Hours",v.Args.sProp,v.Args.sValue)
	gui.Form.GSGCIssue.SetColumnProperty("gvIssue","CraneNumber",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_Issue.End

Program.Sub.LoadgvReworktab.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare
V.Local.sSql.Declare

	gui.FormWorkOrderDetails.GSGCReworktab.AddGridviewFromDatatable("gvReworktab","dtReworktab")
	
	gui.FormWorkOrderDetails.GSGCReworktab.SetGridViewProperty("gvReworktab","AllowSort",True)
	gui.FormWorkOrderDetails.GSGCReworktab.SetGridViewProperty("gvReworktab","AllowFilter",True)
	gui.FormWorkOrderDetails.GSGCReworktab.SetGridViewProperty("gvReworktab","OptionsDetailShowDetailTabs",False)
	gui.FormWorkOrderDetails.GSGCReworktab.SetGridViewProperty("gvReworktab","OptionsViewShowGroupPanel",False)
	gui.FormWorkOrderDetails.GSGCReworktab.SetGridViewProperty("gvReworktab","EnableAppearanceOddRow",True)
	gui.FormWorkOrderDetails.GSGCReworktab.SetGridviewProperty("gvReworktab",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.FormWorkOrderDetails.GSGCReworktab.SetGridviewProperty("gvReworktab","OptionsViewColumnAutoWidth",False)
	gui.FormWorkOrderDetails.GSGCReworktab.SetGridviewProperty("gvReworktab","AllowColumnResizing",True)	
	gui.FormWorkOrderDetails.GSGCReworktab.SetGridviewProperty("gvReworktab","ColumnPanelRowHeight","50")
	gui.FormWorkOrderDetails.GSGCReworktab.SetGridviewProperty("gvReworktab",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.FormWorkOrderDetails.GSGCReworktab.SetGridviewProperty("gvReworktab", "ShowConditionalFormattingItem", True)
	
	f.Intrinsic.Control.CallSub(Bulk_Format_Reworktab,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Reworktab,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Reworktab,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_Reworktab,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_Reworktab,"sProp","MinWidth","sValue","40")
	f.Intrinsic.Control.CallSub(Bulk_Format_Reworktab,"sProp","AllowEdit","sValue","False")
	f.Intrinsic.Control.CallSub(Bulk_Format_Reworktab,"sProp","ReadOnly","sValue","True")
		
	v.Local.sProp.Set("Caption")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","ReworkLogID",v.Local.sProp,"Rework Log ID")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","LineNumber",v.Local.sProp,"Line")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","OrgLineNumber",v.Local.sProp,"Original Line")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","DateClosed",v.Local.sProp,"Date Closed")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","DateLogged",v.Local.sProp,"Date Logged")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","InspectedBy",v.Local.sProp,"Inspected by")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","InspectedByID",v.Local.sProp,"Inspected by ID")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","ItemQty",v.Local.sProp,"Item Qty")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","UnitQty",v.Local.sProp,"Unit Qty")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","Unit",v.Local.sProp,"Unit")	
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","Description",v.Local.sProp,"Item Desc.")	
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","TagID",v.Local.sProp,"Tag")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","JobID",v.Local.sProp,"Job ID")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","ReworkTypeID",v.Local.sProp,"Rework Type ID")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","ReworkType",v.Local.sProp,"Rework Type")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","SysUserLastAccess",v.Local.sProp,"SysUser Last Access")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","SysUserLastAccessDateTime",v.Local.sProp,"SysUser Last Access DateTime")

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","ReworkLogID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","LineNumber",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","OrgLineNumber",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","DateClosed",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","DateLogged",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","InspectedBy",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","InspectedByID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","ItemQty",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","UnitQty",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","Unit",v.Local.sProp,v.Local.sValue)	
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","Description",v.Local.sProp,v.Local.sValue)	
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","TagID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","JobID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","ReworkTypeID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","ReworkType",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","SysUserLastAccess",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","ReworkLogID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","LineNumber",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","OrgLineNumber",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","DateClosed",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","DateLogged",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","InspectedBy",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","InspectedByID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","ItemQty",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","UnitQty",v.Local.sProp,v.Local.sValue3)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","Unit",v.Local.sProp,v.Local.sValue)	
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","Description",v.Local.sProp,v.Local.sValue)	
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","TagID",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","JobID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","ReworkTypeID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","ReworkType",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","SysUserLastAccess",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)
	
	v.Local.sProp.Set("Width")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","ReworkLogID",v.Local.sProp,"70")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","LineNumber",v.Local.sProp,"55")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","OrgLineNumber",v.Local.sProp,"55")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","DateClosed",v.Local.sProp,"125")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","DateLogged",v.Local.sProp,"125")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","InspectedBy",v.Local.sProp,"125")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","InspectedByID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","ItemQty",v.Local.sProp,"55")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","UnitQty",v.Local.sProp,"65")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","Unit",v.Local.sProp,"50")	
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","Description",v.Local.sProp,"150")	
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","TagID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","JobID",v.Local.sProp,"55")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","ReworkTypeID",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","ReworkType",v.Local.sProp,"100")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","SysUserLastAccess",v.Local.sProp,"75")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","SysUserLastAccessDateTime",v.Local.sProp,"150")
	
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab", "ReworkLogID","AllowEdit", False)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab", "ReworkLogID","ReadOnly", False)
	
	Gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","ReworkLogID",V.Enum.ColumnPropertyNames!IsHyperlink,True)
	
	Gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","UnitQty","DisplayCustomNumeric","###,###,##0.00")	
	
	v.Local.sProp.Set("DisplayCustomDatetime")
	v.Local.sValue.Set("g")
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","DateClosed",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","DateLogged",v.Local.sProp,v.Local.sValue)
	
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab", "InspectedbyID","Visible", False)
	gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab", "ReworkTypeID","Visible", False)

	Gui.FormWorkOrderDetails.GSGCReworktab.BestFitColumns("gvReworktab")
	Gui.FormWorkOrderDetails.GSGCReworktab.MainView("gvReworktab")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvReworktab.End

Program.Sub.Bulk_Format_Reworktab.Start
gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","ReworkLogID",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","LineNumber",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","OrgLineNumber",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","DateClosed",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","DateLogged",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","InspectedBy",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","InspectedByID",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","ItemQty",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","UnitQty",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","Unit",v.Args.sProp,v.Args.sValue)	
gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","Description",v.Args.sProp,v.Args.sValue)	
gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","TagID",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","JobID",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","ReworkTypeID",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","ReworkType",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","SysUserLastAccess",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCReworktab.SetColumnProperty("gvReworktab","SysUserLastAccessDateTime",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_Reworktab.End

Program.Sub.LoadgvNotificationLog.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare
V.Local.sSql.Declare

	gui.FormWorkOrderDetails.GSGCNotificationLog.AddGridviewFromDatatable("gvNotificationLog","dtNotificationLog")
	
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetGridViewProperty("gvNotificationLog","AllowSort",True)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetGridViewProperty("gvNotificationLog","AllowFilter",True)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetGridViewProperty("gvNotificationLog","OptionsDetailShowDetailTabs",False)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetGridViewProperty("gvNotificationLog","OptionsViewShowGroupPanel",False)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetGridViewProperty("gvNotificationLog","EnableAppearanceOddRow",True)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetGridviewProperty("gvNotificationLog",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetGridviewProperty("gvNotificationLog","OptionsViewColumnAutoWidth",False)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetGridviewProperty("gvNotificationLog","AllowColumnResizing",True)	
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetGridviewProperty("gvNotificationLog","ColumnPanelRowHeight","50")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetGridviewProperty("gvNotificationLog",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetGridviewProperty("gvNotificationLog", "ShowConditionalFormattingItem", True)
	
	f.Intrinsic.Control.CallSub(Bulk_Format_NotificationLog,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_NotificationLog,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_NotificationLog,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_NotificationLog,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_NotificationLog,"sProp","MinWidth","sValue","40")
	f.Intrinsic.Control.CallSub(Bulk_Format_NotificationLog,"sProp","AllowEdit","sValue","False")
	f.Intrinsic.Control.CallSub(Bulk_Format_NotificationLog,"sProp","ReadOnly","sValue","True")
		
	v.Local.sProp.Set("Caption")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","NotificationID",v.Local.sProp,"Notification ID")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","WorkOrderID",v.Local.sProp,"WorkOrderID")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","NotificationTypeID",v.Local.sProp,"NotificationTypeID")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","NotificationType",v.Local.sProp,"Notification Type")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","DateTimeLogged",v.Local.sProp,"DateTime Logged")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","ResponseTypeID",v.Local.sProp,"ResponseTypeID")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","ResponseType",v.Local.sProp,"Response Type")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","RecipientAddress",v.Local.sProp,"Recipient Address")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","RecipientName",v.Local.sProp,"Recipient Name")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","SysUserLastAccess",v.Local.sProp,"SysUser LastAccess")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","SysUserLastAccessDateTime",v.Local.sProp,"SysUser LastAccess DateTime")

	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","NotificationID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","WorkOrderID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","NotificationTypeID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","NotificationType",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","DateTimeLogged",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","ResponseTypeID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","ResponseType",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","RecipientAddress",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","RecipientName",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","SysUserLastAccess",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)

	v.Local.sProp.Set("CellHAlignment")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","NotificationID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","WorkOrderID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","NotificationTypeID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","NotificationType",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","DateTimeLogged",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","ResponseTypeID",v.Local.sProp,v.Local.sValue2)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","ResponseType",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","RecipientAddress",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","RecipientName",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","SysUserLastAccess",v.Local.sProp,v.Local.sValue)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)
	
	v.Local.sProp.Set("Width")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","NotificationID",v.Local.sProp,"70")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","WorkOrderID",v.Local.sProp,"70")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","NotificationTypeID",v.Local.sProp,"70")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","NotificationType",v.Local.sProp,"150")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","DateTimeLogged",v.Local.sProp,"125")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","ResponseTypeID",v.Local.sProp,"70")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","ResponseType",v.Local.sProp,"100")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","RecipientAddress",v.Local.sProp,"125")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","RecipientName",v.Local.sProp,"125")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","SysUserLastAccess",v.Local.sProp,"100")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","SysUserLastAccessDateTime",v.Local.sProp,"150")
	
	
	'Gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","ReworkLogID",V.Enum.ColumnPropertyNames!IsHyperlink,True)
	
	'Gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","UnitQty","DisplayCustomNumeric","###,###,##0.00")	
	
	v.Local.sProp.Set("DisplayCustomDatetime")
	v.Local.sValue.Set("g")
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","DateTimeLogged",v.Local.sProp,v.Local.sValue)
	'gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","DateLogged",v.Local.sProp,v.Local.sValue)
	
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog", "NotificationID","Visible", False)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog", "NotificationTypeID","Visible", False)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog", "ResponseTypeID","Visible", False)
	gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog", "WorkOrderID","Visible", False)

	Gui.FormWorkOrderDetails.GSGCNotificationLog.BestFitColumns("gvNotificationLog")
	Gui.FormWorkOrderDetails.GSGCNotificationLog.MainView("gvNotificationLog")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvNotificationLog.End

Program.Sub.Bulk_Format_NotificationLog.Start
gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","NotificationID",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","WorkOrderID",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","NotificationTypeID",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","NotificationType",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","DateTimeLogged",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","ResponseTypeID",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","ResponseType",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","RecipientAddress",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","RecipientName",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","SysUserLastAccess",v.Args.sProp,v.Args.sValue)
gui.FormWorkOrderDetails.GSGCNotificationLog.SetColumnProperty("gvNotificationLog","SysUserLastAccessDateTime",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_NotificationLog.End

#End Region ' LoadGV

#Region "LoadDT"

Program.Sub.LoaddtMainGALVAWARE.Start
f.Intrinsic.Control.Try
V.Local.sSQL.Declare
V.Local.sTest.Declare
V.Local.bRet.Declare
V.Local.sToday.Declare
V.Local.sInvoicedFilter.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD", V.Local.sToday)
	
	
	f.Data.Dictionary.Exists("dictTransportDesc",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictTransportDesc")
	F.Intrinsic.Control.EndIf
	

	
	V.Global.bLoadData.Set(true)
	
	'Check if we need to show already invoiced orders. Defaulted to not show them.
	F.Intrinsic.Control.If(v.Screen.Form!chkInvoiced.CheckedAsBoolean)
		V.Local.sInvoicedFilter.Set("")
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("where Year(DATE_INVOICED) = '1900'",V.Local.sTest,V.Local.sInvoicedFilter)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("Select '' as Plus, DATEDIFF(DAY, '{0}', DELIVERY_DATE) As Due, ID as WO_ID, RTRIM(CUSTOMER) as CUSTOMER, '' as CUSTOMER_NAME, CUSTOMER_REFERENCE, DELIVERY_DATE, DATE_INSPECTED, RECEIPTED, DATE_INVOICED, COMMIT_DATE, Rtrim(RECEIPTED_BY) as RECEIPTED_BY, PAYMENT_METHOD_ID, RTRIM(STATUS) as STATUS, LOCATION, Possession, OutBound, InBound, ReleaseToPrep, Priority, QA, NotifiedFlag, BILLING_ADDRESS_ID, BILLING_CONTACT_ID, RTRIM(SHIP_SEQ) as SHIP_SEQ, RTRIM(AdminNote) as AdminNote, RTRIM(ProcessingNote) as ProcessingNote, RTRIM(H_UF1) as H_UF1, RTRIM(H_UF2) as H_UF2, RTRIM(H_UF3) as H_UF3, RTRIM(CUSTOMER) + '-' + RTRIM(SHIP_SEQ) as ShipKey, '' as SHIPTO_NAME_TEMP, '' as MULTI_SHIPTO_NAME, EstimateRacks, FirstDip, LastDip from GAB_6559_GALVAWARE {1} order by ID Desc",V.Local.sToday,V.Local.sInvoicedFilter,V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtAPTempLines","con",V.Local.sSQL,TRUE)
	
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictCustomer","CUSTOMER","CUSTOMER_NAME")	
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictCustMultiShip","ShipKey","MULTI_SHIPTO_NAME")
	
	'Filling in Credit Hold from V_Customer_MASTER
	F.Data.Datatable.AddColumn("dtAPTempLines","CreditHold","Boolean",False)
	F.Data.Dictionary.CreateFromSQL("dictCreditHold","Con","select RTRIM(CUSTOMER) as CUSTOMER, Cast(IF(FLAG_CREDIT_HOLD = 'Y', '1', '0') as bit) as FLAG_CREDIT_HOLD from V_CUSTOMER_MASTER")
	F.Data.Dictionary.SetDefaultReturn("dictCreditHold",False)
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictCreditHold","CUSTOMER","CreditHold")
	F.Data.Dictionary.Close("dictCreditHold")
	
	'Dictionary for LocationID and Customer Location GAB_6559_Customer_Xref
	F.Data.DataTable.AddColumn("dtAPTempLines","LocationID","Long",0)
	F.Data.Dictionary.CreateFromSQL("dictLocationID","con","Select RTRIM(SHIP_KEY), LocationID From GAB_6559_Customer_Xref")
	F.Data.Dictionary.SetDefaultReturn("dictLocationID",0)
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictLocationID","ShipKey","LocationID")
	F.Data.Dictionary.CreateFromSQL("dictCustLocation","con","select LocationID, RTRIM(Description) from GAB_6559_Cust_location")
	F.Data.Dictionary.SetDefaultReturn("dictCustLocation","")
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictCustLocation","LocationID","LOCATION")
	F.Data.Dictionary.Close("dictLocationID")
	F.Data.Dictionary.Close("dictCustLocation")
	
	'Dictionary for Total Wo Weight
	F.Data.DataTable.AddColumn("dtAPTempLines","TotalWeight","Float",0.00)
	F.Data.Dictionary.CreateFromSQL("dictTotalWeightWO","con","select ID, Sum(ItemQty * UnitQty) from GAB_6559_Lines where ServiceID not in (select ServiceID from GAB_6559_Service where Freight = '1' or QA = '1') and ServiceID <> 'ZZZZZZZZZZ' Group by ID;")
	F.Data.Dictionary.SetDefaultReturn("dictTotalWeightWO",0.00)
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictTotalWeightWO","WO_ID","TotalWeight")
	F.Data.Dictionary.Close("dictTotalWeightWO")
	
			
	'Dictionary for ID, VALUEUNIT  from GAB_6559_Lines
	F.Data.Dictionary.CreatefromSQL("dictValueUnit","con","Select ID, Sum(IF(IF(PriorityFlag = '1', UnitPrice+PricePriority, UnitPrice)*UnitQty*ItemQty < PriceMinCharge, PriceMinCharge, IF(PriorityFlag = '1', UnitPrice+PricePriority, UnitPrice)*UnitQty*ItemQty)) as Value from GAB_6559_Lines where ItmQtyBasedFlag = '0' group by ID;")
	F.Data.Dictionary.SetDefaultReturn("dictValueUnit","0.00")
	F.Data.Datatable.AddColumn("dtAPTempLines","VALUEUNIT","Float",0.00)
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictValueUnit","WO_ID","VALUEUNIT")
	F.Data.Dictionary.Close("dictValueUnit")
	
	'Dictionary for ID, ValueItem  from GAB_6559_Lines
	F.Data.Dictionary.CreatefromSQL("dictValueItem","con","Select ID, Sum(IF(IF(PriorityFlag = '1', UnitPrice+PricePriority, UnitPrice)*ItemQty < PriceMinCharge, PriceMinCharge, IF(PriorityFlag = '1', UnitPrice+PricePriority, UnitPrice)*ItemQty)) as Value from GAB_6559_Lines where ItmQtyBasedFlag = '1' group by ID;")
	F.Data.Dictionary.SetDefaultReturn("dictValueItem","0.00")
	F.Data.Datatable.AddColumn("dtAPTempLines","VALUEITEM","Float",0.00)
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictValueItem","WO_ID","VALUEITEM")
	F.Data.Dictionary.Close("dictValueItem")
	
	'Sum VALUEUNIT + VALUEITEM = VALUE
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","VALUE","Float","([VALUEUNIT]+[VALUEITEM])")
	
	
	'Fill Transport note description from GAB_6559_TransportNoteId
	F.Data.Dictionary.CreatefromSQL("dictTransportDesc","con","Select TransportNoteID, Rtrim(Description) From GAB_6559_TransportNoteId")
	F.Data.Dictionary.SetDefaultReturn("dictTransportDesc","")
	F.Data.Datatable.AddColumn("dtAPTempLines","INBOUND_DESC","STRING","")
	F.Data.Datatable.AddColumn("dtAPTempLines","OUTBOUND_DESC","STRING","")
	F.Data.Datatable.AddColumn("dtAPTempLines","POSSESSION_DESC","STRING","")
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictTransportDesc","INBOUND","INBOUND_DESC")
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictTransportDesc","OUTBOUND","OUTBOUND_DESC")
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictTransportDesc","POSSESSION","POSSESSION_DESC")
	
	'Fill Inbound Transport Note ID from WOID
	F.Data.Dictionary.CreatefromSQL("dictTNIDInbound","con","select WorkOrderID, TransportNoteID from GAB_6559_Transport_WO Where TransportNoteID in (Select TransportNoteID from GAB_6559_TransportNote where TransportArrangementID in (Select TransportNoteID from GAB_6559_TransportNoteId where MovementType = 'I'))")
	F.Data.Dictionary.SetDefaultReturn("dictTNIDInbound","")
	F.Data.Datatable.AddColumn("dtAPTempLines","TNID_INB","STRING","")
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictTNIDInbound","WO_ID","TNID_INB")
	F.Data.Dictionary.Close("dictTNIDInbound")
	
	'Fill Outbound Transport Note ID from WOID
	F.Data.Dictionary.CreatefromSQL("dictTNIDOutbound","con","select WorkOrderID, TransportNoteID from GAB_6559_Transport_WO Where TransportNoteID in (Select TransportNoteID from GAB_6559_TransportNote where TransportArrangementID in (Select TransportNoteID from GAB_6559_TransportNoteId where MovementType = 'O'))")
	F.Data.Dictionary.SetDefaultReturn("dictTNIDOutbound","")
	F.Data.Datatable.AddColumn("dtAPTempLines","TNID_OUT","STRING","")
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictTNIDOutbound","WO_ID","TNID_OUT")
	F.Data.Dictionary.Close("dictTNIDOutbound")
	
	'Fill Possession Transport Note ID from WOID
	F.Data.Dictionary.CreatefromSQL("dictTNIDPoss","con","select WorkOrderID, TransportNoteID from GAB_6559_Transport_WO Where TransportNoteID in (Select TransportNoteID from GAB_6559_TransportNote where TransportArrangementID in (Select TransportNoteID from GAB_6559_TransportNoteId where MovementType = 'P'))")
	F.Data.Dictionary.SetDefaultReturn("dictTNIDPoss","")
	F.Data.Datatable.AddColumn("dtAPTempLines","TNID_POS","STRING","")
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictTNIDPoss","WO_ID","TNID_POS")
	F.Data.Dictionary.Close("dictTNIDPoss")
	
	'Fill Transport Note ID Date Time Delivery from TNID
	F.Data.Dictionary.CreatefromSQL("dictTNIDDate","con","select TransportNoteID, DateTimeDelivery from GAB_6559_TransportNote")
	'F.Data.Dictionary.SetDefaultReturn("dictTNIDDate",)
	F.Data.Datatable.AddColumn("dtAPTempLines","DATETIMEDELIVERY_I","Date")
	F.Data.Datatable.AddColumn("dtAPTempLines","DATETIMEDELIVERY_O","Date")
	F.Data.Datatable.AddColumn("dtAPTempLines","DATETIMEDELIVERY_P","Date")
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictTNIDDate","TNID_INB","DATETIMEDELIVERY_I")
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictTNIDDate","TNID_OUT","DATETIMEDELIVERY_O")
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictTNIDDate","TNID_POS","DATETIMEDELIVERY_P")
	

	
	'Dictionary for WOID lock,  from GAB_6559_TL
	f.Data.Dictionary.Exists("dictWOIDLock",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictWOIDLock")
	F.Intrinsic.Control.EndIf
	F.Data.Dictionary.CreatefromSQL("dictWOIDLock","con","Select WOID, Cast('1' as Bit) from GAB_6559_TL;")
	F.Data.Dictionary.SetDefaultReturn("dictWOIDLock",False)
	F.Data.Datatable.AddColumn("dtAPTempLines","WOID_LOCK","Boolean",False)
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictWOIDLock","WO_ID","WOID_LOCK")
	
	'Processing Speed Dictionary
	F.Data.Dictionary.CreatefromSQL("dictProcSpeed","con","select ID, DateDiff(Minute, FirstDip, LastDip) / 60 from GAB_6559_Galvaware Where Year(FirstDip) <> '1900' and Year(LastDip) <> '1900';")
	F.Data.Dictionary.SetDefaultReturn("dictProcSpeed",0)
	F.Data.Datatable.AddColumn("dtAPTempLines","ProcessingSpeed","Float",0.00)
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictProcSpeed","WO_ID","ProcessingSpeed")
	F.Data.Dictionary.Close("dictProcSpeed")
	
	'QtyWOTotal0
	F.Data.Dictionary.CreatefromSQL("dictQtyWOTotal","con","select ID, Cast(Sum(ItemQty) as Integer) as QtyWOTotal from GAB_6559_Lines where ServiceID not in (Select ServiceID from GAB_6559_Service where Freight = '1' or QA = '1') group by ID;")
	F.Data.Dictionary.SetDefaultReturn("dictQtyWOTotal",0)
	F.Data.Datatable.AddColumn("dtAPTempLines","QtyWOTotal0","Long",0)
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictQtyWOTotal","WO_ID","QtyWOTotal0")
	F.Data.Dictionary.Close("dictQtyWOTotal")
	
	'QtyScheduled
	F.Data.Dictionary.CreatefromSQL("dictQtyScheduled","con","Select WorkOrderID, Cast(Sum(QuantityHung) as Integer) as QtyScheduled from GAB_6559_Job_Lines Group by WorkOrderID;")
	F.Data.Dictionary.SetDefaultReturn("dictQtyScheduled",0)
	F.Data.Datatable.AddColumn("dtAPTempLines","QtyScheduled","Long",0)
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictQtyScheduled","WO_ID","QtyScheduled")
	F.Data.Dictionary.Close("dictQtyScheduled")
	
	'QtyHung
	F.Data.Dictionary.CreatefromSQL("dictQtyHung","con","Select WorkOrderID, Cast(Sum(QuantityHung) as Integer) as QuantityHung from GAB_6559_Job_Lines where JobID in (Select JobID from GAB_6559_Job_Header where DateTimeCreated > '1950-01-01') Group by WorkOrderID;")
	F.Data.Dictionary.SetDefaultReturn("dictQtyHung",0)
	F.Data.Datatable.AddColumn("dtAPTempLines","QtyHung","Long",0)
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictQtyHung","WO_ID","QtyHung")
	F.Data.Dictionary.Close("dictQtyHung")
	
	'QtyDipped
	F.Data.Dictionary.CreatefromSQL("dictQtyDipped","con","Select WorkOrderID, Cast(Sum(QuantityHung) as Integer) as QuantityDipped from GAB_6559_Job_Lines where JobID in (Select JobID from GAB_6559_Job_Header where DateTimeCompleted > '1950-01-01') Group by WorkOrderID;")
	F.Data.Dictionary.SetDefaultReturn("dictQtyDipped",0)
	F.Data.Datatable.AddColumn("dtAPTempLines","QtyDipped","Long",0)
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictQtyDipped","WO_ID","QtyDipped")
	F.Data.Dictionary.Close("dictQtyDipped")
	
	'QtyPacked
	F.Data.Dictionary.CreatefromSQL("dictQtyPacked","con","Select WorkOrderID, Cast(Sum(QuantityHung) as Integer) as QuantityPacked from GAB_6559_Job_Lines where CheckedFlag = '1' Group by WorkOrderID;")
	F.Data.Dictionary.SetDefaultReturn("dictQtyPacked",0)
	F.Data.Datatable.AddColumn("dtAPTempLines","QtyPacked","Long",0)
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictQtyPacked","WO_ID","QtyPacked")
	F.Data.Dictionary.Close("dictQtyPacked")
	
	'QtyInb
	F.Data.Dictionary.CreatefromSQL("dictQtyInb","con","Select WorkOrderID, Cast(Sum(ItemQuantity) as Integer) as QtyInb from GAB_6559_Transport_WO where TransportNoteID in (Select TransportNoteID from GAB_6559_TransportNote where TransportArrangementID in (Select TransportNoteID from GAB_6559_TransportNoteId where MovementType = 'I')) Group by WorkOrderID;")
	F.Data.Dictionary.SetDefaultReturn("dictQtyInb",0)
	F.Data.Datatable.AddColumn("dtAPTempLines","QtyInb","Long",0)
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictQtyInb","WO_ID","QtyInb")
	F.Data.Dictionary.Close("dictQtyInb")
	
	'QtyOut
	F.Data.Dictionary.CreatefromSQL("dictQtyOut","con","Select WorkOrderID, Cast(Sum(ItemQuantity) as Integer) as QtyOut from GAB_6559_Transport_WO where TransportNoteID in (Select TransportNoteID from GAB_6559_TransportNote where TransportArrangementID in (Select TransportNoteID from GAB_6559_TransportNoteId where MovementType = 'O')) Group by WorkOrderID;")
	F.Data.Dictionary.SetDefaultReturn("dictQtyOut",0)
	F.Data.Datatable.AddColumn("dtAPTempLines","QtyOut","Long",0)
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictQtyOut","WO_ID","QtyOut")
	F.Data.Dictionary.Close("dictQtyOut")
	
	'QtyPos
	F.Data.Dictionary.CreatefromSQL("dictQtyPos","con","Select WorkOrderID, Cast(Sum(ItemQuantity) as Integer) as QtyPos from GAB_6559_Transport_WO where TransportNoteID in (Select TransportNoteID from GAB_6559_TransportNote where TransportArrangementID in (Select TransportNoteID from GAB_6559_TransportNoteId where MovementType = 'P')) Group by WorkOrderID;")
	F.Data.Dictionary.SetDefaultReturn("dictQtyPos",0)
	F.Data.Datatable.AddColumn("dtAPTempLines","QtyPos","Long",0)
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictQtyPos","WO_ID","QtyPos")
	F.Data.Dictionary.Close("dictQtyPos")
	
	'QtyRework
	F.Data.Dictionary.CreatefromSQL("dictQtyRework","con","select ID, Cast(Sum(ItemQty) as Integer) as ReworkQty from GAB_6559_Lines where ServiceID = 'ZZZZZZZZZZ' group by ID;")
	F.Data.Dictionary.SetDefaultReturn("dictQtyRework",0)
	F.Data.Datatable.AddColumn("dtAPTempLines","QtyRework","Long",0)
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictQtyRework","WO_ID","QtyRework")
	F.Data.Dictionary.Close("dictQtyRework")
	
	'QtyFQ itemqty of lines that are Frieght or QA
	F.Data.Dictionary.CreatefromSQL("dictFQ","con","select ID, Cast(Sum(ItemQty) as Integer) as QtyFQ from GAB_6559_Lines where ServiceID in (Select ServiceID from GAB_6559_Service where Freight = '1' or QA = '1') group by ID;")
	F.Data.Dictionary.SetDefaultReturn("dictFQ",0)
	F.Data.Datatable.AddColumn("dtAPTempLines","QtyFQ","Long",0)
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictFQ","WO_ID","QtyFQ")
	F.Data.Dictionary.Close("dictFQ")
	
	
'	'ToGo, Schd, Hung, Dipped, Packed,
'	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","Packed","String","IIF([QtyPacked] = 0, '', [QtyPacked])")
'	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","Dipped","String","IIF([QtyDipped] = 0, '', [QtyDipped])")
'	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","Hung","String","IIF([QtyHung] = 0, '', [QtyHung])")
'	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","Schd","String","IIF([QtyScheduled] = 0, '', [QtyScheduled])")
'	'F.Data.DataTable.AddExpressionColumn("dtAPTempLines","ToGo","String","IIF([QtyWOTotal] = 0, '', [QtyWOTotal])")
'	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","Rewrk","String","IIF([QtyRework] = 0, '', [QtyRework])")
	
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","Packed","Long","[QtyPacked]")
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","Dipped","Long","[QtyDipped]")
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","Hung","Long","[QtyHung]")
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","Schd","Long","[QtyScheduled]")
	'F.Data.DataTable.AddExpressionColumn("dtAPTempLines","ToGo","Long","[QtyWOTotal]")
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","Rewrk","Long","[QtyRework]")
	
	
'	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","Dipped","Long","[QtyDipped]")
'	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","Hung","Long","[QtyHung]")
'	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","Schd","Long","[QtyScheduled]")
'	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","ToGo","Long","[QtyWOTotal]")

'	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","Packed","Long","[QtyPacked]")
'	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","Dipped","Long","[QtyDipped] - [Packed]")
'	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","Hung","Long","[QtyHung] - [Dipped] - [Packed]")
'	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","Schd","Long","[QtyScheduled] - [Hung] - [Dipped] - [Packed]")
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","QtyWOTotal","Long","[QtyWOTotal0] - [QtyRework]")
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","ToGo","Long","[QtyWOTotal0] - [Schd]")
	
	'Held is just WO line ItemQTY - QTYPOS - QtyRework
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","Held","Long","[QtyWOTotal] - [QtyPos]")
	
	F.Data.DataTable.DeleteRow("dtMainGALVAWARE")
	F.Data.DataTable.Merge("dtAPTempLines","dtMainGALVAWARE",False,2)
	F.Data.DataTable.AcceptChanges("dtMainGALVAWARE")
	F.Data.DataTable.Close("dtAPTempLines")
	
	'Child Tables
	f.Intrinsic.Control.If(v.DataTable.dtPlaceHolder.Exists)
		gui.Form.GSGCMainGalvaware.ClearRows("gvTNID")
		gui.Form.GSGCMainGalvaware.ClearRows("gvOPS")
		F.Data.DataTable.DeleteRow("dtMainGALVAWARE$dtTNID")
		F.Data.DataTable.DeleteRow("dtMainGALVAWARE$dtOPS")		
	f.Intrinsic.Control.EndIf
	
#Region "Child Table for Transport Notes"

	F.Intrinsic.String.Build("Select Cast(WorkOrderID as Integer) as WO_ID, TransportNoteID, '' as MovementDesc from GAB_6559_Transport_WO where WorkOrderID in (Select ID from GAB_6559_Galvaware {0}) group by WorkOrderID, TransportNoteID",V.Local.sInvoicedFilter,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtChildTemp","con",V.Local.sSQL,True)
	
	'DATETIMEDELIVERY
	F.Data.Datatable.AddColumn("dtChildTemp","DATETIMEDELIVERY","Date")
	F.Data.Datatable.FillFromDictionary("dtChildTemp","dictTNIDDate","TransportNoteID","DATETIMEDELIVERY")
	F.Data.Dictionary.Close("dictTNIDDate")
	
	'TransportArrangementID
	F.Data.Dictionary.CreatefromSQL("dictArrangementID","con","select TransportNoteID, TransportArrangementID from GAB_6559_TransportNote")
	F.Data.Datatable.AddColumn("dtChildTemp","TransportArrangementID","Long",0)
	F.Data.Datatable.FillFromDictionary("dtChildTemp","dictArrangementID","TransportNoteID","TransportArrangementID")
	F.Data.Dictionary.Close("dictArrangementID")
	
	'DriverName
	F.Data.Dictionary.CreatefromSQL("dictDriver","con","select TransportNoteID, Rtrim(DriverName) from GAB_6559_TransportNote")
	F.Data.Datatable.AddColumn("dtChildTemp","DriverName","String","")
	F.Data.Datatable.FillFromDictionary("dtChildTemp","dictDriver","TransportNoteID","DriverName")
	F.Data.Dictionary.Close("dictDriver")
	
	'TransportArrangementDesc
	F.Data.Dictionary.CreatefromSQL("dictArrangementDesc","con","select TransportNoteID, RTRIM(Description) from GAB_6559_TransportNoteID")
	F.Data.Datatable.AddColumn("dtChildTemp","TransportArrangementDesc","String","")
	F.Data.Datatable.FillFromDictionary("dtChildTemp","dictArrangementDesc","TransportArrangementID","TransportArrangementDesc")
	F.Data.Dictionary.Close("dictArrangementDesc")
	
	'MovementType
	F.Data.Dictionary.CreatefromSQL("dictMovementType","con","select TransportNoteID, RTRIM(MovementType) from GAB_6559_TransportNoteID")
	F.Data.Datatable.AddColumn("dtChildTemp","MovementType","String","")
	F.Data.Datatable.FillFromDictionary("dtChildTemp","dictMovementType","TransportArrangementID","MovementType")
		F.Data.Dictionary.Close("dictMovementType")
	
	'dictionary for Movement Desc
	F.Data.Dictionary.Create("dictMovementDesc")
	F.Data.Dictionary.AddItem("dictMovementDesc","I","Inbound")
	F.Data.Dictionary.AddItem("dictMovementDesc","O","Outbound")
	F.Data.Dictionary.AddItem("dictMovementDesc","P","Possession")
	F.Data.Dictionary.SetDefaultReturn("dictMovementDesc","")
	F.Data.DataTable.FillFromDictionary("dtChildTemp","dictMovementDesc","MovementType","MovementDesc")
	F.Data.Dictionary.Close("dictMovementDesc")
	

#End Region ' Child Table for Transport Notes
	
#Region "Child Table for Operations"

	'dtMainGALVAWARE$dtOPS  Temp datatable
	F.Intrinsic.String.Build("Select Cast(ID as Integer) as WO_ID, Line, LID, Rtrim(Description) Description, WOStatusID, '' as WOStatus, RTRIM(ServiceID) as ServiceID, '' as ServiceDesc, ItemQTY, TagID, PriorityFlag, UnitQty from GAB_6559_Lines where WO_ID in (Select ID from GAB_6559_Galvaware {0})",V.Local.sInvoicedFilter,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtChildTemp2","con",V.Local.sSQL,True)
	
	
	'dict for WO Status
	F.Data.Datatable.FillFromDictionary("dtChildTemp2","dictStatus","WOStatusID","WOStatus")
	'Dict For Service Desc
	F.Data.Datatable.FillFromDictionary("dtChildTemp2","dictServiceDesc","ServiceID","ServiceDesc")
	
	'dictServiceFreight
	F.Data.Datatable.AddColumn("dtChildTemp2","Freight","Boolean",False)
	F.Data.Datatable.FillFromDictionary("dtChildTemp2","dictServiceFreight","ServiceID","Freight")
	
	'dictServiceQA
	F.Data.Datatable.AddColumn("dtChildTemp2","QA","Boolean",False)
	F.Data.Datatable.FillFromDictionary("dtChildTemp2","dictServiceQA","ServiceID","QA")
	
	'QtyScheduled
	F.Data.Dictionary.CreatefromSQL("dictQtyScheduled","con","Select LID, Cast(Sum(QuantityHung) as Integer) as QtyScheduled from GAB_6559_Job_Lines Group by LID;")
	F.Data.Dictionary.SetDefaultReturn("dictQtyScheduled",0)
	F.Data.Datatable.AddColumn("dtChildTemp2","QtyScheduled0","Long",0)
	F.Data.Datatable.FillFromDictionary("dtChildTemp2","dictQtyScheduled","LID","QtyScheduled0")
	F.Data.Dictionary.Close("dictQtyScheduled")
	
	'QtyHung
	F.Data.Dictionary.CreatefromSQL("dictQtyHung","con","Select LID, Cast(Sum(QuantityHung) as Integer) as QuantityHung from GAB_6559_Job_Lines where JobID in (Select JobID from GAB_6559_Job_Header where DateTimeCreated > '1950-01-01') Group by LID;")
	F.Data.Dictionary.SetDefaultReturn("dictQtyHung",0)
	F.Data.Datatable.AddColumn("dtChildTemp2","QtyHung0","Long",0)
	F.Data.Datatable.FillFromDictionary("dtChildTemp2","dictQtyHung","LID","QtyHung0")
	F.Data.Dictionary.Close("dictQtyHung")
	
	'QtyDipped
	F.Data.Dictionary.CreatefromSQL("dictQtyDipped","con","Select LID, Cast(Sum(QuantityHung) as Integer) as QuantityDipped from GAB_6559_Job_Lines where JobID in (Select JobID from GAB_6559_Job_Header where DateTimeCompleted > '1950-01-01') Group by LID;")
	F.Data.Dictionary.SetDefaultReturn("dictQtyDipped",0)
	F.Data.Datatable.AddColumn("dtChildTemp2","QtyDipped0","Long",0)
	F.Data.Datatable.FillFromDictionary("dtChildTemp2","dictQtyDipped","LID","QtyDipped0")
	F.Data.Dictionary.Close("dictQtyDipped")
	
	'QtyPacked
	F.Data.Dictionary.CreatefromSQL("dictQtyPacked","con","Select LID, Cast(Sum(QuantityHung) as Integer) as QuantityPacked from GAB_6559_Job_Lines where CheckedFlag = '1' Group by LID;")
	F.Data.Dictionary.SetDefaultReturn("dictQtyPacked",0)
	F.Data.Datatable.AddColumn("dtChildTemp2","QtyPacked0","Long",0)
	F.Data.Datatable.FillFromDictionary("dtChildTemp2","dictQtyPacked","LID","QtyPacked0")
	F.Data.Dictionary.Close("dictQtyPacked")
	
	'QtyInbound
	F.Data.Datatable.AddColumn("dtChildTemp2","QtyInbound","Long",0)
	F.Data.Dictionary.CreateFromSQL("dictInboundQTY","con","select LID, Sum(ItemQuantity) as QtyInbound from GAB_6559_Transport_WO where TransportNoteID in (Select TransportNoteID from GAB_6559_TransportNote where TransportArrangementID in (Select TransportNoteID from GAB_6559_TransportNoteId where MovementType = 'I')) group by LID;")
	F.Data.Dictionary.SetDefaultReturn("dictInboundQTY",0)
	F.Data.DataTable.FillFromDictionary("dtChildTemp2","dictInboundQTY","LID","QtyInbound")
	F.Data.Dictionary.Close("dictInboundQTY")
	
	'QtyOutbound
	F.Data.Datatable.AddColumn("dtChildTemp2","QtyOutbound","Long",0)
	F.Data.Dictionary.CreateFromSQL("dictOutboundQTY","con","select LID, Sum(ItemQuantity) as QtyOutbound from GAB_6559_Transport_WO where TransportNoteID in (Select TransportNoteID from GAB_6559_TransportNote where TransportArrangementID in (Select TransportNoteID from GAB_6559_TransportNoteId where MovementType = 'O')) group by LID;")
	F.Data.Dictionary.SetDefaultReturn("dictOutboundQTY",0)
	F.Data.DataTable.FillFromDictionary("dtChildTemp2","dictOutboundQTY","LID","QtyOutbound")
	F.Data.Dictionary.Close("dictOutboundQTY")
	
	'QtyPossession
	F.Data.Datatable.AddColumn("dtChildTemp2","QtyPossession","Long",0)
	F.Data.Dictionary.CreateFromSQL("dictPossQTY","con","select LID, Sum(ItemQuantity) as QtyPossession from GAB_6559_Transport_WO where TransportNoteID in (Select TransportNoteID from GAB_6559_TransportNote where TransportArrangementID in (Select TransportNoteID from GAB_6559_TransportNoteId where MovementType = 'P')) group by LID;")
	F.Data.Dictionary.SetDefaultReturn("dictPossQTY",0)
	F.Data.DataTable.FillFromDictionary("dtChildTemp2","dictPossQTY","LID","QtyPossession")
	F.Data.Dictionary.Close("dictPossQTY")
	
	'ToGo, Hold
	F.Data.DataTable.AddExpressionColumn("dtChildTemp2","FQ","Boolean","IIF([Freight] = True, True, IIF([QA] = True, True, False))")
	F.Data.DataTable.AddExpressionColumn("dtChildTemp2","ToGo","Long","IIF([FQ] = False, [ItemQTY] - [QtyScheduled0], 0)")
	F.Data.DataTable.AddExpressionColumn("dtChildTemp2","Hold","Long","IIF([FQ] = False, IIF([ServiceID] = 'ZZZZZZZZZZ', 0, [ItemQTY] - [QtyPossession]), 0)")
	F.Data.DataTable.AddExpressionColumn("dtChildTemp2","QtyScheduled","Long","IIF([FQ] = False, [QtyScheduled0], 0)")
	F.Data.DataTable.AddExpressionColumn("dtChildTemp2","QtyHung","Long","IIF([FQ] = False, [QtyHung0], 0)")
	F.Data.DataTable.AddExpressionColumn("dtChildTemp2","QtyDipped","Long","IIF([FQ] = False, [QtyDipped0], 0)")
	F.Data.DataTable.AddExpressionColumn("dtChildTemp2","QtyPacked","Long","IIF([FQ] = False, [QtyPacked0], 0)")
	
	'TotalWeight
	F.Data.DataTable.AddExpressionColumn("dtChildTemp2","TotalWeight","Float","[ItemQTY] * [UnitQty]")
	
	

	'ToGo
	'Hold
	'QtyScheduled
	'QtyHung
	'QtyDipped
	'QtyPacked
	'QtyInbound
	'QtyOutbound
	'QtyPossession

	'Alternate way of calculating values
	'ToGo, Schd, Hung, Dipped, Packed,
	'F.Data.DataTable.AddExpressionColumn("dtChildTemp2","Packed","Long","[QtyPacked]")
	'F.Data.DataTable.AddExpressionColumn("dtChildTemp2","Dipped","Long","[QtyDipped] - [Packed]")
	'F.Data.DataTable.AddExpressionColumn("dtChildTemp2","Hung","Long","[QtyHung] - [Dipped] - [Packed]")
	'F.Data.DataTable.AddExpressionColumn("dtChildTemp2","Schd","Long","[QtyScheduled] - [Hung] - [Dipped] - [Packed]")
	'F.Data.DataTable.AddExpressionColumn("dtChildTemp2","ToGo","Long","[ItemQTY] - [Schd] - [Hung] - [Dipped] - [Packed]")
	

#End Region ' Child Table for Operations

	f.Intrinsic.Control.If(v.DataTable.dtPlaceHolder.Exists)
		gui.Form.GSGCMainGalvaware.ClearRows("gvTNID")
		gui.Form.GSGCMainGalvaware.ClearRows("gvOPS")
	F.Intrinsic.Control.EndIf
	
	F.Data.DataTable.DeleteRow("dtMainGALVAWARE$dtTNID")
	F.Data.DataTable.DeleteRow("dtMainGALVAWARE$dtOPS")
	
	F.Data.DataTable.Merge("dtChildTemp","dtMainGALVAWARE$dtTNID",False,2)
	F.Data.DataTable.AcceptChanges("dtMainGALVAWARE$dtOPS")
	F.Data.DataTable.Close("dtChildTemp")
	F.Data.DataTable.Merge("dtChildTemp2","dtMainGALVAWARE$dtOPS",False,2)
	F.Data.DataTable.AcceptChanges("dtMainGALVAWARE$dtOPS")
	F.Data.DataTable.Close("dtChildTemp2")
	
	f.Intrinsic.Control.If(v.DataTable.dtPlaceHolder.Exists)
	
	F.Intrinsic.Control.Else
		F.Data.DataTable.Create("dtPlaceHolder",True)		
		F.Intrinsic.Control.CallSub(addrelation)
	F.Intrinsic.Control.EndIf
	
	
	F.Intrinsic.Control.CallSub(LoadChildgvTNID)
	F.Intrinsic.Control.CallSub(LoadChildgvOPS)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtMainGALVAWARE.End

Program.Sub.LoaddtJobSheet.Start
f.Intrinsic.Control.Try
V.Local.sSQL.Declare
V.Local.sTest.Declare
V.Local.bRet.Declare
V.Local.sCompleteFilter.Declare
	
	V.Global.bLoadData.Set(true)
	
	'Check if we need to show already invoiced orders. Defaulted to not show them.
	F.Intrinsic.Control.If(v.Screen.Form!chkCompleted.CheckedAsBoolean)
		V.Local.sCompleteFilter.Set("")
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("where Year(DateTimeCompleted) = '1900'",V.Local.sTest,V.Local.sCompleteFilter)
	F.Intrinsic.Control.EndIf
	
	'F.Intrinsic.String.Build("Select '' As Hrs, JobID, JobResourceID, '' as JobResource, DateTimeScheduled, DateTimeCreated, DateTimeCompleted, PreparedByEmployeeID, '' as EmployeeName, ProcessCount, JobReleaseFlag, Rtrim(Note) as Note from GAB_6559_Job_Header order by JobID Desc",V.Local.sTest, V.Local.sSQL)
	F.Intrinsic.String.Build("Select DATEDIFF(HOUR, CASE WHEN DateTimeCreated IS NULL OR DateTimeCreated = '1900-01-01 00:00:00.000' THEN NOW() ELSE DateTimeCreated END, CASE WHEN DateTimeCompleted IS NULL OR DateTimeCompleted = '1900-01-01 00:00:00.000' THEN NOW() ELSE DateTimeCompleted END) as Hrs, JobID, JobResourceID, '' as JobResource, DateTimeScheduled, DateTimeCreated, DateTimeCompleted, PreparedByEmployeeID, '' as EmployeeName, ProcessCount, JobReleaseFlag, Rtrim(Note) as Note from GAB_6559_Job_Header {0} order by JobID Desc;",V.Local.sCompleteFilter, V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtAPTempLines","con",V.Local.sSQL,TRUE)
	
			
	'Dictionary for ID, ValueUnit  from GAB_6559_Lines
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictJobResourceID","JobResourceID","JobResource")
	
	'Total weight for each JobID, need to sum wieght for each LID's QuantityHung on the JobID 
	F.Data.Dictionary.CreateFromSQL("dictWeight","con","Select JobID, Sum(A.QuantityHung * UnitQty) as Estimate from GAB_6559_Job_Lines A left join GAB_6559_Lines B on A.LID = B.LID group by JobID")
	F.Data.Dictionary.SetDefaultReturn("dictWeight",0.00)
	F.Data.DataTable.AddColumn("dtAPTempLines","Estimate","Float",0.00)
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictWeight","JobID","Estimate")
	F.Data.Dictionary.Close("dictWeight")
	
	'Dollar per rack
	F.Data.Dictionary.CreateFromSQL("dictValue0","con","Select JobID, SUM(A.QuantityHung*B.UnitQty*B.UnitPrice) as Value0 from GAB_6559_Job_Lines A Left Join GAB_6559_Lines B on A.LID = B.LID where ItmQtyBasedFlag = '0' Group by JobID;")
	F.Data.Dictionary.SetDefaultReturn("dictValue0",0.00)
	F.Data.DataTable.AddColumn("dtAPTempLines","Value0","Float",0.00)
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictValue0","JobID","Value0")
	F.Data.Dictionary.Close("dictValue0")
	
	F.Data.Dictionary.CreateFromSQL("dictValue1","con","Select JobID, SUM(A.QuantityHung*B.UnitPrice) as Value0 from GAB_6559_Job_Lines A Left Join GAB_6559_Lines B on A.LID = B.LID where ItmQtyBasedFlag = '1' Group by JobID;")
	F.Data.Dictionary.SetDefaultReturn("dictValue1",0.00)
	F.Data.DataTable.AddColumn("dtAPTempLines","Value1","Float",0.00)
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictValue1","JobID","Value1")
	F.Data.Dictionary.Close("dictValue1")
	
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","DollarsPerJobID","Float","[Value0] + [Value1]")
	
	'Total weight for each transportnote, need to sum wieght for each LID's ItemQuantity on the transportnote 

	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictEmployee","PreparedByEmployeeID","EmployeeName")
	
	F.Data.DataTable.DeleteRow("dtJobSheet")
	F.Data.DataTable.Merge("dtAPTempLines","dtJobSheet",False,2)
	F.Data.DataTable.AcceptChanges("dtJobSheet")
	F.Data.DataTable.Close("dtAPTempLines")


	'Child Tables
	f.Intrinsic.Control.If(v.DataTable.dtPlaceHolder2.Exists)
		gui.Form.GSGCJobSheet.ClearRows("gvJobLines")
		F.Data.DataTable.DeleteRow("dtJobSheet$dtLines")
	f.Intrinsic.Control.EndIf
	
	'dtJobSheet$dtLines  Temp Child datatable
	F.Intrinsic.String.Build("select Cast(JobID as Integer) as JobID, WorkOrderID as WO_ID, LID, QuantityHung from GAB_6559_Job_Lines where JobID in (Select JobID from GAB_6559_Job_Header {0})",V.Local.sCompleteFilter,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtChildTemp0","con",V.Local.sSQL,True)
	
	F.Data.DataTable.CreateFromSQL("dtChildTemp2","con","select LID, Line, ItemQty, RTRIM(Description) as Description, Rtrim(ServiceID) as ServiceID, WOStatusID from GAB_6559_Lines",True)
	
	'Left Join dtChildTemp0 A dtChildTemp2 B into dtChildTemp
	F.Data.Linq.Join(V.Enum.LinqJoinType!LeftJoin,V.Enum.LinqSourceType!DataTable,"dtChildTemp0*!*A",V.Enum.LinqSourceType!DataTable,"dtChildTemp2*!*B","A.LID = B.LID","A.JobID*!*A.WO_ID*!*A.LID*!*A.QuantityHung*!*B.Line*!*B.ItemQty*!*B.Description*!*B.ServiceID*!*B.WOStatusID","","","A.LID ASC","dtChildTemp",True)
	F.Data.DataTable.Close("dtChildTemp0")
	F.Data.DataTable.Close("dtChildTemp2")
	
	F.Data.DataTable.AddColumn("dtChildTemp","WOStatus","string","")
	F.Data.DataTable.AddColumn("dtChildTemp","ServiceDesc","string","")
	F.Data.DataTable.AddColumn("dtChildTemp","ProdNotes","string","")
	F.Data.DataTable.AddColumn("dtChildTemp","Customer","string","")
	F.Data.DataTable.AddColumn("dtChildTemp","ShipKey","string","")
	F.Data.DataTable.AddColumn("dtChildTemp","ShipToName","string","")
	F.Data.DataTable.AddColumn("dtChildTemp","BillToName","string","")
	
	'dict for WO Status
	F.Data.Datatable.FillFromDictionary("dtChildTemp","dictStatus","WOStatusID","WOStatus")
	'Dict For Service Desc
	F.Data.Datatable.FillFromDictionary("dtChildTemp","dictServiceDesc","ServiceID","ServiceDesc")
	'Dictionaries for ProdNotes, BillToName, ShipToName
	F.Data.Datatable.CreateFromSQL("dtGalvHeader","con","Select ID, RTRIM(Customer) as Customer, RTRIM(Customer) + '-' + RTRIM(Ship_Seq) as ShipKey, RTRIM(ProcessingNote) as ProcessingNote From GAB_6559_Galvaware", True)
	F.Data.Dictionary.CreateFromDataTable("dictWOCust","dtGalvHeader","ID","Customer")
	F.Data.Dictionary.CreateFromDataTable("dictWOShipKey","dtGalvHeader","ID","ShipKey")
	F.Data.Dictionary.CreateFromDataTable("dictWOProcNotes","dtGalvHeader","ID","ProcessingNote")
	F.Data.Dictionary.SetDefaultReturn("dictWOCust","")
	F.Data.Dictionary.SetDefaultReturn("dictWOShipKey","")
	F.Data.Dictionary.SetDefaultReturn("dictWOProcNotes","")
	F.Data.Datatable.FillFromDictionary("dtChildTemp","dictWOCust","WO_ID","Customer")
	F.Data.Datatable.FillFromDictionary("dtChildTemp","dictWOShipKey","WO_ID","ShipKey")
	F.Data.Datatable.FillFromDictionary("dtChildTemp","dictWOProcNotes","WO_ID","ProdNotes")
	F.Data.Datatable.FillFromDictionary("dtChildTemp","dictCustomer","Customer","BillToName")
	F.Data.Datatable.FillFromDictionary("dtChildTemp","dictCustXref","ShipKey","ShipToName")
	F.Data.Dictionary.Close("dictWOCust")
	F.Data.Dictionary.Close("dictWOShipKey")
	F.Data.Dictionary.Close("dictWOProcNotes")
	F.Data.DataTable.Close("dtGalvHeader")
	
	
	f.Intrinsic.Control.If(v.DataTable.dtPlaceHolder2.Exists)
		gui.Form.GSGCJobSheet.ClearRows("gvJobLines")
		F.Intrinsic.Control.EndIf
	
	F.Data.DataTable.DeleteRow("dtJobSheet$dtLines")
	
	F.Data.DataTable.Merge("dtChildTemp","dtJobSheet$dtLines",False,2)
	F.Data.DataTable.AcceptChanges("dtJobSheet$dtLines")
	F.Data.DataTable.Close("dtChildTemp")

	
	f.Intrinsic.Control.If(v.DataTable.dtPlaceHolder2.Exists)
	
	F.Intrinsic.Control.Else
		F.Data.DataTable.Create("dtPlaceHolder2",True)		
		F.Intrinsic.Control.CallSub(addrelationJobSheet)
	F.Intrinsic.Control.EndIf
	

	F.Intrinsic.Control.CallSub(LoadChildgvJobLines)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtJobSheet.End

Program.Sub.LoadSupplementaryData.Start
f.Intrinsic.Control.Try
V.Local.bRet.Declare
	
	
	'Dictionary for Service ID, Service Description from GAB_6559_Service
	f.Data.Dictionary.Exists("dictServiceDesc",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictServiceDesc")
	F.Intrinsic.Control.EndIf
	F.Data.Dictionary.CreatefromSQL("dictServiceDesc","con","Select RTRIM(SERVICEID), RTRIM(DESCRIPTION) From GAB_6559_Service")
	F.Data.Dictionary.SetDefaultReturn("dictServiceDesc","")
	
	'Dictionary for Service ID, UnitAbbreviation Description from GAB_6559_Service
	f.Data.Dictionary.Exists("dictServiceUnit",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictServiceUnit")
	F.Intrinsic.Control.EndIf
	F.Data.Dictionary.CreatefromSQL("dictServiceUnit","con","Select RTRIM(SERVICEID), RTRIM(UnitAbbreviation) From GAB_6559_Service")
	F.Data.Dictionary.SetDefaultReturn("dictServiceUnit","")
	
	'Dictionary for Service ID, Freight flag from GAB_6559_Service
	f.Data.Dictionary.Exists("dictServiceFreight",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictServiceFreight")
	F.Intrinsic.Control.EndIf
	F.Data.Dictionary.CreatefromSQL("dictServiceFreight","con","Select RTRIM(SERVICEID), Freight From GAB_6559_Service")
	F.Data.Dictionary.SetDefaultReturn("dictServiceFreight",False)
	
	'Dictionary for Service ID, QA flag from GAB_6559_Service
	f.Data.Dictionary.Exists("dictServiceQA",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictServiceQA")
	F.Intrinsic.Control.EndIf
	F.Data.Dictionary.CreatefromSQL("dictServiceQA","con","Select RTRIM(SERVICEID), QA From GAB_6559_Service")
	F.Data.Dictionary.SetDefaultReturn("dictServiceQA",False)
	
	f.Data.Dictionary.Exists("dictServiceUnitLong",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictServiceUnitLong")
	F.Intrinsic.Control.EndIf
	F.Data.Dictionary.CreatefromSQL("dictServiceUnitLong","con","Select RTRIM(SERVICEID), RTRIM(UnitDescription) From GAB_6559_Service")
	F.Data.Dictionary.SetDefaultReturn("dictServiceUnitLong","")
	
	f.Data.Dictionary.Exists("dictCustomer",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictCustomer")
	F.Intrinsic.Control.EndIf
	F.Data.Dictionary.CreatefromSQL("dictCustomer","con","Select RTRIM(CUSTOMER), RTRIM(NAME_CUSTOMER) From V_CUSTOMER_MASTER")
	F.Data.Dictionary.SetDefaultReturn("dictCustomer","")
	
	f.Data.Dictionary.Exists("dictCustMultiShip",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictCustMultiShip")
	F.Intrinsic.Control.EndIf
	F.Data.Dictionary.CreatefromSQL("dictCustMultiShip","con","Select RTRIM(CUSTOMER) + '-' + RTRIM(SHIP_SEQ), RTRIM(CUSTOMER_NAME) as CUSTOMER_NAME From OE_MULTI_SHIP UNION SELECT RTRIM(CUSTOMER) + '-' + 'DEFLT', RTRIM(NAME_CUSTOMER_SHIP) as CUSTOMER_NAME From V_CUSTOMER_SHIPTO")
	F.Data.Dictionary.SetDefaultReturn("dictCustMultiShip","")
	
	
	f.Data.Dictionary.Exists("dictCustXref",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictCustXref")
	F.Intrinsic.Control.EndIf
	F.Data.Dictionary.CreatefromSQL("dictCustXref","con","Select RTRIM(SHIP_KEY), RTRIM(CUSTOMER_NAME) From GAB_6559_Customer_Xref")
	F.Data.Dictionary.SetDefaultReturn("dictCustXref","")
	
	
'	f.Data.Dictionary.Exists("dictCustShip",V.Local.bRet)
'	F.Intrinsic.Control.If(V.Local.bRet)
'		F.Data.Dictionary.Close("dictCustShip")
'	F.Intrinsic.Control.EndIf
'	F.Data.Dictionary.CreatefromSQL("dictCustShip","con","Select RTRIM(CUSTOMER), RTRIM(NAME_CUSTOMER_SHIP) From V_CUSTOMER_SHIPTO")
'	F.Data.Dictionary.SetDefaultReturn("dictCustShip","")
	
	f.Data.Dictionary.Exists("dictStatus",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictStatus")
	F.Intrinsic.Control.EndIf
	F.Data.Dictionary.CreatefromSQL("dictStatus","con","Select WOStatusID, RTRIM(Description) From GAB_6559_WO_STATUS")
	F.Data.Dictionary.SetDefaultReturn("dictStatus","")
	
	f.Data.Dictionary.Exists("dictTransportINB",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictTransportINB")
	F.Intrinsic.Control.EndIf
	F.Data.Dictionary.CreatefromSQL("dictTransportINB","con","Select TransportNoteID, Rtrim(Description) From GAB_6559_TransportNoteId where MOVEMENTTYPE = 'I'")
	F.Data.Dictionary.SetDefaultReturn("dictTransportINB","")
	
	f.Data.Dictionary.Exists("dictTransportOUT",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictTransportOUT")
	F.Intrinsic.Control.EndIf
	F.Data.Dictionary.CreatefromSQL("dictTransportOUT","con","Select TransportNoteID, Rtrim(Description) From GAB_6559_TransportNoteId where MOVEMENTTYPE = 'O'")
	F.Data.Dictionary.SetDefaultReturn("dictTransportOUT","")
	
	f.Data.Dictionary.Exists("dictTransportPOS",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictTransportPOS")
	F.Intrinsic.Control.EndIf
	F.Data.Dictionary.CreatefromSQL("dictTransportPOS","con","Select TransportNoteID, Rtrim(Description) From GAB_6559_TransportNoteId where MOVEMENTTYPE = 'P'")
	F.Data.Dictionary.SetDefaultReturn("dictTransportPOS","")
	
	gui.FormWorkOrderDetails.ddlTransportNotesInbound.AddItems("Dictionary","dictTransportINB")
	gui.FormWorkOrderDetails.ddlTransportNotesOutbound.AddItems("Dictionary","dictTransportOUT")
	gui.FormWorkOrderDetails.ddlTransportNotesPos.AddItems("Dictionary","dictTransportPOS")



	f.Data.Dictionary.Exists("dictJobResourceID",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictJobResourceID")
	F.Intrinsic.Control.EndIf
	F.Data.Dictionary.CreatefromSQL("dictJobResourceID","con","Select JobResourceID, Rtrim(Description) Description From GAB_6559_Job_Resource")
	F.Data.Dictionary.SetDefaultReturn("dictJobResourceID","")
	
	f.Data.Dictionary.Exists("dictJobResourceActive",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictJobResourceActive")
	F.Intrinsic.Control.EndIf
	F.Data.Dictionary.CreatefromSQL("dictJobResourceActive","con","Select JobResourceID, Rtrim(Description) Description From GAB_6559_Job_Resource where RetiredFlag = '0'")
	F.Data.Dictionary.SetDefaultReturn("dictJobResourceActive","")
	
	f.Data.Dictionary.Exists("dictEmployee",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictEmployee")
	F.Intrinsic.Control.EndIf
	F.Data.Dictionary.CreateFromSQL("dictEmployee","con","select EmployeeID, RTRIM(LastName) + ', ' + RTRIM(FirstName) from GAB_6559_Employee")
	F.Data.Dictionary.SetDefaultReturn("dictEmployee","")
	
	f.Data.Dictionary.Exists("dictEmployeeActive",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictEmployeeActive")
	F.Intrinsic.Control.EndIf
	F.Data.Dictionary.CreateFromSQL("dictEmployeeActive","con","select EmployeeID, RTRIM(LastName) + ', ' + RTRIM(FirstName) from GAB_6559_Employee where CeasedEmployment = '0'")
	F.Data.Dictionary.SetDefaultReturn("dictEmployeeActive","")
	
	f.Data.Dictionary.Exists("dictMeasurementDevices",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictMeasurementDevices")
	F.Intrinsic.Control.EndIf
	F.Data.Dictionary.CreateFromSQL("dictMeasurementDevices","con","select MeasurementDeviceID, RTRIM(Description) as Description from GAB_6559_Devices_List")
	F.Data.Dictionary.SetDefaultReturn("dictMeasurementDevices","")
	
	f.Data.Dictionary.Exists("dictReworkType",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictReworkType")
	F.Intrinsic.Control.EndIf
	F.Data.Dictionary.CreateFromSQL("dictReworkType","con","select ReworkTypeID, Rtrim(Description) as Description from GAB_6559_Rework_Type;")
	F.Data.Dictionary.SetDefaultReturn("dictReworkType","")
	
	gui.FormJobSheet.ddlPreparedby.AddItem("","0")
	gui.FormJobSheet.ddlPreparedby.AddItems("Dictionary","dictEmployeeActive")
	gui.FormJobSheet.ddlScheduledby.AddItem("","0")
	gui.FormJobSheet.ddlScheduledby.AddItems("Dictionary","dictEmployeeActive")
	gui.FormQA.ddlLoggedBy.AddItem("","0")
	gui.FormQA.ddlLoggedBy.AddItems("Dictionary","dictEmployeeActive")
	gui.FormJobSheet.ddlResource.AddItem("","0")
	gui.FormJobSheet.ddlResource.AddItems("Dictionary","dictJobResourceActive")
	gui.FormQA.ddlMeasurementDevice.AddItem("","0")
	gui.FormQA.ddlMeasurementDevice.AddItems("Dictionary","dictMeasurementDevices")
	
	'Rework DDLs
	gui.FormRework.ddlReworkType.AddItem("","0")
	gui.FormRework.ddlReworkType.AddItems("Dictionary","dictReworkType")
	gui.FormRework.ddlInspectedby.AddItem("","0")
	gui.FormRework.ddlInspectedby.AddItems("Dictionary","dictEmployeeActive")
	
	
	f.Data.Dictionary.Exists("dictYard",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictYard")
	F.Intrinsic.Control.EndIf
	F.Data.Dictionary.CreateFromSQL("dictYard","con","select YardID, Rtrim(Small_Desc) as Small_Desc from GAB_6559_Yard;")
	F.Data.Dictionary.SetDefaultReturn("dictYard","")
	
	gui.FormWorkOrderDetails.ddlOrderItemsYard1.AddItem("","0")
	Gui.FormWorkOrderDetails.ddlOrderItemsYard1.AddItems("Dictionary","dictYard")
	
	gui.FormWorkOrderDetails.ddlOrderItemsYard2.AddItem("","0")
	Gui.FormWorkOrderDetails.ddlOrderItemsYard2.AddItems("Dictionary","dictYard")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadSupplementaryData.End

Program.Sub.LoaddtQuotelist.Start
f.Intrinsic.Control.Try
	V.Local.sPlaceHolder.Declare
	V.Local.sSQL.Declare
	V.Local.sPriceGroupID.Declare
	V.Local.sRet.Declare
	V.Local.sShipKey.Declare
	V.Local.sShipSeq.Declare
	V.Local.sCust.Declare
	V.Local.sCust.Set(V.Screen.FormWorkOrderDetails!txtCustomerCode.Text)
	V.Local.sShipSeq.Set(V.Screen.FormWorkOrderDetails!txtCustomerShipTo.Text)
	
'	'Get PriceGroupID from Shipkey
	F.Intrinsic.String.Build("{0}-{1}",V.Local.sCust.RTrim,V.Local.sShipSeq.RTrim,V.Local.sShipKey)
'	F.Intrinsic.String.Build("Select Top 1 PriceGroupID From GAB_6559_Customer_Xref where SHIP_KEY = '{0}'",V.Local.sShipKey.PSQLFriendly,V.Local.sSQL)
'	F.odbc.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Global.bPriceGroup.Not)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf

	
	F.Intrinsic.String.Build("select QID, QHID, RTRIM(QuoteID) as QuoteID, RTRIM(SERVICEID) as ID, '' as Service, UnitPrice as Price, Cast(00.00 as double) as MinCharge, UnitPricePriority as Priority, '' as Unit, '' as UnitAbbreviation, ItemQuantityBasedFlag as ItmQtyBased, '' as CustomerReference, '' as INTDescription, '' as QuotedBy from GAB_6559_Quote_Lines where QHID in (Select QHID from GAB_6559_Quote_Head where CustomerKey = '{0}')",V.Local.sShipKey.PSQLFriendly,V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtAPTempLines","con",v.Local.sSQL,TRUE)
	
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictServiceDesc","ID","Service")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictServiceUnit","ID","UnitAbbreviation")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictServiceUnitLong","ID","Unit")
	
	F.Intrinsic.String.Build("Select QHID, RTRIM(CustomerReference) as CustomerReference, RTRIM(QuotedBy) as QuotedBy, RTRIM(Description) as Description, ValidFrom, ValidUntil, Estimate From GAB_6559_Quote_Head",V.Local.sPlaceHolder,V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtQuoteHead","con",v.Local.sSQL,TRUE)
	F.Data.Dictionary.CreateFromDatatable("dictQTReference","dtQuoteHead","QHID","CustomerReference")
	F.Data.Dictionary.CreateFromDatatable("dictQuotedBy","dtQuoteHead","QHID","QuotedBy")
	F.Data.Dictionary.CreateFromDatatable("dictDescription","dtQuoteHead","QHID","Description")
	F.Data.Dictionary.CreateFromDatatable("dictValidFrom","dtQuoteHead","QHID","ValidFrom")
	F.Data.Dictionary.CreateFromDatatable("dictValidUntil","dtQuoteHead","QHID","ValidUntil")
	F.Data.Dictionary.CreateFromDatatable("dictEstimate","dtQuoteHead","QHID","Estimate")
	F.Data.DataTable.Close("dtQuoteHead")
	
	'Quote Refenence
	F.Data.Dictionary.SetDefaultReturn("dictQTReference","")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictQTReference","QHID","CustomerReference")
	F.Data.Dictionary.Close("dictQTReference")
	
	'Quote QuotedBy
	F.Data.Dictionary.SetDefaultReturn("dictQuotedBy","")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictQuotedBy","QHID","QuotedBy")
	F.Data.Dictionary.Close("dictQuotedBy")
	
	'Quote Description
	F.Data.Dictionary.SetDefaultReturn("dictDescription","")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictDescription","QHID","INTDescription")
	F.Data.Dictionary.Close("dictDescription")
	
	'Quote ValidFrom
	F.Data.DataTable.AddColumn("dtAPTempLines","ValidFrom","Date","1900-01-01")
	F.Data.Dictionary.SetDefaultReturn("dictValidFrom","1900-01-01")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictValidFrom","QHID","ValidFrom")
	F.Data.Dictionary.Close("dictValidFrom")
	
	'Quote ValidUntil
	F.Data.DataTable.AddColumn("dtAPTempLines","ValidUntil","Date","1900-01-01")
	F.Data.Dictionary.SetDefaultReturn("dictValidUntil","1900-01-01")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictValidUntil","QHID","ValidUntil")
	F.Data.Dictionary.Close("dictValidUntil")
	
	'Quote Estimate
	F.Data.DataTable.AddColumn("dtAPTempLines","Estimate","Float",0.00)
	F.Data.Dictionary.SetDefaultReturn("dictEstimate",0.00)
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictEstimate","QHID","Estimate")
	F.Data.Dictionary.Close("dictEstimate")
	
	'Quote Actual_Weight
	F.Data.DataTable.AddColumn("dtAPTempLines","Actual_Weight","Float",0.00)
	F.Data.Dictionary.CreateFromSQL("dictActual","con","select RTRIM(QuoteID) as QuoteID, Sum(UnitQty) as UnitQty from GAB_6559_Lines where ItmQtyBasedFlag <> '1' group by QuoteID")
	F.Data.Dictionary.SetDefaultReturn("dictActual",0.00)
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictActual","QuoteID","Actual_Weight")
	F.Data.Dictionary.Close("dictActual")
	
	'Standard Weight
	F.Data.DataTable.AddColumn("dtAPTempLines","Standard_Weight","Float",0.00)
	F.Data.Dictionary.CreateFromSQL("dictStandardW","con","select RTRIM(SERVICEID), StandardWeight from GAB_6559_Service")
	F.Data.Dictionary.SetDefaultReturn("dictStandardW",0.00)
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictStandardW","ID","Standard_Weight")
	F.Data.Dictionary.Close("dictStandardW")
	
	'Merge
	f.Data.Datatable.DeleteRow("dtQuoteList")
	f.Data.Datatable.Merge("dtAPTempLines","dtQuoteList",false,2)
	F.Data.DataTable.AcceptChanges("dtQuoteList")
	f.Data.Datatable.Close("dtAPTempLines")

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtQuotelist.End

Program.Sub.LoaddtPriceList.Start
f.Intrinsic.Control.Try

	V.Local.sSQL.Declare
	V.Local.sPriceGroupID.Declare
	V.Local.sRet.Declare
	V.Local.sShipKey.Declare
	V.Local.sShipSeq.Declare
	V.Local.sCust.Declare
	V.Local.sCust.Set(V.Screen.FormWorkOrderDetails!txtCustomerCode.Text)
	V.Local.sShipSeq.Set(V.Screen.FormWorkOrderDetails!txtCustomerShipTo.Text)
	
	'Get PriceGroupID from Shipkey
	F.Intrinsic.String.Build("{0}-{1}",V.Local.sCust.RTrim,V.Local.sShipSeq.RTrim,V.Local.sShipKey)
	F.Intrinsic.String.Build("Select Top 1 PriceGroupID From GAB_6559_Customer_Xref where SHIP_KEY = '{0}'",V.Local.sShipKey.PSQLFriendly,V.Local.sSQL)
	F.odbc.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
		F.Intrinsic.UI.Msgbox("CUST-SHIPSEQ does not have a PriceGroup Attached to it. Please set one up before selecting a service.")
		V.Global.bPriceGroup.Set(False)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.Else
		v.Local.sPriceGroupID.Set(V.Local.sRet)
		V.Global.bPriceGroup.Set(True)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("select RTRIM(SERVICEID) as ID, '' as Service, Price, PriceMinCharge as MinCharge, PricePriority as Priority, '' as Unit, '' as UnitAbbreviation, ItemQuantityBasedFlag as ItmQtyBased from GAB_6559_Price_Code where PriceGroupID = '{0}'",V.Local.sPriceGroupID.PSQLFriendly,V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtAPTempLines","con",v.Local.sSQL,TRUE)
	
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictServiceDesc","ID","Service")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictServiceUnit","ID","UnitAbbreviation")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictServiceUnitLong","ID","Unit")
	
	'Standard Weight
	F.Data.DataTable.AddColumn("dtAPTempLines","Standard_Weight","Float",0.00)
	F.Data.Dictionary.CreateFromSQL("dictStandardW","con","select RTRIM(SERVICEID), StandardWeight from GAB_6559_Service")
	F.Data.Dictionary.SetDefaultReturn("dictStandardW",0.00)
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictStandardW","ID","Standard_Weight")
	F.Data.Dictionary.Close("dictStandardW")
	
	f.Data.Datatable.DeleteRow("dtPriceList")
	f.Data.Datatable.Merge("dtAPTempLines","dtPriceList",false,2)
	F.Data.DataTable.AcceptChanges("dtPriceList")
	f.Data.Datatable.Close("dtAPTempLines")

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtPriceList.End

Program.Sub.LoaddtOrderItemstab.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sWOID.Declare
	V.Local.sWOID.Set(V.Args.WOID)
	
	F.Intrinsic.String.Build("Select LID, ID as WO_ID, Line, WOStatusID, '' as Status, RTRIM(ServiceID) as ServiceID, '' as Service, RTRIM(QuoteID) as QuoteID, PriceMinCharge, UnitPrice, PricePriority, PriorityFlag, UnitQty, RTRIM(Unit) as Unit, Cast(ItemQty as NUMERIC(16,2)) as ItemQty, RTRIM(Description) as DESCRIPTION, RTRIM(TagID) as TagID, RTRIM(Yard) as Yard, RTRIM(Yard2) as Yard2, ItmQtyBasedFlag, NoQuenchFlag, Cast(0 as bit) as Freight, Cast(0 as bit) as QA, RTRIM(SysUserLastAccess) as SysUserLastAccess, SysUserLastAccessDateTime from GAB_6559_LINES where ID = '{0}'",V.Local.sWOID, V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtAPTempLines","con",V.Local.sSQL,TRUE)
	
	'Fill order line Status from dictStatus.WOStatusID
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictStatus","WOStatusID","Status")
	
	'Fill order line Status from dictServiceDesc.ServiceID
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictServiceDesc","ServiceID","Service")
	
	'Fill Freight flag from dictServiceFreight.ServiceID
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictServiceFreight","ServiceID","Freight")
	
	'Fill QA flag from dictServiceQA.ServiceID
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictServiceQA","ServiceID","QA")
	
	F.Data.Datatable.AddExpressionColumn("dtAPTempLines","TotalWeight","Float","[ItemQty] * [UnitQty]")
	
	F.Data.Datatable.AddExpressionColumn("dtAPTempLines","UnitPrice_WithPrio","Float","IIF([PriorityFlag] = True, [UnitPrice] + [PricePriority], [UnitPrice])")
	
	F.Data.Datatable.AddExpressionColumn("dtAPTempLines","TotalPrice0","Float","IIF([ItmQtyBasedFlag] = True, [ItemQty] * [UnitPrice_WithPrio], [UnitQty] * [ItemQty] * [UnitPrice_WithPrio])")
	'F.Data.Datatable.AddExpressionColumn("dtAPTempLines","TotalPrice0","Float","IIF([ItmQtyBasedFlag] = True, [ItemQty] * [UnitPrice_WithPrio], IIF([Freight] = True, [UnitQty] * [UnitPrice_WithPrio], [UnitQty] * [ItemQty] * [UnitPrice_WithPrio]))")
	'F.Data.Datatable.AddExpressionColumn("dtAPTempLines","TotalPrice1","Float","IIF([Freight] = True, [TotalPrice0], [ItemQty] * [TotalPrice0])")
	F.Data.Datatable.AddExpressionColumn("dtAPTempLines","TotalPrice","Float","IIF([TotalPrice0] < [PriceMinCharge], [PriceMinCharge], [TotalPrice0])")
	
	F.Intrinsic.Control.CallSub(ClearOrderItemsTextboxes)
	
	
	F.Data.DataTable.DeleteRow("dtOrderItemstab")
	F.Data.DataTable.Merge("dtAPTempLines","dtOrderItemstab",False,2)
	F.Data.DataTable.AcceptChanges("dtOrderItemstab")
	F.Data.DataTable.Close("dtAPTempLines")

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtOrderItemstab.End

Program.Sub.LoaddtTransportDelivery.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sWOID.Declare
	V.Local.sWOID.Set(V.Args.WOID)
	
	gui.FormWorkOrderDetails.GSGCTransportDelivery.Visible(False)
	Gui.FormWorkOrderDetails.GSGCTransportDelivery.SuspendLayout()
	
	F.Intrinsic.String.Build("select A.TransportNoteID, B.DateTimeDelivery, B.TransportArrangementID from GAB_6559_Transport_WO A Left join GAB_6559_TransportNote B on A.TransportNoteID = B.TransportNoteID where WorkOrderID = '{0}' Group by A.TransportNoteID,B.DateTimeDelivery,B.TransportArrangementID",V.Local.sWOID, V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtAPTempLines","con",V.Local.sSQL,TRUE)
	
	'TransportArrangement from TransportArrangementID.TransportArrangementID
	F.Data.Datatable.AddColumn("dtAPTempLines","TransportArrangement","String","")
	F.Data.Dictionary.CreatefromSQL("dictTransportDesc0","con","Select TransportNoteID, Rtrim(Description) From GAB_6559_TransportNoteId")
	F.Data.Dictionary.SetDefaultReturn("dictTransportDesc0","")
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictTransportDesc0","TransportArrangementID","TransportArrangement")
	F.Data.Dictionary.Close("dictTransportDesc0")
	
	F.Data.DataTable.DeleteRow("dtTransportDelivery")
	F.Data.DataTable.Merge("dtAPTempLines","dtTransportDelivery",False,2)
	F.Data.DataTable.AcceptChanges("dtTransportDelivery")
	F.Data.DataTable.Close("dtAPTempLines")
	Gui.FormWorkOrderDetails.GSGCTransportDelivery.ResumeLayout()
	gui.FormWorkOrderDetails.GSGCTransportDelivery.Visible(True)


	'TransportNoteID
	'DateTimeDelivery
	'TransportArrangementID
	'TransportArrangement
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtTransportDelivery.End

Program.Sub.LoaddtTransportNoteItems.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sWOID.Declare
	V.Local.sWOID.Set(V.Args.WOID)
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.Visible(False)
	Gui.FormWorkOrderDetails.GSGCTransportNoteItems.SuspendLayout()
	
	F.Intrinsic.String.Build("Select LID, ID as WO_ID, Line, RTRIM(ServiceID) as ServiceID, '' as ServiceDesc, ItemQty, RTRIM(Description) as DESCRIPTION, RTRIM(TagID) as TagID, Cast(0 as bit) as Freight, Cast(0 as bit) as QA, WOStatusID, Final from GAB_6559_LINES where ID = '{0}'",V.Local.sWOID, V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtAPTempLines0","con",V.Local.sSQL,TRUE)
	
	'Fill Freight flag from dictServiceFreight.ServiceID
	F.Data.Datatable.FillFromDictionary("dtAPTempLines0","dictServiceFreight","ServiceID","Freight")
	
	'Fill QA flag from dictServiceQA.ServiceID
	F.Data.Datatable.FillFromDictionary("dtAPTempLines0","dictServiceQA","ServiceID","QA")
	
	F.Data.Datatable.FillFromDictionary("dtAPTempLines0","dictServiceDesc","ServiceID","ServiceDesc")
	
	
	'Filter to get rid of Freight and QA lines
	F.Data.DataView.Create("dtAPTempLines0","dvAPTempLines0",22,"Freight = False and QA = False","")
	F.Data.DataView.ToDataTable("dtAPTempLines0","dvAPTempLines0","dtAPTempLines",True)
	F.Data.DataView.Close("dtAPTempLines0","dvAPTempLines0")
	F.Data.Datatable.Close("dtAPTempLines0")
	
	'QtyScheduled
	F.Data.Dictionary.CreatefromSQL("dictQtyScheduled","con","Select LID, Cast(Sum(QuantityHung) as Integer) as QtyScheduled from GAB_6559_Job_Lines Group by LID;")
	F.Data.Dictionary.SetDefaultReturn("dictQtyScheduled",0)
	F.Data.Datatable.AddColumn("dtAPTempLines","QtyScheduled","Long",0)
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictQtyScheduled","LID","QtyScheduled")
	F.Data.Dictionary.Close("dictQtyScheduled")
	
	'QtyHung
	F.Data.Dictionary.CreatefromSQL("dictQtyHung","con","Select LID, Cast(Sum(QuantityHung) as Integer) as QuantityHung from GAB_6559_Job_Lines where JobID in (Select JobID from GAB_6559_Job_Header where DateTimeCreated > '1950-01-01') Group by LID;")
	F.Data.Dictionary.SetDefaultReturn("dictQtyHung",0)
	F.Data.Datatable.AddColumn("dtAPTempLines","QtyHung","Long",0)
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictQtyHung","LID","QtyHung")
	F.Data.Dictionary.Close("dictQtyHung")
	
	'QtyDipped
	F.Data.Dictionary.CreatefromSQL("dictQtyDipped","con","Select LID, Cast(Sum(QuantityHung) as Integer) as QuantityDipped from GAB_6559_Job_Lines where JobID in (Select JobID from GAB_6559_Job_Header where DateTimeCompleted > '1950-01-01') Group by LID;")
	F.Data.Dictionary.SetDefaultReturn("dictQtyDipped",0)
	F.Data.Datatable.AddColumn("dtAPTempLines","QtyDipped","Long",0)
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictQtyDipped","LID","QtyDipped")
	F.Data.Dictionary.Close("dictQtyDipped")
	
	'QtyPacked
	F.Data.Dictionary.CreatefromSQL("dictQtyPacked","con","Select LID, Cast(Sum(QuantityHung) as Integer) as QuantityPacked from GAB_6559_Job_Lines where CheckedFlag = '1' Group by LID;")
	F.Data.Dictionary.SetDefaultReturn("dictQtyPacked",0)
	F.Data.Datatable.AddColumn("dtAPTempLines","QtyPacked","Long",0)
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictQtyPacked","LID","QtyPacked")
	F.Data.Dictionary.Close("dictQtyPacked")
	
	'QtyInbound
	F.Data.Datatable.AddColumn("dtAPTempLines","QtyInbound","Long",0)
	F.Data.Dictionary.CreateFromSQL("dictInboundQTY","con","select LID, Sum(ItemQuantity) as QtyInbound from GAB_6559_Transport_WO where TransportNoteID in (Select TransportNoteID from GAB_6559_TransportNote where TransportArrangementID in (Select TransportNoteID from GAB_6559_TransportNoteId where MovementType = 'I')) group by LID;")
	F.Data.Dictionary.SetDefaultReturn("dictInboundQTY",0)
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictInboundQTY","LID","QtyInbound")
	F.Data.Dictionary.Close("dictInboundQTY")
	
	'QtyOutbound
	F.Data.Datatable.AddColumn("dtAPTempLines","QtyOutbound","Long",0)
	F.Data.Dictionary.CreateFromSQL("dictOutboundQTY","con","select LID, Sum(ItemQuantity) as QtyOutbound from GAB_6559_Transport_WO where TransportNoteID in (Select TransportNoteID from GAB_6559_TransportNote where TransportArrangementID in (Select TransportNoteID from GAB_6559_TransportNoteId where MovementType = 'O')) group by LID;")
	F.Data.Dictionary.SetDefaultReturn("dictOutboundQTY",0)
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictOutboundQTY","LID","QtyOutbound")
	F.Data.Dictionary.Close("dictOutboundQTY")
	
	'QtyPossession
	F.Data.Datatable.AddColumn("dtAPTempLines","QtyPossession","Long",0)
	F.Data.Dictionary.CreateFromSQL("dictPossQTY","con","select LID, Sum(ItemQuantity) as QtyPossession from GAB_6559_Transport_WO where TransportNoteID in (Select TransportNoteID from GAB_6559_TransportNote where TransportArrangementID in (Select TransportNoteID from GAB_6559_TransportNoteId where MovementType = 'P')) group by LID;")
	F.Data.Dictionary.SetDefaultReturn("dictPossQTY",0)
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictPossQTY","LID","QtyPossession")
	F.Data.Dictionary.Close("dictPossQTY")
	
	'ToGo, Hold
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","ToGo","Long","[ItemQTY] - [QtyScheduled]")
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","Hold","Long","IIF([ServiceID] = 'ZZZZZZZZZZ', 0, [ItemQTY] - [QtyPossession])")
	
	F.Data.DataTable.DeleteRow("dtTransportNoteItems")
	F.Data.DataTable.Merge("dtAPTempLines","dtTransportNoteItems",False,2)
	F.Data.DataTable.AcceptChanges("dtTransportNoteItems")
	F.Data.DataTable.Close("dtAPTempLines")
	Gui.FormWorkOrderDetails.GSGCTransportNoteItems.ResumeLayout()
	gui.FormWorkOrderDetails.GSGCTransportNoteItems.Visible(True)

	'Line
	'TagID
	'DESCRIPTION
	'ToGo = [ItemQTY] - [QtyScheduled]
	'Hold = [ItemQTY] - [Pssess]
	'QtyScheduled = [QtyScheduled]
	'QtyHung = [QtyHung]
	'QtyDipped = [QtyDipped]
	'QtyPacked = [QtyPacked]
	'QtyInbound
	'QtyOutbound
	'QtyPossession
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtTransportNoteItems.End

Program.Sub.LoaddtWMLines.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sWOID.Declare
	V.Local.bRet.Declare
	'V.Local.sWOID.Set(V.Args.WOID)
	
	F.Data.DataView.Create("dtOrderItemstab","dvWMLines","22","Freight = False and QA = False","")
	f.Data.DataView.ToDataTable("dtOrderItemstab","dvWMLines","dtAPTempLines")
	F.Data.DataView.Close("dtOrderItemstab","dvWMLines")
	
	F.Data.DataTable.AddColumn("dtAPTempLines","Select","Boolean",False)
	F.Data.Datatable.AddExpressionColumn("dtAPTempLines","WeightsKey","string","[ServiceID] + '-' + [UnitPrice] + '-' + [PriorityFlag]")
	
	'dictionary for cell value change on the Select column
	f.Data.Dictionary.Exists("dictWeightsKey",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictWeightsKey")
	F.Intrinsic.Control.EndIf
	F.Data.Dictionary.Create("dictWeightsKey")
	F.Data.Dictionary.SetDefaultReturn("dictWeightsKey",False)
	
	F.Data.DataTable.DeleteRow("dtWMLines")
	F.Data.DataTable.Merge("dtAPTempLines","dtWMLines",False,2)
	F.Data.DataTable.AcceptChanges("dtWMLines")
	F.Data.DataTable.Close("dtAPTempLines")

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtWMLines.End

Program.Sub.LoaddtWMAggregate.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sWOID.Declare
	V.Local.fTotalWeight.Declare
	V.Local.iCnt.Declare
	V.Local.sFilter.Declare
	V.Local.fTotalItemQty.Declare
	'V.Local.sWOID.Set(V.Args.WOID)
	
	F.Data.DataView.Create("dtWMLines","dvWMAggregate","22","","")
	F.Data.DataView.ToDataTableDistinct("dtWMLines","dvWMAggregate","dtAPTempLines","ServiceID*!*PriorityFlag*!*Service*!*ItmQtyBasedFlag*!*Unit*!*UnitPrice*!*QuoteID*!*WeightsKey")
	F.Data.DataView.Close("dtWMLines","dvWMAggregate")
	
	F.Data.DataTable.AddColumn("dtAPTempLines","TotalWeight1","Float",0.0000)
	F.Data.DataTable.AddColumn("dtAPTempLines","TotalItemQty","Float",0.00)
	
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtAPTempLines.RowCount--,1)
		F.Intrinsic.String.Build("[ServiceID] = '{0}' and [PriorityFlag] = '{1}' and UnitPrice = '{2}'",V.DataTable.dtAPTempLines(V.Local.iCnt).ServiceID!Fieldval,V.DataTable.dtAPTempLines(V.Local.iCnt).PriorityFlag!Fieldval, V.DataTable.dtAPTempLines(V.Local.iCnt).UnitPrice!Fieldval,V.Local.sFilter)
		F.Data.DataTable.Compute("dtWMLines","SUM(TotalWeight)",V.Local.sFilter,V.Local.fTotalWeight)	
		F.Data.DataTable.Compute("dtWMLines","SUM(ItemQty)",V.Local.sFilter,V.Local.fTotalItemQty)
		F.Data.Datatable.SetValue("dtAPTempLines",V.Local.iCnt,"TotalWeight1",V.local.fTotalWeight,"TotalItemQty",V.Local.fTotalItemQty)	
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	
	F.Data.DataTable.DeleteRow("dtWMAggregate")
	F.Data.DataTable.Merge("dtAPTempLines","dtWMAggregate",False,2)
	F.Data.DataTable.AcceptChanges("dtWMAggregate")
	F.Data.DataTable.Close("dtAPTempLines")

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtWMAggregate.End

Program.Sub.LoaddtLabel.Start
f.Intrinsic.Control.Try
	V.Local.sCustomerPO.Declare
	V.Local.sCustName.Declare
	V.Local.bQA.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.LabelType)
	F.Intrinsic.Control.Case("Job")
		'Pull data straight from dtJobCurrent
		F.Data.DataView.Create("dtJobCurrent","dvLabel","22","","")
		f.Data.DataView.ToDataTable("dtJobCurrent","dvLabel","dtAPTempLines")
		F.Data.DataView.Close("dtJobCurrent","dvLabel")
		
		'grab CustPO from DB with a dictionary
		F.Data.Dictionary.CreateFromSQL("dictCustPO","con","Select ID, RTRIM(CUSTOMER_REFERENCE) as CUSTOMER_REFERENCE from GAB_6559_Galvaware")
		F.Data.Dictionary.SetDefaultReturn("dictCustPO","")
		F.Data.Datatable.AddColumn("dtAPTempLines","CustomerPO","String","")
		F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictCustPO","WO_ID","CustomerPO")
		F.Data.Dictionary.Close("dictCustPO")

		F.Data.Datatable.AddExpressionColumn("dtAPTempLines","PACK_QTY","Long","[QuantityHung]")
		F.Data.Datatable.AddExpressionColumn("dtAPTempLines","Quality","String","IIF([QA] = True, 'QA', '')")
		
	F.Intrinsic.Control.Case("WorkOrder")
		'Pull data straight from dtOrderItemstab
		F.Data.DataView.Create("dtOrderItemstab","dvLabel","22","","")
		f.Data.DataView.ToDataTable("dtOrderItemstab","dvLabel","dtAPTempLines")
		F.Data.DataView.Close("dtOrderItemstab","dvLabel")
		V.Local.sCustomerPO.Set(V.Screen.FormWorkOrderDetails!txtCustomerReference.Text)
		F.Data.Datatable.AddColumn("dtAPTempLines","CustomerPO","String",V.Local.sCustomerPO.Trim)
		F.Data.Datatable.AddColumn("dtAPTempLines","PACK_QTY","Long",0)
		
		V.Local.bQA.Set(V.Screen.FormWorkOrderDetails!chkQA.CheckedAsBoolean)
		F.Intrinsic.Control.If(V.Local.bQA)
			F.Data.DataTable.AddColumn("dtAPTempLines","Quality","String","QA")
		F.Intrinsic.Control.Else
			F.Data.DataTable.AddColumn("dtAPTempLines","Quality","String","")
		F.Intrinsic.Control.EndIf
		
		V.Local.sCustName.Set(V.Screen.FormWorkOrderDetails!txtCustomerName.Text)
		F.Data.DataTable.AddColumn("dtAPTempLines","CustName","String",V.Local.sCustName.Trim)
		
	F.Intrinsic.Control.EndSelect
	
	'dictTransportOUT
	F.Data.DataTable.AddColumn("dtAPTempLines","OUTBOUNDID","Long",0)
	F.Data.Dictionary.CreateFromSQL("dictOutboundID","con","select ID, OUTBOUND from GAB_6559_Galvaware")
	F.Data.Dictionary.SetDefaultReturn("dictOutboundID",0)
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictOutboundID","WO_ID","OUTBOUNDID")
	F.Data.Dictionary.Close("dictOutboundID")
	F.Data.DataTable.AddColumn("dtAPTempLines","OUTBOUND","String","")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictTransportOUT","OUTBOUNDID","OUTBOUND")
	
	'dictTransportPOS
	F.Data.DataTable.AddColumn("dtAPTempLines","POSSESSIONID","Long",0)
	F.Data.Dictionary.CreateFromSQL("dictPossessionID","con","select ID, POSSESSION from GAB_6559_Galvaware")
	F.Data.Dictionary.SetDefaultReturn("dictPossessionID",0)
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictPossessionID","WO_ID","POSSESSIONID")
	F.Data.Dictionary.Close("dictPossessionID")
	F.Data.DataTable.AddColumn("dtAPTempLines","POSSESSION","String","")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictTransportPOS","POSSESSIONID","POSSESSION")
	
	
	F.Data.Datatable.AddExpressionColumn("dtAPTempLines","PRI","String","IIF([PriorityFlag] = True, '*PRI', '')")
	F.Data.Datatable.AddExpressionColumn("dtAPTempLines","LABEL_COPY","Long","1")
	
	'Merge into existing DT
	F.Data.DataTable.DeleteRow("dtLabel")
	F.Data.DataTable.Merge("dtAPTempLines","dtLabel",False,2)
	F.Data.DataTable.AcceptChanges("dtLabel")
	F.Data.DataTable.Close("dtAPTempLines")
	
	
	
'	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","CustName",v.Args.sProp,v.Args.sValue)
'	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","Outbound",v.Args.sProp,v.Args.sValue)
'	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","QualityFlag",v.Args.sProp,v.Args.sValue)
'	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","TagID",v.Args.sProp,v.Args.sValue)
'	gui.FormLabel.GSGCLabel.SetColumnProperty("gvLabel","Possession",v.Args.sProp,v.Args.sValue)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtLabel.End

Program.Sub.LoaddtJobAllocation.Start
f.Intrinsic.Control.Try
V.Local.sSQL.Declare
V.Local.sTest.Declare
V.Local.bRet.Declare
	
V.Local.iWOID.Declare
V.Local.iWOID.Set(V.Screen.FormWorkOrderDetails!txtWOID.Text)

	
	
	F.Intrinsic.String.Build("select WorkOrderID, LID, JobID, QuantityHung, CheckedFlag from GAB_6559_Job_Lines where WorkOrderID = '{0}'",V.Local.iWOID, V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtJL","con",V.Local.sSQL,TRUE)
	
	F.Intrinsic.String.Build("select JobID, DateTimeScheduled, DateTimeCreated, DateTimeCompleted, JobResourceID, ProcessCount, JobReleaseFlag from GAB_6559_Job_Header",V.Local.iWOID, V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtJH","con",V.Local.sSQL,TRUE)
	
	'Left Join  dtJL A dtJH B dtOrderItemstab C into dtAPTempLines
	F.Data.Linq.Join(V.Enum.LinqJoinType!LeftJoin,V.Enum.LinqSourceType!DataTable,"dtJL*!*A",V.Enum.LinqSourceType!DataTable,"dtJH*!*B","A.JobID = B.JobID",V.Enum.LinqSourceType!DataTable,"dtOrderItemstab*!*C","A.LID = C.LID","A.WorkOrderID*!*A.CheckedFlag*!*A.JobID*!*A.LID*!*A.QuantityHung*!*B.DateTimeScheduled*!*B.DateTimeCreated*!*B.DateTimeCompleted*!*B.JobResourceID*!*B.ProcessCount*!*B.JobReleaseFlag*!*C.Line*!*C.ItemQty*!*C.TagID*!*C.DESCRIPTION*!*C.PriorityFlag","","","","dtAPTempLines",True)
	F.Data.DataTable.Close("dtJL")
	F.Data.DataTable.Close("dtJH")
	
	
	'Dictionary for JobResourceID, JobResource  from GAB_6559_Job_Resource
	F.Data.DataTable.AddColumn("dtAPTempLines","JobResource","string","")
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictJobResourceID","JobResourceID","JobResource")
	
	'Dictionary for JobResourceID, JobResource  from GAB_6559_Job_Resource
	F.Data.DataTable.AddColumn("dtAPTempLines","QA","Boolean",False)
	F.Data.Dictionary.CreateFromSQL("dictQA","con","select ID, QA from GAB_6559_Galvaware")
	F.Data.Dictionary.SetDefaultReturn("dictQA",False)
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictQA","WorkOrderID","QA")
	F.Data.Dictionary.Close("dictQA")
	
	'Dict for WO lines that do not have a job yet JobID, Checked (false)
	F.Data.Dictionary.Create("dictFalse")
	F.Data.Dictionary.AddItem("dictFalse","",False)
	'F.Data.Dictionary.AddItem("dictFalse",0,False)
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictFalse","JobResource","CheckedFlag")
	F.Data.Dictionary.Close("dictFalse")
	
	F.Data.DataTable.DeleteRow("dtJobAllocation")
	F.Data.DataTable.Merge("dtAPTempLines","dtJobAllocation",False,2)
	F.Data.DataTable.AcceptChanges("dtJobAllocation")
	F.Data.DataTable.Close("dtAPTempLines")
	


f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtJobAllocation.End

Program.Sub.LoaddtJobCurrent.Start
F.Intrinsic.Control.Try
V.Local.sSQL.Declare
V.Local.sTest.Declare
V.Local.bRet.Declare
V.Local.iCnt.Declare
V.Local.iWOID.Declare
V.Local.bNoQuench.Declare

	gui.FormJobSheet.GSGCJobCurrent.Visible(False)
	F.Intrinsic.String.Build("select WorkOrderID, LID, JobID, QuantityHung, CheckedFlag from GAB_6559_Job_Lines where JobID = '{0}'",V.Global.iJobID, V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtJL","con",V.Local.sSQL,TRUE)
	
	F.Intrinsic.String.Build("select LID, Line, ItemQty, Rtrim(TagID) as TagID, Rtrim(Description) as Description, RTRIM(ServiceID) as ServiceID, NoQuenchFlag, PriorityFlag, UnitQty from GAB_6559_Lines",V.Local.iWOID, V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtWOLines","con",V.Local.sSQL,TRUE)
	
	'Left Join dtJL A dtWOLines B into dtAPTempLines
	F.Data.Linq.Join(V.Enum.LinqJoinType!LeftJoin,V.Enum.LinqSourceType!DataTable,"dtJL*!*A",V.Enum.LinqSourceType!DataTable,"dtWOLines*!*B","A.LID = B.LID","A.WorkOrderID*!*A.JobID*!*A.LID*!*A.QuantityHung*!*A.CheckedFlag*!*B.Line*!*B.ItemQty*!*B.TagID*!*B.Description*!*B.ServiceID*!*B.NoQuenchFlag*!*B.PriorityFlag*!*B.UnitQty","","","","dtAPTempLines",True)
	F.Data.DataTable.Close("dtJL")
	F.Data.DataTable.Close("dtWOLines")
	
	F.Data.Datatable.AddColumn("dtAPTempLines","Select","Boolean",False)
	F.Data.Datatable.AddColumn("dtAPTempLines","ServiceDesc","String","")
	F.Data.Datatable.AddColumn("dtAPTempLines","CustKey","String","")
	F.Data.Datatable.AddColumn("dtAPTempLines","CustName","String","")
	F.Data.Datatable.AddColumn("dtAPTempLines","Note","String","")
	F.Data.Datatable.AddColumn("dtAPTempLines","QA","Boolean",False)
	
	'Bring in values from the WO header GAB_6559_Galvaware
	F.Data.DataTable.CreateFromSQL("dtWOHeader","con","select ID, RTRIM(CUSTOMER) + '-' + RTRIM(SHIP_SEQ) as CustKey, RTRIM(ProcessingNote) as ProcessingNote, QA from GAB_6559_Galvaware",True)
	F.Data.Dictionary.CreateFromDatatable("dictCustKey","dtWOHeader","ID","CustKey")
	F.Data.Dictionary.CreateFromDatatable("dictNote","dtWOHeader","ID","ProcessingNote")
	F.Data.Dictionary.CreateFromDatatable("dictQA","dtWOHeader","ID","QA")
	F.Data.Datatable.Close("dtWOHeader")
	
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictCustKey","WorkOrderID","CustKey")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictCustXref","CustKey","CustName")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictNote","WorkOrderID","Note")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictServiceDesc","ServiceID","ServiceDesc")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictQA","WorkOrderID","QA")
	F.Data.Dictionary.Close("dictCustKey")
	F.Data.Dictionary.Close("dictNote")
	F.Data.Dictionary.Close("dictQA")
	
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","WO_ID","String","[WorkOrderID]")
	
	'Dictionary for if it has a QA log Already
	F.Intrinsic.String.Build("Select LID, Cast(1 as bit) as True from GAB_6559_QA_Log where JobID = '{0}'",V.Global.iJobID,V.Local.sSQL)
	F.Data.Dictionary.CreateFromSQL("dictHasQALog","con",V.Local.sSQL)
	F.Data.DataTable.AddColumn("dtAPTempLines","HasQALog","Boolean",False)
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictHasQALog","LID","HasQALog")
	F.Data.Dictionary.Close("dictHasQALog")
	
	'Check to see if we have any No quench lines the color background accordingly
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtAPTempLines.RowCount--,1)
		F.Intrinsic.Control.If(V.DataTable.dtAPTempLines(V.Local.iCnt).NoQuenchFlag!FieldVal)
			V.Local.bNoQuench.Set(True)
			F.Intrinsic.Control.ExitFor(V.Local.iCnt)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Intrinsic.Control.If(V.Local.bNoQuench)
		F.Intrinsic.Control.If(V.Screen.FormJobSheet!SplitContainer1.BackColor,=,"DeepPink")
		F.Intrinsic.Control.Else
			gui.FormJobSheet.SplitContainer1.BackColor("DeepPink")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.If(V.Screen.FormJobSheet!SplitContainer1.BackColor,=,"Transparent")
		F.Intrinsic.Control.Else
			gui.FormJobSheet.SplitContainer1.BackColor("Transparent")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	F.Data.DataTable.DeleteRow("dtJobCurrent")
	F.Data.DataTable.Merge("dtAPTempLines","dtJobCurrent",False,2)
	F.Data.DataTable.AcceptChanges("dtJobCurrent")
	F.Data.DataTable.Close("dtAPTempLines")
	gui.FormJobSheet.GSGCJobCurrent.Visible(True)
	
	'gui.FormJobSheet.tab1.SetTab(0)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtJobCurrent.End

Program.Sub.LoaddtJobAvailable.Start
F.Intrinsic.Control.Try
V.Local.sSQL.Declare
V.Local.sTest.Declare
V.Local.bRet.Declare
V.Local.sToday.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD", V.Local.sToday)
V.Local.iWOID.Declare
	
	
	'F.Intrinsic.String.Build("select ID as WorkOrderID, LID, Line, ItemQty, Rtrim(TagID) as TagID, Rtrim(Description) as Description, RTRIM(ServiceID) as ServiceID, NoQuenchFlag, PriorityFlag, UnitQty from GAB_6559_Lines Where ID in (Select ID from GAB_6559_Galvaware where ReleaseToPrep = '1')",V.Local.iWOID, V.Local.sSQL)
	F.Intrinsic.String.Build("select ID as WorkOrderID, LID, Line, ItemQty, Rtrim(TagID) as TagID, Rtrim(Description) as Description, RTRIM(ServiceID) as ServiceID, NoQuenchFlag, PriorityFlag, UnitQty from GAB_6559_Lines",V.Local.iWOID, V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtAPTempLines0","con",V.Local.sSQL,TRUE)
	
	'Dictionary for ID, ReleaseToPrep
	F.Data.Dictionary.CreateFromSQL("dictReleaseToPrep","con","select ID, ReleaseToPrep from GAB_6559_Galvaware")
	F.Data.Dictionary.SetDefaultReturn("dictReleaseToPrep",0)
	F.Data.DataTable.AddColumn("dtAPTempLines0","ReleaseToPrep","Boolean",False)
	F.Data.DataTable.FillFromDictionary("dtAPTempLines0","dictReleaseToPrep","WorkOrderID","ReleaseToPrep")
	F.Data.Dictionary.Close("dictReleaseToPrep")
	
	'Dictionary for LID, QuantityHung
	F.Data.Dictionary.CreateFromSQL("dictQtyHung","con","select LID, Cast(SUM(QuantityHung) as Integer) as QuantityHung from GAB_6559_Job_Lines Group by LID")
	F.Data.Dictionary.SetDefaultReturn("dictQtyHung",0)
	F.Data.DataTable.AddColumn("dtAPTempLines0","QuantityHung","Long",0)
	F.Data.DataTable.FillFromDictionary("dtAPTempLines0","dictQtyHung","LID","QuantityHung")
	F.Data.Dictionary.Close("dictQtyHung")
	
	F.Data.Datatable.AddExpressionColumn("dtAPTempLines0","Hang","Long","[ItemQty] - [QuantityHung]")
	
	'Freight and QAService lines filter
	F.Data.Datatable.AddColumn("dtAPTempLines0","Freight","Boolean",False)
	F.Data.Datatable.AddColumn("dtAPTempLines0","QAService","Boolean",False)
	F.Data.DataTable.FillFromDictionary("dtAPTempLines0","dictServiceFreight","ServiceID","Freight")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines0","dictServiceQA","ServiceID","QAService")
	
	F.Data.DataView.Create("dtAPTempLines0","dvAPTempLines0",22,"ReleaseToPrep = True and Hang > 0 and Freight = False and QAService = False","")
	F.Data.DataView.ToDataTable("dtAPTempLines0","dvAPTempLines0","dtAPTempLines",True)
	F.Data.DataTable.Close("dtAPTempLines0")
	
	F.Data.Datatable.AddColumn("dtAPTempLines","Select","Boolean",False)
	F.Data.Datatable.AddColumn("dtAPTempLines","ServiceDesc","String","")
	F.Data.Datatable.AddColumn("dtAPTempLines","CustKey","String","")
	F.Data.Datatable.AddColumn("dtAPTempLines","CustName","String","")
	F.Data.Datatable.AddColumn("dtAPTempLines","Note","String","")
	F.Data.Datatable.AddColumn("dtAPTempLines","Due","Long",0)
	F.Data.Datatable.AddColumn("dtAPTempLines","QA","Boolean",False)
	
	F.Intrinsic.String.Build("select ID, RTRIM(CUSTOMER) + '-' + RTRIM(SHIP_SEQ) as CustKey, RTRIM(ProcessingNote) as ProcessingNote, DATEDIFF(DAY, '{0}', DELIVERY_DATE) As Due, QA from GAB_6559_Galvaware",V.Local.sToday,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtWOHeader","con",V.Local.sSQL,True)
	F.Data.Dictionary.CreateFromDatatable("dictCustKey","dtWOHeader","ID","CustKey")
	F.Data.Dictionary.CreateFromDatatable("dictNote","dtWOHeader","ID","ProcessingNote")
	F.Data.Dictionary.CreateFromDatatable("dictDue","dtWOHeader","ID","Due")
	F.Data.Dictionary.CreateFromDatatable("dictQA","dtWOHeader","ID","QA")
	F.Data.Datatable.Close("dtWOHeader")
	
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictCustKey","WorkOrderID","CustKey")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictCustXref","CustKey","CustName")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictNote","WorkOrderID","Note")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictDue","WorkOrderID","Due")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictServiceDesc","ServiceID","ServiceDesc")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictQA","WorkOrderID","QA")
	F.Data.Dictionary.Close("dictCustKey")
	F.Data.Dictionary.Close("dictNote")
	F.Data.Dictionary.Close("dictDue")
	F.Data.Dictionary.Close("dictQA")
	
	F.Data.DataTable.DeleteRow("dtJobAvailable")
	F.Data.DataTable.Merge("dtAPTempLines","dtJobAvailable",False,2)
	F.Data.DataTable.AcceptChanges("dtJobAvailable")
	F.Data.DataTable.Close("dtAPTempLines")
	'gui.FormJobSheet.tab1.SetTab(1)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtJobAvailable.End

Program.Sub.LoaddtContactAllocate.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sCust.Declare
	V.Local.sWOID.Declare
	v.Local.sWOID.Set(v.Screen.FormWorkOrderDetails!txtWOID.Text)
	V.Local.sCust.Set(V.Screen.FormWorkOrderDetails!txtCustomerCode.Text)
	
	gui.FormWorkOrderDetails.GSGCContactDeallocate.Visible(False)
	Gui.FormWorkOrderDetails.GSGCContactDeallocate.SuspendLayout()
	gui.FormWorkOrderDetails.GSGCContactAllocate.Visible(False)
	Gui.FormWorkOrderDetails.GSGCContactAllocate.SuspendLayout()
	
	F.Intrinsic.String.Build("select Cast(ID as INTEGER) as ID, RTRIM(CUST) as CUST, RTRIM(NAME_PREFERRED) as NAME_PREFERRED, RTRIM(NAME_LAST) as NAME_LAST, RTRIM(EMAIL1) as EMAIL1, RTRIM(PHONE1) as PHONE1, RTRIM(PHONE2) as PHONE2, RTRIM(TITLE) as TITLE from CONTACT Where CUST = '{0}' and TYPE = 'C'",V.Local.sCust.PSQLFriendly, V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtAPTempLines0","con",V.Local.sSQL,TRUE)
	
	F.Intrinsic.String.Build("Select ContactID, Cast(1 as Bit) as True From GAB_6559_Contact_Alloc where CUST = '{0}' and WorkOrderID = '{1}'",V.Local.sCust,V.Local.sWOID,V.Local.sSQL)
	F.Data.Dictionary.CreateFromSQL("dictContact","con",V.Local.sSQL)
	F.Data.Datatable.AddColumn("dtAPTempLines0","Allocated","Boolean","False")
	F.Data.Dictionary.SetDefaultReturn("dictContact",False)
	F.Data.DataTable.FillFromDictionary("dtAPTempLines0","dictContact","ID","Allocated")
	F.Data.Dictionary.Close("dictContact")
	
	'Filter to Contacts that have not already been allocated to the WO.
	F.Data.DataView.Create("dtAPTempLines0","dvAPTempLines0",22,"Allocated = False","")
	F.Data.DataView.ToDataTable("dtAPTempLines0","dvAPTempLines0","dtAPTempLines",True)
	F.Data.DataView.Close("dtAPTempLines0","dvAPTempLines0")
	
	'Filter to Contacts that have already been allocated to the WO.
	F.Data.DataView.Create("dtAPTempLines0","dvAPTempLines0",22,"Allocated = True","")
	F.Data.DataView.ToDataTable("dtAPTempLines0","dvAPTempLines0","dtAPTempLinesDeallocate",True)
	F.Data.DataView.Close("dtAPTempLines0","dvAPTempLines0")
	F.Data.DataTable.Close("dtAPTempLines0")
	
	'Fill dtContactAllocate
	F.Data.DataTable.DeleteRow("dtContactAllocate")
	F.Data.DataTable.Merge("dtAPTempLines","dtContactAllocate",False,2)
	F.Data.DataTable.AcceptChanges("dtContactAllocate")
	F.Data.DataTable.Close("dtAPTempLines")
	
	'Fill dtContactDeallocate
	F.Data.DataTable.DeleteRow("dtContactDeallocate")
	F.Data.DataTable.Merge("dtAPTempLinesDeallocate","dtContactDeallocate",False,2)
	F.Data.DataTable.AcceptChanges("dtContactDeallocate")
	F.Data.DataTable.Close("dtAPTempLinesDeallocate")
	
	Gui.FormWorkOrderDetails.GSGCContactAllocate.ResumeLayout()
	gui.FormWorkOrderDetails.GSGCContactAllocate.Visible(True)
	Gui.FormWorkOrderDetails.GSGCContactDeallocate.ResumeLayout()
	gui.FormWorkOrderDetails.GSGCContactDeallocate.Visible(True)
	'ID
	'NAME_PREFERRED
	'NAME_LAST
	'EMAIL1
	'PHONE1
	'PHONE2
	'TITLE
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtContactAllocate.End

Program.Sub.LoaddtQALog.Start
F.Intrinsic.Control.Try
V.Local.sSQL.Declare
V.Local.sTest.Declare
V.Local.bRet.Declare
	
	
	gui.Form.GSGCQALog.Visible(False)
	F.Intrinsic.String.Build("select QALogID, LID, WorkOrderID, JobID, MeasurementDeviceID, EmployeeID, DateTimeLogged, SysUserLastAccess, SysUserLastAccessDateTime, Value1, Value2, Value3, Value4, Value5, Value6, Value7, Value8, Value9, Value10, Value11, Value12, Value13, Value14, Value15, Value16, Value17, Value18, Value19, Value20, Value21, Value22, Value23, Value24, Value25, Value26, Value27, Value28, Value29, Value30 from GAB_6559_QA_Log order by DateTimeLogged Desc",V.Local.sTest, V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtQATemp","con",V.Local.sSQL,TRUE)
	
	F.Intrinsic.String.Build("select LID, Line, Rtrim(TagID) as TagID, Rtrim(Description) as Description, RTRIM(ServiceID) as ServiceID, NoQuenchFlag, PriorityFlag from GAB_6559_Lines",V.Local.sTest, V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtWOLines","con",V.Local.sSQL,TRUE)
	
	'Left Join dtJL A dtWOLines B into dtAPTempLines
	F.Data.Linq.Join(V.Enum.LinqJoinType!LeftJoin,V.Enum.LinqSourceType!DataTable,"dtQATemp*!*A",V.Enum.LinqSourceType!DataTable,"dtWOLines*!*B","A.LID = B.LID","A.QALogID*!*A.WorkOrderID*!*A.JobID*!*A.LID*!*A.MeasurementDeviceID*!*A.EmployeeID*!*A.DateTimeLogged*!*A.SysUserLastAccess*!*A.SysUserLastAccessDateTime*!*A.Value1*!*A.Value2*!*A.Value3*!*A.Value4*!*A.Value5*!*A.Value6*!*A.Value7*!*A.Value8*!*A.Value9*!*A.Value10*!*A.Value11*!*A.Value12*!*A.Value13*!*A.Value14*!*A.Value15*!*A.Value16*!*A.Value17*!*A.Value18*!*A.Value19*!*A.Value20*!*A.Value21*!*A.Value22*!*A.Value23*!*A.Value24*!*A.Value25*!*A.Value26*!*A.Value27*!*A.Value28*!*A.Value29*!*A.Value30*!*B.Line*!*B.TagID*!*B.Description*!*B.ServiceID*!*B.NoQuenchFlag*!*B.PriorityFlag","","","","dtAPTempLines",True)
	F.Data.DataTable.Close("dtQATemp")
	F.Data.DataTable.Close("dtWOLines")
		
	F.Data.Datatable.AddColumn("dtAPTempLines","Select","Boolean",False)
	F.Data.Datatable.AddColumn("dtAPTempLines","ServiceDesc","String","")
	F.Data.Datatable.AddColumn("dtAPTempLines","CustKey","String","")
	F.Data.Datatable.AddColumn("dtAPTempLines","CustName","String","")
	F.Data.Datatable.AddColumn("dtAPTempLines","Employee","String","")
	F.Data.Datatable.AddColumn("dtAPTempLines","MeasurementDevice","String","")
	
	'Bring in values from the WO header GAB_6559_Galvaware
	F.Data.DataTable.CreateFromSQL("dtWOHeader","con","select ID, RTRIM(CUSTOMER) + '-' + RTRIM(SHIP_SEQ) as CustKey from GAB_6559_Galvaware",True)
	F.Data.Dictionary.CreateFromDatatable("dictCustKey","dtWOHeader","ID","CustKey")
	F.Data.Datatable.Close("dtWOHeader")
	
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictCustKey","WorkOrderID","CustKey")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictCustXref","CustKey","CustName")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictServiceDesc","ServiceID","ServiceDesc")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictEmployee","EmployeeID","Employee")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictMeasurementDevices","MeasurementDeviceID","MeasurementDevice")
	F.Data.Dictionary.Close("dictCustKey")
	
	'F.Data.DataTable.AddExpressionColumn("dtAPTempLines","WO_ID","String","[WorkOrderID]")
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","POS1","Long","([Value1] + [Value2] + [Value3] + [Value4] + [Value5] + [Value6] + [Value7] + [Value8] + [Value9] + [Value10]) / 10")
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","POS2","Long","([Value11] + [Value12] + [Value13] + [Value14] + [Value15] + [Value16] + [Value17] + [Value18] + [Value19] + [Value20]) / 10")
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","POS3","Long","([Value21] + [Value22] + [Value23] + [Value24] + [Value25] + [Value26] + [Value27] + [Value28] + [Value29] + [Value30]) / 10")
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","TotalAVG","Long","([POS1] + [POS2] + [POS3]) / 3")
	
	'F.Data.DataTable.AddExpressionColumn("dtAPTempLines","Var","Float","Var([Value1], [Value2], [Value3], [Value4], [Value5], [Value6], [Value7], [Value8], [Value9], [Value10], [Value11], [Value12], [Value13], [Value14], [Value15], [Value16], [Value17], [Value18], [Value19], [Value20] [Value21], [Value22], [Value23], [Value24], [Value25], [Value26], [Value27], [Value28], [Value29], [Value30])")
	'F.Data.DataTable.AddExpressionColumn("dtAPTempLines","STDDev","Float","StDev([Value1], [Value2], [Value3], [Value4], [Value5], [Value6], [Value7], [Value8], [Value9], [Value10], [Value11], [Value12], [Value13], [Value14], [Value15], [Value16], [Value17], [Value18], [Value19], [Value20] [Value21], [Value22], [Value23], [Value24], [Value25], [Value26], [Value27], [Value28], [Value29], [Value30])")
	
	
	F.Data.DataTable.DeleteRow("dtQALog")
	F.Data.DataTable.Merge("dtAPTempLines","dtQALog",False,2)
	F.Data.DataTable.AcceptChanges("dtQALog")
	F.Data.DataTable.Close("dtAPTempLines")
	gui.Form.GSGCQALog.Visible(True)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtQALog.End

Program.Sub.LoaddtQALogDetails.Start
F.Intrinsic.Control.Try
V.Local.sSQL.Declare
V.Local.sTest.Declare
V.Local.bRet.Declare
V.Local.iWOID.Declare
V.Local.iWOID.Set(V.Screen.FormWorkOrderDetails!txtWOID.Text)
	
	gui.FormWorkOrderDetails.GSGCQALogDetails.Visible(False)
	
	F.Intrinsic.String.Build("select QALogID, LID, WorkOrderID, JobID, MeasurementDeviceID, EmployeeID, DateTimeLogged, Value1, Value2, Value3, Value4, Value5, Value6, Value7, Value8, Value9, Value10, Value11, Value12, Value13, Value14, Value15, Value16, Value17, Value18, Value19, Value20, Value21, Value22, Value23, Value24, Value25, Value26, Value27, Value28, Value29, Value30 from GAB_6559_QA_Log Where WorkOrderID in ('{0}')",V.Local.iWOID, V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtQATemp","con",V.Local.sSQL,TRUE)
	
	F.Intrinsic.String.Build("select LID, Line, Rtrim(TagID) as TagID, Rtrim(Description) as Description, RTRIM(ServiceID) as ServiceID from GAB_6559_Lines Where ID in ('{0}')",V.Local.iWOID, V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtWOLines","con",V.Local.sSQL,TRUE)
	
	'Left Join dtJL A dtWOLines B into dtAPTempLines
	F.Data.Linq.Join(V.Enum.LinqJoinType!LeftJoin,V.Enum.LinqSourceType!DataTable,"dtQATemp*!*A",V.Enum.LinqSourceType!DataTable,"dtWOLines*!*B","A.LID = B.LID","A.QALogID*!*A.WorkOrderID*!*A.JobID*!*A.LID*!*A.MeasurementDeviceID*!*A.EmployeeID*!*A.DateTimeLogged*!*A.Value1*!*A.Value2*!*A.Value3*!*A.Value4*!*A.Value5*!*A.Value6*!*A.Value7*!*A.Value8*!*A.Value9*!*A.Value10*!*A.Value11*!*A.Value12*!*A.Value13*!*A.Value14*!*A.Value15*!*A.Value16*!*A.Value17*!*A.Value18*!*A.Value19*!*A.Value20*!*A.Value21*!*A.Value22*!*A.Value23*!*A.Value24*!*A.Value25*!*A.Value26*!*A.Value27*!*A.Value28*!*A.Value29*!*A.Value30*!*B.Line*!*B.TagID*!*B.Description*!*B.ServiceID","","","","dtAPTempLines",True)
	
	F.Data.DataTable.Close("dtQATemp")
	F.Data.DataTable.Close("dtWOLines")
		
	F.Data.Datatable.AddColumn("dtAPTempLines","Select","Boolean",False)
	F.Data.Datatable.AddColumn("dtAPTempLines","ServiceDesc","String","")
	F.Data.Datatable.AddColumn("dtAPTempLines","CustKey","String","")
	F.Data.Datatable.AddColumn("dtAPTempLines","CustName","String","")
	F.Data.Datatable.AddColumn("dtAPTempLines","Employee","String","")
	F.Data.Datatable.AddColumn("dtAPTempLines","MeasurementDevice","String","")
	
	'Bring in values from the WO header GAB_6559_Galvaware
	F.Data.DataTable.CreateFromSQL("dtWOHeader","con","select ID, RTRIM(CUSTOMER) + '-' + RTRIM(SHIP_SEQ) as CustKey from GAB_6559_Galvaware",True)
	F.Data.Dictionary.CreateFromDatatable("dictCustKey","dtWOHeader","ID","CustKey")
	F.Data.Datatable.Close("dtWOHeader")
	
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictCustKey","WorkOrderID","CustKey")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictCustXref","CustKey","CustName")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictServiceDesc","ServiceID","ServiceDesc")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictEmployee","EmployeeID","Employee")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictMeasurementDevices","MeasurementDeviceID","MeasurementDevice")
	F.Data.Dictionary.Close("dictCustKey")
	
	'F.Data.DataTable.AddExpressionColumn("dtAPTempLines","WO_ID","String","[WorkOrderID]")
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","POS1","Long","([Value1] + [Value2] + [Value3] + [Value4] + [Value5] + [Value6] + [Value7] + [Value8] + [Value9] + [Value10]) / 10")
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","POS2","Long","([Value11] + [Value12] + [Value13] + [Value14] + [Value15] + [Value16] + [Value17] + [Value18] + [Value19] + [Value20]) / 10")
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","POS3","Long","([Value21] + [Value22] + [Value23] + [Value24] + [Value25] + [Value26] + [Value27] + [Value28] + [Value29] + [Value30]) / 10")
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","TotalAVG","Long","([POS1] + [POS2] + [POS3]) / 3")
	

	'F.Data.DataTable.AddExpressionColumn("dtAPTempLines","Var","Float","Var([Value1], [Value2], [Value3], [Value4], [Value5], [Value6], [Value7], [Value8], [Value9], [Value10], [Value11], [Value12], [Value13], [Value14], [Value15], [Value16], [Value17], [Value18], [Value19], [Value20] [Value21], [Value22], [Value23], [Value24], [Value25], [Value26], [Value27], [Value28], [Value29], [Value30])")
	'F.Data.DataTable.AddExpressionColumn("dtAPTempLines","STDDev","Float","StDev([Value1], [Value2], [Value3], [Value4], [Value5], [Value6], [Value7], [Value8], [Value9], [Value10], [Value11], [Value12], [Value13], [Value14], [Value15], [Value16], [Value17], [Value18], [Value19], [Value20] [Value21], [Value22], [Value23], [Value24], [Value25], [Value26], [Value27], [Value28], [Value29], [Value30])")
	
	F.Data.DataTable.DeleteRow("dtQALogDetails")
	F.Data.DataTable.Merge("dtAPTempLines","dtQALogDetails",False,2)
	F.Data.DataTable.AcceptChanges("dtQALogDetails")
	F.Data.DataTable.Close("dtAPTempLines")
	gui.FormWorkOrderDetails.GSGCQALogDetails.Visible(True)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtQALogDetails.End

Program.Sub.LoaddtInvoicing.Start
F.Intrinsic.Control.Try
V.Local.sSQL.Declare
V.Local.sTest.Declare
V.Local.bRet.Declare
V.Local.sToday.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD", V.Local.sToday)
V.Local.iWOID.Declare
V.Local.iCnt.Declare
V.Local.sFilter.Declare
V.Local.fValue.Declare

	F.Intrinsic.String.Build("Select Cast(ID as INTEGER) as WorkOrderID, RTRIM(CUSTOMER) as CUSTOMER, RTRIM(CUSTOMER_REFERENCE) as CUSTOMER_REFERENCE, DELIVERY_DATE, RECEIPTED, DATE_INVOICED, PAYMENT_METHOD_ID, RTRIM(STATUS) as STATUS, LOCATION, BILLING_ADDRESS_ID, BILLING_CONTACT_ID, RTRIM(SHIP_SEQ) as SHIP_SEQ, RTRIM(AdminNote) as AdminNote, RTRIM(H_UF1) as H_UF1, RTRIM(H_UF2) as H_UF2, RTRIM(H_UF3) as H_UF3, RTRIM(CUSTOMER) + '-' + RTRIM(SHIP_SEQ) as ShipKey, MinChargeExempt from GAB_6559_GALVAWARE where WorkOrderID not in (Select WorkOrderID from GAB_6559_WOSO_Xref) and (Status = 'READY TO INVOICE' or Status = 'CLOSED')",V.Local.iWOID, V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtAPTempLines","con",V.Local.sSQL,TRUE)
	
	F.Data.Datatable.AddColumn("dtAPTempLines","Select","Boolean",False)
	F.Data.Datatable.AddColumn("dtAPTempLines","CUST_SHIP_TO","String","")
	F.Data.Datatable.AddColumn("dtAPTempLines","CUST_BILL_TO","String","")
	F.Data.Datatable.AddColumn("dtAPTempLines","VALUE","Float",0.00)
	
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictCustomer","CUSTOMER","CUST_BILL_TO")	
	F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictCustMultiShip","ShipKey","CUST_SHIP_TO")	
	
	'Filling in Credit Hold from V_Customer_MASTER
	F.Data.Datatable.AddColumn("dtAPTempLines","CreditHold","Boolean",False)
	F.Data.Dictionary.CreateFromSQL("dictCreditHold","Con","select RTRIM(CUSTOMER) as CUSTOMER, Cast(IF(FLAG_CREDIT_HOLD = 'Y', '1', '0') as bit) as FLAG_CREDIT_HOLD from V_CUSTOMER_MASTER")
	F.Data.Dictionary.SetDefaultReturn("dictCreditHold",False)
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictCreditHold","CUSTOMER","CreditHold")
	F.Data.Dictionary.Close("dictCreditHold")
	
	F.Data.Datatable.AddColumn("dtAPTempLines","PriceGroupID","String","")
	F.Data.Dictionary.CreateFromSQL("dictPriceGroupID","con","select RTRIM(Ship_Key) as Ship_Key, RTRIM(PRICEGROUPID) as PriceGroupID from GAB_6559_Customer_Xref")
	F.Data.Dictionary.SetDefaultReturn("dictPriceGroupID","")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictPriceGroupID","ShipKey","PriceGroupID")
	F.Data.Dictionary.Close("dictPriceGroupID")
	
	F.Data.Datatable.AddColumn("dtAPTempLines","WorkOrderMinCharge","Float",0.00)
	F.Data.Dictionary.CreateFromSQL("dictMinCharge","con","select RTRIM(PRICEGROUPID) as PriceGroupID, Cast(WorkOrderMinCharge as Numeric(16,4)) from GAB_6559_Price_Group;")
	F.Data.Dictionary.SetDefaultReturn("dictMinCharge",125)
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictMinCharge","PriceGroupID","WorkOrderMinCharge")
	F.Data.Dictionary.Close("dictMinCharge")
	
	
	

	'gui.FormJobSheet.tab1.SetTab(1)
	
	
	
	'Child Table
	f.Intrinsic.Control.If(v.DataTable.dtPlaceHolder3.Exists)
		gui.Form.GSGCInvoicing.ClearRows("gvInvoiceLines")
		F.Data.DataTable.DeleteRow("dtInvoicing$dtLine")
	f.Intrinsic.Control.EndIf
	
	
	F.Intrinsic.String.Build("Select LID, Cast(ID as Integer) as WO_ID, Line, WOStatusID, '' as Status, RTRIM(ServiceID) as ServiceID, '' as Service, RTRIM(QuoteID) as QuoteID, PriceMinCharge, UnitPrice, PricePriority, PriorityFlag, UnitQty, RTRIM(Unit) as Unit, Cast(ItemQty as NUMERIC(16,2)) as ItemQty, RTRIM(Description) as DESCRIPTION, ItmQtyBasedFlag, Cast(0 as bit) as Freight, Cast(0 as bit) as QA from GAB_6559_LINES where ID not in (Select WorkOrderID from GAB_6559_WOSO_Xref) and ID in (Select ID From GAB_6559_GALVAWARE where RTRIM(Status) = 'READY TO INVOICE')",V.Local.sTest, V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtChildTemp","con",V.Local.sSQL,TRUE)
	
	'Fill order line Status from dictStatus.WOStatusID
	F.Data.Datatable.FillFromDictionary("dtChildTemp","dictStatus","WOStatusID","Status")
	
	'Fill order line Status from dictServiceDesc.ServiceID
	F.Data.Datatable.FillFromDictionary("dtChildTemp","dictServiceDesc","ServiceID","Service")
	
	'Fill Freight flag from dictServiceFreight.ServiceID
	F.Data.Datatable.FillFromDictionary("dtChildTemp","dictServiceFreight","ServiceID","Freight")
	
	'Fill QA flag from dictServiceQA.ServiceID
	F.Data.Datatable.FillFromDictionary("dtChildTemp","dictServiceQA","ServiceID","QA")
	
	'Calc Total Price
	F.Data.Datatable.AddExpressionColumn("dtChildTemp","TotalWeight","Float","[ItemQty] * [UnitQty]")
	F.Data.Datatable.AddExpressionColumn("dtChildTemp","UnitPrice_WithPrio","Float","IIF([PriorityFlag] = True, [UnitPrice] + [PricePriority], [UnitPrice])")
	F.Data.Datatable.AddExpressionColumn("dtChildTemp","TotalPrice0","Float","IIF([ItmQtyBasedFlag] = True, [ItemQty] * [UnitPrice_WithPrio], [UnitQty] * [ItemQty] * [UnitPrice_WithPrio])")
	F.Data.Datatable.AddExpressionColumn("dtChildTemp","TotalPrice","Float","IIF([TotalPrice0] < [PriceMinCharge], [PriceMinCharge], [TotalPrice0])")
	
	
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtAPTempLines.RowCount--,1)
		F.Intrinsic.String.Build("WO_ID = '{0}'",V.DataTable.dtAPTempLines(v.Local.iCnt).WorkOrderID!FieldVal,V.Local.sFilter)
		F.Data.DataTable.Compute("dtChildTemp","Sum(TotalPrice)",V.Local.sFilter,V.Local.fValue)
		F.Data.Datatable.SetValue("dtAPTempLines",V.Local.iCnt,"VALUE",V.Local.fValue)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","TotalPriceWO","Float","IIF([VALUE] < [WorkOrderMinCharge], IIF([MinChargeExempt] = True, [Value], [WorkOrderMinCharge]), [Value])")
	F.Data.DataTable.AddExpressionColumn("dtAPTempLines","WOMinChargeRemainder","Float","IIF([VALUE] < [WorkOrderMinCharge], IIF([MinChargeExempt] = True, 0, [WorkOrderMinCharge] - [Value]), 0)")
	
	
	F.Data.DataTable.DeleteRow("dtInvoicing")
	F.Data.DataTable.Merge("dtAPTempLines","dtInvoicing",False,2)
	F.Data.DataTable.AcceptChanges("dtInvoicing")
	F.Data.DataTable.Close("dtAPTempLines")
	
	
	f.Intrinsic.Control.If(v.DataTable.dtPlaceHolder3.Exists)
		gui.Form.GSGCInvoicing.ClearRows("gvInvoiceLines")
	F.Intrinsic.Control.EndIf
	
	F.Data.DataTable.DeleteRow("dtInvoicing$dtLine")
	
	F.Data.DataTable.Merge("dtChildTemp","dtInvoicing$dtLine",False,2)
	F.Data.DataTable.AcceptChanges("dtInvoicing$dtLine")
	F.Data.DataTable.Close("dtChildTemp")

	
	f.Intrinsic.Control.If(v.DataTable.dtPlaceHolder3.Exists)
	F.Intrinsic.Control.Else
		F.Data.DataTable.Create("dtPlaceHolder3",True)		
		F.Intrinsic.Control.CallSub(addrelationInvoicing)
	F.Intrinsic.Control.EndIf
	

	
	
	
	F.Intrinsic.Control.CallSub(LoadChildgvInvoiceLines)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtInvoicing.End

Program.Sub.LoaddtInvoiced.Start
F.Intrinsic.Control.Try
V.Local.sSQL.Declare
V.Local.sTest.Declare
V.Local.bRet.Declare
V.Local.sToday.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD", V.Local.sToday)
V.Local.iWOID.Declare
	
	F.Intrinsic.String.Build("select WorkOrderID, LID, RTRIM(ORDER_NO) as ORDER_NO, RTRIM(RECORD_NO) as RECORD_NO, InvoicedQty, InvoicedDate from GAB_6559_WOSO_Xref order by InvoicedDate DESC",V.Local.iWOID, V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtAPTempLines","con",V.Local.sSQL,TRUE)
	
	'Dictionary for WO line
	F.Data.Datatable.AddColumn("dtAPTempLines","Line","String","")
	F.Data.Dictionary.CreateFromSQL("dictWOLine","con","select LID, Line from GAB_6559_Lines")
	F.Data.Dictionary.SetDefaultReturn("dictWOLine","")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictWOLine","LID","Line")
	F.Data.Dictionary.Close("dictWOLine")
	
	'F.Data.Datatable.AddColumn("dtAPTempLines","Select","Boolean",False)
	'F.Data.Datatable.AddColumn("dtAPTempLines","CUST_SHIP_TO","String","")
	'F.Data.Datatable.AddColumn("dtAPTempLines","CUST_BILL_TO","String","")
	
	'F.Data.Datatable.FillFromDictionary("dtAPTempLines","dictCustomer","CUSTOMER","CUST_BILL_TO")	
	
	F.Data.DataTable.DeleteRow("dtInvoiced")
	F.Data.DataTable.Merge("dtAPTempLines","dtInvoiced",False,2)
	F.Data.DataTable.AcceptChanges("dtInvoiced")
	F.Data.DataTable.Close("dtAPTempLines")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtInvoiced.End

Program.Sub.LoaddtMaterial.Start
F.Intrinsic.Control.Try
V.Local.sSQL.Declare
V.Local.sTest.Declare
V.Local.bRet.Declare
	
	f.Data.Dictionary.Exists("dictMaterialDesc",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictMaterialDesc")
	F.Intrinsic.Control.EndIf
	
	f.Data.Dictionary.Exists("dictMaterialUnit",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictMaterialUnit")
	F.Intrinsic.Control.EndIf
	
	
	gui.Form.GSGCMaterial.Visible(False)
	F.Intrinsic.String.Build("select MaterialLogID, Cast(DateTimeLogged as Date) as DateLogged, Cast(DateTimeLogged as Time) as TimeLogged, EmployeeID, '' as Employee, RTRIM(Note) as Note, MaterialID, '' as Material, UnitQuantity, '' as Unit, RTRIM(Location) as Location from GAB_6559_Material_Log order by MaterialLogID desc",V.Local.sTest, V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtAPTempLines","con",V.Local.sSQL,TRUE)
	
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictEmployee","EmployeeID","Employee")
	
	F.Data.Dictionary.CreateFromSQL("dictMaterialDesc","con","Select MaterialID, RTRIM(Description) as Description from GAB_6559_Material")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictMaterialDesc","MaterialID","Material")
	
	F.Data.Dictionary.CreateFromSQL("dictMaterialUnit","con","Select MaterialID, RTRIM(UnitAbbreviation) as UnitAbbreviation from GAB_6559_Material")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictMaterialUnit","MaterialID","Unit")
	
	'Refresh Location ComboBox Selections
	V.Local.sSql.Set("Select Distinct RTRIM(Location) as Location FROM GAB_6559_Material_Log order by Location ASC")
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSql,V.Local.sSql)
	F.Intrinsic.String.Replace(V.Local.sSql,"#$#","*!*",V.Local.sSql)
	Gui.Form.GSGCMaterial.ColumnEdit("gvMaterial","Location","ComboBox",V.Local.sSql)
	
	F.Data.DataTable.DeleteRow("dtMaterial")
	F.Data.DataTable.Merge("dtAPTempLines","dtMaterial",False,2)
	F.Data.DataTable.AcceptChanges("dtMaterial")
	F.Data.DataTable.Close("dtAPTempLines")
	gui.Form.GSGCMaterial.Visible(True)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtMaterial.End

Program.Sub.LoaddtIssue.Start
F.Intrinsic.Control.Try
V.Local.sSQL.Declare
V.Local.sTest.Declare
V.Local.bRet.Declare
	
	f.Data.Dictionary.Exists("dictIssue",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictIssue")
	F.Intrinsic.Control.EndIf
	
	gui.Form.GSGCIssue.Visible(False)
	F.Intrinsic.String.Build("select IssueLogID, Cast(DateTimeStart as Date) as DateStart, Cast(DateTimeEnd as Date) as DateEnd, Cast(DateTimeStart as Time) as TimeStart, Cast(DateTimeEnd as Time) as TimeEnd, EmployeeID, '' as Employee, Rtrim(Note) as Note, IssueID, '' as Issue, DATEDIFF(HOUR, DateTimeStart, DateTimeEnd) as Hours, CraneNumber from GAB_6559_Issue_Log order by IssueLogID Desc",V.Local.sTest, V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtAPTempLines","con",V.Local.sSQL,TRUE)
	
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictEmployee","EmployeeID","Employee")
	
	F.Data.Dictionary.CreateFromSQL("dictIssue","con","Select IssueID, RTRIM(Description) as Description from GAB_6559_Issue")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictIssue","IssueID","Issue")
	
	F.Data.DataTable.DeleteRow("dtIssue")
	F.Data.DataTable.Merge("dtAPTempLines","dtIssue",False,2)
	F.Data.DataTable.AcceptChanges("dtIssue")
	F.Data.DataTable.Close("dtAPTempLines")
	gui.Form.GSGCIssue.Visible(True)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtIssue.End

Program.Sub.LoaddtReworktab.Start
F.Intrinsic.Control.Try
V.Local.sSQL.Declare
V.Local.sTest.Declare
V.Local.bRet.Declare
V.Local.sWOID.Declare
V.Local.sWOID.Set(V.Screen.FormWorkOrderDetails!txtWOID.Text)

	
	gui.FormWorkOrderDetails.GSGCReworktab.Visible(False)
	F.Intrinsic.String.Build("select ReworkLogID, WorkOrderID, LineNumber, OrgLineNumber, JobID, EmployeeID as InspectedbyID, '' as Inspectedby, DateLogged, DateClosed, ReworkTypeID, '' as ReworkType, RTRIM(A.SysUserLastAccess) as SysUserLastAccess, A.SysUserLastAccessDateTime as SysUserLastAccessDateTime, B.ItemQty as ItemQty, B.UnitQty as UnitQty, RTRIM(B.Unit) as Unit, RTRIM(B.Description) as Description from GAB_6559_Rework_Log A Left Join GAB_6559_Lines B on A.WorkOrderID = B.ID and A.LineNumber = B.Line where WorkOrderID = '{0}' Order by ReworkLogID ASC;",V.Local.sWOID,V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtAPTempLines","con",V.Local.sSQL,TRUE)
	
	'Fill Inspectedby, dict already exisits
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictEmployee","InspectedbyID","Inspectedby")
	'Fill ReworkType, dict already exisits
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictReworkType","ReworkTypeID","ReworkType")
	
	F.Data.DataTable.DeleteRow("dtReworktab")
	F.Data.DataTable.Merge("dtAPTempLines","dtReworktab",False,2)
	F.Data.DataTable.AcceptChanges("dtReworktab")
	F.Data.DataTable.Close("dtAPTempLines")
	gui.FormWorkOrderDetails.GSGCReworktab.Visible(True)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtReworktab.End

Program.Sub.LoaddtNotificationLog.Start
F.Intrinsic.Control.Try
V.Local.sSQL.Declare
V.Local.sTest.Declare
V.Local.bRet.Declare
V.Local.sWOID.Declare
V.Local.sWOID.Set(V.Screen.FormWorkOrderDetails!txtWOID.Text)

	
	gui.FormWorkOrderDetails.GSGCNotificationLog.Visible(False)
	F.Intrinsic.String.Build("select NotificationID, WorkOrderID, NotificationTypeID, '' as NotificationType, DateTimeLogged, ResponseTypeID, '' as ResponseType, RTRIM(RecipientAddress) as RecipientAddress, RTRIM(RecipientName) as RecipientName, RTRIM(SysUserLastAccess) as SysUserLastAccess, SysUserLastAccessDateTime from GAB_6559_NotificationLog where WorkOrderID = '{0}' Order by NotificationID ASC;",V.Local.sWOID,V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtAPTempLines","con",V.Local.sSQL,TRUE)
	
	'Fill NotificationType
	F.Data.Dictionary.CreateFromSQL("dictNotificationType","con","Select NotificationTypeID, RTRIM(Description) From GAB_6559_NotificationType")
	F.Data.Dictionary.SetDefaultReturn("dictNotificationType","")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictNotificationType","NotificationTypeID","NotificationType")
	F.Data.Dictionary.Close("dictNotificationType")
	
	'Fill ResponseType
	F.Data.Dictionary.CreateFromSQL("dictResponseType","con","Select ResponseTypeID, RTRIM(Description) From GAB_6559_ResponseType")
	F.Data.Dictionary.SetDefaultReturn("dictResponseType","")
	F.Data.DataTable.FillFromDictionary("dtAPTempLines","dictResponseType","ResponseTypeID","ResponseType")
	F.Data.Dictionary.Close("dictResponseType")
	
	F.Data.DataTable.DeleteRow("dtNotificationLog")
	F.Data.DataTable.Merge("dtAPTempLines","dtNotificationLog",False,2)
	F.Data.DataTable.AcceptChanges("dtNotificationLog")
	F.Data.DataTable.Close("dtAPTempLines")
	gui.FormWorkOrderDetails.GSGCNotificationLog.Visible(True)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtNotificationLog.End


#End Region ' LoadDT

#Region "WO Details Header Form"

Program.Sub.FormWorkOrderDetails_UserButtonClicked.Start
v.Local.stest.Declare
v.Local.sSQL.Declare
v.Local.sWOID.Declare
v.Local.sStatus.Declare
v.Local.sAdminNote.Declare
v.Local.sCustomerName.Declare
v.Local.sProcessingNote.Declare
v.Local.sCustomerCode.Declare
v.Local.sCustomerPhoneNumber.Declare
v.Local.sReleaseToPrep.Declare
v.Local.bReeaseToPrep.Declare
v.Local.sNotifiedFlag.Declare
v.Local.bNotifiedFlag.Declare
v.Local.sCustomerFaxNumber.Declare
v.Local.sPriority.Declare
v.Local.bPriority.Declare
v.Local.sFaxFlag.Declare
v.Local.bFaxFlag.Declare
v.Local.sQA.Declare
v.Local.bQA.Declare
v.Local.sShipSEQ.Declare
v.local.sRowNumber.Declare
V.Local.sRet.Declare
v.Local.sWOID.set(v.Screen.FormWorkOrderDetails!txtWOID.Text)
v.Local.sCustomerReference.Declare
v.Local.sEsitmateRacks.Declare
V.Local.iRet.Declare
V.Local.d1980.Declare
V.Local.dInspectedDate.Declare
V.Local.sInspectedDate.Declare
V.Local.sInspectedTime.Declare
V.Local.sInspectedDateTime.Declare
V.Local.sName.Declare
V.Local.sADD1.Declare
V.Local.sADD2.Declare
V.Local.sCity.Declare
v.Local.sReportID.Declare
v.Local.sPrm.Declare
v.Local.sval.Declare
V.Local.sINBOUND.Declare
V.Local.sOUTBOUND.Declare
V.Local.sPOSSESSION.Declare
V.Local.sPriceGroup.Declare
V.Local.sCust.Declare

V.Local.sNow.Declare
V.Local.fWOMinCharge.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)

f.Intrinsic.Control.Try
	f.Intrinsic.Control.SelectCase(v.Args.Button)
		f.Intrinsic.Control.Case("Update")
			
			'Updating Admin note first b/c they should be able to that even if the order has been invoiced.
			v.Local.sAdminNote.set(v.Screen.FormWorkOrderDetails!txtAdminNote.Text)
			F.Intrinsic.String.Build("UPDATE GAB_6559_Galvaware SET AdminNote = '{1}' Where ID = '{0}'",v.Local.sWOID,v.Local.sAdminNote.PSQLFriendly,V.Local.sSQL)
			f.ODBC.Connection!con.Execute(v.Local.sSQL)
			
			'Check to see if the order has been invoiced
			F.Intrinsic.String.Build("Select Year(DATE_INVOICED) as DATE_INVOCIED FROM GAB_6559_Galvaware where ID = '{0}'",V.screen.FormWorkOrderDetails!txtWOID.Text,V.Local.sSQL)
			F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"1900")
				F.Intrinsic.UI.Msgbox("Order has been invoiced and cannot be edited. Except for Admin Notes")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			v.Local.sStatus.set(v.Screen.FormWorkOrderDetails!txtStatus.Text)
			v.Local.sCustomerCode.set(v.Screen.FormWorkOrderDetails!txtCustomerCode.Text)
			v.Local.sProcessingNote.set(v.Screen.FormWorkOrderDetails!txtProcessingNote.Text)
			v.Local.sCustomerPhoneNumber.set(v.Screen.FormWorkOrderDetails!txtCustomerPhoneNumber.Text)
			v.Local.sReleaseToPrep.set(v.Screen.FormWorkOrderDetails!chkReleaseToPrep.Value)
			
			'Get Inspected Date-Time from the Receipt info tab
			F.Intrinsic.String.Format(V.Screen.FormWorkOrderDetails!dtpInspectedDate.Value,"YYYY-MM-DD",V.Local.sInspectedDate)
			F.Intrinsic.String.Format(V.Screen.FormWorkOrderDetails!txtInspectedTime.Text,"HH:NN:SS",V.Local.sInspectedTime)
			F.Intrinsic.String.Build("{0} {1}",V.Local.sInspectedDate,V.Local.sInspectedTime,V.Local.sInspectedDateTime)
			'Check if we need to set the Inspected Date-Time based on if the user has marked the WO as released to prep and if the inspected date time is less than 1980...
			F.Intrinsic.Control.If(V.Local.sReleaseToPrep,=,"1")
				V.Local.dInspectedDate.Set(V.Screen.FormWorkOrderDetails!dtpInspectedDate.Value)
				F.Intrinsic.Date.ConvertDString("01/01/1980","MMDDYYYY",V.Local.d1980)
				F.Intrinsic.Control.If(V.Local.dInspectedDate,<,V.Local.d1980)
					V.Local.sInspectedDateTime.Set(V.Local.sNow)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			
			v.Local.sNotifiedFlag.set(v.Screen.FormWorkOrderDetails!chkNotifiedFlag.Value)
			'v.Local.sCustomerFaxNumber.set(v.Screen.FormWorkOrderDetails!txtCustomerFaxNumber.Text)
			v.Local.sPriority.set(v.Screen.FormWorkOrderDetails!chkPriority.Value)
			v.Local.sFaxFlag.set(v.Screen.FormWorkOrderDetails!chkFaxFlag.Value)
			v.Local.sQA.set(v.Screen.FormWorkOrderDetails!chkQA.Value)
			v.Local.sShipSEQ.set(v.Screen.FormWorkOrderDetails!txtCustomerShipTo.Text)
			v.Local.sCustomerReference.set(v.Screen.FormWorkOrderDetails!txtCustomerReference.Text)
			v.Local.sEsitmateRacks.set(v.Screen.FormWorkOrderDetails!txtEstimateRacks.Text)
			
			F.Intrinsic.Control.If(V.Local.sStatus.UCase,=,"REGISTERED")
			F.Intrinsic.Control.AndIf(V.Local.sReleaseToPrep,=,"1")
				V.Local.sStatus.Set("Inspected")
				gui.FormWorkOrderDetails.txtStatus.Text(V.Local.sStatus)
				F.Intrinsic.String.Build("Update GAB_6559_Lines set WOStatusID = '2' where ID = '{0}' and WOStatusID = '1'",V.Local.sWOID,V.Local.sSQL)
				f.ODBC.Connection!con.Execute(v.Local.sSQL)
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.String.Build("UPDATE GAB_6559_Galvaware SET Status = '{1}', CUSTOMER = '{2}', AdminNote = '{3}', ProcessingNote = '{4}', ReleaseToPrep = '{5}', NotifiedFlag = '{6}', Priority = '{7}', QA = '{8}', SHIP_SEQ = '{9}', CUSTOMER_REFERENCE = '{10}', EstimateRacks = '{11}', DATE_INSPECTED = '{12}' Where ID = '{0}'",v.Local.sWOID,v.Local.sStatus.PSQLFriendly,v.Local.sCustomerCode.PSQLFriendly,v.Local.sAdminNote.PSQLFriendly,v.Local.sProcessingNote.PSQLFriendly,v.Local.sReleaseToPrep,v.Local.sNotifiedFlag,v.Local.sPriority,v.Local.sQA,v.Local.sShipSEQ.PSQLFriendly,v.Local.sCustomerReference.PSQLFriendly,V.Local.sEsitmateRacks,V.Local.sInspectedDateTime,V.Local.sSQL)
			
			f.ODBC.Connection!con.Execute(v.Local.sSQL)
			
			F.Intrinsic.Control.CallSub(LoaddtOrderItemsTab,"WOID",V.Local.sWOID)
			F.Intrinsic.Control.CallSub(LoadReceiptingInfo)
			gui.FormWorkOrderDetails.tabWorkOrderDetails.SetTab(0)
			
		f.Intrinsic.Control.Case("WorkOrder")
			V.Local.sINBOUND.Set(V.Screen.FormWorkOrderDetails!ddlTransportNotesInbound.Text)
			V.Local.sOUTBOUND.Set(V.Screen.FormWorkOrderDetails!ddlTransportNotesOutbound.Text)
			V.Local.sPOSSESSION.Set(V.Screen.FormWorkOrderDetails!ddlTransportNotesPos.Text)
			
			v.Local.sCustomerCode.set(v.Screen.FormWorkOrderDetails!txtCustomerCode.Text)
			F.Intrinsic.String.Trim(V.Local.sCustomerCode,V.Local.sCustomerCode)
			F.Intrinsic.String.Build("select RTRIM(NAME_CUSTOMER), RTRIM(ADDRESS1), RTRIM(ADDRESS2), RTRIM(CITY) from V_CUSTOMER_MASTER where CUSTOMER = '{0}'",V.Local.sCustomerCode.PSQLFriendly,V.Local.sSQL)
			f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,V.Local.sRet)
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.Not)
				F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
				V.Local.sName.Set(V.Local.sRet(0))
				V.Local.sADD1.Set(V.Local.sRet(1))
				V.Local.sADD2.Set(V.Local.sRet(2))
				V.Local.sCity.Set(V.Local.sRet(3))
			F.Intrinsic.Control.EndIf
			
			
			f.Global.BI.GetIDFromName("GAB_6559_WorkOrder.rpt",v.Local.sReportID)
			f.Intrinsic.String.Split("WorkOrderID*!*INBOUND*!*OUTBOUND*!*POSSESSION*!*NAME*!*ADD1*!*ADD2*!*CITY","*!*",v.Local.sPrm)
			f.Intrinsic.String.Concat(V.Local.sWOID,"*!*",V.Local.sINBOUND,"*!*",V.Local.sOUTBOUND,"*!*",V.Local.sPOSSESSION,"*!*",V.Local.sName,"*!*",V.Local.sADD1,"*!*",V.Local.sADD2,"*!*",V.Local.sCity,v.Local.sval)
			f.Intrinsic.String.Split(v.Local.sval,"*!*",v.Local.sval)
			f.Global.BI.PrintReport(v.Local.sReportID,0,v.Local.sPrm,v.Local.sval,"",true)
		
			
		f.Intrinsic.Control.Case("Delete")
			'Check to see if the order has been invoiced
			F.Intrinsic.String.Build("Select Year(DATE_INVOICED) as DATE_INVOCIED FROM GAB_6559_Galvaware where ID = '{0}'",V.screen.FormWorkOrderDetails!txtWOID.Text,V.Local.sSQL)
			F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"1900")
				F.Intrinsic.UI.Msgbox("Order has been Invoiced and cannot be DELETED.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'Look for lines that have been on transport notes.
			F.Intrinsic.String.Build("select WorkOrderID from GAB_6559_Transport_WO where WorkOrderID = '{0}'",V.screen.FormWorkOrderDetails!txtWOID.Text,V.Local.sSQL)
			F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.not)
				F.Intrinsic.UI.Msgbox("Order has been Tranported and cannot be DELETED.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'Look for lines that have been on jobsheets.
			F.Intrinsic.String.Build("select WorkOrderID from GAB_6559_Job_Lines where WorkOrderID = '{0}'",V.screen.FormWorkOrderDetails!txtWOID.Text,V.Local.sSQL)
			F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.not)
				F.Intrinsic.UI.Msgbox("Order have been allocated to a headrack/JobSheet and cannot be DELETED.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.UI.Msgbox("Are you sure you want to delete the Work Order and its lines?","",4,V.Local.iRet)
			F.Intrinsic.Control.If(V.Local.iRet,<>,6)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
						
			'Delete from GAB_6559_Galvaware and GAB_6559_Lines
			F.Intrinsic.String.Build("Delete From GAB_6559_Lines where ID = '{0}'",V.screen.FormWorkOrderDetails!txtWOID.Text,V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.String.Build("Delete From GAB_6559_Galvaware where ID = '{0}'",V.screen.FormWorkOrderDetails!txtWOID.Text,V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
			
			F.Intrinsic.Control.CallSub(CloseWorkOrderDetails)
			
		f.Intrinsic.Control.Case("Label")
			f.Intrinsic.Control.CallSub(LoaddtLabel,"LabelType","WorkOrder")
			Gui.FormLabel..Visible(True)
			Gui.FormLabel..WindowState(0)
			Gui.FormLabel..SetFocus
			
		f.Intrinsic.Control.Case("Pricing")
			F.Intrinsic.Control.CallSub(CallBICustPricing)
			
		f.Intrinsic.Control.Case("Invoice")

			V.Local.sCust.Set(V.Screen.FormWorkOrderDetails!txtCustomerCode.Text)
			V.Local.sShipSeq.Set(V.Screen.FormWorkOrderDetails!txtCustomerShipTo.Text)
			
			'Get PRICEGROUPID from GAB_6559_Customer_Xref
			F.Intrinsic.String.Build("select RTRIM(PRICEGROUPID) as PRICEGROUPID from GAB_6559_Customer_Xref Where CUSTOMER = '{0}' and SHIP_SEQ = '{1}'",V.Local.sCust.PSQLFriendly,V.Local.sShipSeq.PSQLFriendly,v.Local.sSQL)
			F.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.Not)
				F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
				V.Local.sPriceGroup.Set(V.Local.sRet(0))
				Gui.FormWorkOrderDetails.lblPriceGroup.Text(V.Local.sPriceGroup)
			F.Intrinsic.Control.Else
				Gui.FormWorkOrderDetails.lblPriceGroup.Text("No Price Group Selected")
			F.Intrinsic.Control.EndIf
			
			'Get WorkOrderMinCharge from GAB_6559_Price_Group
			F.Intrinsic.String.Build("select Cast(WorkOrderMinCharge as Numeric(16,4)) from GAB_6559_Price_Group Where PriceGroupID = '{0}'",V.Local.sPriceGroup,v.Local.sSQL)
			F.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.Not)
				F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
				V.Local.fWOMinCharge.Set(V.Local.sRet(0))
			F.Intrinsic.Control.EndIf

			
			F.Intrinsic.String.Trim(V.Local.sCustomerCode,V.Local.sCustomerCode)
			F.Intrinsic.String.Build("select RTRIM(NAME_CUSTOMER), RTRIM(ADDRESS1), RTRIM(ADDRESS2), RTRIM(CITY) from V_CUSTOMER_MASTER where CUSTOMER = '{0}'",V.Local.sCust.PSQLFriendly,V.Local.sSQL)
			f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,V.Local.sRet)
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.Not)
				F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
				V.Local.sName.Set(V.Local.sRet(0))
				V.Local.sADD1.Set(V.Local.sRet(1))
				V.Local.sADD2.Set(V.Local.sRet(2))
				V.Local.sCity.Set(V.Local.sRet(3))
			F.Intrinsic.Control.EndIf
			
			
			
			f.Global.BI.GetIDFromName("GAB_6559_Proforma_Invoice.rpt",v.Local.sReportID)
			f.Intrinsic.String.Split("WorkOrderID*!*NAME*!*ADD1*!*ADD2*!*CITY*!*WOMINCHARGE","*!*",v.Local.sPrm)
			f.Intrinsic.String.Concat(V.Local.sWOID,"*!*",V.Local.sName,"*!*",V.Local.sADD1,"*!*",V.Local.sADD2,"*!*",V.Local.sCity,"*!*",V.Local.fWOMinCharge,v.Local.sval)
			f.Intrinsic.String.Split(v.Local.sval,"*!*",v.Local.sval)
			f.Global.BI.PrintReport(v.Local.sReportID,0,v.Local.sPrm,v.Local.sval,"",true)
	f.Intrinsic.Control.EndSelect
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.FormWorkOrderDetails_UserButtonClicked.End

Program.Sub.ResetWorkOrderDetailsOrderItems.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare
	
	'????????? Change this to not have to loop????? 
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtOrderItemstab.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtOrderItemstab(v.Local.i).rowstate,<>,8)
			'f.Intrinsic.Debug.ShowCallerInfo
			f.Data.Datatable.DeleteRow("dtOrderItemstab")
			
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	'f.Data.Datatable.DeleteRow("dtOrderItemstab")
	'clear the fields
	gui.FormWorkOrderDetails.txtCustomerName.Text("")
	gui.FormWorkOrderDetails.txtCustomerShipTo.Text("")
	gui.FormWorkOrderDetails.txtCustomerShipTo2.Text("")
	gui.FormWorkOrderDetails.txtWOID.Text("")
	gui.FormWorkOrderDetails.txtAdminNote.Text("")
	gui.FormWorkOrderDetails.txtProcessingNote.Text("")
	gui.FormWorkOrderDetails.chkReleaseToPrep.Value("0")
	gui.FormWorkOrderDetails.chkPriority.Value("0")
	gui.FormWorkOrderDetails.chkQA.Value("0")
	gui.FormWorkOrderDetails.chkFaxFlag.Value("0")
	gui.FormWorkOrderDetails.chkNotifiedFlag.Value("0")
	gui.FormWorkOrderDetails.txtCustomerPhoneNumber.Text("")
	gui.FormWorkOrderDetails.txtOrderItemsItem.Text("")
	gui.FormWorkOrderDetails.txtOrderItemsStatus.Text("")
	gui.FormWorkOrderDetails.txtOrderItemsService.Text("")
	gui.FormWorkOrderDetails.txtOrderItemsItemQty.Text("")
	gui.FormWorkOrderDetails.ddlOrderItemsYard1.Text("")
	gui.FormWorkOrderDetails.ddlOrderItemsYard2.Text("")
	gui.FormWorkOrderDetails.txtOrderItemsTagID.Text("")
	gui.FormWorkOrderDetails.txtOrderItemsDescriptionMultiline.Text("")
	gui.FormWorkOrderDetails.txtOrderItemsQuoteID.Text("")
	gui.FormWorkOrderDetails.chkOrderItemsItmQtyBasedFlag.Value("0")
	gui.FormWorkOrderDetails.txtOrderItemsUnitQty.Text("")
	gui.FormWorkOrderDetails.txtOrderItemsUnitFlag.Text("")
	gui.FormWorkOrderDetails.txtOrderItemsUnityPrice.Text("")
	gui.FormWorkOrderDetails.txtOrderItemsMinCharge.Text("")
	gui.FormWorkOrderDetails.chkOrderItemsPriorityFlag.Value("0")
	gui.FormWorkOrderDetails.txtOrderItemsPriority.Text("")
	gui.FormWorkOrderDetails.chkOrderItemsNoquenchFlag.Value("0")
	gui.FormWorkOrderDetails.txtOrderItemsYLocation.Text("")
	
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ResetWorkOrderDetailsOrderItems.End

Program.Sub.CloseWorkOrderDetails.Start
f.Intrinsic.Control.Try

v.Local.ssql.Declare
v.Local.sWOID.Declare
'f.Intrinsic.Debug.ShowCallerInfo


v.Local.sWOID.set(v.Screen.FormWorkOrderDetails!txtWOID.Text)
f.Intrinsic.String.Build("DELETE FROM GAB_6559_TL WHERE WOID ='{0}'",v.Local.sWOID,v.Local.ssql)
f.ODBC.Connection!con.Execute(v.Local.ssql)

f.Intrinsic.Control.CallSub(ResetWorkOrderDetailsOrderItems) 'Creates all the temp data tables and populates them with data
gui.FormWorkOrderDetails..Visible(False)

	gui.FormWorkOrderDetails.ddlTransportNotesInbound.Text(V.Dictionary.dictTransportDesc!22)
	gui.FormWorkOrderDetails.ddlTransportNotesOutbound.Text(V.Dictionary.dictTransportDesc!23)
	gui.FormWorkOrderDetails.ddlTransportNotesPos.Text(V.Dictionary.dictTransportDesc!24)
	
'Force reload of data.....
F.Intrinsic.Control.If(v.Screen.Form!chkNoRefresh.CheckedAsBoolean.not)
	F.Intrinsic.Control.If(V.Screen.Form!Ac1.Visible,=,True)
		F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","MainView")
	F.Intrinsic.Control.ElseIf(V.Screen.Form!Ac2.Visible)
		F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","JobSheetView")
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf


gui.Form..WindowState(2)
Gui.Form..SetFocus


f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.CloseWorkOrderDetails.End

Program.Sub.cmdButtonStatus_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sColW.Declare
	V.Local.sCol.Declare
	V.Local.sRet.Declare
	
	V.Local.sSQL.Set("Select WOStatusID, RTRIM(DESCRIPTION) as DESCRIPTION FROM GAB_6559_WO_STATUS")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("WOStatusID*!*Status","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("600*!*5000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("WO Status Browser","Con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		gui.FormWorkOrderDetails.txtStatus.Text(V.Local.sRet(1))
	F.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdButtonStatus_Click.End

Program.Sub.cmdButtonCustomer_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sColW.Declare
	V.Local.sCol.Declare
	V.Local.sRet.Declare
	
	F.Intrinsic.String.Build("Select Year(DATE_INVOICED) as DATE_INVOCIED FROM GAB_6559_Galvaware where ID = '{0}'",V.screen.FormWorkOrderDetails!txtWOID.Text,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"1900")
		F.Intrinsic.UI.Msgbox("Order have been Invoiced, Customer cannot be changed.")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	V.Local.sSQL.Set("select RTRIM(CUSTOMER) as CUSTOMER, RTRIM(SHIP_SEQ) as SHIP_SEQ, RTRIM(CUSTOMER_NAME) as CUSTOMER_NAME, TurnAroundDays from GAB_6559_Customer_Xref Union (Select RTRIM(CUSTOMER) as CUSTOMER, 'DEFLT' as SHIP_SEQ, RTRIM(NAME_CUSTOMER) as CUSTOMER_NAME, '7' as TurnAroundDays FROM V_CUSTOMER_MASTER where CUSTOMER + '-' + 'DEFLT' not in (select RTRIM(SHIP_KEY) as SHIP_KEY from GAB_6559_Customer_Xref)) order by CUSTOMER ASC;")
	F.Intrinsic.String.Split("Customer*!*Ship Seq*!*Name Customer*!*Turn Around Days","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("600*!*600*!*3000*!*1300","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Customer Browser","Con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		gui.FormWorkOrderDetails.txtCustomerCode.Text(V.Local.sRet(0))	
		gui.FormWorkOrderDetails.txtCustomerShipTo.Text(V.Local.sRet(1))
		gui.FormWorkOrderDetails.txtCustomerShipTo2.Text(V.Local.sRet(2))
		gui.FormWorkOrderDetails.txtCustomerName.Text(V.Local.sRet(2))
		gui.FormWorkOrderDetails.txtCustomerPhoneNumber.Text("")
		
		F.Intrinsic.String.Build("select Top 1 RTRIM(NAME_CUSTOMER) as NAME_CUSTOMER from V_CUSTOMER_MASTER where CUSTOMER = '{0}'",V.Local.sRet(0).PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
		F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.Not)
			gui.FormWorkOrderDetails.txtCustomerName.Text(V.Local.sRet)
		F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.EndIf

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdButtonCustomer_Click.End

Program.Sub.cmdButtonShipTo_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sColW.Declare
	V.Local.sCol.Declare
	V.Local.sRet.Declare
	V.Local.sRet2.Declare
	V.Local.sShipKey.Declare
	V.Local.sCustomer.Declare
	V.Local.sCustomer.Set(V.Screen.FormWorkOrderDetails!txtCustomerCode.Text)
	V.Local.sInbound.Declare
	V.Local.sOutbound.Declare
	V.Local.sPossession.Declare
	
	F.Intrinsic.String.Build("Select Year(DATE_INVOICED) as DATE_INVOCIED FROM GAB_6559_Galvaware where ID = '{0}'",V.screen.FormWorkOrderDetails!txtWOID.Text,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"1900")
		F.Intrinsic.UI.Msgbox("Order have been Invoiced, Customer Ship-to cannot be changed.")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("Select 'DEFLT' as SHIP_SEQ, RTRIM(NAME_CUSTOMER_SHIP) as CUSTOMER_NAME, RTRIM(ADDRESS1_SHIP) as SHIP_ADDRESS1 From V_CUSTOMER_SHIPTO where Customer = '{0}' UNION Select RTRIM(SHIP_SEQ) as SHIP_SEQ, RTRIM(CUSTOMER_NAME) as CUSTOMER_NAME, RTRIM(SHIP_ADDRESS1) as SHIP_ADDRESS1 From OE_MULTI_SHIP where Customer = '{0}' and SHIP_SEQ <> '009999'",V.Local.sCustomer.PSQLFriendly,V.Local.sSQL)
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Ship Seq*!*Name Customer*!*Ship Address1","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("1000*!*3000*!*3000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Ship To Address Browser","Con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		gui.FormWorkOrderDetails.txtCustomerShipTo.Text(V.Local.sRet(0))
		gui.FormWorkOrderDetails.txtCustomerShipTo2.Text(V.Local.sRet(1))
		
		F.Intrinsic.UI.Msgbox("do you want to update the default transport inbound, outbound, and possession?","",4,V.Local.sRet2)
		F.Intrinsic.Control.If(V.Local.sRet2,=,"6")
			'Reset transport inb, outb, pos
			F.Intrinsic.String.Build("{0}-{1}",v.Local.sCustomer.RTrim,V.local.sRet(0),V.Local.sShipKey)
			F.Intrinsic.String.Build("select InboundDefault, OutboundDefault, PossessionDefault from GAB_6559_Customer_Xref where SHIP_KEY  = '{0}'",V.Local.sShipKey,V.Local.sSQL)
			f.ODBC.Connection!con.executeandreturn(V.Local.sSQL,V.Local.sRet)
			'Get default Transports
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
				V.Local.sInbound.Set("22")
				V.Local.sOutbound.Set("23")
				V.Local.sPossession.Set("24")
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
				V.Local.sRet.RedimPreserve(0,2)
				V.Local.sInbound.Set(V.Local.sRet(0))
				V.Local.sOutbound.Set(V.Local.sRet(1))
				V.Local.sPossession.Set(V.Local.sRet(2))
			F.Intrinsic.Control.EndIf
			gui.FormWorkOrderDetails.ddlTransportNotesInbound.Text(V.Dictionary.dictTransportDesc![V.Local.sInbound])
			gui.FormWorkOrderDetails.ddlTransportNotesOutbound.Text(V.Dictionary.dictTransportDesc![V.Local.sOutbound])
			gui.FormWorkOrderDetails.ddlTransportNotesPos.Text(V.Dictionary.dictTransportDesc![V.Local.sPossession])
			
			F.Intrinsic.Control.CallSub(ddlTransportNotesInbound_Change)
			F.Intrinsic.Control.CallSub(ddlTransportNotesOutbound_Change)
			F.Intrinsic.Control.CallSub(ddlTransportNotesPos_Change)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.CallSub(FormWorkOrderDetails_UserButtonClicked,"Button","Update")
	F.Intrinsic.Control.EndIf
	
	
	

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdButtonShipTo_Click.End

Program.Sub.CallBICustPricing.Start
V.Local.sMsg.Declare
V.Local.sRet.Declare
V.Local.sNow.Declare
V.Local.sToday.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD", V.Local.sToday)
v.Local.iRet.Declare
v.Local.bAuth.Declare
V.Local.iCnt.Declare
v.Local.sReportID.Declare
V.Local.sPrm.Declare
V.Local.sval.Declare	
V.Local.sTNID.Declare	
V.Local.sShipToName.Declare	
V.Local.sSQL.Declare
V.Local.sFm.Declare
V.Local.sFilter.Declare
V.Local.sCustomer.Declare
V.Local.fRet.Declare
V.Local.sJobID.Declare
V.Local.sShipSeq.Declare
V.Local.sShipKey.Declare
V.Local.sPriceGroupID.Declare
V.Local.sCustomerName.Declare
V.Local.sTradingTerms.Declare
V.Local.sInvoiceMinCharge.Declare
V.Local.sSurcharge.Declare

F.Intrinsic.Control.Try
	'This will prevent from multi-clicking too fast the button
	f.Intrinsic.Control.If(v.Global.bLoading)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bLoading.Set(True)
	
	F.Global.BI.GetRunID(V.Global.iBIRunID)
	F.Global.BI.GetIDFromName("GAB_6559_CustPricing.rpt",v.Global.iBIRptID)
	F.Global.BI.StartLogging(V.Global.iBIRunID,v.Global.iBIRptID,-1,"",V.Global.iBILogID)
	
	
	'Check for PriceGroup.
	V.Local.sCustomer.Set(V.Screen.FormWorkOrderDetails!txtCustomerCode.Text)
	V.Local.sShipSeq.Set(V.Screen.FormWorkOrderDetails!txtCustomerShipTo.Text)
	F.Intrinsic.String.Build("{0}-{1}",V.Local.sCustomer,V.Local.sShipSeq,V.Local.sShipKey)
	F.Intrinsic.String.Build("Select RTRIM(PriceGroupID) as PriceGroupID From GAB_6559_Customer_Xref where SHIP_KEY = '{0}'",V.Local.sShipKey.PSQLFriendly,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
		'Customer does not have a PriceGroup set up.
		F.Intrinsic.UI.Msgbox("Customer does not have a PriceGroup set up, No report was printed.")
		v.Global.bLoading.Set(False)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	V.Local.sPriceGroupID.Set(V.Local.sRet)
	
	'Get Pricing lines from the customer's Pricegroup
	F.Intrinsic.String.Build("Select Cast(0 as Char(10)) as QuoteID, RTRIM(ServiceID) as ServiceID, Price, PriceMinCharge From GAB_6559_Price_Code where PriceGroupID = '{0}'",V.Local.sPriceGroupID.PSQLFriendly,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtPriceCode","con",V.Local.sSQL,True)
	
	'Get Pricing lines from the customer's Quotes
	F.Intrinsic.String.Build("select RTRIM(A.QuoteID) as QuoteID, RTRIM(A.ServiceID) as ServiceID, UnitPrice as Price, Cast(0.00 as Numeric(16,6)) as PriceMinCharge, B.ValidFrom, B.ValidUntil, RTRIM(B.CustomerReference) as CustomerReference  from GAB_6559_Quote_Lines A Left Join GAB_6559_Quote_Head B on A.QHID = B.QHID where B.CustomerKey = '{0}' and B.ValidFrom <= '{1}' and B.ValidUntil >= '{1}';",V.Local.sShipKey.PSQLFriendly,V.Local.sToday,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtSaveToDB","con",V.Local.sSQL,True)
	
	F.Data.DataTable.Merge("dtPriceCode","dtSaveToDB",false,1)
	F.Data.Datatable.AcceptChanges("dtSaveToDB")
	F.Data.Datatable.Close("dtPriceCode")
	
	'BIRunID
	F.Data.Datatable.AddColumn("dtSaveToDB","BIRunID","Long",V.Global.iBIRunID)
	
	'Customer Name
	F.Intrinsic.String.Build("Select RTRIM(Customer_Name) as CustomerName From GAB_6559_Customer_Xref where SHIP_KEY = '{0}'",V.Local.sShipKey.PSQLFriendly,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sCustomerName)
	F.Data.Datatable.AddColumn("dtSaveToDB","CustomerName","String",V.Local.sCustomerName)
	
	'Get AR terms
	F.Intrinsic.String.Build("Select RTRIM(B.TERMS_MESSAGE) as TERMS_MESSAGE From V_CUSTOMER_SALES A Left join V_AR_TERMS B on A.PAYMENT_TERMS = B.TERMS_CODE where A.CUSTOMER = '{0}'",V.Local.sCustomer.PSQLFriendly,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sTradingTerms)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
		F.Intrinsic.UI.Msgbox("Missing AR Terms on Customer Master")
		V.Local.sTradingTerms.Set("")
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.Build("Trading Terms: {0}",V.Local.sTradingTerms,V.Local.sTradingTerms)
	F.Data.Datatable.AddColumn("dtSaveToDB","TradingTerms","String",V.Local.sTradingTerms)
	
	'Invoice Min charge
	F.Intrinsic.String.Build("Select Cast(WorkOrderMinCharge as Numeric(16,2)) From GAB_6559_Price_Group where PriceGroupID = '{0}'",V.Local.sPriceGroupID.PSQLFriendly,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
		'Customer does not have a PriceGroup set up.
		F.Intrinsic.UI.Msgbox("Customer does not have a PriceGroup set up, No report was printed.")
		v.Global.bLoading.Set(False)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.Build("Invoice Min. Charge: ${0} exc-GST",V.Local.sRet,V.Local.sInvoiceMinCharge)
	F.Data.Datatable.AddColumn("dtSaveToDB","InvoiceMinCharge","String",V.Local.sInvoiceMinCharge)
	
	'Surcharge
	V.Local.sSurcharge.Set("The surcharge is: 0%")
	F.Data.Datatable.AddColumn("dtSaveToDB","Surcharge","String",V.Local.sSurcharge)

	'Filling in Service Description Ref from GAB_6559_Service
	F.Data.DataTable.AddColumn("dtSaveToDB","Description","String","")
	F.Data.DataTable.FillFromDictionary("dtSaveToDB","dictServiceDesc","ServiceID","Description")
	
	'dictServiceUnit
	F.Data.DataTable.AddColumn("dtSaveToDB","UnitAbbreviation","String","")
	F.Data.DataTable.FillFromDictionary("dtSaveToDB","dictServiceUnit","ServiceID","UnitAbbreviation")
	
	
	
	'Save to DB0
	'Map to SQL Table
	V.Local.sFm.Set("BIRunID@!@BIRunID")
	V.Local.sFm.Append("*!*QuoteID@!@QuoteID")
	V.Local.sFm.Append("*!*Price@!@Price")
	V.Local.sFm.Append("*!*PriceMinCharge@!@PriceMinCharge")
	V.Local.sFm.Append("*!*ValidFrom@!@ValidFrom")
	V.Local.sFm.Append("*!*ValidUntil@!@ValidUntil")
	V.Local.sFm.Append("*!*CustomerReference@!@CustomerReference")
	V.Local.sFm.Append("*!*Description@!@Description")
	V.Local.sFm.Append("*!*UnitAbbreviation@!@UnitAbbreviation")
	V.Local.sFm.Append("*!*Surcharge@!@Surcharge")
	V.Local.sFm.Append("*!*CustomerName@!@CustomerName")
	V.Local.sFm.Append("*!*TradingTerms@!@TradingTerms")
	V.Local.sFm.Append("*!*InvoiceMinCharge@!@InvoiceMinCharge")

	F.Data.DataTable.SaveToDB("dtSaveToDB","con","GAB_6559_BI_CustPricing","",128,V.Local.sFm)
	
	F.Data.DataTable.Close("dtSaveToDB")
	f.Global.BI.StopLogging(v.Global.iBILogID)
	
	V.Local.sval.Set(V.Global.iBIRunID)
	V.Local.sPrm.Set("BIRunID")
	
	f.Global.BI.PrintReport(v.Global.iBIRptID,0,v.Local.sPrm,v.Local.sval,"",true)
	
	F.Intrinsic.String.Build("Delete From GAB_6559_BI_CustPricing where BIRunID = {0};",V.Global.iBIRunID,V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	
	v.Global.bLoading.Set(False)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.CallBICustPricing.End


#End Region ' WO Details Header Form

#Region "WO Locking System"

Program.Sub.CheckIfWorkOrderIsOpened.Start
v.Local.sRowid.Declare
v.Local.sID.Declare
v.Local.ssql.Declare
v.Local.sReturnValue.Declare
v.Local.sReturnValue.Set("x")
v.Local.sWOOpenCheck.Declare
v.Local.sWOOpenCheck.Set("n")
v.Local.sDateAccessed.Declare
v.Local.sUserAccessed.Declare
v.Local.sWOIDAccessed.Declare
f.Intrinsic.Control.Try
	v.Local.sRowid.set(v.Screen.Form!txtMainYLineLocation.Text)
	gui.Form.GSGCMainGalvaware.GetCellValueByColumnName("gvMainGALVAWARE","ID",v.Local.sRowid,v.Local.sID) ' Select data from the datatable

	f.Intrinsic.String.Build("SELECT TOP 1 WOID FROM GAB_6559_TL WHERE WOID = '{0}'",v.Local.sID,v.Local.ssql)
	f.ODBC.Connection!con.ExecuteAndReturn(v.Local.ssql,v.Local.sReturnValue)
	
	f.Intrinsic.Control.If(v.Local.sReturnValue,=,v.Local.sID)
	
		f.Intrinsic.String.Build("SELECT TOP 1 DATE FROM GAB_6559_TL WHERE WOID = '{0}'",v.Local.sID,v.Local.ssql)
		f.ODBC.Connection!con.ExecuteAndReturn(v.Local.ssql,v.Local.sDateAccessed)
		f.Intrinsic.String.Replace(v.Local.sDateAccessed,"12:00:00 am","",v.Local.sDateAccessed)
		f.Intrinsic.String.Build("SELECT TOP 1 person FROM GAB_6559_TL WHERE WOID = '{0}'",v.Local.sID,v.Local.ssql)
		f.ODBC.Connection!con.ExecuteAndReturn(v.Local.ssql,v.Local.sUserAccessed)
		f.Intrinsic.String.Build("SELECT TOP 1 WOID FROM GAB_6559_TL WHERE WOID = '{0}'",v.Local.sID,v.Local.ssql)
		f.ODBC.Connection!con.ExecuteAndReturn(v.Local.ssql,v.Local.sWOIDAccessed)
	
		gui.FormWOAlreadyAccesed..Visible(True)
		gui.FormWOAlreadyAccesed.lblWOAccessDate.Text(v.Local.sDateAccessed)
		gui.FormWOAlreadyAccesed.lblWOAccessUser.Text(v.Local.sUserAccessed)
		gui.FormWOAlreadyAccesed.lblWOAccessWOID.Text(v.Local.sWOIDAccessed)
		
		
		v.Local.sWOOpenCheck.Set("y")
	f.Intrinsic.Control.EndIf
	'f.Intrinsic.Debug.ShowCallerInfo
	'f.Intrinsic.Variable.ArgToVar("rWOOpenCheck",v.Local.sWOOpenCheck)
	f.Intrinsic.Variable.AddRV("rWOOpenCheck",v.Local.sWOOpenCheck)

	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.CheckIfWorkOrderIsOpened.End

Program.Sub.InsertWOIDLock.Start
f.Intrinsic.Control.Try
	v.local.sSplitting.Declare
	v.Local.sday.Declare
	v.Local.smonth.Declare
	v.Local.syear.Declare
	v.Local.slocaldate.Declare
	v.Local.slocaldate.Set(v.Ambient.Now.DateComp)
	v.Local.ssql.Declare
	v.Local.iWOID.Declare
	V.Local.iWOID.Set(V.Args.WOID)
	
	f.Intrinsic.String.Replace(v.Local.slocaldate,"12:00:00 am","",v.Local.slocaldate) 
	f.Intrinsic.String.Split(v.Local.slocaldate,"/",v.local.sSplitting)
	v.Local.syear.Set(v.Local.sSplitting(2))
	v.Local.smonth.Set(v.Local.sSplitting(0))
	v.Local.sday.Set(v.Local.sSplitting(1))
	f.Intrinsic.String.Concat(v.Local.syear,"-",v.Local.smonth,"-",v.Local.sday,v.Local.slocaldate)
	f.Intrinsic.String.Build("INSERT INTO GAB_6559_TL (date,person,WOID) VALUES ('{0}','{1}','{2}')",v.Local.slocaldate.PSQLFriendly,v.Caller.User,v.Local.iWOID,v.Local.ssql)
	'f.ODBC.Connection!con.Execute(v.Local.ssql)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.InsertWOIDLock.End

Program.Sub.cmdFORCEOVERRIDETHREADLOCKING_Click.Start
'f.Intrinsic.Debug.ShowCallerInfo
v.Local.ssql.Declare
v.Local.sWOID.Declare
v.Local.sWOID.Set(v.Screen.FormWOAlreadyAccesed!lblWOAccessWOID.Text)
f.Intrinsic.String.Concat("Delete from GAB_6559_TL where WOID= '",v.Local.sWOID.Trim,"'", v.Local.sSql)
f.ODBC.Connection!con.Execute(v.Local.sSql)
gui.FormWOAlreadyAccesed..Visible(False)
Program.Sub.cmdFORCEOVERRIDETHREADLOCKING_Click.End
#End Region ' WO Locking System

#Region "Order Lines Tab"

'''''''''''''''''''''''''''''''''''''Quotes and Pricing'''''''''''''''''''''''''''
Program.Sub.CloseWorkOrderAddService.Start
gui.FormQuotesandPricing..Visible(False)

'Clear Text boxes
Gui.FormQuotesandPricing.txtServiceID.Text("")
gui.FormQuotesandPricing.txtQuoteID.Text("")
Gui.FormQuotesandPricing.txtServiceDesc.Text("")
Gui.FormQuotesandPricing.txtDescriptionLine.Text("")
Gui.FormQuotesandPricing.txtItemQty.Text("")

Program.Sub.CloseWorkOrderAddService.End

Program.Sub.OpenWorkOrderAddService.Start
V.Local.sSQL.Declare
v.Local.sRet.Declare
'Check to see if the order has been invoiced
F.Intrinsic.String.Build("Select Year(DATE_INVOICED) as DATE_INVOCIED FROM GAB_6559_Galvaware where ID = '{0}'",V.screen.FormWorkOrderDetails!txtWOID.Text,V.Local.sSQL)
F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet,<>,"1900")
	F.Intrinsic.UI.Msgbox("Order has been invoiced and cannot be edited.")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.CallSub(LoaddtPriceList)
F.Intrinsic.Control.CallSub(LoaddtQuoteList)


gui.FormQuotesandPricing.cmdAddNew.Visible(True)
gui.FormQuotesandPricing.cmdUpdateQP.Visible(False)
gui.FormQuotesandPricing..Visible(True)
gui.FormQuotesandPricing..WindowState(0)
gui.FormQuotesandPricing..SetFocus

Program.Sub.OpenWorkOrderAddService.End

Program.Sub.cmdOrderItemsService_Click.Start
'opening the screen to Modify Service order line
V.Local.sSQL.Declare
v.Local.sRet.Declare
'Check to see if the order has been invoiced
F.Intrinsic.String.Build("Select Year(DATE_INVOICED) as DATE_INVOCIED FROM GAB_6559_Galvaware where ID = '{0}'",V.screen.FormWorkOrderDetails!txtWOID.Text,V.Local.sSQL)
F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet,<>,"1900")
	F.Intrinsic.UI.Msgbox("Order has been invoiced and cannot be edited.")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf


F.Intrinsic.Control.CallSub(LoaddtPriceList)
F.Intrinsic.Control.CallSub(LoaddtQuoteList)

Gui.FormQuotesandPricing.txtItemQty.Text(V.Screen.FormWorkOrderDetails!txtOrderItemsItemQty.Text)
Gui.FormQuotesandPricing.txtServiceID.Text(V.Screen.FormWorkOrderDetails!txtOrderItemsServiceID.Text)
Gui.FormQuotesandPricing.txtServiceDesc.Text(V.Screen.FormWorkOrderDetails!txtOrderItemsService.Text)
Gui.FormQuotesandPricing.txtQuoteID.Text(V.Screen.FormWorkOrderDetails!txtOrderItemsQuoteID.Text)
Gui.FormQuotesandPricing.txtDescriptionLine.Text(V.Screen.FormWorkOrderDetails!txtOrderItemsDescriptionMultiline.Text)
Gui.FormQuotesandPricing.txtUnitPrice.Text(V.Screen.FormWorkOrderDetails!txtOrderItemsUnityPrice.Text)
Gui.FormQuotesandPricing.txtMinCharge.Text(V.Screen.FormWorkOrderDetails!txtOrderItemsMinCharge.Text)
Gui.FormQuotesandPricing.txtUnitAbbrv.Text(V.Screen.FormWorkOrderDetails!txtOrderItemsUnitFlag.Text)
Gui.FormQuotesandPricing.txtPriorityPrice.Text(V.Screen.FormWorkOrderDetails!txtOrderItemsPriority.Text)
Gui.FormQuotesandPricing.chkItemQtyBasedFlag.Value(V.Screen.FormWorkOrderDetails!chkOrderItemsItmQtyBasedFlag.Value)

'doing this so we dont overwrite Part Description with service description.
V.Global.bHasPartDesc.Set(False)
F.Intrinsic.Control.If(V.Screen.FormWorkOrderDetails!txtOrderItemsDescriptionMultiline.Text,<>,"")
	V.Global.bHasPartDesc.Set(True)
F.Intrinsic.Control.EndIf

gui.FormQuotesandPricing.cmdAddNew.Visible(False)
gui.FormQuotesandPricing.cmdUpdateQP.Visible(True)
gui.FormQuotesandPricing..Visible(True)
gui.FormQuotesandPricing..WindowState(0)
gui.FormQuotesandPricing..SetFocus

Program.Sub.cmdOrderItemsService_Click.End

Program.Sub.GSGCPriceList_RowCellClick.Start
f.Intrinsic.Control.Try
	'f.Intrinsic.Debug.ShowCallerInfo
	v.Local.ssql.Declare
	v.Local.sRowid.Declare
	v.Local.sColumnid.Declare
	v.Local.sRowid.Set(v.Args.RowIndex)
	v.Local.sColumnid.Set(v.Args.Column)
	v.Local.sID.Declare
	v.Local.sMinCharge.Declare
	v.Local.sService.Declare
	v.Local.sDescription.Declare
	v.Local.sItmQtyFlag.Declare
	v.Local.sUnit.Declare
	v.Local.sPriority.Declare
	v.Local.sPrice.Declare
	v.Local.sStandardWeight.Declare
	
	gui.FormQuotesandPricing.GSGCPriceList.GetCellValueByColumnName("gvPriceList","ID",v.Local.sRowid,v.Local.sID) ' Select data from the datatable
	gui.FormQuotesandPricing.GSGCPriceList.GetCellValueByColumnName("gvPriceList","MinCharge",v.Local.sRowid,v.Local.sMinCharge) ' Select data from the datatable
	gui.FormQuotesandPricing.GSGCPriceList.GetCellValueByColumnName("gvPriceList","Service",v.Local.sRowid,v.Local.sService)
	gui.FormQuotesandPricing.GSGCPriceList.GetCellValueByColumnName("gvPriceList","Price",v.Local.sRowid,v.Local.sPrice) ' Select data from the datatable
	gui.FormQuotesandPricing.GSGCPriceList.GetCellValueByColumnName("gvPriceList","ItmQtyBased",v.Local.sRowid,v.Local.sItmQtyFlag) ' Select data from the datatable
	gui.FormQuotesandPricing.GSGCPriceList.GetCellValueByColumnName("gvPriceList","UnitAbbreviation",v.Local.sRowid,v.Local.sUnit) ' Select data from the datatable
	gui.FormQuotesandPricing.GSGCPriceList.GetCellValueByColumnName("gvPriceList","Priority",v.Local.sRowid,v.Local.sPriority) ' Select data from the datatable
	gui.FormQuotesandPricing.GSGCPriceList.GetCellValueByColumnName("gvPriceList","Standard_Weight",v.Local.sRowid,v.Local.sStandardWeight) ' Select data from the datatable

	gui.FormQuotesandPricing.txtServiceID.Text(v.Local.sID) 'id
	gui.FormQuotesandPricing.txtQuoteID.Text("") 'min charge
	gui.FormQuotesandPricing.txtServiceDesc.Text(v.Local.sService) 'Service
	F.Intrinsic.Control.If(V.Global.bHasPartDesc.Not)
		gui.FormQuotesandPricing.txtDescriptionLine.Text(v.Local.sService) ' Description
	F.Intrinsic.Control.EndIf
	
	gui.FormQuotesandPricing.txtUnitPrice.Text(v.Local.sPrice) ' Description
	gui.FormQuotesandPricing.chkItemQtyBasedFlag.Value(v.Local.sItmQtyFlag) ' Description
	gui.FormQuotesandPricing.txtUnitAbbrv.Text(v.Local.sUnit) ' Description
	gui.FormQuotesandPricing.txtMinCharge.Text(v.Local.sMinCharge) ' Description
	gui.FormQuotesandPricing.txtPriorityPrice.Text(v.Local.sPriority) ' Description
	gui.FormQuotesandPricing.txtUnitQtyQP.Text(v.Local.sStandardWeight) ' Description
	
	
	'Not in use
	gui.FormQuotesandPricing.txtINVTAB.Text("GSGCPriceList")
	gui.FormQuotesandPricing.txtINVY.Text(v.Local.sRowid)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.GSGCPriceList_RowCellClick.End

Program.Sub.GSGCQuotes_RowCellClick.Start
f.Intrinsic.Control.Try
	'f.Intrinsic.Debug.ShowCallerInfo
	v.Local.ssql.Declare
	v.Local.sRowid.Declare
	v.Local.sColumnid.Declare
	v.Local.sRowid.Set(v.Args.RowIndex)
	v.Local.sColumnid.Set(v.Args.Column)
	
	v.Local.sID.Declare
	v.Local.sQuote.Declare
	v.Local.sService.Declare
	v.Local.sDescription.Declare
	v.Local.sItemQty.Declare
	v.Local.sItmQtyFlag.Declare
	v.Local.sUnit.Declare
	v.Local.sPriority.Declare
	v.Local.sMinCharge.Declare
	v.Local.sPrice.Declare
	v.Local.sStandardWeight.Declare
	
	gui.FormQuotesandPricing.GSGCQuotes.GetCellValueByColumnName("gvQuoteList","ID",v.Local.sRowid,v.Local.sID) ' Select data from the datatable
	gui.FormQuotesandPricing.GSGCQuotes.GetCellValueByColumnName("gvQuoteList","Service",v.Local.sRowid,v.Local.sService) ' Select data from the datatable
	gui.FormQuotesandPricing.GSGCQuotes.GetCellValueByColumnName("gvQuoteList","QuoteID",v.Local.sRowid,v.Local.sQuote) ' Select data from the datatable
	gui.FormQuotesandPricing.GSGCQuotes.GetCellValueByColumnName("gvQuoteList","INTDescription",v.Local.sRowid,v.Local.sDescription) ' Select data from the datatable
	gui.FormQuotesandPricing.GSGCQuotes.GetCellValueByColumnName("gvQuoteList","ItmQtyBased",v.Local.sRowid,v.Local.sItmQtyFlag) ' Select data from the datatable
	gui.FormQuotesandPricing.GSGCQuotes.GetCellValueByColumnName("gvQuoteList","UnitAbbreviation",v.Local.sRowid,v.Local.sUnit) ' Select data from the datatable
	gui.FormQuotesandPricing.GSGCQuotes.GetCellValueByColumnName("gvQuoteList","Priority",v.Local.sRowid,v.Local.sPriority)
	gui.FormQuotesandPricing.GSGCQuotes.GetCellValueByColumnName("gvQuoteList","MinCharge",v.Local.sRowid,v.Local.sMinCharge) ' Select data from the datatable
	gui.FormQuotesandPricing.GSGCQuotes.GetCellValueByColumnName("gvQuoteList","Price",v.Local.sRowid,v.Local.sPrice) ' Select data from the datatable
	gui.FormQuotesandPricing.GSGCQuotes.GetCellValueByColumnName("gvQuoteList","Standard_Weight",v.Local.sRowid,v.Local.sStandardWeight) ' Select data from the datatable
	
	'gui.FormQuotesandPricing.GSGCQuotes.GetCellValueByColumnName("gvQuoteList","Item",v.Local.sRowid,v.Local.sItemQty) ' Select data from the datatable
	
	gui.FormQuotesandPricing.txtServiceID.Text(v.Local.sID)
	gui.FormQuotesandPricing.txtServiceDesc.Text(v.Local.sService)
	gui.FormQuotesandPricing.txtQuoteID.Text(v.Local.sQuote)
	
	F.Intrinsic.Control.If(V.Global.bHasPartDesc.Not)
		gui.FormQuotesandPricing.txtDescriptionLine.Text(v.Local.sService) ' Description
	F.Intrinsic.Control.EndIf
	
	gui.FormQuotesandPricing.txtUnitPrice.Text(v.Local.sPrice) ' Description
	gui.FormQuotesandPricing.chkItemQtyBasedFlag.Value(v.Local.sItmQtyFlag) ' Description
	gui.FormQuotesandPricing.txtUnitAbbrv.Text(v.Local.sUnit) ' Description
	gui.FormQuotesandPricing.txtMinCharge.Text(v.Local.sMinCharge) ' Description
	gui.FormQuotesandPricing.txtPriorityPrice.Text(v.Local.sPriority) ' Description
	gui.FormQuotesandPricing.txtUnitQtyQP.Text(v.Local.sStandardWeight) ' Description
	
	gui.FormQuotesandPricing.txtINVTAB.Text("GSGCQuotes")
	gui.FormQuotesandPricing.txtINVY.Text(v.Local.sRowid)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.GSGCQuotes_RowCellClick.End

Program.Sub.cmdUpdateQP_Click.Start
f.Intrinsic.Control.Try

'update service line info on the order lines screen
V.Local.sSQL.Declare
V.Local.sLine.Declare
v.Local.sPriorityFlag.Declare
V.Local.sWOID.Declare
V.Local.sServiceID.Declare
V.Local.sItemQty.Declare
V.Local.sDescription.Declare
V.Local.sQuoteID.Declare
V.Local.fUnitPrice.Declare
V.Local.sItemQtyBasedFlag.Declare
V.Local.sUnit.Declare
V.Local.sMinCharge.Declare
V.Local.sPriority.Declare
V.Local.dDate.Declare
V.Local.fTotalWeight.Declare
V.Local.sUnitQty.Declare
V.Local.sRet.Declare

'Update DB
V.Local.sWOID.Set(V.Screen.FormWorkOrderDetails!txtWOID.Text)
V.Local.sLine.Set(V.Screen.FormWorkOrderDetails!txtOrderItemsItem.Text)
v.Local.sServiceID.set(v.Screen.FormQuotesandPricing!txtServiceID.Text)
v.Local.sItemQty.set(v.Screen.FormQuotesandPricing!txtItemQty.Text)
v.Local.sDescription.set(v.Screen.FormQuotesandPricing!txtDescriptionLine.Text)
v.Local.sQuoteID.set(v.Screen.FormQuotesandPricing!txtQuoteID.Text)
v.Local.fUnitPrice.set(v.Screen.FormQuotesandPricing!txtUnitPrice.Text)
v.Local.sPriorityFlag.set("0")
v.Local.sItemQtyBasedFlag.set(v.Screen.FormQuotesandPricing!chkItemQtyBasedFlag.Value)
v.Local.sUnit.set(v.Screen.FormQuotesandPricing!txtUnitAbbrv.Text)
v.Local.sMinCharge.set(v.Screen.FormQuotesandPricing!txtMinCharge.Text)
v.Local.sPriority.set(v.Screen.FormQuotesandPricing!txtPriorityPrice.Text)
v.Local.dDate.Set(v.Ambient.Now)



'Reset prio flag

F.Intrinsic.String.Build("Update GAB_6559_Lines Set ServiceID = '{2}', UnitPrice = '{3}', PriorityFlag = '{4}', PricePriority = '{5}', Description = '{6}', PriceMinCharge = '{7}', Unit = '{8}', ItmQtyBasedFlag = '{9}',  ItemQty = '{10}', SysUserLastAccess = '{11}', QuoteID = '{12}', SysUserLastAccessDateTime = '{13}'  Where ID = '{0}' and Line = '{1}'",V.Local.sWOID,V.Local.sLine,V.Local.sServiceID.PSQLFriendly,V.Local.fUnitPrice,v.Local.sPriorityFlag,v.Local.sPriority,V.Local.sDescription.PSQLFriendly,v.Local.sMinCharge,v.Local.sUnit.PSQLFriendly,v.Local.sItemQtyBasedFlag,v.Local.sItemQty,V.Caller.User,v.Local.sQuoteID.PSQLFriendly,V.Local.dDate.PervasiveDate,V.Local.sSQL)

F.ODBC.Connection!con.Execute(V.Local.sSQL)


gui.FormWorkOrderDetails.txtOrderItemsService.text(V.Dictionary.dictServiceDesc![v.Local.sServiceID])
gui.FormWorkOrderDetails.txtOrderItemsServiceID.text(v.Local.sServiceID)
gui.FormWorkOrderDetails.txtOrderItemsItemQty.text(v.Local.sItemQty)
gui.FormWorkOrderDetails.txtOrderItemsDescriptionMultiline.text(v.Local.sDescription)
gui.FormWorkOrderDetails.txtOrderItemsQuoteID.text(v.Local.sQuoteID)
gui.FormWorkOrderDetails.txtOrderItemsUnityPrice.text(v.Local.fUnitPrice)
gui.FormWorkOrderDetails.txtOrderItemsUnitFlag.text(v.Local.sUnit)
gui.FormWorkOrderDetails.txtOrderItemsMinCharge.text(v.Local.sMinCharge)
gui.FormWorkOrderDetails.txtOrderItemsPriority.text(v.Local.sPriority)
gui.FormWorkOrderDetails.chkOrderItemsItmQtyBasedFlag.Value(v.Local.sItemQtyBasedFlag)
gui.FormWorkOrderDetails.chkOrderItemsPriorityFlag.Value(v.Local.sPriorityFlag)
V.Global.bHasPartDesc.Set(False)

'Calc Total Weight
V.Local.sUnitQty.Set(V.Screen.FormWorkOrderDetails!txtOrderItemsUnitQty.Text)
F.Intrinsic.Math.Mult(V.Local.sItemQty.Float,V.Local.sUnitQty.Float,V.Local.fTotalWeight)
gui.FormWorkOrderDetails.txtOrderItemsTotalWeight.text(v.Local.fTotalWeight)

'Update that we won the quote if needed.
F.Intrinsic.Control.If(V.Local.sQuoteID,<>,"")
	F.Intrinsic.String.Build("select Top 1 RTRIM(AcceptedFlag) as AcceptedFlag from GAB_6559_Quote_Head where QuoteID = '{0}';",V.Local.sQuoteID,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.executeandreturnEOF.not)
		F.Intrinsic.Control.If(V.Local.sRet,<>,"A")
			F.Intrinsic.String.Build("Update GAB_6559_Quote_Head set AcceptedFlag = 'A' where QuoteID = '{0}';",V.Local.sQuoteID,V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.CallSub(LoaddtOrderItemsTab,"WOID",V.Local.sWOID)

F.Intrinsic.Control.CallSub(CloseWorkOrderAddService)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.cmdUpdateQP_Click.End

Program.Sub.QuotesAndPricingcmdAddNew_Click.Start
f.Intrinsic.Control.Try
	V.Local.sWOID.Declare
	v.Local.sWOID.Set(v.Screen.FormWorkOrderDetails!txtWOID.Text)
	v.Local.sStatusID.Declare
	v.Local.sServiceID.Declare
	v.Local.sItemQty.Declare
	v.Local.sYard.Declare
	v.Local.sTagID.Declare
	v.Local.sDescription.Declare
	v.Local.sQuoteID.Declare
	v.Local.sUnitQty.Declare
	v.Local.fUnitPrice.Declare
	v.Local.sPriorityFlag.Declare 'chkOrderItemsPriorityFlag
	v.Local.sItemQtyBasedFlag.Declare 'chkOrderItemsItmQtyBasedFlag
	v.Local.sNoQuenchFlag.Declare 'chkOrderItemsPriorityFlag
	v.Local.sUnit.Declare
	v.Local.sMinCharge.Declare
	v.Local.sPriority.Declare
	V.Local.sSQL.Declare
	V.Local.sNow.Declare
	V.Local.fTotalWeight.Declare
	V.Local.sRet.Declare
	F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
	
	F.Intrinsic.Control.If(V.Screen.FormQuotesandPricing!txtServiceID.Text,=,"")
		F.Intrinsic.UI.Msgbox("Please select a service from the grid below before adding an order line")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.CallSub(GetNextOrderLineNumber,"WOID",V.Local.sWOID)
	
	'Insert statement
	
	v.Local.sStatusID.set("1")
	v.Local.sServiceID.set(v.Screen.FormQuotesandPricing!txtServiceID.Text)
	v.Local.sItemQty.set(v.Screen.FormQuotesandPricing!txtItemQty.Text)
	v.Local.sYard.set("")
	v.Local.sTagID.set("")
	v.Local.sDescription.set(v.Screen.FormQuotesandPricing!txtDescriptionLine.Text)
	v.Local.sQuoteID.set(v.Screen.FormQuotesandPricing!txtQuoteID.Text)
	v.Local.sUnitQty.set(v.Screen.FormQuotesandPricing!txtUnitQtyQP.Text)
	v.Local.fUnitPrice.set(v.Screen.FormQuotesandPricing!txtUnitPrice.Text)
	v.Local.sPriorityFlag.set("0")
	v.Local.sNoQuenchFlag.set("0")
	v.Local.sItemQtyBasedFlag.set(v.Screen.FormQuotesandPricing!chkItemQtyBasedFlag.Value)
	v.Local.sUnit.set(v.Screen.FormQuotesandPricing!txtUnitAbbrv.Text)
	v.Local.sMinCharge.set(v.Screen.FormQuotesandPricing!txtMinCharge.Text)
	v.Local.sPriority.set(v.Screen.FormQuotesandPricing!txtPriorityPrice.Text)
	
	
	F.Intrinsic.String.Build("Insert into GAB_6559_Lines (ID, LINE, WOStatusID, SERVICEID, QUOTEID, UnitPrice, PriorityFlag, Description, TagID, YARD, NoQuenchFlag, ItemQty, SysUserLastAccess, ItmQtyBasedFlag, SysUserLastAccessDateTime, UNIT, UNITQTY, PRICEMINCHARGE, PricePriority, Final) Values ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','{14}','{15}','{16}','{17}','{18}','0')",v.Local.sWOID,V.Args.NextLine,V.Local.sStatusID.PSQLFriendly,V.Local.sServiceID.PSQLFriendly,V.Local.sQuoteID.PSQLFriendly,V.Local.fUnitPrice,v.Local.sPriorityFlag,V.Local.sDescription.PSQLFriendly,v.Local.sTagID.PSQLFriendly,V.Local.sYard.PSQLFriendly,V.Local.sNoQuenchFlag,v.Local.sItemQty,V.Caller.User,v.Local.sItemQtyBasedFlag,v.Local.sNow,v.Local.sUnit.PSQLFriendly,v.Local.sUnitQty,v.Local.sMinCharge,v.Local.sPriority,V.Local.sSQL)
	
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	
	
	
	
	'Load text boxes ' could do this with a row cell click if we know the line number
	gui.FormWorkOrderDetails.txtOrderItemsItem.text(V.Args.NextLine)
	gui.FormWorkOrderDetails.txtOrderItemsStatus.text(V.Dictionary.dictStatus![V.Local.sStatusID])
	gui.FormWorkOrderDetails.txtOrderItemsStatusID.text(v.Local.sStatusID)
	gui.FormWorkOrderDetails.txtOrderItemsService.text(V.Dictionary.dictServiceDesc![v.Local.sServiceID])
	gui.FormWorkOrderDetails.txtOrderItemsServiceID.text(v.Local.sServiceID)
	gui.FormWorkOrderDetails.txtOrderItemsItemQty.text(v.Local.sItemQty)
	gui.FormWorkOrderDetails.txtOrderItemsTagID.text(v.Local.sTagID)
	gui.FormWorkOrderDetails.txtOrderItemsDescriptionMultiline.text(v.Local.sDescription)
	gui.FormWorkOrderDetails.txtOrderItemsQuoteID.text(v.Local.sQuoteID)
	gui.FormWorkOrderDetails.txtOrderItemsUnitQty.text(v.Local.sUnitQty)
	gui.FormWorkOrderDetails.txtOrderItemsUnityPrice.text(v.Local.fUnitPrice)
	gui.FormWorkOrderDetails.txtOrderItemsUnitFlag.text(v.Local.sUnit)
	gui.FormWorkOrderDetails.txtOrderItemsMinCharge.text(v.Local.sMinCharge)
	gui.FormWorkOrderDetails.txtOrderItemsPriority.text(v.Local.sPriority)
	gui.FormWorkOrderDetails.chkOrderItemsItmQtyBasedFlag.Value(v.Local.sItemQtyBasedFlag)
	gui.FormWorkOrderDetails.chkOrderItemsPriorityFlag.Value(v.Local.sPriorityFlag)
	gui.FormWorkOrderDetails.chkOrderItemsNoquenchFlag.Value(v.Local.sNoQuenchFlag)
	
	F.Intrinsic.Math.Mult(V.Local.sItemQty.Float,V.Local.sUnitQty.Float,V.Local.fTotalWeight)
	gui.FormWorkOrderDetails.txtOrderItemsTotalWeight.text(v.Local.fTotalWeight)
	
	'Update that we won the quote if needed.
	F.Intrinsic.Control.If(V.Local.sQuoteID,<>,"")
		F.Intrinsic.String.Build("select Top 1 RTRIM(AcceptedFlag) as AcceptedFlag from GAB_6559_Quote_Head where QuoteID = '{0}';",V.Local.sQuoteID,V.Local.sSQL)
		F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
		F.Intrinsic.Control.If(V.Ambient.executeandreturnEOF.not)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"A")
				F.Intrinsic.String.Build("Update GAB_6559_Quote_Head set AcceptedFlag = 'A' where QuoteID = '{0}';",V.Local.sQuoteID,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.CallSub(LoaddtOrderItemsTab,"WOID",V.Local.sWOID)
	F.Intrinsic.Control.CallSub(CloseWorkOrderAddService)

	
	'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.QuotesAndPricingcmdAddNew_Click.End

Program.Sub.GSGCOrderItemstab_RowCellClick.Start
f.Intrinsic.Control.Try
	v.Local.ssql.Declare
	v.Local.sRowid.Declare
	v.Local.sColumnid.Declare
	v.Local.sDataTable.Declare
	v.Local.sRowid.Set(v.Args.RowIndex)
	v.Local.sColumnid.Set(v.Args.Column)	
	v.Local.sItem.Declare	
	v.Local.sStatusID.Declare
	v.Local.sStatus.Declare
	v.Local.sServiceID.Declare
	v.Local.sService.Declare
	v.Local.ItmQty.Declare
	v.Local.sYard.Declare
	v.Local.sYard2.Declare
	v.Local.sTagID.Declare
	v.Local.sDescription.Declare
	v.Local.sQuoteID.Declare
	v.Local.sUnitQty.Declare
	v.Local.sUnitPrice.Declare
	v.Local.sUnit.Declare
	v.Local.sMinCharge.Declare
	v.Local.sPriority.Declare
	v.Local.ilength.Declare
	v.Local.bItmQtyBasedFlag.Declare 'chkOrderItemsItmQtyBasedFlag
	v.Local.bPriorityFlag.Declare 'chkOrderItemsPriorityFlag
	v.Local.bNoQuenchFlag.Declare 'chkOrderItemsPriorityFlag
	v.Local.fTotalWeight.Declare
	v.Local.sTotalWeight.Declare
	
	V.Global.bSuppressPrioChangeEvent.Set(True)
	
	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","Line",v.Local.sRowid,v.Local.sItem) ' Select data from the datatable
	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","WOStatusID",v.Local.sRowid,v.Local.sStatusID) ' Select data from the datatable
	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","Status",v.Local.sRowid,v.Local.sStatus) ' Select data from the datatable
	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","Service",v.Local.sRowid,v.Local.sService) ' Select data from the datatable
	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","ServiceID",v.Local.sRowid,v.Local.sServiceID) ' Select data from the datatable
	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","ItemQty",v.Local.sRowid,v.Local.ItmQty) ' Select data from the datatable
	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","Yard",v.Local.sRowid,v.Local.sYard) ' Select data from the datatable
	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","Yard2",v.Local.sRowid,v.Local.sYard2) ' Select data from the datatable
	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","TagID",v.Local.sRowid,v.Local.sTagID) ' Select data from the datatable
	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","Description",v.Local.sRowid,v.Local.sDescription) ' Select data from the datatable
	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","QuoteID",v.Local.sRowid,v.Local.sQuoteID) ' Select data from the datatable
	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","UnitQty",v.Local.sRowid,v.Local.sUnitQty) ' Select data from the datatable
	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","UnitPrice",v.Local.sRowid,v.Local.sUnitPrice) ' Select data from the datatable
	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","Unit",v.Local.sRowid,v.Local.sUnit) ' Select data from the datatable
	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","PriceMinCharge",v.Local.sRowid,v.Local.sMinCharge) ' Select data from the datatable
	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","PricePriority",v.Local.sRowid,v.Local.sPriority) ' Select data from the datatable
	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","ItmQtyBasedFlag",v.Local.sRowid,v.Local.bItmQtyBasedFlag) ' Select data from the datatable
	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","PriorityFlag",v.Local.sRowid,v.Local.bPriorityFlag) ' Select data from the datatable
	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","NoQuenchFlag",v.Local.sRowid,v.Local.bNoQuenchFlag) ' Select data from the datatable
	
	
	F.Intrinsic.String.Format(V.Local.sUnitPrice,"###,###,##0.00",V.Local.sUnitPrice)
	F.Intrinsic.String.Format(V.Local.sMinCharge,"###,###,##0.00",V.Local.sMinCharge)
	F.Intrinsic.String.Format(V.Local.sPriority,"###,###,##0.00",V.Local.sPriority)
	F.Intrinsic.String.Format(V.Local.sUnitQty,"###,###,###,##0.0000",V.Local.sUnitQty)
	
	gui.FormWorkOrderDetails.txtOrderItemsYLocation.text(v.Local.sRowid)
	gui.FormWorkOrderDetails.txtOrderItemsItem.text(v.Local.sItem)
	gui.FormWorkOrderDetails.txtOrderItemsStatus.text(v.Local.sStatus)
	gui.FormWorkOrderDetails.txtOrderItemsStatusID.text(v.Local.sStatusID)
	gui.FormWorkOrderDetails.txtOrderItemsService.text(v.Local.sService)
	gui.FormWorkOrderDetails.txtOrderItemsServiceID.text(v.Local.sServiceID)
	gui.FormWorkOrderDetails.txtOrderItemsItemQty.text(v.Local.ItmQty)
	gui.FormWorkOrderDetails.ddlOrderItemsYard1.Text(v.Local.sYard)
	gui.FormWorkOrderDetails.ddlOrderItemsYard2.Text(v.Local.sYard2)
	gui.FormWorkOrderDetails.txtOrderItemsTagID.text(v.Local.sTagID)
	gui.FormWorkOrderDetails.txtOrderItemsDescriptionMultiline.text(v.Local.sDescription)
	gui.FormWorkOrderDetails.txtOrderItemsQuoteID.text(v.Local.sQuoteID)
	gui.FormWorkOrderDetails.txtOrderItemsUnitQty.text(v.Local.sUnitQty)
	gui.FormWorkOrderDetails.txtOrderItemsUnityPrice.text(v.Local.sUnitPrice)
	gui.FormWorkOrderDetails.txtOrderItemsUnitFlag.text(v.Local.sUnit)
	gui.FormWorkOrderDetails.txtOrderItemsMinCharge.text(v.Local.sMinCharge)
	gui.FormWorkOrderDetails.txtOrderItemsPriority.text(v.Local.sPriority)
	gui.FormWorkOrderDetails.chkOrderItemsItmQtyBasedFlag.Value(v.Local.bItmQtyBasedFlag)
	gui.FormWorkOrderDetails.chkOrderItemsPriorityFlag.Value(v.Local.bPriorityFlag)
	gui.FormWorkOrderDetails.chkOrderItemsNoquenchFlag.Value(v.Local.bNoQuenchFlag)
	
	F.Intrinsic.Math.Mult(V.Local.ItmQty.Float,V.Local.sUnitQty.Float,V.Local.fTotalWeight)
	F.Intrinsic.String.Format(V.Local.fTotalWeight,"###,###,###,##0.0000",V.Local.sTotalWeight)
	

	
	gui.FormWorkOrderDetails.txtOrderItemsTotalWeight.text(v.Local.sTotalWeight)
	F.Intrinsic.Control.If(v.Local.bPriorityFlag)
		gui.FormWorkOrderDetails.txtOrderItemsPriority.BackColor("OrangeRed")
	F.Intrinsic.Control.Else
		gui.FormWorkOrderDetails.txtOrderItemsPriority.BackColor("Transparent")
	F.Intrinsic.Control.EndIf
	
	V.Global.iItemQty.Set(V.Local.ItmQty.Long)
	V.Global.fTotalWeight.Set(V.Local.fTotalWeight)
	
	gui.FormWorkOrderDetails.txtOrderItemsTagID.SetFocus
	V.Global.bSuppressPrioChangeEvent.Set(False)
	

	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.GSGCOrderItemstab_RowCellClick.End

'''''''''''''''''''''''''''''''''''''Quotes and Pricing'''''''''''''''''''''''''''
Program.Sub.ClearOrderItemsTextboxes.Start
f.Intrinsic.Control.Try
V.Local.iRet.Declare
V.Local.sSQL.Declare
v.Local.sRet.Declare
V.Local.sLine.Declare
V.Local.iWOID.Declare
V.Local.iWOID.Set(V.Screen.FormWorkOrderDetails!txtWOID.Text)

	gui.FormWorkOrderDetails.txtOrderItemsItem.Text("")
	gui.FormWorkOrderDetails.txtOrderItemsStatus.Text("")
	gui.FormWorkOrderDetails.txtOrderItemsService.Text("")
	gui.FormWorkOrderDetails.txtOrderItemsItemQty.Text("")
	gui.FormWorkOrderDetails.ddlOrderItemsYard1.Text("")
	gui.FormWorkOrderDetails.ddlOrderItemsYard2.Text("")
	gui.FormWorkOrderDetails.txtOrderItemsTagID.Text("")
	gui.FormWorkOrderDetails.txtOrderItemsDescriptionMultiline.Text("")
	gui.FormWorkOrderDetails.txtOrderItemsQuoteID.Text("")
	gui.FormWorkOrderDetails.chkOrderItemsItmQtyBasedFlag.Value("0")
	gui.FormWorkOrderDetails.txtOrderItemsUnitQty.Text("")
	gui.FormWorkOrderDetails.txtOrderItemsUnitFlag.Text("")
	gui.FormWorkOrderDetails.txtOrderItemsUnityPrice.Text("")
	gui.FormWorkOrderDetails.txtOrderItemsMinCharge.Text("")
	gui.FormWorkOrderDetails.chkOrderItemsPriorityFlag.Value("0")
	gui.FormWorkOrderDetails.txtOrderItemsPriority.Text("")
	gui.FormWorkOrderDetails.chkOrderItemsNoquenchFlag.Value("0")
	gui.FormWorkOrderDetails.txtOrderItemsYLocation.Text("")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	'f.ODBC.Connection!con.Close
	'f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.ClearOrderItemsTextboxes.End

Program.Sub.cmdOrderItemsDelete_Click.Start
f.Intrinsic.Control.Try
V.Local.iRet.Declare
V.Local.sSQL.Declare
v.Local.sRet.Declare
V.Local.sLine.Declare
V.Local.iWOID.Declare
V.Local.iWOID.Set(V.Screen.FormWorkOrderDetails!txtWOID.Text)
V.Local.sMsg.Declare

	'Check to see if the order has been invoiced
	F.Intrinsic.String.Build("Select Year(DATE_INVOICED) as DATE_INVOCIED FROM GAB_6559_Galvaware where ID = '{0}'",V.Local.iWOID,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"1900")
		F.Intrinsic.UI.Msgbox("Order has been invoiced and cannot be edited.")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	V.Local.sLine.Set(V.Screen.FormWorkOrderDetails!txtOrderItemsItem.Text)
	F.Intrinsic.Control.If(V.Local.sLine,=,"")
		F.Intrinsic.UI.Msgbox("No line Selected")
		F.Intrinsic.Control.ExitSub	
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Screen.FormWorkOrderDetails!txtOrderItemsServiceID.Text,=,"ZZZZZZZZZZ")
		F.Intrinsic.String.Build("Select ReworkLogID from GAB_6559_Rework_Log where WorkOrderID = '{0}' and LineNumber = '{1}'",V.Local.iWOID,V.Local.sLine,V.Local.sSQL)
		F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
		F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.Not)
			F.Intrinsic.UI.Msgbox("ReworkLogID exists! Please delete the correcsponding ReworkLogID before deleteing this WO line.")
			F.Intrinsic.Control.ExitSub	
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	'Check to see if the order has been Allocated to a job.
	F.Intrinsic.String.Build("select A.JobID from GAB_6559_Job_Lines A Left Join GAB_6559_Lines B on A.LID = B.LID where B.ID = '{0}' and B.Line = '{1}'",V.Local.iWOID,V.Local.sLine,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.Not)
		F.Intrinsic.String.Replace(V.Local.sRet,"#$#",", ",V.Local.sRet)
		F.Intrinsic.String.Build("Cannot delete line because it has been allocated to a Job! Please remove the line from the following Job(s) before deleteing the line.{0}JobID:{1}",V.Ambient.NewLine,V.Local.sRet,V.Local.sMsg)
		F.Intrinsic.UI.Msgbox(V.Local.sMsg)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.UI.Msgbox("Are you sure you want to delete the line?","",4,V.Local.iRet)
	F.Intrinsic.Control.If(V.Local.iRet,<>,6)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	v.Local.iRowIndex.Declare
	v.Local.iRowIndex.set(v.Screen.FormWorkOrderDetails!txtOrderItemsYLocation.Text)
	f.Data.Datatable.DeleteRow("dtOrderItemstab",v.Local.iRowIndex)
	f.Intrinsic.Control.If(v.Local.iRowIndex,>,0)
		f.Intrinsic.Math.Sub(v.Local.iRowIndex,1,v.Local.iRowIndex)
		gui.FormWorkOrderDetails.txtOrderItemsYLocation.text(v.Local.iRowIndex)	
	f.Intrinsic.Control.EndIf
	
	'Delete from PSQL table........
	
	F.Intrinsic.String.Build("Delete From GAB_6559_Lines where ID = '{0}' and Line = '{1}'",V.Local.iWOID,V.Local.sLine,V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	
f.Intrinsic.Control.Catch
	'f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	'f.ODBC.Connection!con.Close
	'f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.cmdOrderItemsDelete_Click.End

Program.Sub.GetNextOrderLineNumber.Start
f.Intrinsic.Control.Try
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sWOID.Declare
v.Local.sWOID.Set(V.Args.WOID)
V.Local.iLine.Declare

	F.Intrinsic.String.Build("Select Top 1 LINE From GAB_6559_Lines where ID = '{0}' order by LINE DESC",V.Local.sWOID,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.iLine)
	
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
		V.Local.iLine.Set("1")
	F.Intrinsic.Control.Else
		F.Intrinsic.Math.Add(V.Local.iLine,1,V.Local.iLine)
	F.Intrinsic.Control.EndIf
	
	
	F.Intrinsic.Variable.AddRV("NextLine",V.Local.iLine)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.GetNextOrderLineNumber.End

Program.Sub.cmdOrderItemsClone_Click.Start
f.Intrinsic.Control.Try
	v.Local.sGridControl.Declare
	v.Local.sItem.Declare	
	v.Local.sStatus.Declare
	v.Local.sStatusID.Declare
	v.Local.sService.Declare
	v.Local.sServiceID.Declare
	v.Local.ItmQty.Declare
	v.Local.sYard.Declare
	v.Local.sYard2.Declare
	v.Local.sTagID.Declare
	v.Local.sDescription.Declare
	v.Local.sQuoteID.Declare
	v.Local.sUnitQty.Declare
	v.Local.fUnitPrice.Declare
	v.Local.sUnit.Declare
	v.Local.sMinCharge.Declare
	v.Local.sPriority.Declare
	v.Local.ilength.Declare
	v.Local.sRowID.Declare
	v.Local.sItemQty.Declare
	v.Local.sItemQtyBasedFlag.Declare 'chkOrderItemsItmQtyBasedFlag
	v.Local.sPriorityFlag.Declare 'chkOrderItemsPriorityFlag
	v.Local.sNoQuenchFlag.Declare 'chkOrderItemsPriorityFlag
	V.Local.sNow.Declare
	F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
	V.Local.sSQL.Declare
	V.Local.sWOID.Declare
	v.Local.sWOID.Set(v.Screen.FormWorkOrderDetails!txtWOID.Text)
	
	v.Local.sRet.Declare
	'Check to see if the order has been invoiced
	F.Intrinsic.String.Build("Select Year(DATE_INVOICED) as DATE_INVOCIED FROM GAB_6559_Galvaware where ID = '{0}'",V.screen.FormWorkOrderDetails!txtWOID.Text,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"1900")
		F.Intrinsic.UI.Msgbox("Order has been invoiced and cannot be edited.")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	
	F.Intrinsic.Control.If(V.Screen.FormWorkOrderDetails!txtOrderItemsItem.Text,=,"")
		F.Intrinsic.UI.Msgbox("Please select an Order line to clone")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	
	'v.Local.sItem.set(v.Screen.FormWorkOrderDetails!txtOrderItemsItem.Text)
	v.Local.sStatusID.set(v.Screen.FormWorkOrderDetails!txtOrderItemsStatusID.Text)
	v.Local.sServiceID.set(v.Screen.FormWorkOrderDetails!txtOrderItemsServiceID.Text)
	v.Local.sItemQty.set(v.Screen.FormWorkOrderDetails!txtOrderItemsItemQty.Text)
	v.Local.sYard.set(v.Screen.FormWorkOrderDetails!ddlOrderItemsYard1.Text)
	v.Local.sYard2.set(v.Screen.FormWorkOrderDetails!ddlOrderItemsYard2.Text)
	v.Local.sTagID.set(v.Screen.FormWorkOrderDetails!txtOrderItemsTagID.Text)
	v.Local.sDescription.set(v.Screen.FormWorkOrderDetails!txtOrderItemsDescriptionMultiline.Text)
	v.Local.sQuoteID.set(v.Screen.FormWorkOrderDetails!txtOrderItemsQuoteID.Text)
	v.Local.sUnitQty.set(v.Screen.FormWorkOrderDetails!txtOrderItemsUnitQty.Text)
	v.Local.fUnitPrice.set(v.Screen.FormWorkOrderDetails!txtOrderItemsUnityPrice.Text)
	v.Local.sPriorityFlag.set(v.Screen.FormWorkOrderDetails!chkOrderItemsPriorityFlag.Value)
	v.Local.sNoQuenchFlag.set(v.Screen.FormWorkOrderDetails!chkOrderItemsNoquenchFlag.Value)
	v.Local.sItemQtyBasedFlag.set(v.Screen.FormWorkOrderDetails!chkOrderItemsItmQtyBasedFlag.Value)
	
	''??
	v.Local.sUnit.set(v.Screen.FormWorkOrderDetails!txtOrderItemsUnitFlag.Text)
	
	v.Local.sMinCharge.set(v.Screen.FormWorkOrderDetails!txtOrderItemsMinCharge.Text)
	v.Local.sPriority.set(v.Screen.FormWorkOrderDetails!txtOrderItemsPriority.Text)
	
	F.Intrinsic.Control.CallSub(cmdOrderItemsUpdate_Click)
	F.Intrinsic.Control.CallSub(GetNextOrderLineNumber,"WOID",V.Local.sWOID)
	
	F.Intrinsic.String.Build("Insert into GAB_6559_Lines (ID, LINE, WOStatusID, SERVICEID, QUOTEID, UnitPrice, PriorityFlag, Description, TagID, YARD, NoQuenchFlag, ItemQty, SysUserLastAccess, ItmQtyBasedFlag, SysUserLastAccessDateTime, UNIT, UNITQTY, PRICEMINCHARGE, PricePriority, Final, YARD2) Values ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','{14}','{15}','{16}','{17}','{18}','0','{19}')",v.Local.sWOID,V.Args.NextLine,V.Local.sStatusID.PSQLFriendly,V.Local.sServiceID.PSQLFriendly,V.Local.sQuoteID.PSQLFriendly,V.Local.fUnitPrice,v.Local.sPriorityFlag,V.Local.sDescription.PSQLFriendly,v.Local.sTagID.PSQLFriendly,V.Local.sYard.PSQLFriendly,V.Local.sNoQuenchFlag,v.Local.sItemQty,V.Caller.User,v.Local.sItemQtyBasedFlag,v.Local.sNow,v.Local.sUnit.PSQLFriendly,v.Local.sUnitQty,v.Local.sMinCharge,v.Local.sPriority,v.Local.sYard2.PSQLFriendly,V.Local.sSQL)
	
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	
	Gui.FormWorkOrderDetails.txtOrderItemsItem.Text(V.Args.NextLine)
	
	F.Intrinsic.Control.CallSub(LoaddtOrderItemsTab,"WOID",V.Local.sWOID)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.cmdOrderItemsClone_Click.End


'Need to ask why we have this sub??? why cant we use the regular update button?
Program.Sub.cmdOrderItemsUpdateLine_Click.Start
'f.Intrinsic.Control.Try
'	'f.Intrinsic.Debug.ShowCallerInfo
'	v.Local.sRowid.Declare
'	v.Local.sRowid.set(v.Screen.FormWorkOrderDetails!txtOrderItemsYLocation.Text)
'	f.Intrinsic.Control.If(v.Local.sRowid,>=,0)
'		v.Local.sItem.Declare
'		v.Local.sStatus.Declare
'		v.Local.sService.Declare
'		v.Local.sItemQty.Declare
'		v.Local.sYard.Declare
'		v.Local.sTagID.Declare
'		v.Local.sDescription.Declare
'		v.Local.sQuoteID.Declare
'		v.Local.sUnitQty.Declare
'		v.Local.sUnitPrice.Declare
'		v.Local.sPriorityFlag.Declare
'		v.Local.sNoQuenchFlag.Declare
'		v.Local.sItemQtyBasedFlag.Declare
'		v.Local.sUnit.Declare
'		v.Local.sMinCharge.Declare
'		v.Local.sPriority.Declare
'	
'		v.Local.sItem.set(v.Screen.FormWorkOrderDetails!txtOrderItemsItem.Text)
'		v.Local.sStatus.set(v.Screen.FormWorkOrderDetails!txtOrderItemsStatus.Text)
'		v.Local.sService.set(v.Screen.FormWorkOrderDetails!txtOrderItemsService.Text)
'		v.Local.sItemQty.set(v.Screen.FormWorkOrderDetails!txtOrderItemsItemQty.Text)
'		v.Local.sTagID.set(v.Screen.FormWorkOrderDetails!txtOrderItemsTagID.Text)
'		v.Local.sDescription.set(v.Screen.FormWorkOrderDetails!txtOrderItemsDescriptionMultiline.Text)
'		v.Local.sQuoteID.set(v.Screen.FormWorkOrderDetails!txtOrderItemsQuoteID.Text)
'		v.Local.sUnitQty.set(v.Screen.FormWorkOrderDetails!txtOrderItemsUnitQty.Text)
'		v.Local.sUnitPrice.set(v.Screen.FormWorkOrderDetails!txtOrderItemsUnityPrice.Text)
'		v.Local.sPriorityFlag.set(v.Screen.FormWorkOrderDetails!chkOrderItemsPriorityFlag.Value)
'		v.Local.sNoQuenchFlag.set(v.Screen.FormWorkOrderDetails!chkOrderItemsNoquenchFlag.Value)
'		v.Local.sItemQtyBasedFlag.set(v.Screen.FormWorkOrderDetails!chkOrderItemsItmQtyBasedFlag.Value)
'		v.Local.sUnit.set(v.Screen.FormWorkOrderDetails!txtOrderItemsUnitFlag.Text)
'		v.Local.sMinCharge.set(v.Screen.FormWorkOrderDetails!txtOrderItemsMinCharge.Text)
'		v.Local.sPriority.set(v.Screen.FormWorkOrderDetails!txtOrderItemsPriority.Text)
'		
'		f.Intrinsic.Control.If(v.Local.sPriorityFlag,=,"0")
'			v.Local.sPriorityFlag.Set(False)
'		f.Intrinsic.Control.Else()
'			v.Local.sPriorityFlag.Set(True)
'		f.Intrinsic.Control.EndIf
'		
'		f.Intrinsic.Control.If(v.Local.sNoQuenchFlag,=,"0")
'			v.Local.sNoQuenchFlag.Set(False)
'		f.Intrinsic.Control.Else()
'			v.Local.sNoQuenchFlag.Set(True)
'		f.Intrinsic.Control.EndIf
'		
'		f.Intrinsic.Control.If(v.Local.sItemQtyBasedFlag,=,"0")
'			v.Local.sItemQtyBasedFlag.Set(False)
'		f.Intrinsic.Control.Else()
'			v.Local.sItemQtyBasedFlag.Set(True)
'		f.Intrinsic.Control.EndIf
'		
'		
'		
'		'f.Intrinsic.Debug.ShowCallerInfo
'		f.Data.DataTable.SetValue("dtOrderItemstab", v.Local.sRowid,"TagID",v.Local.sTagID,"Item",v.Local.sItem,"ItemQty",v.Local.sItemQty,"Description",v.Local.sDescription,"Status",v.Local.sStatus,"Service",v.Local.sService,"QuoteID",v.Local.sQuoteID,"Yard",v.Local.sYard,"UnitQty",v.Local.sUnitQty,"UnitPrice",v.Local.sUnitPrice,"PriorityFlag",v.Local.sPriorityFlag,"ItmQtyBasedFlag",v.Local.sItemQtyBasedFlag,"Unit",v.Local.sUnit,"MinCharge",v.Local.sMinCharge,"Priority",v.Local.sPriority,"NoQuenchFlag",v.Local.sNoQuenchFlag)
'		'Function.Data.DataTable.SetValue(datatable name [string], row number [long], column 0 name [string], column 0 value [any], .. , column n name [string], column n value [any])
'		'f.Intrinsic.Debug.ShowCallerInfo
'		
'	f.Intrinsic.Control.EndIf
'	
''	"TagID"
''	"Item"
''	"ItemQty"
''	"Description"
''	"Status"
''	"Service"
''	"QuoteID"
''	"Yard"
''	"UnitQty"
''	"UnitPrice"
''	"PriorityFlag"
''	"ItmQtyBasedFlag"
''	"Unit"
''	"MinCharge"
''	"Priority"
''	"NoQuenchFlag"
''	"RowID"
''	"GridControl"
''	gui.FormWorkOrderDetails.txtOrderItemsItem.Value(v.Local.sItem)
''	gui.FormWorkOrderDetails.txtOrderItemsStatus.Value(v.Local.sStatus)
''	gui.FormWorkOrderDetails.txtOrderItemsService.Value(v.Local.sService)
''	gui.FormWorkOrderDetails.txtOrderItemsItemQty.Value(v.Local.sItemQty)
''	gui.FormWorkOrderDetails.txtOrderItemsTagID.Value(v.Local.sTagID)
''	gui.FormWorkOrderDetails.txtOrderItemsDescriptionMultiline.Value(v.Local.sDescription)
''	gui.FormWorkOrderDetails.txtOrderItemsQuoteID.Value(v.Local.sQuoteID)
''	gui.FormWorkOrderDetails.txtOrderItemsUnitQty.Value(v.Local.sUnitQty)
''	gui.FormWorkOrderDetails.txtOrderItemsUnityPrice.Value(v.Local.sUnitPrice)
''	gui.FormWorkOrderDetails.chkOrderItemsPriorityFlag.Value(v.Local.sPriorityFlag)
''	gui.FormWorkOrderDetails.chkOrderItemsNoquenchFlag.Value(v.Local.sNoQuenchFlag)
''	gui.FormWorkOrderDetails.chkOrderItemsItmQtyBasedFlag.Value(v.Local.sItemQtyBasedFlag)
''	gui.FormWorkOrderDetails.txtOrderItemsUnitFlag.Value(v.Local.sUnit)
''	gui.FormWorkOrderDetails.txtOrderItemsMinCharge.Value(v.Local.sMinCharge)
''	gui.FormWorkOrderDetails.txtOrderItemsPriority.Value(v.Local.sPriority)
''	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","ID",v.Local.sRowid,v.Local.sItem) ' Select data from the datatable
''	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","TagID",v.Local.sRowid,v.Local.sTagID) ' Select data from the datatable
''	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","Item",v.Local.sRowid,v.Local.sItem) ' Select data from the datatable
''	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","ItemQty",v.Local.sRowid,v.Local.sItemQty) ' Select data from the datatable
''	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","Description",v.Local.sRowid,v.Local.sDescription) ' Select data from the datatable
''	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","Status",v.Local.sRowid,v.Local.sStatus) ' Select data from the datatable
''	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","Service",v.Local.sRowid,v.Local.sService) ' Select data from the datatable
''	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","QuoteID",v.Local.sRowid,v.Local.sQuoteID) ' Select data from the datatable
''	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","Yard",v.Local.sRowid,v.Local.sYard) ' Select data from the datatable
''	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","UnitQty",v.Local.sRowid,v.Local.sUnitQty) ' Select data from the datatable
''	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","UnitPrice",v.Local.sRowid,v.Local.sUnitPrice) ' Select data from the datatable
''	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","PriorityFlag",v.Local.sRowid,v.Local.sPriorityFlag) ' Select data from the datatable
''	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","ItmQtyBasedFlag",v.Local.sRowid,v.Local.sItemQtyBasedFlag) ' Select data from the datatable
''	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","Unit",v.Local.sRowid,v.Local.sUnit) ' Select data from the datatable
''	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","MinCharge",v.Local.sRowid,v.Local.sMinCharge) ' Select data from the datatable
''	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","Priority",v.Local.sRowid,v.Local.sPriority) ' Select data from the datatable
''	gui.FormWorkOrderDetails.GSGCOrderItemstab.GetCellValueByColumnName("gvOrderItemstab","NoQuenchFlag",v.Local.sRowid,v.Local.sNoQuenchFlag) ' Select data from the datatable
'f.Intrinsic.Control.Catch
'	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
'	f.ODBC.Connection!con.Close
'	f.Intrinsic.Control.End
'f.Intrinsic.Control.EndTry
Program.Sub.cmdOrderItemsUpdateLine_Click.End

Program.Sub.cmdOrderItemsUpdate_Click.Start
f.Intrinsic.Control.Try

'	v.Local.ilength.Declare
'	v.local.ilength.Set(v.DataTable.dtOrderItemstab.RowCount)
	v.Local.sWOID.Declare
	v.Local.sWOID.Set(v.Screen.FormWorkOrderDetails!txtWOID.Text)
'	v.Local.i.Declare
'	v.Local.icount.Declare
	v.Local.Ssql.Declare
	
	v.Local.sItem.Declare
	v.Local.sStatus.Declare
	v.Local.sService.Declare
	v.Local.sItemQty.Declare
	v.Local.sYard.Declare
	V.Local.sYard2.Declare
	v.Local.sTagID.Declare
	v.Local.sDescription.Declare
	v.Local.sQuoteID.Declare
	v.Local.sUnitQty.Declare
	v.Local.sPriorityFlag.Declare
	v.Local.sNoQuenchFlag.Declare
	v.Local.sItemQtyBasedFlag.Declare
	v.Local.sUnit.Declare
	v.Local.sMinCharge.Declare
	v.Local.sPriority.Declare
	
	V.Local.sStatusID.Declare
	V.Local.sServiceID.Declare
	V.Local.sLID.Declare
	V.Local.sLine.Declare
	V.Local.fUnitPrice.Declare
	V.Local.fTotalWeight.Declare
	V.Local.iItemQty.Declare
	V.Local.bWarning.Declare
	v.Local.sRet.Declare
	
	'Check to see if the order has been invoiced
	F.Intrinsic.String.Build("Select Year(DATE_INVOICED) as DATE_INVOCIED FROM GAB_6559_Galvaware where ID = '{0}'",V.screen.FormWorkOrderDetails!txtWOID.Text,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"1900")
		F.Intrinsic.UI.Msgbox("Order has been invoiced and cannot be edited.")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	V.Local.sLine.Set(V.Screen.FormWorkOrderDetails!txtOrderItemsItem.Text)
	F.Intrinsic.Control.If(V.Local.sLine,=,"")
		F.Intrinsic.UI.Msgbox("No line was selected to be updated.")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	
	
	V.Local.sStatusID.Set(V.Screen.FormWorkOrderDetails!txtOrderItemsStatusID.Text)
	V.Local.sServiceID.Set(V.Screen.FormWorkOrderDetails!txtOrderItemsServiceID.Text)
	V.Local.fUnitPrice.Set(V.Screen.FormWorkOrderDetails!txtOrderItemsUnityPrice.Text)
	V.Local.sPriorityFlag.Set(V.Screen.FormWorkOrderDetails!chkOrderItemsPriorityFlag.Value)
	V.Local.sDescription.Set(V.Screen.FormWorkOrderDetails!txtOrderItemsDescriptionMultiline.Text)
	V.Local.sTagID.Set(V.Screen.FormWorkOrderDetails!txtOrderItemsTagID.Text)
	V.Local.sYard.Set(V.Screen.FormWorkOrderDetails!ddlOrderItemsYard1.Text)
	V.Local.sYard2.Set(V.Screen.FormWorkOrderDetails!ddlOrderItemsYard2.Text)
	V.Local.sNoQuenchFlag.Set(V.Screen.FormWorkOrderDetails!chkOrderItemsNoquenchFlag.Value)
	V.Local.sItemQTYBasedFlag.Set(V.Screen.FormWorkOrderDetails!chkOrderItemsItmQtyBasedFlag.Value)
	V.Local.sItemQty.Set(V.Screen.FormWorkOrderDetails!txtOrderItemsItemQty.Text)
	V.Local.sUnitQty.Set(V.Screen.FormWorkOrderDetails!txtOrderItemsUnitQty.Text)
	
	'Check to see if we need to warn the user that the total weight has changed with out them knowing.
	V.Local.bWarning.Set(False)
	V.Local.fTotalWeight.Set(V.Screen.FormWorkOrderDetails!txtOrderItemsTotalWeight.Text)
	F.Intrinsic.Control.If(V.Local.fTotalWeight,>,0)
		F.Intrinsic.Control.If(V.Local.fTotalWeight,=,V.Global.fTotalWeight)
			V.Local.iItemQty.Set(V.Local.sItemQty.Long)
			F.Intrinsic.Control.If(V.Local.iItemQty,<>,V.Global.iItemQty)
				'Diplay warning message to check the weights
				V.Local.bWarning.Set(True)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf

	
	F.Intrinsic.String.Build("Update GAB_6559_Lines Set WOStatusID = '{2}', ServiceID = '{3}', UnitPrice = '{4}', PriorityFlag = '{5}', Description = '{6}', TagID = '{7}', YARD = '{8}', NoQuenchFlag = '{9}', ItemQty = '{10}', SysUserLastAccess = '{11}', UnitQty = '{12}', ItmQtyBasedFlag = '{13}', YARD2 = '{14}'  Where ID = '{0}' and Line = '{1}'",V.Local.sWOID,V.Local.sLine,V.Local.sStatusID.PSQLFriendly,V.Local.sServiceID.PSQLFriendly,V.Local.fUnitPrice,v.Local.sPriorityFlag,V.Local.sDescription.PSQLFriendly,v.Local.sTagID.PSQLFriendly,V.Local.sYard.PSQLFriendly,V.Local.sNoQuenchFlag,v.Local.sItemQty,V.Caller.User,V.Local.sUnitQty,V.Local.sItemQtyBasedFlag,V.Local.sYard2.PSQLFriendly,V.Local.sSQL)
	
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	
	'Check if Prio is True, Then update header and control.
	F.Intrinsic.Control.If(V.Local.sPriorityFlag,=,"1")
		gui.FormWorkOrderDetails.chkPriority.Value(True)
		F.Intrinsic.String.Build("Update GAB_6559_Galvaware set Priority = '1' where ID = '{0}'",V.Local.sWOID,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.CallSub(LoaddtOrderItemsTab,"WOID",V.Local.sWOID)
	
	F.Intrinsic.Control.If(V.Local.bWarning)
			F.Intrinsic.UI.Msgbox("Warning: Item Quantity has changed, this will affect the Total Weight. Please ensure that both Unit Weight (kg/part) and the Total Weight for this line are correct, as well as Freight Weight.")
	F.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.cmdOrderItemsUpdate_Click.End

Program.Sub.cmdOrderItemsInspect_Click.Start
f.Intrinsic.Control.Try
	'f.Intrinsic.Debug.ShowCallerInfo
	v.Local.sRowid.Declare
	v.Local.sRowid.set(v.Screen.FormWorkOrderDetails!txtOrderItemsYLocation.Text)
	v.Local.sStatus.Declare
	v.Local.sStatus.Set(v.Screen.FormWorkOrderDetails!txtOrderItemsStatus.Text)
	f.Intrinsic.Control.If(v.Local.sStatus.Trim,!=,"Inspected")
		gui.FormWorkOrderDetails.txtOrderItemsStatus.Text("Inspected")
		gui.FormWorkOrderDetails.txtOrderItemsStatusID.Text("2")
		'f.Data.DataTable.SetValue("dtOrderItemstab", v.Local.sRowid,"Status","Inspected")
	f.Intrinsic.Control.Else
		gui.FormWorkOrderDetails.txtOrderItemsStatus.Text("REGISTERED")
		gui.FormWorkOrderDetails.txtOrderItemsStatusID.Text("1")
		'f.Data.DataTable.SetValue("dtOrderItemstab", v.Local.sRowid,"Status","REGISTERED")
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	'f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	'f.ODBC.Connection!con.Close
	'f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.cmdOrderItemsInspect_Click.End

Program.Sub.cmdOrderItemsReset_Click.Start
v.Local.sStatusID.Declare
v.Local.sStatusID.Set("1")
gui.FormWorkOrderDetails.txtOrderItemsStatus.text(V.Dictionary.dictStatus![V.Local.sStatusID])
gui.FormWorkOrderDetails.txtOrderItemsStatusID.text(v.Local.sStatusID)
Program.Sub.cmdOrderItemsReset_Click.End

Program.Sub.cmdOrderItemsRework_Click.Start
V.Local.sLID.Declare
V.Local.sJobID.Declare
V.Local.sSQL.Declare
V.Local.sMsg.Declare
V.Local.sRet.Declare
V.Local.sNow.Declare
V.Local.sWOID.Declare
V.Local.sServiceID.Declare
V.Local.sWOIDLine.Declare
V.Local.sWOIDLineNext.Declare
V.Local.sItemQty.Declare
V.Local.dNow.Declare
V.Local.dNow.Set(V.Ambient.Now)
V.Local.dNothing.Declare
V.Local.dNothing.Set("1/1/1900 00:00:00 AM")
V.Local.sWOID.Set(V.Screen.FormWorkOrderDetails!txtWOID.Text)
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
F.Intrinsic.Control.Try
	
	V.Local.sWOIDLine.Set(V.Screen.FormWorkOrderDetails!txtOrderItemsItem.Text)
	F.Intrinsic.Control.If(V.Local.sWOIDLine,=,"")
		F.Intrinsic.UI.Msgbox("No Work Order Line selected! Please select a line and try again.")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	V.Local.sServiceID.Set(V.Screen.FormWorkOrderDetails!txtOrderItemsServiceID.Text)
	V.Local.sItemQty.Set(V.Screen.FormWorkOrderDetails!txtOrderItemsItemQty.Text)
	
	'Look for this in JOB_LINES table
	F.Intrinsic.String.Build("Select Top 1 JobID From GAB_6559_Job_lines A Left join GAB_6559_Lines B on A.LID = B.LID where B.ID = '{0}' and B.Line = '{1}';",V.Local.sWOID,V.Local.sWOIDLine,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
		'Cannot find this line any any Jobs
		V.Local.sJobID.Set("")
	F.Intrinsic.Control.Else
		V.Local.sJobID.Set(V.Local.sRet)	
	F.Intrinsic.Control.EndIf
	
	'Check to see if they selected the rework line
	F.Intrinsic.Control.If(V.Local.sServiceID,=,"ZZZZZZZZZZ")
		F.Intrinsic.String.Build("Select TOP 1 ReworkLogID From GAB_6559_Rework_Log Where LineNumber = '{0}' and WorkOrderID = '{1}' and JobID = '{2}'",V.Local.sWOIDLine,V.Local.sWOID,V.Local.sJobID,V.Local.sSQL)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("Select TOP 1 ReworkLogID From GAB_6559_Rework_Log Where OrgLineNumber = '{0}' and WorkOrderID = '{1}' and JobID = '{2}'",V.Local.sWOIDLine,V.Local.sWOID,V.Local.sJobID,V.Local.sSQL)
	F.Intrinsic.Control.EndIf
	
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
		'Gather information about the selected JobID line and fill the Rework screen with it.
		gui.FormRework.txtWOID.Text(V.Local.sWOID)
		'Get next WOID line
		F.Intrinsic.String.Build("select Max(Line) + 1 from GAB_6559_Lines where ID = '{0}'",V.Local.sWOID,V.Local.sSQL)
		F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
		V.Local.sWOIDLineNext.Set(V.Local.sRet)
		gui.FormRework.txtWOLine.Text(V.Local.sWOIDLineNext)		
		gui.FormRework.txtWOLineOrignial.Text(V.Local.sWOIDLine)		
		gui.FormRework.txtJobID.Text(V.Local.sJobID)		
		gui.FormRework.txtItemQty.Text(V.Local.sItemQty)		
		gui.FormRework.txtUnitQty.Text("0")
		gui.FormRework.txtTotalQty.Text("0")
		Gui.FormRework.txtDateLogged.Text(V.Local.dNow)
		gui.FormRework.txtDateClosed.Text(V.Local.dNothing)		
		gui.FormRework.txtNote.Text("")
		gui.FormRework.ddlInspectedby.Text("")
		gui.FormRework.ddlReworkType.Text("")
		
		V.Global.iReworkLogID.Set(0)
		'Show Screen
		Gui.FormRework..Visible(True)
		gui.FormRework..WindowState(0)
		Gui.FormRework..SetFocus
	F.Intrinsic.Control.Else
		'We already have one, lets load that one.
		V.Global.iReworkLogID.Set(V.Local.sRet.Long)
		F.Intrinsic.Control.CallSub(LoadReworkLog)
	F.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdOrderItemsRework_Click.End

Program.Sub.chkOrderItemsPriorityFlag_Change.Start
f.Intrinsic.Control.Try
V.Local.sRet.Declare

'The event for when the Priority Flag is changed is called excessivly so we are suppressing it when the user loads a WO line in the Order items tab.  
F.Intrinsic.Control.If(V.Global.bSuppressPrioChangeEvent)
	V.Global.bSuppressPrioChangeEvent.Set(False)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Screen.FormWorkOrderDetails!chkOrderItemsPriorityFlag.CheckedAsBoolean)
	gui.FormWorkOrderDetails.txtOrderItemsPriority.BackColor("OrangeRed")
F.Intrinsic.Control.Else
	gui.FormWorkOrderDetails.txtOrderItemsPriority.BackColor("Transparent")
F.Intrinsic.Control.EndIf

'F.Intrinsic.Math.Add(V.Screen.FormWorkOrderDetails!txtOrderItemsUnityPrice.Text,V.Screen.FormWorkOrderDetails!txtOrderItemsPriority.Text,V.Local.sRet)
'F.Intrinsic.Math.Sub(V.Screen.FormWorkOrderDetails!txtOrderItemsUnityPrice.Text,V.Screen.FormWorkOrderDetails!txtOrderItemsPriority.Text,V.Local.sRet)
'Gui.FormWorkOrderDetails.txtOrderItemsUnityPrice.Text(V.Local.sRet)


f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.chkOrderItemsPriorityFlag_Change.End

Program.Sub.chkOrderItemsNoquenchFlag_Change.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.chkOrderItemsNoquenchFlag_Change.End

Program.Sub.cmdCalculateWeight_Click.Start
V.Local.fUnitQty.Declare
V.Local.sUnitQty.Declare
f.Intrinsic.Control.Try
	F.Intrinsic.Control.If(V.Screen.FormWorkOrderDetails!txtOrderItemsItemQty.Text,=,0)
		F.Intrinsic.UI.Msgbox("Item Qty cannot be zero.")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Math.Div(V.Screen.FormWorkOrderDetails!txtOrderItemsTotalWeight.Text,V.Screen.FormWorkOrderDetails!txtOrderItemsItemQty.Text,V.Local.fUnitQty)
	F.Intrinsic.Math.Round(V.Local.fUnitQty,6,V.Local.fUnitQty)
	F.Intrinsic.String.Format(V.Local.fUnitQty,"###,###,###,##0.0000",V.Local.sUnitQty)
	
	gui.FormWorkOrderDetails.txtOrderItemsUnitQty.Text(V.Local.sUnitQty)
	

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.cmdCalculateWeight_Click.End

Program.Sub.txtOrderItemsUnitQty_Change.Start
V.Local.fTotalWeight.Declare
f.Intrinsic.Control.Try
	
	F.Intrinsic.Math.Mult(V.Screen.FormWorkOrderDetails!txtOrderItemsUnitQty.Text,V.Screen.FormWorkOrderDetails!txtOrderItemsItemQty.Text,V.Local.fTotalWeight)
	F.Intrinsic.Math.Round(V.Local.fTotalWeight,6,V.Local.fTotalWeight)
	gui.FormWorkOrderDetails.txtOrderItemsTotalWeight.Text(V.Local.fTotalWeight)
	

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.txtOrderItemsUnitQty_Change.End


#End Region ' Order Lines Tab

#Region "Transport Tab"

Program.Sub.GSGCTransportNoteItems_CellValueChanged.Start
F.Intrinsic.Control.Try
V.Local.sLID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.fRet.Declare
V.Local.sBit.Declare
V.Local.dNow.Declare
V.Local.sNow.Declare
V.Local.iLineQty.Declare
V.Local.sWOID.Declare
V.Local.sStatusChange.Declare
V.Local.iWOStatus.Declare
V.Local.iRet.Declare

Gui.FormWorkOrderDetails.GSGCTransportNoteItems.GetCellValueByColumnName("gvTransportNoteItems","LID",V.Args.RowIndex,V.Local.sLID)
Gui.FormWorkOrderDetails.GSGCTransportNoteItems.GetCellValueByColumnName("gvTransportNoteItems","WO_ID",V.Args.RowIndex,V.Local.sWOID)
Gui.FormWorkOrderDetails.GSGCTransportNoteItems.GetCellValueByColumnName("gvTransportNoteItems","WOStatusID",V.Args.RowIndex,V.Local.iWOStatus)

F.Intrinsic.Control.BlockEvents		
F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
		
	F.Intrinsic.Control.Case("FINAL")
		'Check to see if the order has been invoiced
		F.Intrinsic.String.Build("Select Year(DATE_INVOICED) as DATE_INVOICED FROM GAB_6559_Galvaware where ID = '{0}'",V.screen.FormWorkOrderDetails!txtWOID.Text,V.Local.sSQL)
		F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet,<>,"1900")
			F.Intrinsic.Control.UnBlockEvents
			F.Intrinsic.UI.Msgbox("Order has been invoiced and cannot be edited. Final Flag was not updated")
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
		
		'See if the lines are at least marked as Check Completed in the Job allocation tab
		F.Intrinsic.Control.If(V.Local.iWOStatus,<,10)
			F.Intrinsic.Control.UnBlockEvents
			F.Intrinsic.UI.Msgbox("Line has not been Marked as Checked in Job Allocation. Final Flag was not updated")
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.If(V.Args.Value.Not)
			V.Local.sBit.Set("0")
			V.Local.sStatusChange.Set("")
		F.Intrinsic.Control.Else
			V.Local.sBit.Set("1")
			V.Local.sStatusChange.Set(", WOStatusID = '14'")
			
		F.Intrinsic.Control.EndIf
	
		F.Intrinsic.String.Build("Update GAB_6559_Lines Set Final = '{0}' {3} where LID = '{1}' and ID = '{2}'",V.Local.sBit,V.Local.sLID,V.Local.sWOID,V.Local.sStatusChange,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		
		F.Intrinsic.String.Build("Select top 1 ID from GAB_6559_Lines where Final = '0' and ID = '{0}' and ServiceID not in (Select ServiceID From GAB_6559_Service where Freight = '1' or QA = '1')",V.Local.sWOID,V.Local.sSQL)
		F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
		F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
			'All Lines are Final, update the WO status
			F.Intrinsic.String.Build("Update GAB_6559_Galvaware set STATUS = 'READY TO INVOICE' where ID = '{0}'",V.Local.sWOID,V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
			gui.FormWorkOrderDetails.txtStatus.Text("READY TO INVOICE")
			
			
			F.Intrinsic.UI.Msgbox("All lines are marked as Final. Would you like to send the Contact an email that their order is ready for pickup?","",4,V.Local.iRet)
			F.Intrinsic.Control.If(V.Local.iRet,<>,6)
				F.Intrinsic.Control.UnBlockEvents
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.Control.CallSub(SendNotificaion)
		F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.UnBlockEvents

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.GSGCTransportNoteItems_CellValueChanged.End

Program.Sub.cmdTransportNotes_Click.Start
f.Intrinsic.Control.Try
	V.Local.iPID.Declare
	V.Local.sPath.Declare
	
	F.Intrinsic.UI.Msgbox("Please open the Transport Note Program or view the child tables on the Main Gridview")
	'F.Intrinsic.String.Build("{0}GCG_6559_Transport.g2u",V.Caller.GasDir,V.Local.sPath)
	'F.Global.General.CallAsyncGAS(V.Local.sPath,"N",V.Local.iPID)
			
'	gui.FormTransportNoteService..Show(True)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.cmdTransportNotes_Click.End

Program.Sub.ddlTransportNotesInbound_Change.Start
V.Local.sInbound.Declare
V.Local.sSQL.Declare
v.Local.sWOID.Declare
v.Local.sWOID.set(v.Screen.FormWorkOrderDetails!txtWOID.Text)

F.Data.Dictionary.ReturnKeyFromValue("dictTransportINB",V.Screen.FormWorkOrderDetails!ddlTransportNotesInbound.Value,V.Local.sInbound)
F.Intrinsic.String.Build("Update GAB_6559_Galvaware Set INBOUND = '{0}' where ID = '{1}'",V.Local.sInbound,V.Local.sWOID,V.Local.sSQL)
F.ODBC.Connection!con.Execute(V.Local.sSQL)


Program.Sub.ddlTransportNotesInbound_Change.End

Program.Sub.ddlTransportNotesOutbound_Change.Start
V.Local.sOutbound.Declare
V.Local.sSQL.Declare
v.Local.sWOID.Declare
v.Local.sWOID.set(v.Screen.FormWorkOrderDetails!txtWOID.Text)

F.Data.Dictionary.ReturnKeyFromValue("dictTransportOUT",V.Screen.FormWorkOrderDetails!ddlTransportNotesOutbound.Value,V.Local.sOutbound)
F.Intrinsic.String.Build("Update GAB_6559_Galvaware Set OUTBOUND = '{0}' where ID = '{1}'",V.Local.sOutbound,V.Local.sWOID,V.Local.sSQL)
F.ODBC.Connection!con.Execute(V.Local.sSQL)

Program.Sub.ddlTransportNotesOutbound_Change.End

Program.Sub.ddlTransportNotesPos_Change.Start
V.Local.sPOSSESSION.Declare
V.Local.sSQL.Declare
v.Local.sWOID.Declare
v.Local.sWOID.set(v.Screen.FormWorkOrderDetails!txtWOID.Text)

F.Data.Dictionary.ReturnKeyFromValue("dictTransportPOS",V.Screen.FormWorkOrderDetails!ddlTransportNotesPos.Value,V.Local.sPOSSESSION)
F.Intrinsic.String.Build("Update GAB_6559_Galvaware Set POSSESSION = '{0}' where ID = '{1}'",V.Local.sPOSSESSION,V.Local.sWOID,V.Local.sSQL)
F.ODBC.Connection!con.Execute(V.Local.sSQL)

Program.Sub.ddlTransportNotesPos_Change.End

Program.Sub.cmdTransportNotesFinal_Click.Start
F.Intrinsic.Control.Try
V.Local.sLID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.fRet.Declare
V.Local.sBit.Declare
V.Local.dNow.Declare
V.Local.sNow.Declare
V.Local.iLineQty.Declare
V.Local.sWOID.Declare
V.Local.sWOID.Set(V.screen.FormWorkOrderDetails!txtWOID.Text)
V.Local.sStatusChange.Declare
V.Local.iWOStatus.Declare
V.Local.iRet.Declare
	
	F.Intrinsic.Control.BlockEvents
	'Check to see if the order has been invoiced
	F.Intrinsic.String.Build("Select Year(DATE_INVOICED) as DATE_INVOICED FROM GAB_6559_Galvaware where ID = '{0}'",V.screen.FormWorkOrderDetails!txtWOID.Text,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"1900")
		F.Intrinsic.Control.UnBlockEvents
		F.Intrinsic.UI.Msgbox("Order has been invoiced and cannot be edited. Final Flag was not updated")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf

	'All Lines are Final, update the WO status
	F.Intrinsic.String.Build("Update GAB_6559_Galvaware set STATUS = 'READY TO INVOICE' where ID = '{0}'",V.Local.sWOID,V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	gui.FormWorkOrderDetails.txtStatus.Text("READY TO INVOICE")
	
	
	F.Intrinsic.UI.Msgbox("All lines are marked as Final. Would you like to send the Contact an email that their order is ready for pickup?","",4,V.Local.iRet)
	F.Intrinsic.Control.If(V.Local.iRet,<>,6)
		F.Intrinsic.Control.UnBlockEvents
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.CallSub(SendNotificaion)
	F.Intrinsic.Control.UnBlockEvents

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.cmdTransportNotesFinal_Click.End

#End Region ' Transport Tab

#Region "Weights Overview Tab"

Program.Sub.cmdWeightMesurementsUpdatebtn_Click.Start
V.Local.iCnt.Declare
V.Local.sSQL.Declare
'Update UnitQty for all rows
v.Local.sRet.Declare
	'Check to see if the order has been invoiced
	F.Intrinsic.String.Build("Select Year(DATE_INVOICED) as DATE_INVOCIED FROM GAB_6559_Galvaware where ID = '{0}'",V.screen.FormWorkOrderDetails!txtWOID.Text,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"1900")
		F.Intrinsic.UI.Msgbox("Order has been invoiced and cannot be edited.")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtWMLines.RowCount--,1)
	F.Intrinsic.String.Build("Update GAB_6559_Lines Set UnitQty = '{0}' where LID = '{1}'",V.DataTable.dtWMLines(V.Local.iCnt).UnitQty!fieldval,V.DataTable.dtWMLines(V.Local.iCnt).LID!fieldval,V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
F.Intrinsic.Control.Next(V.Local.iCnt)

Program.Sub.cmdWeightMesurementsUpdatebtn_Click.End

Program.Sub.cmdWeightMesurementsApply_Click.Start
V.Local.iCnt.Declare
V.Local.fLineWeight.Declare
V.Local.fItemQty.Declare
V.Local.fTotalItemQty.Declare
V.Local.sAggregateWeight.Declare
V.Local.fAggregateWeight.Declare
V.Local.fWeightperItem.Declare
V.Local.sAggregateWeight.Set(V.Screen.FormWorkOrderDetails!txtAggregateWeight.Text)
V.Local.fAggregateWeight.Set(V.Screen.FormWorkOrderDetails!txtAggregateWeight.Text)
F.Intrinsic.Control.If(V.Local.sAggregateWeight.Trim,=,"")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Local.fAggregateWeight,<,0)
	F.Intrinsic.UI.Msgbox("Weight cannot be negative")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Data.DataTable.Compute("dtWMLines","SUM(ItemQty)","[Select] = 'True'",V.Local.fTotalItemQty)

F.Intrinsic.Control.If(V.Local.fTotalItemQty,<=,0)
	F.Intrinsic.UI.Msgbox("Item Qty cannot be negative or zero")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.Math.Div(V.Local.fAggregateWeight,V.Local.fTotalItemQty,V.Local.fWeightperItem)
F.Intrinsic.Math.Round(V.Local.fWeightperItem,4,V.Local.fWeightperItem)

F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtWMLines.RowCount--,1)
	F.Intrinsic.Control.If(V.DataTable.dtWMLines(V.Local.iCnt).Select!fieldval)
		V.Local.fItemQty.Set(V.DataTable.dtWMLines(V.Local.iCnt).ItemQty!fieldval)
		F.Intrinsic.Control.If(V.Local.fItemQty,<=,0)
			F.Intrinsic.UI.Msgbox("Item Qty cannot be negative or zero")
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.Else
			'F.Intrinsic.Math.Mult(V.Local.fItemQty,V.Local.fWeightperItem,V.Local.fLineWeight)
			F.Data.DataTable.SetValue("dtWMLines",V.Local.iCnt,"UnitQty",V.Local.fWeightperItem)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iCnt)

Program.Sub.cmdWeightMesurementsApply_Click.End

Program.Sub.cmdUpdateFreight_Click.Start
f.Intrinsic.Control.Try
	V.Local.sSQL.Declare
	V.Local.sRet.Declare
	V.Local.sMsg.Declare
	V.Local.fFreight.Declare
	V.Local.sWOID.Declare
	V.Local.sWOID.Set(V.Screen.FormWorkOrderDetails!txtWOID.Text)
	
	F.Intrinsic.String.Build("select Sum(UnitQty * ItemQty) from GAB_6559_Lines where ID = '{0}' and ServiceID Not in (Select ServiceID from GAB_6559_Service where QA = '1' or Freight = '1') and ServiceID <> 'ZZZZZZZZZZ' and ItemQty <> '0'",V.Local.sWOID,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
		F.Intrinsic.UI.Msgbox("No WO Lines where found that are non zero Item Qty, Freight lines, QA Lines, or Rework. No updates were made!")
	F.Intrinsic.Control.Else
		V.Local.fFreight.Set(V.Local.sRet.Float)
		F.Intrinsic.Math.Round(V.Local.fFreight,4,V.Local.fFreight)
		F.Intrinsic.String.Build("Update GAB_6559_Lines set UnitQty = '{0}' where ID = '{1}' and ServiceID in (Select ServiceID from GAB_6559_Service where Freight = '1')",V.Local.fFreight,V.Local.sWOID,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		F.Intrinsic.String.Build("All Freight Lines were updated to have a Unit Qty (Weight) = {0}",V.Local.fFreight,V.Local.sMsg)
		F.Intrinsic.UI.Msgbox(V.Local.sMsg)
	F.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdUpdateFreight_Click.End

Program.Sub.GSGCWeightMeasurementsTR_CellValueChanged.Start
F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
F.Intrinsic.Control.Case("SELECT")
	F.Intrinsic.Control.If(V.Args.Value)
		F.Data.Dictionary.AddItem("dictWeightsKey",V.DataTable.dtWMAggregate(V.Args.rowindex).WeightsKey!fieldval,True)
	F.Intrinsic.Control.Else
		F.Data.Dictionary.RemoveItem("dictWeightsKey",V.DataTable.dtWMAggregate(V.Args.rowindex).WeightsKey!fieldval)
	F.Intrinsic.Control.EndIf
	F.Data.DataTable.FillFromDictionary("dtWMLines","dictWeightsKey","WeightsKey","Select")

'Select corresponding rows in the GSGCWeightMeasurementsB 

F.Intrinsic.Control.EndSelect

Program.Sub.GSGCWeightMeasurementsTR_CellValueChanged.End
Program.Sub.GSGCWeightMeasurementsB_CellValueChanged.Start
'We are not actually doing anything here yet.... 
Program.Sub.GSGCWeightMeasurementsB_CellValueChanged.End


#End Region ' Weights Overview

#Region "Billing Tab"

'LoadBillingInfo
Program.Sub.LoadBillingInfo.Start
f.Intrinsic.Control.Try
	v.Local.sWOID.Declare
	v.Local.sWOID.Set(v.Screen.FormWorkOrderDetails!txtWOID.Text)

	v.Local.sSQL.Declare
	V.Local.sRet.Declare
	V.Local.sDateInvoiced.Declare
	V.Local.sCust.Declare
	V.Local.sShipSeq.Declare
	V.Local.sPriceGroup.Declare
	V.Local.fWOMinCharge.Declare
	V.Local.sWOMincharge.Declare
	V.Local.bExempt.Declare
	V.Local.fSubTotal.Declare
	V.Local.sSubTotal.Declare
	V.Local.fSubTotalTax.Declare
	V.Local.sSubTotalTax.Declare
	V.Local.fGrandTotal.Declare
	V.Local.sGrandTotal.Declare
	V.Local.fTaxRate.Declare
	
	'get DATE_INVOICED and MinChargeExempt flag From GAB_6559_Galvaware
	F.Intrinsic.String.Build("select Cast(DATE_INVOICED as Date), MinChargeExempt from GAB_6559_Galvaware Where ID = '{0}'",V.Local.sWOID,v.Local.sSQL)
	F.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.Not)
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		V.Local.sDateInvoiced.Set(V.Local.sRet(0))
		Gui.FormWorkOrderDetails.txtBillingInfoDateTimeInvoiced.Text(V.Local.sDateInvoiced)
		V.Local.bExempt.Set(V.Local.sRet(1))
	F.Intrinsic.Control.Else
		Gui.FormWorkOrderDetails.txtBillingInfoDateTimeInvoiced.Text("1/1/1900")
		V.Local.bExempt.Set(False)
	F.Intrinsic.Control.EndIf
	gui.FormWorkOrderDetails.chkBillingInfoMinChargeExemptionFlag.Value(V.Local.bExempt)
	
	V.Local.sCust.Set(V.Screen.FormWorkOrderDetails!txtCustomerCode.Text)
	V.Local.sShipSeq.Set(V.Screen.FormWorkOrderDetails!txtCustomerShipTo.Text)
	
	'Get PRICEGROUPID from GAB_6559_Customer_Xref
	F.Intrinsic.String.Build("select RTRIM(PRICEGROUPID) as PRICEGROUPID from GAB_6559_Customer_Xref Where CUSTOMER = '{0}' and SHIP_SEQ = '{1}'",V.Local.sCust,V.Local.sShipSeq,v.Local.sSQL)
	F.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.Not)
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		V.Local.sPriceGroup.Set(V.Local.sRet(0))
		Gui.FormWorkOrderDetails.lblPriceGroup.Text(V.Local.sPriceGroup)
	F.Intrinsic.Control.Else
		Gui.FormWorkOrderDetails.lblPriceGroup.Text("No Price Group Selected")
	F.Intrinsic.Control.EndIf
	
	'Get WorkOrderMinCharge from GAB_6559_Price_Group
	F.Intrinsic.String.Build("select Cast(WorkOrderMinCharge as Numeric(16,4)) from GAB_6559_Price_Group Where PriceGroupID = '{0}'",V.Local.sPriceGroup,v.Local.sSQL)
	F.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.Not)
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		V.Local.sWOMinCharge.Set(V.Local.sRet(0))
		V.Local.fWOMinCharge.Set(V.Local.sRet(0))
		F.Intrinsic.String.Build("${0}  ex-GST",V.Local.sWOMinCharge,V.Local.sWOMincharge)
		Gui.FormWorkOrderDetails.lblMinCharge.Text(V.Local.sWOMincharge)
	F.Intrinsic.Control.Else
		Gui.FormWorkOrderDetails.lblMinCharge.Text("0.0000 ex-GST")
	F.Intrinsic.Control.EndIf
	
	'get Order sub total, Tax Sub total, and Order Grand Total.
	F.Intrinsic.String.Build("Select LID, ID as WO_ID, RTRIM(ServiceID) as ServiceID, PriceMinCharge, UnitPrice, PricePriority, PriorityFlag, UnitQty, Cast(ItemQty as NUMERIC(16,2)) as ItemQty, ItmQtyBasedFlag, Cast(0 as bit) as Freight, Cast(0 as bit) as QA from GAB_6559_LINES where ID = '{0}' and ServiceID <> 'ZZZZZZZZZZ'",V.Local.sWOID, V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtAPTemp","con",V.Local.sSQL,TRUE)
	
	F.Data.Datatable.AddExpressionColumn("dtAPTemp","TotalWeight","Float","[ItemQty] * [UnitQty]")
	F.Data.Datatable.AddExpressionColumn("dtAPTemp","UnitPrice_WithPrio","Float","IIF([PriorityFlag] = True, [UnitPrice] + [PricePriority], [UnitPrice])")
	F.Data.Datatable.AddExpressionColumn("dtAPTemp","TotalPrice0","Float","IIF([ItmQtyBasedFlag] = True, [ItemQty] * [UnitPrice_WithPrio], [UnitQty] * [ItemQty] * [UnitPrice_WithPrio])")
	F.Data.Datatable.AddExpressionColumn("dtAPTemp","TotalPrice","Float","IIF([TotalPrice0] < [PriceMinCharge], [PriceMinCharge], [TotalPrice0])")
	F.Data.DataTable.Compute("dtAPTemp","Sum(TotalPrice)","",V.Local.fSubTotal)
	gui.FormWorkOrderDetails.lblOrderSubTotal.ForeColor("Black")
	F.Intrinsic.Control.If(V.Local.fSubTotal,<,V.Local.fWOMinCharge)
		F.Intrinsic.Control.If(V.Local.bExempt.Not)
			gui.FormWorkOrderDetails.lblOrderSubTotal.ForeColor("Red")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	'Get tax rate
	f.Intrinsic.String.Build("select A.Rate From AR_TAX_TABLES A Left Join CUSTOMER_TAX_AUTH B on A.AUTH = B.TAX_AUTH Where B.CUST = '{0}'",V.Local.sCust,V.Local.sSQL)
	F.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.Not)
		V.Local.fTaxRate.Set(V.Local.sRet)
	F.Intrinsic.Control.Else
		V.Local.fTaxRate.Set(0.1000)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Math.Mult(V.Local.fTaxRate,V.Local.fSubTotal,V.Local.fSubTotalTax)
	F.Intrinsic.Math.Add(V.Local.fSubTotalTax,V.Local.fSubTotal,V.Local.fGrandTotal)
	F.Intrinsic.Math.Round(V.Local.fSubTotal,2,V.Local.fSubTotal)
	F.Intrinsic.Math.Round(V.Local.fSubTotalTax,2,V.Local.fSubTotalTax)
	F.Intrinsic.Math.Round(V.Local.fGrandTotal,2,V.Local.fGrandTotal)
	F.Intrinsic.String.Format(V.Local.fSubTotal,"$###,###,###,##0.00",V.Local.sSubTotal)
	F.Intrinsic.String.Format(V.Local.fSubTotalTax,"$###,###,###,##0.00",V.Local.sSubTotalTax)
	F.Intrinsic.String.Format(V.Local.fGrandTotal,"$###,###,###,##0.00",V.Local.sGrandTotal)
	gui.FormWorkOrderDetails.lblOrderSubTotal.Caption(V.Local.sSubTotal)
	gui.FormWorkOrderDetails.lblTaxSubTotal.Caption(V.Local.sSubTotalTax)
	gui.FormWorkOrderDetails.lblOrderGrandTotal.Caption(V.Local.sGrandTotal)
	
	F.Data.Datatable.Close("dtAPTemp")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.LoadBillingInfo.End

Program.Sub.cmdUpdateBillingInfo_Click.Start
f.Intrinsic.Control.Try
	v.Local.sWOID.Declare
	v.Local.sWOID.Set(v.Screen.FormWorkOrderDetails!txtWOID.Text)

	v.Local.sSQL.Declare
	V.Local.sRet.Declare
	V.Local.sDateInvoiced.Declare
	V.Local.sMinChargeExempt.Declare
	
	'Check to see if the order has been invoiced
'	F.Intrinsic.String.Build("Select Year(DATE_INVOICED) as DATE_INVOCIED FROM GAB_6559_Galvaware where ID = '{0}'",V.screen.FormWorkOrderDetails!txtWOID.Text,V.Local.sSQL)
'	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
'	F.Intrinsic.Control.If(V.Local.sRet,<>,"1900")
'		F.Intrinsic.UI.Msgbox("Order has been invoiced and cannot be edited.")
'		F.Intrinsic.Control.ExitSub
'	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Format(V.Screen.FormWorkOrderDetails!txtBillingInfoDateTimeInvoiced.Text,"YYYY-MM-DD",V.Local.sDateInvoiced)
	V.Local.sMinChargeExempt.Set(V.Screen.FormWorkOrderDetails!chkBillingInfoMinChargeExemptionFlag.Checked)
	
	F.Intrinsic.String.Build("Update GAB_6559_Galvaware Set  DATE_INVOICED = '{1}', MinChargeExempt = '{2}' Where ID = '{0}' ",V.Local.sWOID,V.Local.sDateInvoiced,V.Local.sMinChargeExempt,V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	
	'Check if Prio is True, Then update header and control.
'	F.Intrinsic.Control.If(V.Local.sPriorityFlag,=,"1")
'		'gui.FormWorkOrderDetails.chkPriority.Value(True)
'		'F.Intrinsic.String.Build("Update GAB_6559_Galvaware set Priority = '1' where ID = '{0}'",V.Local.sWOID,V.Local.sSQL)
'		'F.ODBC.Connection!con.Execute(V.Local.sSQL)
'	F.Intrinsic.Control.EndIf
	

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	'f.ODBC.Connection!con.Close
	'f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.cmdUpdateBillingInfo_Click.End

#End Region ' Billing Tab

#Region "Receipting Info Tab"
Program.Sub.LoadReceiptingInfo.Start
f.Intrinsic.Control.Try
	V.Local.iWOID.Declare
	V.Local.sSQL.Declare
	V.Local.sRet.Declare
	V.Local.sReceipted.Declare
	V.Local.sInspected.Declare
	V.Local.dInspected.Declare
	V.Local.dReceipted.Declare
	
	V.Local.iWOID.Set(V.Screen.FormWorkOrderDetails!txtWOID.Text)

	F.Intrinsic.String.Build("Select RECEIPTED, RECEIPTED_BY, Cast(DATE_INSPECTED as Date) as DATE_INSPECTED,  COMMIT_DATE, DELIVERY_DATE, DATE_INVOICED, Cast(DATE_INSPECTED as Time) as TIME_INSPECTED, Cast(DELIVERY_DATE as Time) as TIME_DELIVERY, Cast(RECEIPTED as Time) as TIME_Receipted From GAB_6559_Galvaware where ID = '{0}'",V.Local.iWOID,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.not)
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		

		

		F.Intrinsic.Control.If(V.Local.sRet(3),=,"")
			V.Local.sRet(3).Set("1/1/1900")
		F.Intrinsic.Control.EndIf

		F.Intrinsic.String.Format(V.Local.sRet(6),"HH:NN",V.Local.sRet(6))
		F.Intrinsic.String.Format(V.Local.sRet(8),"HH:NN",V.Local.sRet(8))
		
		
		gui.FormWorkOrderDetails.dtpReceiptedDate.Value(V.Local.sRet(0))
		gui.FormWorkOrderDetails.txtReceiptedby.Text(V.Local.sRet(1))
		'F.Intrinsic.String.Build("{0} +10:00",V.Local.sRet(9),V.Local.sInspected)
		'F.Intrinsic.UI.Msgbox(V.Local.sInspected)
		'gui.FormWorkOrderDetails.DateTimeOffsetInspeced.Value(V.Local.dInspected)
		gui.FormWorkOrderDetails.dtpInspectedDate.Value(V.Local.sRet(2))
		gui.FormWorkOrderDetails.dtpCommitDate.Value(V.Local.sRet(3))
		gui.FormWorkOrderDetails.dtpDeliveryDate.Value(V.Local.sRet(4))
		
		gui.FormWorkOrderDetails.txtInspectedTime.Text(V.Local.sRet(6))
		'gui.FormWorkOrderDetails.txtDeliveryTime.Text(V.Local.sRet(7))
		gui.FormWorkOrderDetails.txtReceiptTime.Text(V.Local.sRet(8))
		
		
	F.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.LoadReceiptingInfo.End




Program.Sub.cmdUpdateReceipting_Click.Start
F.Intrinsic.Control.Try
	V.Local.iWOID.Declare
	V.Local.sSQL.Declare
	V.Local.sRet.Declare
	V.Local.dDate.Declare
	V.Local.sTime.Declare
	V.Local.sString.Declare
	V.Local.iWOID.Set(V.Screen.FormWorkOrderDetails!txtWOID.Text)
	V.Local.sInspectedDateTime.Declare
	V.Local.sInspectedTime.Declare
	V.Local.sInspectedDate.Declare
	V.Local.sReceiptedDate.Declare
	V.Local.sReceiptedTime.Declare
	V.Local.sReceiptedDateTime.Declare
	
	'update DATE_INSPECTED.GAB_6559_Galvaware
	F.Intrinsic.String.Format(V.Screen.FormWorkOrderDetails!dtpReceiptedDate.Value,"YYYY-MM-DD",V.Local.sReceiptedDate)
	F.Intrinsic.String.Format(V.Screen.FormWorkOrderDetails!txtReceiptTime.Text,"HH:NN:SS",V.Local.sReceiptedTime)
	F.Intrinsic.String.Build("{0} {1}",V.Local.sReceiptedDate,V.Local.sReceiptedTime,V.Local.sReceiptedDateTime)
	F.Intrinsic.String.Build("Update GAB_6559_Galvaware set RECEIPTED = '{0}' where ID = '{1}'",V.Local.sReceiptedDateTime,V.Local.iWOID,V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	
	'update DATE_INSPECTED.GAB_6559_Galvaware
	F.Intrinsic.String.Format(V.Screen.FormWorkOrderDetails!dtpInspectedDate.Value,"YYYY-MM-DD",V.Local.sInspectedDate)
	F.Intrinsic.String.Format(V.Screen.FormWorkOrderDetails!txtInspectedTime.Text,"HH:NN:SS",V.Local.sInspectedTime)
	F.Intrinsic.String.Build("{0} {1}",V.Local.sInspectedDate,V.Local.sInspectedTime,V.Local.sInspectedDateTime)
	F.Intrinsic.String.Build("Update GAB_6559_Galvaware set DATE_INSPECTED = '{0}' where ID = '{1}'",V.Local.sInspectedDateTime,V.Local.iWOID,V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	
	v.Local.dDate.Set(V.Screen.FormWorkOrderDetails!dtpCommitDate.Text)
	F.Intrinsic.String.Build("Update GAB_6559_Galvaware set Commit_date = '{0}' where ID = '{1}'",V.Local.dDate.PervasiveDate,V.Local.iWOID,V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	
	v.Local.dDate.Set(V.Screen.FormWorkOrderDetails!dtpDeliveryDate.Text)
	F.Intrinsic.String.Build("Update GAB_6559_Galvaware set DELIVERY_DATE = '{0}' where ID = '{1}'",V.Local.dDate.PervasiveDate,V.Local.iWOID,V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdUpdateReceipting_Click.End

#End Region ' Receipting Info Tab

#Region "Contact Allocation"

Program.Sub.cmdCRM_Click.Start
V.Local.sParams.Declare
V.Local.iHandle.Declare
V.Local.sCustomer.Declare
V.Local.iType.Declare

F.Intrinsic.Control.Try
	'F.Intrinsic.String.Build("MODE::9*!*COMPANY-NUMBER::{0}*!*COMPANY-TYPE::{1}",V.Local.sCustomer,V.Local.iType,V.Local.sParams)
	V.Local.sCustomer.Set(V.Screen.FormWorkOrderDetails!txtCustomerCode.Text)
	V.Local.iType.Set(15)
	F.Intrinsic.String.Build("MODE::1*!*COMPANY-NUMBER::{0}*!*COMPANY-TYPE::{1}",V.Local.sCustomer,V.Local.iType,V.Local.sParams)
	F.Global.CRM.Invoke(V.Local.sParams,V.Local.iHandle)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdCRM_Click.End

Program.Sub.cmdContactAllocationUpdate_Click.Start
V.Local.sCustomer.Declare
V.Local.sWOID.Declare
V.Local.iCnt.Declare
V.Local.sSQL.Declare
V.Local.sID.Declare
v.Local.sRet.Declare

F.Intrinsic.Control.Try

	'Check to see if the order has been invoiced
	F.Intrinsic.String.Build("Select Year(DATE_INVOICED) as DATE_INVOCIED FROM GAB_6559_Galvaware where ID = '{0}'",V.screen.FormWorkOrderDetails!txtWOID.Text,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"1900")
		F.Intrinsic.UI.Msgbox("Order has been invoiced and cannot be edited.")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	V.Local.sCustomer.Set(V.Screen.FormWorkOrderDetails!txtCustomerCode.Text)
	V.Local.sWOID.Set(V.Screen.FormWorkOrderDetails!txtWOID.Text)
	
	F.Intrinsic.Control.For(V.Local.iCnt,V.DataTable.dtContactDeallocate.RowCount--,0,-1)
		F.Intrinsic.Control.If(V.DataTable.dtContactDeallocate(V.Local.iCnt).Select!FieldVal)
			V.Local.sID.Set(V.DataTable.dtContactDeallocate(V.Local.iCnt).ID!FieldVal)
			F.Intrinsic.String.Build("Delete From GAB_6559_Contact_Alloc where WorkOrderID = '{0}' and CUST = '{1}' and ContactID = '{2}'",V.Local.sWOID,V.Local.sCustomer.PSQLFriendly,V.Local.sID,V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Data.Datatable.AddRow("dtContactAllocate","ID",V.Local.sID,"NAME_PREFERRED",V.DataTable.dtContactDeallocate(V.Local.iCnt).NAME_PREFERRED!FieldVal,"NAME_LAST",V.DataTable.dtContactDeallocate(V.Local.iCnt).NAME_LAST!FieldVal,"EMAIL1",V.DataTable.dtContactDeallocate(V.Local.iCnt).EMAIL1!FieldVal,"PHONE1",V.DataTable.dtContactDeallocate(V.Local.iCnt).PHONE1!FieldVal,"PHONE2",V.DataTable.dtContactDeallocate(V.Local.iCnt).PHONE2!FieldVal,"TITLE",V.DataTable.dtContactDeallocate(V.Local.iCnt).TITLE!FieldVal)
			F.Data.DataTable.DeleteRow("dtContactDeallocate",V.Local.iCnt)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	F.Data.DataTable.AcceptChanges("dtContactDeallocate")
	F.Intrinsic.Control.For(V.Local.iCnt,V.DataTable.dtContactAllocate.RowCount--,0,-1)
		F.Intrinsic.Control.If(V.DataTable.dtContactAllocate(V.Local.iCnt).Select!FieldVal)
			V.Local.sID.Set(V.DataTable.dtContactAllocate(V.Local.iCnt).ID!FieldVal)
			F.Intrinsic.String.Build("Insert Into GAB_6559_Contact_Alloc (WorkOrderID,CUST,ContactID) Values ('{0}','{1}','{2}')",V.Local.sWOID,V.Local.sCustomer.PSQLFriendly,V.Local.sID,V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Data.Datatable.AddRow("dtContactDeallocate","ID",V.Local.sID,"NAME_PREFERRED",V.DataTable.dtContactAllocate(V.Local.iCnt).NAME_PREFERRED!FieldVal,"NAME_LAST",V.DataTable.dtContactAllocate(V.Local.iCnt).NAME_LAST!FieldVal,"EMAIL1",V.DataTable.dtContactAllocate(V.Local.iCnt).EMAIL1!FieldVal,"PHONE1",V.DataTable.dtContactAllocate(V.Local.iCnt).PHONE1!FieldVal,"PHONE2",V.DataTable.dtContactAllocate(V.Local.iCnt).PHONE2!FieldVal,"TITLE",V.DataTable.dtContactAllocate(V.Local.iCnt).TITLE!FieldVal)
			F.Data.DataTable.DeleteRow("dtContactAllocate",V.Local.iCnt)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Data.DataTable.AcceptChanges("dtContactAllocate")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdContactAllocationUpdate_Click.End

#End Region ' Contact Allocation

#Region "Notification Log"

Program.Sub.SendNotificaion.Start
V.Local.sWOID.Declare
V.Local.sCust.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.iCnt.Declare
V.Local.bValid.Declare
V.Local.sEmail.Declare
V.Local.sConctactID.Declare
V.Local.sMsg.Declare
V.Local.iUser.Declare
V.Local.sSubject.Declare
V.Local.sSend.Declare
V.Local.sReceive.Declare
V.Local.sMessage.Declare
V.Local.sSenderEmail.Declare
V.Local.sReference.Declare
V.Local.sNow.Declare
V.Local.sName.Declare
V.Local.sCompany.Declare
V.Local.bSuccess.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)

F.Intrinsic.Control.Try
V.Local.sWOID.Set(V.Screen.FormWorkOrderDetails!txtWOID.Text)
V.Local.sCust.Set(V.Screen.FormWorkOrderDetails!txtCustomerCode.Text)
V.Local.sReference.Set(V.Screen.FormWorkOrderDetails!txtCustomerReference.Text)
V.Local.bSuccess.Set(False)

F.Global.Security.GetUserId(V.Caller.User,V.Caller.CompanyCode,V.Local.iUser)
F.Global.General.ReadCompanyName(V.Caller.CompanyCode,V.Local.sCompany)
V.Local.sSenderEmail.Set("reception@auprogal.com.au")
F.Intrinsic.String.Build("{0}*!*{1}",V.Local.sSenderEmail,V.Local.sCompany,V.Local.sSend)
F.Intrinsic.String.Build("Galvanizing Order Ready",V.Local.sCompany,V.Local.sSubject)

F.Intrinsic.String.Build("Your galvanizing order {0} is ready for pickup.{2}Reference: {1}{2}Track your job at https://auprogal.com.au/track-my-job/{2}Your APG Account Number: {3}",V.Local.sWOID,V.Local.sReference,V.Ambient.NewLine,V.Local.sCust,V.Local.sMessage)


F.Intrinsic.String.Build("Select ContactID From GAB_6559_Contact_Alloc where WorkOrderID = '{0}' and CUST = '{1}'",V.Local.sWOID,V.Local.sCust,V.Local.sSQL)
F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
	F.Intrinsic.UI.Msgbox("No contacts found, Notification not sent.")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf
F.Intrinsic.String.Split(V.Local.sRet,"#$#",V.Local.sRet)
F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sRet.UBound,1)
	V.Local.sConctactID.Set(V.Local.sRet(V.Local.iCnt))
	F.Intrinsic.String.LPad(V.Local.sConctactID,"0",9,V.Local.sConctactID)
	F.Intrinsic.String.Build("Select RTRIM(EMAIL1), RTRIM(NAME_PREFERRED) + ', ' + RTRIM(NAME_LAST) From CONTACT where CUST = '{0}' and ID = '{1}' and TYPE = 'C'",V.Local.sCust,V.Local.sConctactID,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sEmail)
	F.Intrinsic.String.Split(V.Local.sEmail,"*!*",V.Local.sEmail)
	V.Local.sName.Set(V.Local.sEmail(1))
	F.Intrinsic.String.IsInString(V.Local.sEmail(0),"@",True,V.Local.bValid)
	F.Intrinsic.Control.If(V.Local.bValid.Not)
		F.Intrinsic.String.Build("{0} is not a Valid Email Address!",V.Local.sEmail(0),V.Local.sMsg)
		F.Intrinsic.UI.Msgbox(V.Local.sMsg)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}*!*{1}",V.Screen.FormWorkOrderDetails!txtCustomerName.Text,V.Local.sEmail(0),V.Local.sReceive)
		F.Global.Messaging.QueueMessage(V.Caller.CompanyCode,V.Local.iUser,"GAB_6559_Galvaware.g2u",V.Local.sSubject,V.Local.sSend,V.Local.sReceive,V.Local.sMessage,5,V.Local.sSenderEmail,False,"",,"","","","","","",False)
		F.Intrinsic.String.Build("Insert Into GAB_6559_NotificationLog (WorkOrderID,NotificationTypeID,DateTimeLogged,ResponseTypeID,RecipientAddress,RecipientName,SysUserLastAccess,SysUserLastAccessDateTime) Values ('{0}',11,'{1}','2','{2}','{3}','{4}','{5}')",V.Local.sWOID,V.Local.sNow,V.Local.sEmail(0).PSQLFriendly,V.Local.sName.PSQLFriendly,V.Caller.User,V.Local.sNow,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		V.Local.bSuccess.Set(True)
		
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iCnt)
	
F.Intrinsic.Control.If(V.Local.bSuccess)
	F.Intrinsic.String.Build("Update GAB_6559_Galvaware Set NotifiedFlag = '1' where ID = '{0}'",V.Local.sWOID,V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	Gui.FormWorkOrderDetails.chkNotifiedFlag.Value(True)
F.Intrinsic.Control.EndIf

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.SendNotificaion.End

#End Region ' Notification Log

#Region "QA Log Details Tab"

Program.Sub.cmdQALogPrint_Click.Start
f.Intrinsic.Control.Try
	v.Local.iRet.Declare
	v.Local.bAuth.Declare
	V.Local.iCnt.Declare
	v.Local.sReportID.Declare
	V.Local.sPrm.Declare
	V.Local.sval.Declare	
	V.Local.sTNID.Declare	
	V.Local.sShipToName.Declare	
	V.Local.sSQL.Declare
	V.Local.sFm.Declare
	V.Local.sFilter.Declare
	V.Local.sCustomer.Declare
	
	'This will prevent from multi-clicking too fast the button
	f.Intrinsic.Control.If(v.Global.bLoading)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bLoading.Set(True)
	
	F.Global.BI.GetRunID(V.Global.iBIRunID)
	F.Global.BI.GetIDFromName("GAB_6559_QALog.rpt",v.Global.iBIRptID)
	F.Global.BI.StartLogging(V.Global.iBIRunID,v.Global.iBIRptID,-1,"",V.Global.iBILogID)
	
	F.Intrinsic.Control.If(V.DataTable.dtQALogDetails.RowCount,=,0)
		'No QALog lines
		v.Global.bLoading.Set(False)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	'Prepare Datatable
	F.Data.DataView.Create("dtQALogDetails","dvQALogDetails",22,"Select = True","")
	F.Intrinsic.Control.If(V.DataView.dtQALogDetails!dvQALogDetails.RowCount,=,0)
		'No Rows Selected, Print all then
		F.Data.DataView.SetFilter("dtQALogDetails","dvQALogDetails","")
	F.Intrinsic.Control.EndIf
	F.Data.DataView.ToDataTable("dtQALogDetails","dvQALogDetails","dtSaveToDB",True)
	F.Data.DataView.Close("dtQALogDetails","dvQALogDetails")
	
	
	F.Intrinsic.String.Split(V.DataTable.dtSaveToDB(0).CustKey!FieldVal,"-",V.Local.sCustomer)
	F.Data.DataTable.AddColumn("dtSaveToDB","Customer","String",V.Local.sCustomer(0))
	
	F.Data.DataTable.AddColumn("dtSaveToDB","ADDRESS3","String","")
	F.Data.DataTable.AddColumn("dtSaveToDB","ADDRESS4","String","")
	
	
	'Filling in Customer ABN from V_CUSTOMER_INTL
	F.Data.DataTable.AddColumn("dtSaveToDB","CUSTOMER_ABN","String","")
	F.Data.Dictionary.CreateFromSQL("dictCustABN","con","Select RTRIM(CUSTOMER) as CUSTOMER, RTRIM(ADDRESS5) as ADDRESS5 FROM V_CUSTOMER_INTL")
	F.Data.Dictionary.SetDefaultReturn("dictCustABN","")
	F.Data.DataTable.FillFromDictionary("dtSaveToDB","dictCustABN","Customer","CUSTOMER_ABN")
	F.Data.Dictionary.Close("dictCustABN")
	
	'Filling in Customer Ref to Name from GAB_6559_Galvaware
	F.Data.DataTable.AddColumn("dtSaveToDB","CUSTOMER_REFERENCE","String","")
	F.Data.Dictionary.CreateFromSQL("dictCustRef","con","Select ID, RTRIM(CUSTOMER_REFERENCE) as CUSTOMER_REFERENCE FROM GAB_6559_Galvaware")
	F.Data.Dictionary.SetDefaultReturn("dictCustRef","")
	F.Data.DataTable.FillFromDictionary("dtSaveToDB","dictCustRef","WorkOrderID","CUSTOMER_REFERENCE")
	F.Data.Dictionary.Close("dictCustRef")
	
	'Filling in DateTimeCompleted from GAB_6559_Job_Header
	F.Data.DataTable.AddColumn("dtSaveToDB","DateTimeCompleted","Date")
	F.Data.Dictionary.CreateFromSQL("dictDateTimeCompleted","con","Select JobID, DateTimeCompleted FROM GAB_6559_Job_Header")
	F.Data.Dictionary.SetDefaultReturn("dictDateTimeCompleted","")
	F.Data.DataTable.FillFromDictionary("dtSaveToDB","dictDateTimeCompleted","JobID","DateTimeCompleted")
	F.Data.Dictionary.Close("dictDateTimeCompleted")
	
	'Filling in Resource Desc from GAB_6559_Job_Resource
	F.Data.DataTable.AddColumn("dtSaveToDB","Resource","String","")
	F.Data.Dictionary.CreateFromSQL("dictResource","con","select A.JobID, RTRIM(B.Description) as Resource from GAB_6559_Job_Header A Left Join GAB_6559_Job_Resource B on A.JobResourceID = B.JobResourceID")
	F.Data.Dictionary.SetDefaultReturn("dictResource","")
	F.Data.DataTable.FillFromDictionary("dtSaveToDB","dictResource","JobID","Resource")
	F.Data.Dictionary.Close("dictResource")
	
	F.Data.Datatable.AddColumn("dtSaveToDB","BIRunID","Long",V.Global.iBIRunID)
	
	
	
	'Save to DB0
	'Map to SQL Table
	V.Local.sFm.Set("BIRunID@!@BIRunID")
	V.Local.sFm.Append("*!*QALogID@!@QALogID")			
	V.Local.sFm.Append("*!*JobID@!@JobID")
	V.Local.sFm.Append("*!*WorkOrderID@!@WorkOrderID")
	V.Local.sFm.Append("*!*CustName@!@CustName")
	V.Local.sFm.Append("*!*CUSTOMER_REFERENCE@!@CUSTOMER_REFERENCE")
	V.Local.sFm.Append("*!*CUSTOMER_ABN@!@CUSTOMER_ABN")
	V.Local.sFm.Append("*!*ADDRESS3@!@ADDRESS3")
	V.Local.sFm.Append("*!*ADDRESS4@!@ADDRESS4")
	V.Local.sFm.Append("*!*MeasurementDevice@!@MeasurementDevice")
	V.Local.sFm.Append("*!*DateTimeLogged@!@DateTimeLogged")
	V.Local.sFm.Append("*!*Employee@!@Employee")
	V.Local.sFm.Append("*!*POS1@!@POS1")
	V.Local.sFm.Append("*!*POS2@!@POS2")
	V.Local.sFm.Append("*!*POS3@!@POS3")
	V.Local.sFm.Append("*!*TotalAVG@!@TotalAVG")
	V.Local.sFm.Append("*!*ServiceDesc@!@ServiceDesc")
	V.Local.sFm.Append("*!*Description@!@Description")
	V.Local.sFm.Append("*!*Resource@!@Resource")
	V.Local.sFm.Append("*!*DateTimeCompleted@!@DateTimeCompleted")
	V.Local.sFm.Append("*!*TagID@!@TagID")
	V.Local.sFm.Append("*!*Line@!@Line")
	V.Local.sFm.Append("*!*Value1@!@Value1")
	V.Local.sFm.Append("*!*Value2@!@Value2")
	V.Local.sFm.Append("*!*Value3@!@Value3")
	V.Local.sFm.Append("*!*Value4@!@Value4")
	V.Local.sFm.Append("*!*Value5@!@Value5")
	V.Local.sFm.Append("*!*Value6@!@Value6")
	V.Local.sFm.Append("*!*Value7@!@Value7")
	V.Local.sFm.Append("*!*Value8@!@Value8")
	V.Local.sFm.Append("*!*Value9@!@Value9")
	V.Local.sFm.Append("*!*Value10@!@Value10")
	V.Local.sFm.Append("*!*Value11@!@Value11")
	V.Local.sFm.Append("*!*Value12@!@Value12")
	V.Local.sFm.Append("*!*Value13@!@Value13")
	V.Local.sFm.Append("*!*Value14@!@Value14")
	V.Local.sFm.Append("*!*Value15@!@Value15")
	V.Local.sFm.Append("*!*Value16@!@Value16")
	V.Local.sFm.Append("*!*Value17@!@Value17")
	V.Local.sFm.Append("*!*Value18@!@Value18")
	V.Local.sFm.Append("*!*Value19@!@Value19")
	V.Local.sFm.Append("*!*Value20@!@Value20")
	V.Local.sFm.Append("*!*Value21@!@Value21")
	V.Local.sFm.Append("*!*Value22@!@Value22")
	V.Local.sFm.Append("*!*Value23@!@Value23")
	V.Local.sFm.Append("*!*Value24@!@Value24")
	V.Local.sFm.Append("*!*Value25@!@Value25")
	V.Local.sFm.Append("*!*Value26@!@Value26")
	V.Local.sFm.Append("*!*Value27@!@Value27")
	V.Local.sFm.Append("*!*Value28@!@Value28")
	V.Local.sFm.Append("*!*Value29@!@Value29")
	V.Local.sFm.Append("*!*Value30@!@Value30")
	
	F.Data.DataTable.SaveToDB("dtSaveToDB","con","GAB_6559_BI_QALog","",128,V.Local.sFm)
	
	F.Data.DataTable.Close("dtSaveToDB")
	f.Global.BI.StopLogging(v.Global.iBILogID)
	
	V.Local.sval.Set(V.Global.iBIRunID.String)
	V.Local.sPrm.Set("BIRunID")
	
	f.Global.BI.PrintReport(v.Global.iBIRptID,0,v.Local.sPrm,v.Local.sval,"",true)
	
	F.Intrinsic.String.Build("Delete From GAB_6559_BI_QALog where BIRunID = {0};",V.Global.iBIRunID,V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	
	v.Global.bLoading.Set(False)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.cmdQALogPrint_Click.End

Program.Sub.GSGCQALogDetails_RowCellClick.Start
f.Intrinsic.Control.Try
	v.Local.iRowIndex.Declare
	V.Local.iQALogID.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.Local.iWOID.Declare

	F.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
	F.Intrinsic.Control.Case("QALOGID")
		Gui.FormWorkOrderDetails.GSGCQALogDetails.GetCellValueByColumnName("gvQALogDetails","QALogID",V.Args.RowIndex,V.Local.iQALogID)
		V.Global.iQALogID.Set(V.Local.iQALogID)
		F.Intrinsic.Control.CallSub(LoadQALog)
		
		
	F.Intrinsic.Control.EndSelect
	F.Intrinsic.Control.UnBlockEvents
		

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.GSGCQALogDetails_RowCellClick.End


#End Region ' QA Log Details Tab

#Region "Labels"

Program.Sub.FormLabel_UnLoad.Start
F.Intrinsic.Control.Try
	V.Global.bUnloading.Set(True)
	Gui.FormLabel..Visible(False)
	V.Global.bUnloading.Set(False)

f.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} at {6} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Ambient.Now, V.Global.sError)
	F.Intrinsic.UI.Msgbox(V.Global.sError)
f.Intrinsic.Control.EndTry
Program.Sub.FormLabel_UnLoad.End

Program.Sub.GSGCLabel_RowCellClick.Start
F.Intrinsic.Control.Try
V.Local.sLID.Declare
V.Local.sWOID.Declare
V.Local.sFilter.Declare

	F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
		F.Intrinsic.Control.Case("PRINTBUTTON")
			F.Intrinsic.Control.BlockEvents
				Gui.FormLabel.GSGCLabel.GetCellValueByColumnName("gvLabel","LID",V.Args.RowIndex,V.Local.sLID)
				
				F.Intrinsic.Control.If(V.DataTable.dtLabelSingleLine.Exists)
					F.Data.DataTable.Close("dtLabelSingleLine")
				F.Intrinsic.Control.EndIf
				F.Intrinsic.String.Build("LID = {0}",V.Local.sLID,V.Local.sFilter)
				F.Data.DataView.Create("dtLabel","dvLabel",22,V.Local.sFilter,"")
				F.Data.DataView.ToDataTable("dtLabel","dvLabel","dtLabelSingleLine",True)
				F.Data.DataView.Close("dtLabel","dvLabel")
				
				'Gui.FormLabel.GSGCLabel.GetCellValueByColumnName("gvLabel","WOID",V.Args.RowIndex,V.Local.sWOID)
				F.Intrinsic.Control.CallSub(PrintLabels,"SingleLine","True")
			F.Intrinsic.Control.UnBlockEvents
	F.Intrinsic.Control.EndSelect

f.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} at {6} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Ambient.Now, V.Global.sError)
	F.Intrinsic.UI.Msgbox(V.Global.sError)
	F.Intrinsic.Control.CallSub(unload)
f.Intrinsic.Control.EndTry
Program.Sub.GSGCLabel_RowCellClick.End

Program.Sub.cmdPrintAll_Click.Start
F.Intrinsic.Control.Try

	F.Intrinsic.Control.CallSub(PrintLabels,"SingleLine","False")

f.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} at {6} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Ambient.Now, V.Global.sError)
	F.Intrinsic.UI.Msgbox(V.Global.sError)
f.Intrinsic.Control.EndTry
Program.Sub.cmdPrintAll_Click.End

Program.Sub.PrintLabels.Start
F.Intrinsic.Control.Try
	V.Local.sDT.Declare
	V.Local.sSingleLine.Declare
	'WOID
	'Line Number
	'LID
	'CustomerName ship to name
	'PartDescription
	
	'Checking if the user clicked print all or just a single line.
	V.Local.sSingleLine.Set(V.Args.SingleLine)
	F.Intrinsic.Control.If(v.Local.sSingleLine,=,"True")
		V.Local.sDT.Set("dtLabelSingleLine")
	F.Intrinsic.Control.Else
		V.Local.sDT.Set("dtLabel")
	F.Intrinsic.Control.EndIf
	
	'Get run ID
	F.Global.BI.GetRunID(V.Global.iBIRunID)

	'Starting BI Logging
	F.Global.BI.GetIDFromName("GAB_6559_Receiving_Lab.lab",v.Global.iBIRptID)
	F.Global.BI.StartLogging(V.Global.iBIRunID,v.Global.iBIRptID,-1,"",V.Global.iBILogID)
	
	f.Global.BI.StopLogging(v.Global.iBILogID)
	f.Global.BI.PrintCodesoftLabelFromDataTable(v.Global.iBIRunID,v.Global.iBILogID,V.Local.sDT,"",True)
	'Function.Global.BI.PrintCodeSoftlabelFromDatatable(V.Local.BI RunIDArgument,V.Local.Log IDArgument,V.Local.Datatable NameArgument,V.Local.Printer NameArgument,V.Local.isSyncArgument)
	
	F.Intrinsic.Control.If(V.DataTable.dtLabelSingleLine.Exists)
		F.Data.DataTable.Close("dtLabelSingleLine")
	F.Intrinsic.Control.EndIf
	
	
f.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} at {6} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Ambient.Now, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
f.Intrinsic.Control.EndTry
Program.Sub.PrintLabels.End

#End Region ' Labels

#Region "Job Allocation Tab"


Program.Sub.GSGCJobAllocation_RowCellClick.Start
f.Intrinsic.Control.Try
	v.Local.iRowIndex.Declare
	V.Local.iWOID.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.Local.sJobID.Declare
	
	Gui.FormWorkOrderDetails.GSGCJobAllocation.GetCellValueByColumnName("gvJobAllocation","JobID",V.Args.RowIndex,V.Local.sJobID)
	
	F.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
	F.Intrinsic.Control.Case("JOBID")
		F.Intrinsic.Control.If(V.Local.sJobID,=,"")
			F.Intrinsic.Control.UnBlockEvents
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
			V.Global.iJobID.Set(V.Local.sJobID.Long)
			'Load Job Header Information
			F.Intrinsic.Control.CallSub(LoadJobSheetDetailHeader)
			'Load Job Lines Information
			F.Intrinsic.Control.CallSub(LoaddtJobCurrent)
			gui.FormJobSheet.tab1.SetTab(0)
			gui.FormJobSheet..Visible(True) ' Open new gui
			gui.FormJobSheet..WindowState(0)
			gui.FormJobSheet..SetFocus
			F.Intrinsic.Control.CallSub(JobSheetPopUps)
		
	
	F.Intrinsic.Control.EndSelect
	F.Intrinsic.Control.UnBlockEvents
		

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.GSGCJobAllocation_RowCellClick.End

Program.Sub.GSGCJobAllocation_CellValueChanged.Start
F.Intrinsic.Control.Try
V.Local.sLID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.fRet.Declare
V.Local.sBit.Declare
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)

V.Local.iLineQty.Declare
V.Local.sJobID.Declare
V.Local.iRet.Declare
V.Local.iItemQty.Declare
V.Local.sLine.Declare
V.Local.sWOID.Declare
V.Local.sWOID.Set(V.Screen.FormWorkOrderDetails!txtWOID.Text)

Gui.FormWorkOrderDetails.GSGCJobAllocation.GetCellValueByColumnName("gvJobAllocation","LID",V.Args.RowIndex,V.Local.sLID)
Gui.FormWorkOrderDetails.GSGCJobAllocation.GetCellValueByColumnName("gvJobAllocation","JobID",V.Args.RowIndex,V.Local.sJobID)
Gui.FormWorkOrderDetails.GSGCJobAllocation.GetCellValueByColumnName("gvJobAllocation","ItemQty",V.Args.RowIndex,V.Local.iItemQty)
Gui.FormWorkOrderDetails.GSGCJobAllocation.GetCellValueByColumnName("gvJobAllocation","Line",V.Args.RowIndex,V.Local.sLine)

F.Intrinsic.Control.BlockEvents		
F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
		
	F.Intrinsic.Control.Case("CHECKEDFLAG")
		F.Intrinsic.Control.If(V.Local.sJobID,=,"")
			F.Data.Dictionary.Create("dictFalse")
			F.Data.Dictionary.AddItem("dictFalse",V.Local.sJobID,False)
			F.Data.DataTable.FillFromDictionary("dtJobAllocation","dictFalse","JobID","CheckedFlag")
			F.Data.Dictionary.Close("dictFalse")
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.If(V.Args.Value)
				V.Local.sBit.Set("1")
				
			F.Intrinsic.Control.Else
				'Check to see if the order has been invoiced
				F.Intrinsic.String.Build("Select Year(DATE_INVOICED) as DATE_INVOICED FROM GAB_6559_Galvaware where ID = '{0}'",V.screen.FormWorkOrderDetails!txtWOID.Text,V.Local.sSQL)
				F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
				F.Intrinsic.Control.If(V.Local.sRet,<>,"1900")
					F.Intrinsic.Control.UnBlockEvents
					F.Intrinsic.UI.Msgbox("Order has been invoiced and cannot be edited. Checked flag was not updated")
					'F.Data.DataTable.SetValue("dtJobAllocation",V.Args.RowIndex,"CheckedFlag",True)
					F.Intrinsic.Control.ExitSub
				F.Intrinsic.Control.EndIf
				V.Local.sBit.Set("0")
			F.Intrinsic.Control.EndIf
		
			F.Intrinsic.String.Build("Update GAB_6559_Job_Lines Set CheckedFlag = '{0}' where LID = '{1}' and JobID = '{2}'",V.Local.sBit,V.Local.sLID,V.Local.sJobID,V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
			
			'Check if all Job lines are for the LID are marked as checked and the entire line Qty is hung. Then Set the WO line Status to Packed
			F.Intrinsic.String.Build("select SUM(QuantityHung) as QuantityHung from GAB_6559_Job_Lines where CheckedFlag = '1' and LID = '{0}' group by LID",V.Local.sLID,V.Local.sSQL)
			F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.iRet)
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.Not)
				F.Intrinsic.Control.If(V.Local.iRet,>=,V.Local.iItemQty)
					F.Intrinsic.String.Build("Update GAB_6559_Lines Set WOStatusID = '10' where LID = '{0}' and WOStatusID not in ('13','14')",V.Local.sLID,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			
			'Check if the line was a rework line and mark the reworklog as closed if so.
			F.Intrinsic.String.Build("Select RTRIM(ServiceID) as ServiceID from GAB_6559_Lines where LID = '{0}'",V.Local.sLID,V.Local.sSQL)
			F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.Not)
				F.Intrinsic.Control.If(V.Local.sRet,=,"ZZZZZZZZZZ")
					F.Intrinsic.String.Build("Update GAB_6559_Rework_Log Set DateClosed = '{0}' where WorkOrderID = '{1}' and LineNumber = '{2}'",V.Local.sNow,V.Local.sWOID,V.Local.sLine,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			
			'Check to see if all lines are marked as 'Packed' that are not freight or QA. If they are all WOStatusID >= 10 then we update the WO header status to 'PACKED'
			F.Intrinsic.String.Build("select LID from GAB_6559_Lines where ID = '{0}' and WOStatusID < '10' and ServiceID Not in (Select ServiceID from GAB_6559_Service where QA = '1' or Freight = '1')",V.Local.sWOID,V.Local.sSQL)
			F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
				F.Intrinsic.String.Build("Update GAB_6559_Galvaware set STATUS = 'PACKED', LastDip = '{0}' where ID = '{1}'",V.Local.sNow,V.Local.sWOID,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				gui.FormWorkOrderDetails.txtStatus.Text("PACKED")
			F.Intrinsic.Control.EndIf
			
			
		F.Intrinsic.Control.EndIf
		
F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.UnBlockEvents

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry

Program.Sub.GSGCJobAllocation_CellValueChanged.End

#End Region ' Job Allocation Tab

#Region "Job Sheet Summary"

Program.Sub.Ac2_ElementClick.Start
f.Intrinsic.Control.Try
	v.Local.iRet.Declare
	V.Local.sSQL.Declare
	V.Local.sRet.Declare
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	
	'This will prevent from multi-clicking too fast the button
	f.Intrinsic.Control.If(v.Global.bLoading)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bLoading.Set(True)	
		
	
	f.Intrinsic.Control.SelectCase(v.Args.ElementID.UCase)
		f.Intrinsic.Control.Case("SERVICEWEB")
			F.Intrinsic.Task.ShellExec(0,"Open","https://www.gss-service.com/","","",0)	

		
		f.Intrinsic.Control.Case("NEWJOB")
			'Create line in GAB_6559_Job_Header
			F.Intrinsic.Control.CallSub(CreateNewJobID)
			'Load Job Header Information
			F.Intrinsic.Control.CallSub(LoadJobSheetDetailHeader)
			'Load Job Lines Information
			F.Intrinsic.Control.CallSub(LoaddtJobCurrent)	
			gui.FormJobSheet.tab1.SetTab(0)	
			gui.FormJobSheet..Visible(True)
			gui.FormJobSheet..WindowState(0)
			gui.FormJobSheet..SetFocus
			
		f.Intrinsic.Control.Case("MATERIAL")
			F.Intrinsic.UI.Msgbox("I have not made this screen yet")	
			
		f.Intrinsic.Control.Case("ISSUE")
			F.Intrinsic.UI.Msgbox("I have not made this screen yet")
			'Show Screen
			
		'f.Intrinsic.Control.Case("TRANSPORTNOTE")
			
			
	f.Intrinsic.Control.EndSelect
	
	v.Global.bLoading.Set(False)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.Ac2_ElementClick.End

Program.Sub.CreateNewJobID.Start
f.Intrinsic.Control.Try
V.Local.sSQL.Declare
V.Local.sMsg.Declare
V.Local.sRet.Declare
V.Local.sNow.Declare
V.Local.dBlank.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
V.Local.dBlank.Set("1/1/1900 00:00:00 AM")
F.Intrinsic.String.Format(V.Local.dBlank, "YYYY-MM-DD HH:NN:SS", V.Local.sBlank)
V.Local.sBlank.Declare

V.Local.sNotes.Declare
V.Local.sDateTimeScheduled.Declare
V.Local.sDateTimeCreated.Declare
V.Local.sDateTimeCompleted.Declare
V.Local.sPreparedByEmployeeID.Declare
V.Local.sJobResourceID.Declare
V.Local.sProcessCount.Declare
V.Local.sJobReleaseFlag.Declare
V.Local.sScheduledByEmployeeID.Declare

F.Intrinsic.Control.Try

V.Local.sJobResourceID.Set("")
V.Local.sScheduledByEmployeeID.Set("")
V.Local.sProcessCount.Set("1")
	
	'Insert Statement on GAB_6559_Job_Header
	F.Intrinsic.String.Build("Insert Into GAB_6559_Job_Header (Note,DateTimeScheduled,DateTimeCreated,DateTimeCompleted,PreparedByEmployeeID,JobResourceID,ProcessCount,JobReleaseFlag,ScheduledByEmployeeID,SysUserLastAccess,SysUserLastAccessDateTime) Values ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','0','{8}','{9}','{10}')",V.Local.sNotes.PSQLFriendly,v.Local.sNow,v.Local.sBlank,v.Local.sBlank,v.Local.sPreparedByEmployeeID,v.Local.sJobResourceID,v.Local.sProcessCount,v.Local.sJobReleaseFlag,v.Local.sScheduledByEmployeeID,V.Caller.User,V.Local.sNow,V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	
	'Get the JOBID that was auto generated by PSQL... We will use that to then open the JOB Details form
	F.Intrinsic.String.Build("Select Top 1 JobID from GAB_6559_Job_Header where SysUserLastAccess = '{0}' order by SysUserLastAccessDateTime Desc",V.Caller.User,v.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,v.Local.sRet)
	
	V.Global.iJobID.Set(V.Local.sRet.Long)
	
	'f.Intrinsic.Variable.AddRV("JOBID",V.Local.sRet.Trim)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.CreateNewJobID.End

Program.Sub.GSGCJobSheet_RowCellClick.Start
f.Intrinsic.Control.Try
	v.Local.iRowIndex.Declare
	V.Local.iJobID.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.Local.iWOID.Declare

	F.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
	F.Intrinsic.Control.Case("JOBID")
		Gui.Form.GSGCJobSheet.GetCellValueByColumnName("gvJobSheet","JOBID",V.Args.RowIndex,V.Local.iJobID)
		V.Global.iJobID.Set(V.Local.iJobID)
		
		'Load Job Header Information
		F.Intrinsic.Control.CallSub(LoadJobSheetDetailHeader)
		'Load Job Lines Information
		F.Intrinsic.Control.CallSub(LoaddtJobCurrent)	
		gui.FormJobSheet.tab1.SetTab(0)	
		gui.FormJobSheet..Visible(True)
		gui.FormJobSheet..WindowState(0)
		gui.FormJobSheet..SetFocus
		F.Intrinsic.Control.CallSub(JobSheetPopUps)
		
	F.Intrinsic.Control.Case("WO_ID")
		'Try and open the WO in the WO details form if its not locked
		Gui.Form.GSGCJobSheet.GetCellValueByColumnName("gvJobLines","WO_ID",V.Args.RowIndex,V.Local.iWOID)
		'Check if the WOID is in use by checking the table (GAB_6559_TL)
		f.Intrinsic.String.Build("SELECT TOP 1 WOID FROM GAB_6559_TL WHERE WOID = '{0}'",V.Local.iWOID,v.Local.sSQL)
		f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
		F.Intrinsic.Control.If(v.Ambient.ExecuteAndReturnEOF)
		'If its not in use then open that WOID
			'insert WOID lock
			F.Intrinsic.Control.CallSub(InsertWOIDLock,"WOID",V.Local.iWOID)
			'Load WO header information
			F.Intrinsic.Control.CallSub(OpenExistingWorkOrder,"WOID",V.Local.iWOID)
			'Load WO Lines information
			F.Intrinsic.Control.CallSub(LoaddtOrderItemstab,"WOID",V.Local.iWOID)
			
			gui.FormWorkOrderDetails.tabWorkOrderDetails.SetTab(0)
			gui.FormWorkOrderDetails..Visible(True) ' Open new gui
			gui.FormWorkOrderDetails..WindowState(0)
			gui.FormWorkOrderDetails..SetFocus
		
		
		F.Intrinsic.Control.Else	
			'Display message that the WOID is locked
			F.Intrinsic.UI.Msgbox("Work Order ID is currently locked")
		F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.EndSelect
	F.Intrinsic.Control.UnBlockEvents
		

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry

Program.Sub.GSGCJobSheet_RowCellClick.End
#End Region ' Job Sheet Summary

#Region "JobSheet Detail Form"

Program.Sub.tab1_Click.Start
v.Local.sValue.Declare
v.Local.sValue.Set(v.Screen.FormJobSheet!tab1.tab)
'This will prevent from multi-clicking too fast the button
f.Intrinsic.Control.If(v.Global.bLoading)
	f.Intrinsic.Control.ExitSub
f.Intrinsic.Control.EndIf
v.Global.bLoading.Set(True)

F.Intrinsic.Control.SelectCase(V.Local.sValue)
F.Intrinsic.Control.Case("0")
	F.Intrinsic.Control.CallSub(LoaddtJobCurrent)
F.Intrinsic.Control.Case("1")
	F.Intrinsic.Control.CallSub(LoaddtJobAvailable)
F.Intrinsic.Control.EndSelect

v.Global.bLoading.Set(False)

Program.Sub.tab1_Click.End

Program.Sub.LoadJobSheetDetailHeader.Start
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sEmployee.Declare
V.Local.sResource.Declare
V.Local.iCnt.Declare
V.Local.sMsg.Declare
V.Local.sHold.Declare

F.Intrinsic.Control.Try
	F.Intrinsic.String.Build("Select TOP 1 RTRIM(Note) as Note, DateTimeScheduled, DateTimeCreated, DateTimeCompleted, Rtrim(PreparedByEmployeeID), JobResourceID, ProcessCount, JobReleaseFlag, Rtrim(ScheduledByEmployeeID) From GAB_6559_Job_Header where JobID = '{0}'",V.Global.iJobID,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
		F.Intrinsic.UI.Msgbox("JobID not found!")
		F.Intrinsic.Control.CallSub(CloseMainForm)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	gui.FormJobSheet.txtJobID.Text(V.Global.iJobID)
	gui.FormJobSheet.txtJobIDNotes.Text(V.Local.sRet(0))
	gui.FormJobSheet.txtDateScheduled.Text(V.Local.sRet(1))
	gui.FormJobSheet.txtDatePrepared.Text(V.Local.sRet(2))
	gui.FormJobSheet.txtDateCompleted.Text(V.Local.sRet(3))
	gui.FormJobSheet.txtPreparedByID.Text(V.Local.sRet(4))
	V.Local.sEmployee.Set(V.Dictionary.dictEmployeeActive![V.Local.sRet(4)])
	F.Intrinsic.Control.If(V.Local.sEmployee,=,"")
		gui.FormJobSheet.ddlPreparedby.AddItem(V.Dictionary.dictEmployee![V.Local.sRet(4)],0)
	F.Intrinsic.Control.EndIf
	gui.FormJobSheet.ddlPreparedby.Text(V.Dictionary.dictEmployee![V.Local.sRet(4)])
	gui.FormJobSheet.txtResourceID.Text(V.Local.sRet(5))
	V.Local.sResource.Set(V.Dictionary.dictJobResourceActive![V.Local.sRet(5)])
	F.Intrinsic.Control.If(V.Local.sResource,=,"")
		gui.FormJobSheet.ddlResource.AddItem(V.Dictionary.dictJobResourceID![V.Local.sRet(5)],0)
	F.Intrinsic.Control.EndIf
	gui.FormJobSheet.ddlResource.Text(V.Dictionary.dictJobResourceID![V.Local.sRet(5)])
	gui.FormJobSheet.txtProcessCount.Text(V.Local.sRet(6))
	gui.FormJobSheet.chkReleased.Value(V.Local.sRet(7))
	gui.FormJobSheet.txtScheduledByID.Text(V.Local.sRet(8))
	V.Local.sEmployee.Set(V.Dictionary.dictEmployeeActive![V.Local.sRet(8)])
	F.Intrinsic.Control.If(V.Local.sEmployee,=,"")
		gui.FormJobSheet.ddlScheduledby.AddItem(V.Dictionary.dictEmployee![V.Local.sRet(8)],0)
	F.Intrinsic.Control.EndIf
	gui.FormJobSheet.ddlScheduledby.Text(V.Dictionary.dictEmployee![V.Local.sRet(8)])
	
	gui.FormJobSheet..WindowState(0)
	gui.FormJobSheet..SetFocus
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadJobSheetDetailHeader.End

Program.Sub.JobSheetPopUps.Start
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sEmployee.Declare
V.Local.sResource.Declare
V.Local.iCnt.Declare
V.Local.sMsg.Declare
V.Local.sHold.Declare
F.Intrinsic.Control.Try

	F.Intrinsic.String.Build("select Distinct B.WorkOrderID, RTRIM(A.ProcessingNote) as ProcessingNote From GAB_6559_Galvaware A Left Join GAB_6559_Job_Lines B on A.ID = B.WorkOrderID Where B.JobID = '{0}';",V.Global.iJobID,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.not)
		F.Intrinsic.String.Split(V.Local.sRet,"#$#",V.Local.sRet)
		F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sRet.UBound,1)
			F.Intrinsic.String.Split(V.Local.sRet(V.Local.iCnt),"*!*",V.Local.sHold)
			F.Intrinsic.Control.If(V.Local.sHold(1),<>,"")
				F.Intrinsic.String.Build("Work Order: {0}{2}Processing Note: {1}",V.Local.sHold(0),V.Local.sHold(1),V.Ambient.NewLine,V.Local.sMsg)
				F.Intrinsic.UI.Msgbox(V.Local.sMsg)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.JobSheetPopUps.End

Program.Sub.FormJobSheet_UnLoad.Start
	V.Global.bUnloading.Set(True)
	Gui.FormJobSheet..Visible(False)

F.Intrinsic.Control.If(V.Screen.Form!GSGCJobSheet.Visible)
	F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","JobSheetView")
F.Intrinsic.Control.EndIf
	V.Global.bUnloading.Set(False)

Program.Sub.FormJobSheet_UnLoad.End

Program.Sub.FormJobSheet_UserButtonClicked.Start
V.Local.sSQL.Declare
V.Local.sMsg.Declare
V.Local.sRet.Declare
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
V.Local.sNotes.Declare
V.Local.sDateTimeScheduled.Declare
V.Local.sDateTimeCreated.Declare
V.Local.sDateTimeCompleted.Declare
V.Local.sPreparedByEmployeeID.Declare
V.Local.sJobResourceID.Declare
V.Local.sProcessCount.Declare
V.Local.sJobReleaseFlag.Declare
V.Local.sScheduledByEmployeeID.Declare

f.Intrinsic.Control.Try
	f.Intrinsic.Control.SelectCase(v.Args.Button)
		f.Intrinsic.Control.Case("Update")
		
			V.Local.sNotes.Set(V.Screen.FormJobSheet!txtJobIDNotes.Text)
			V.Local.sDateTimeScheduled.Set(V.Screen.FormJobSheet!txtDateScheduled.Text)
			F.Intrinsic.String.Format(V.Local.sDateTimeScheduled, "YYYY-MM-DD HH:NN:SS", V.Local.sDateTimeScheduled)
			v.Local.sDateTimeCreated.Set(V.Screen.FormJobSheet!txtDatePrepared.Text)
			F.Intrinsic.String.Format(V.Local.sDateTimeCreated, "YYYY-MM-DD HH:NN:SS", V.Local.sDateTimeCreated)
			v.Local.sDateTimeCompleted.Set(V.Screen.FormJobSheet!txtDateCompleted.Text)
			F.Intrinsic.String.Format(V.Local.sDateTimeCompleted, "YYYY-MM-DD HH:NN:SS", V.Local.sDateTimeCompleted)
			
			v.Local.sPreparedByEmployeeID.Set(V.Screen.FormJobSheet!txtPreparedByID.Text)
			v.Local.sJobResourceID.Set(V.Screen.FormJobSheet!txtResourceID.Text)
			v.Local.sProcessCount.Set(V.Screen.FormJobSheet!txtProcessCount.Text)
			v.Local.sJobReleaseFlag.Set(V.Screen.FormJobSheet!chkReleased.Checked)
			v.Local.sScheduledByEmployeeID.Set(V.Screen.FormJobSheet!txtScheduledByID.Text)
			
			F.Intrinsic.Control.If(V.Local.sDateTimeCreated,<>,"1900-01-01 00:00:00")
			F.Intrinsic.Control.AndIf(V.Local.sPreparedByEmployeeID,=,"0")
				F.Intrinsic.UI.Msgbox("Please select a Prepared by Employee. Job has not been updated!")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
				
			F.Intrinsic.String.Build("UPDATE GAB_6559_Job_Header SET Note = '{1}', DateTimeScheduled = '{2}', DateTimeCreated = '{3}', DateTimeCompleted = '{4}', PreparedByEmployeeID = '{5}', JobResourceID = '{6}', ProcessCount = '{7}', JobReleaseFlag = '{8}', ScheduledByEmployeeID = '{9}', SysUserLastAccess = '{10}', SysUserLastAccessDateTime = '{11}' Where JobID = '{0}'",v.Global.iJobID,V.Local.sNotes.PSQLFriendly,v.Local.sDateTimeScheduled,v.Local.sDateTimeCreated,v.Local.sDateTimeCompleted,v.Local.sPreparedByEmployeeID,v.Local.sJobResourceID,v.Local.sProcessCount,v.Local.sJobReleaseFlag,v.Local.sScheduledByEmployeeID,V.Caller.User,V.Local.sNow,V.Local.sSQL)
			
			f.ODBC.Connection!con.Execute(v.Local.sSQL)
			F.Intrinsic.Control.CallSub(UpdateWOLineStatuses)
			
		f.Intrinsic.Control.Case("Delete")
			v.Local.sDateTimeCompleted.Set(V.Screen.FormJobSheet!txtDateCompleted.Text)
			F.Intrinsic.String.Format(V.Local.sDateTimeCompleted, "YYYY", V.Local.sDateTimeCompleted)
			'F.Intrinsic.Date.ConvertDString(V.Local.sDateTimeCompleted,)
			'F.Intrinsic.Date.Year()
			
			'Need to add a check for certain things to prevent a JobID from being deleted.
			F.Intrinsic.Control.If(V.Local.sDateTimeCompleted,>,"1950")
				F.Intrinsic.UI.Msgbox("Cannot delete JobID since it has a Completed Date")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
'			F.Intrinsic.String.Build("Select From GAB_6559_Job_Header Where JobID = '{0}'",V.Global.iJobID,V.Local.sSQL)
'			F.ODBC.Connection!con.Execute(V.Local.sSQL)
			
			
			'Warning Message
			F.Intrinsic.String.Build("Are you sure you would like to delete this Job ID Note and its lines?{0}{1}",V.Ambient.NewLine,V.Global.iJobID,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"Delete","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf

			'Delete Transport Note
			F.Intrinsic.String.Build("Delete From GAB_6559_Job_Header Where JobID = '{0}'",V.Global.iJobID,V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.String.Build("Delete From GAB_6559_Job_Lines Where JobID = '{0}'",V.Global.iJobID,V.Local.sSQL)			
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
			
			
			F.Intrinsic.Control.CallSub(FormJobSheet_UnLoad)	
		
		
		f.Intrinsic.Control.Case("Preview")
			'F.Intrinsic.UI.Msgbox("Feature not ready")
			F.Intrinsic.Control.CallSub(CallBIJobPreview)
			
			
		f.Intrinsic.Control.Case("Labels")
		
			f.Intrinsic.Control.CallSub(LoaddtLabel,"LabelType","Job")
			Gui.FormLabel..Visible(True)
			
		
	f.Intrinsic.Control.EndSelect
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.FormJobSheet_UserButtonClicked.End

Program.Sub.UpdateWOLineStatuses.Start
F.Intrinsic.Control.Try
V.Local.sRet.Declare
V.Local.iWOStatus.Declare
V.Local.iQtyHung.Declare
V.Local.iQtyCompleted.Declare
V.Local.sWOID.Declare
V.Local.sLID.Declare
V.Local.iItemQty.Declare
V.Local.iRet.Declare
V.Local.sSQL.Declare
V.Local.iCnt.Declare
V.Local.bScheduled.Declare
V.Local.bPrepared.Declare
V.Local.bCompleted.Declare
V.Local.sScheduledDate.Declare
V.Local.sPreparedDate.Declare
V.Local.sCompletedDate.Declare
V.Local.sScheduledDate.Set(V.Screen.FormJobSheet!txtDateScheduled.Text)
V.Local.sPreparedDate.Set(V.Screen.FormJobSheet!txtDatePrepared.Text)
V.Local.sCompletedDate.Set(V.Screen.FormJobSheet!txtDateCompleted.Text)
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now,"YYYY-MM-DD HH:NN:SS",V.Local.sNow)
'Allocated to Job
V.Local.iWOStatus.Set(6)

F.Intrinsic.String.Left(V.Local.sScheduledDate,4,V.Local.sScheduledDate)
F.Intrinsic.String.Left(V.Local.sPreparedDate,4,V.Local.sPreparedDate)
F.Intrinsic.String.Left(V.Local.sCompletedDate,4,V.Local.sCompletedDate)

F.Intrinsic.Control.If(V.Local.sScheduledDate,<,"1980")
	V.Local.bScheduled.Set(False)
F.Intrinsic.Control.Else
	V.Local.bScheduled.Set(True)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Local.sPreparedDate,<,"1980")
	V.Local.bPrepared.Set(False)
F.Intrinsic.Control.Else
	'Hung
	V.Local.iWOStatus.Set(7)
	V.Local.bPrepared.Set(True)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Local.sCompletedDate,<,"1980")
	V.Local.bCompleted.Set(False)
F.Intrinsic.Control.Else
	'Partial dip
	V.Local.iWOStatus.Set(8)
	V.Local.bCompleted.Set(True)
F.Intrinsic.Control.EndIf

'update FirstDip for WOs that need it
F.Intrinsic.Control.If(V.Local.bCompleted)
	F.Intrinsic.String.Build("Update GAB_6559_Galvaware Set FirstDip = '{0}' where FirstDip = '1900-01-01 00:00:00' and ID in (select WorkOrderID from GAB_6559_Job_Lines where JobID = '{1}')",V.Local.sNow,V.Global.iJobID,V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
F.Intrinsic.Control.EndIf


''Dictionary for last dips
'F.Data.Dictionary.CreateFromSQL("dictLastDip","con","Select RTRIM(ID) as ID, LastDip From GAB_6559_Galvaware")
'F.Data.DataTable.FillFromDictionary("dtJobCurrent","dictLastDip","WorkOrderID","LastDip")
'F.Data.Dictionary.Close("dictLastDip")

'Dict for TotalCompleted
F.Data.Dictionary.CreateFromSQL("dictTotalCompleted","con","select LID, Sum(QuantityHung) from GAB_6559_Job_Lines Where JobID in (Select JobID from GAB_6559_Job_Header where Year(DateTimeCompleted) > '1950') Group by LID;")
F.Data.Dictionary.SetDefaultReturn("dictTotalCompleted",0)
F.Data.DataTable.FillFromDictionary("dtJobCurrent","dictTotalCompleted","LID","TotalCompleted")
F.Data.Dictionary.Close("dictTotalCompleted")

F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtJobCurrent.RowCount--,1)
	
	V.Local.sWOID.Set(V.DataTable.dtJobCurrent(V.Local.iCnt).WorkOrderID!FieldVal)
	V.Local.sLID.Set(V.DataTable.dtJobCurrent(V.Local.iCnt).LID!FieldVal)
	V.Local.iItemQty.Set(V.DataTable.dtJobCurrent(V.Local.iCnt).ItemQty!FieldVal)
	V.Local.iQtyHung.Set(V.DataTable.dtJobCurrent(V.Local.iCnt).QuantityHung!FieldVal)
	V.Local.iQtyCompleted.Set(V.DataTable.dtJobCurrent(V.Local.iCnt).TotalCompleted!FieldVal)
	
	'update WO lines Statuses
	'JobID is not completed, Lets update the WO line's status as 
	F.Intrinsic.Control.If(V.Local.bCompleted,=,False)
		F.Intrinsic.String.Build("select Top 1 WOStatusID from GAB_6559_Lines where LID = '{0}'",V.Local.sLID,V.Local.sSQL)
		f.ODBC.Connection!con.executeandreturn(V.Local.sSQL,V.Local.iRet)
		F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.not)
			F.Intrinsic.Control.If(V.Local.iRet,<,V.Local.iWOStatus)
				F.Intrinsic.String.Build("Update GAB_6559_Lines set WOStatusID = '{0}' where LID = '{1}'",V.Local.iWOStatus,V.Local.sLID,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		'This Job is comepleted, lets check if all other jobs that contain this WO line are completed. Then update the WO line's status to Dipped. If not all lines are completed, then we mark the line as partial dip.
		F.Intrinsic.Control.If(V.Local.iItemQty,<=,V.Local.iQtyCompleted)
			F.Intrinsic.String.Build("select Top 1 WOStatusID from GAB_6559_Lines where LID = '{0}'",V.Local.sLID,V.Local.sSQL)
			f.ODBC.Connection!con.executeandreturn(V.Local.sSQL,V.Local.iRet)
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.not)
				F.Intrinsic.Control.If(V.Local.iRet,<,9)
					F.Intrinsic.String.Build("Update GAB_6559_Lines set WOStatusID = '9' where LID = '{1}'",V.Local.iWOStatus,V.Local.sLID,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("select Top 1 WOStatusID from GAB_6559_Lines where LID = '{0}'",V.Local.sLID,V.Local.sSQL)
			f.ODBC.Connection!con.executeandreturn(V.Local.sSQL,V.Local.iRet)
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.not)
				F.Intrinsic.Control.If(V.Local.iRet,<,8)
					F.Intrinsic.String.Build("Update GAB_6559_Lines set WOStatusID = '8' where LID = '{0}'",V.Local.sLID,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	'Update WO header Status
	F.Intrinsic.String.Build("select RTRIM(STATUS) from GAB_6559_Galvaware where ID = '{0}'",V.Local.sWOID,V.Local.sSQL)
	f.ODBC.Connection!con.executeandreturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.not)
		F.Intrinsic.Control.If(V.Local.sRet,=,"REGISTERED","or",V.Local.sRet,=,"Inspected")
			F.Intrinsic.String.Build("Update GAB_6559_Galvaware set STATUS = 'ACTIVE' where ID = '{0}'",V.Local.sWOID,V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Next(V.Local.iCnt)



f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.UpdateWOLineStatuses.End




Program.Sub.CallBIJobPreview.Start
V.Local.sMsg.Declare
V.Local.sRet.Declare
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
v.Local.iRet.Declare
v.Local.bAuth.Declare
V.Local.iCnt.Declare
v.Local.sReportID.Declare
V.Local.sPrm.Declare
V.Local.sval.Declare	
V.Local.sTNID.Declare	
V.Local.sShipToName.Declare	
V.Local.sSQL.Declare
V.Local.sFm.Declare
V.Local.sFilter.Declare
V.Local.sCustomer.Declare
V.Local.fRet.Declare
V.Local.sJobID.Declare
V.Local.fRework.Declare

F.Intrinsic.Control.Try
	'This will prevent from multi-clicking too fast the button
	f.Intrinsic.Control.If(v.Global.bLoading)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bLoading.Set(True)
	
	F.Global.BI.GetRunID(V.Global.iBIRunID)
	F.Global.BI.GetIDFromName("GAB_6559_JobPreview.rpt",v.Global.iBIRptID)
	F.Global.BI.StartLogging(V.Global.iBIRunID,v.Global.iBIRptID,-1,"",V.Global.iBILogID)
	
	F.Intrinsic.Control.If(V.DataTable.dtJobCurrent.RowCount,=,0)
		'No QALog lines
		F.Intrinsic.UI.Msgbox("No Job Lines on this Headrack, No report was printed.")
		v.Global.bLoading.Set(False)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	'Prepare Datatable
	F.Data.DataView.Create("dtJobCurrent","dvJobCurrent",22,"","")
	F.Intrinsic.Control.If(V.DataView.dtJobCurrent!dvJobCurrent.RowCount,=,0)
		'No Rows Selected, Print all then
		F.Data.DataView.SetFilter("dtJobCurrent","dvJobCurrent","")
	F.Intrinsic.Control.EndIf
	F.Data.DataView.ToDataTable("dtJobCurrent","dvJobCurrent","dtSaveToDB",True)
	F.Data.DataView.Close("dtJobCurrent","dvJobCurrent")

'Rework ~
'Resource *
'PreparedBy *
'DateTimeStarted *
'DateTimeCompleted
'YardLocation *
'Price *
'WorkOrderNote *
'Remaining *
'HungSoFar *
'Description *
'ItemQuantity *	

	'Filling in Customer Ref to Name from GAB_6559_Galvaware
	F.Data.DataTable.AddColumn("dtSaveToDB","CUSTOMER_REFERENCE","String","")
	F.Data.Dictionary.CreateFromSQL("dictCustRef","con","Select ID, RTRIM(CUSTOMER_REFERENCE) as CUSTOMER_REFERENCE FROM GAB_6559_Galvaware")
	F.Data.Dictionary.SetDefaultReturn("dictCustRef","")
	F.Data.DataTable.FillFromDictionary("dtSaveToDB","dictCustRef","WorkOrderID","CUSTOMER_REFERENCE")
	F.Data.Dictionary.Close("dictCustRef")
	
	'Filling in WorkOrderNote from GAB_6559_Galvaware
	F.Data.DataTable.AddColumn("dtSaveToDB","WorkOrderNote","String","")
	F.Data.Dictionary.CreateFromSQL("dictWONote","con","Select ID, RTRIM(ProcessingNote) as WorkOrderNote FROM GAB_6559_Galvaware")
	F.Data.Dictionary.SetDefaultReturn("dictWONote","")
	F.Data.DataTable.FillFromDictionary("dtSaveToDB","dictWONote","WorkOrderID","WorkOrderNote")
	F.Data.Dictionary.Close("dictWONote")
	
	'Filling in Customer Ref to Name from GAB_6559_Galvaware
	F.Data.DataTable.AddColumn("dtSaveToDB","TNIDDescription","String","")
	F.Data.Dictionary.CreateFromSQL("dictTNIDPossession","con","Select ID, RTRIM(B.Description) as TNIDDescription FROM GAB_6559_Galvaware A Left Join GAB_6559_TransportNoteId B on A.POSSESSION = B.TransportNoteID")
	F.Data.Dictionary.SetDefaultReturn("dictTNIDPossession","")
	F.Data.DataTable.FillFromDictionary("dtSaveToDB","dictTNIDPossession","WorkOrderID","TNIDDescription")
	F.Data.Dictionary.Close("dictTNIDPossession")
	
	'''''
	'Filling in Yard from GAB_6559_Lines
	F.Data.DataTable.AddColumn("dtSaveToDB","YardLocation","String","")
	F.Data.Dictionary.CreateFromSQL("dictYardLoc","con","select LID, RTRIM(Yard) as YardLocation from GAB_6559_Lines")
	F.Data.Dictionary.SetDefaultReturn("dictYardLoc","")
	F.Data.DataTable.FillFromDictionary("dtSaveToDB","dictYardLoc","LID","YardLocation")
	F.Data.Dictionary.Close("dictYardLoc")
	
	'Filling in UnitPrice from GAB_6559_Lines
	F.Data.DataTable.AddColumn("dtSaveToDB","Price","Float",0.00)
'	F.Data.Dictionary.CreateFromSQL("dictUnitPrice","con","select LID, UnitPrice from GAB_6559_Lines;")
'	F.Data.Dictionary.SetDefaultReturn("dictUnitPrice","")
'	F.Data.DataTable.FillFromDictionary("dtSaveToDB","dictUnitPrice","LID","UnitPrice")
'	F.Data.Dictionary.Close("dictUnitPrice")
	
	
	V.Local.sJobID.Set(V.Screen.FormJobSheet!txtJobID.Text)
	'Filling in Priority Flag from GAB_6559_Lines, If one line on it then they all should be Prio
	F.Intrinsic.String.Build("Select ID, Cast(1 as Bit) as True From GAB_6559_Lines where PriorityFlag = '1' and ID in (Select WorkOrderID From GAB_6559_Job_Lines where JobID = '{0}')",V.Local.sJobID,V.Local.sSQL)
	F.Data.Dictionary.CreateFromSQL("dictPrioJobPreview","con",V.Local.sSQL)
	F.Data.Dictionary.SetDefaultReturn("dictPrioJobPreview",False)
	F.Data.DataTable.FillFromDictionary("dtSaveToDB","dictPrioJobPreview","WorkOrderID","PriorityFlag")
	F.Data.Dictionary.Close("dictPrioJobPreview")
	
	'''''
	'Filling in DateTimeCompleted from GAB_6559_Job_Header
	F.Data.DataTable.AddColumn("dtSaveToDB","DateTimeCompleted","Date")
	F.Data.Dictionary.CreateFromSQL("dictDateTimeCompleted","con","Select JobID, DateTimeCompleted FROM GAB_6559_Job_Header")
	F.Data.Dictionary.SetDefaultReturn("dictDateTimeCompleted","")
	F.Data.DataTable.FillFromDictionary("dtSaveToDB","dictDateTimeCompleted","JobID","DateTimeCompleted")
	F.Data.Dictionary.Close("dictDateTimeCompleted")
	
	'Filling in DateTimeStarted from GAB_6559_Job_Header
	F.Data.DataTable.AddColumn("dtSaveToDB","DateTimeStarted","Date")
	F.Data.Dictionary.CreateFromSQL("dictDateTimeStarted","con","Select JobID, DateTimeCreated FROM GAB_6559_Job_Header")
	F.Data.Dictionary.SetDefaultReturn("dictDateTimeStarted","")
	F.Data.DataTable.FillFromDictionary("dtSaveToDB","dictDateTimeStarted","JobID","DateTimeStarted")
	F.Data.Dictionary.Close("dictDateTimeStarted")
	
	'Filling in PreparedBy Employee from GAB_6559_Job_Header, GAB_6559_Employee
	F.Data.DataTable.AddColumn("dtSaveToDB","PreparedBy","String","")
	F.Data.Dictionary.CreateFromSQL("dictPrepBy","con","select JobID, RTRIM(B.LastName) + ', ' + RTRIM(B.FirstName) as PreparedBy from GAB_6559_Job_Header A Left Join GAB_6559_Employee B on A.PreparedByEmployeeID = B.EmployeeID;")
	F.Data.Dictionary.SetDefaultReturn("dictPrepBy","")
	F.Data.DataTable.FillFromDictionary("dtSaveToDB","dictPrepBy","JobID","PreparedBy")
	F.Data.Dictionary.Close("dictPrepBy")
	
	'Filling in Resource Desc from GAB_6559_Job_Header, GAB_6559_Job_Resource
	F.Data.DataTable.AddColumn("dtSaveToDB","Resource","String","")
	F.Data.Dictionary.CreateFromSQL("dictResource","con","select A.JobID, RTRIM(B.Description) as Resource from GAB_6559_Job_Header A Left Join GAB_6559_Job_Resource B on A.JobResourceID = B.JobResourceID")
	F.Data.Dictionary.SetDefaultReturn("dictResource","")
	F.Data.DataTable.FillFromDictionary("dtSaveToDB","dictResource","JobID","Resource")
	F.Data.Dictionary.Close("dictResource")
	
	''''
	'Filling in HungSoFar from GAB_6559_Job_Lines
	F.Data.DataTable.AddColumn("dtSaveToDB","HungSoFar","Long",0)
	F.Data.Dictionary.CreateFromSQL("dictHungSoFar","con","select LID, Cast(SUM(QuantityHung) as INTEGER) as HungSoFar from GAB_6559_Job_Lines Group by LID")
	F.Data.Dictionary.SetDefaultReturn("dictHungSoFar","")
	F.Data.DataTable.FillFromDictionary("dtSaveToDB","dictHungSoFar","LID","HungSoFar")
	F.Data.Dictionary.Close("dictHungSoFar")
	
	F.Data.Datatable.AddExpressionColumn("dtSaveToDB","WOLineWeight","Float","[UnitQty] * [QuantityHung]")
	F.Data.Datatable.AddExpressionColumn("dtSaveToDB","Remaining","Long","[ItemQty] - [HungSoFar]")
	
	F.Data.DataTable.Compute("dtSaveToDB","Sum(WOLineWeight)","",V.Local.fRet)
	F.Data.DataTable.AddColumn("dtSaveToDB","Estimate","Long",V.Local.fRet.Long)
	
	'Calc rework
	'serviceID = 'ZZZZZZZZZZ' is rework
	F.Data.DataTable.Compute("dtSaveToDB","Sum(WOLineWeight)","ServiceID = 'ZZZZZZZZZZ'",V.Local.fRework)
	F.Data.DataTable.AddColumn("dtSaveToDB","Rework","Long",V.Local.fRework.Long)
	
	F.Data.Datatable.AddColumn("dtSaveToDB","BIRunID","Long",V.Global.iBIRunID)
	
	
	'Save to DB0
	'Map to SQL Table
	V.Local.sFm.Set("BIRunID@!@BIRunID")
	V.Local.sFm.Append("*!*WorkOrderID@!@WorkOrderID")
	V.Local.sFm.Append("*!*Line@!@ItemNumber")
	V.Local.sFm.Append("*!*JobID@!@JobID")
	V.Local.sFm.Append("*!*ItemQty@!@ItemQuantity")
	V.Local.sFm.Append("*!*Description@!@ItemDescription")
	V.Local.sFm.Append("*!*QuantityHung@!@QuantityHung")
	V.Local.sFm.Append("*!*HungSoFar@!@HungSoFar")
	V.Local.sFm.Append("*!*Remaining@!@Remaining")
	V.Local.sFm.Append("*!*ServiceDesc@!@Service")
	V.Local.sFm.Append("*!*WOLineWeight@!@Quantity")
	V.Local.sFm.Append("*!*CustName@!@Name1")
	V.Local.sFm.Append("*!*Note@!@Note")
	V.Local.sFm.Append("*!*WorkOrderNote@!@WorkOrderNote")
	V.Local.sFm.Append("*!*TNIDDescription@!@Description")
	V.Local.sFm.Append("*!*Price@!@Price")
	V.Local.sFm.Append("*!*TagID@!@TagID")
	V.Local.sFm.Append("*!*YardLocation@!@YardLocation")
	V.Local.sFm.Append("*!*QA@!@QALogRequiredFlag")
	V.Local.sFm.Append("*!*DateTimeStarted@!@DateTimeStarted")
	V.Local.sFm.Append("*!*DateTimeCompleted@!@DateTimeCompleted")
	V.Local.sFm.Append("*!*PreparedBy@!@PreparedBy")
	V.Local.sFm.Append("*!*CUSTOMER_REFERENCE@!@CustomerReference")
	V.Local.sFm.Append("*!*Resource@!@Resource")
	V.Local.sFm.Append("*!*Estimate@!@Estimate")
	V.Local.sFm.Append("*!*Rework@!@Rework")
	V.Local.sFm.Append("*!*NoQuenchFlag@!@NoQuenchFlag")
	V.Local.sFm.Append("*!*PriorityFlag@!@PriorityFlag")

'Select
'WorkOrderID
'Line
'JobID
'QuantityHung
'ItemQty
'LID
'PriorityFlag
'NoQuenchFlag
'QA
'Description
'TagID
'ServiceID
'ServiceDesc
'UnitQty
'Note
'CustName
'CustKey
'WO_ID
'HasQALog
'CheckedFlag
'CUSTOMER_REFERENCE

	F.Data.DataTable.SaveToDB("dtSaveToDB","con","GAB_6559_BI_JobPreview","",128,V.Local.sFm)
	
	F.Data.DataTable.Close("dtSaveToDB")
	f.Global.BI.StopLogging(v.Global.iBILogID)
	
	V.Local.sval.Set(V.Global.iBIRunID)
	V.Local.sPrm.Set("BIRunID")
	
	f.Global.BI.PrintReport(v.Global.iBIRptID,0,v.Local.sPrm,v.Local.sval,"",true)
	
	F.Intrinsic.String.Build("Delete From GAB_6559_BI_JobPreview where BIRunID = {0};",V.Global.iBIRunID,V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	
	v.Global.bLoading.Set(False)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.CallBIJobPreview.End
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'JobSheet Detail Header Controls 

Program.Sub.ddlResource_Change.Start
V.Local.sRet.Declare
F.Intrinsic.Control.Try
	
	F.Intrinsic.Control.If(V.Screen.FormJobSheet!ddlResource.Text,=,"")
		gui.FormJobSheet.txtResourceID.Text("0")
	F.Intrinsic.Control.Else
		f.Data.Dictionary.ReturnKeyFromValue("dictJobResourceID",V.Screen.FormJobSheet!ddlResource.Text,V.Local.sRet)
		gui.FormJobSheet.txtResourceID.Text(V.Local.sRet)
	F.Intrinsic.Control.EndIf

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ddlResource_Change.End

Program.Sub.ddlPreparedby_Change.Start
V.Local.sRet.Declare
F.Intrinsic.Control.Try
	
	F.Intrinsic.Control.If(V.Screen.FormJobSheet!ddlPreparedby.Text,=,"")
		gui.FormJobSheet.txtPreparedByID.Text("0")
	F.Intrinsic.Control.Else
		f.Data.Dictionary.ReturnKeyFromValue("dictEmployee",V.Screen.FormJobSheet!ddlPreparedby.Text,V.Local.sRet)
		gui.FormJobSheet.txtPreparedByID.Text(V.Local.sRet)
	F.Intrinsic.Control.EndIf

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ddlPreparedby_Change.End

Program.Sub.ddlScheduledby_Change.Start
V.Local.sRet.Declare
F.Intrinsic.Control.Try
	
	F.Intrinsic.Control.If(V.Screen.FormJobSheet!ddlScheduledby.Text,=,"")
		gui.FormJobSheet.txtScheduledByID.Text("0")
	F.Intrinsic.Control.Else
		f.Data.Dictionary.ReturnKeyFromValue("dictEmployee",V.Screen.FormJobSheet!ddlScheduledby.Text,V.Local.sRet)
		gui.FormJobSheet.txtScheduledByID.Text(V.Local.sRet)
	F.Intrinsic.Control.EndIf

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ddlScheduledby_Change.End

Program.Sub.cmdScheduledNow_Click.Start
F.Intrinsic.Control.Try
V.Local.dNow.Declare
V.Local.dNow.Set(V.Ambient.Now)
Gui.FormJobSheet.txtDateScheduled.Text(V.Local.dNow)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdScheduledNow_Click.End

Program.Sub.cmdPreparedNow_Click.Start
F.Intrinsic.Control.Try
V.Local.dNow.Declare
V.Local.dNow.Set(V.Ambient.Now)
Gui.FormJobSheet.txtDatePrepared.Text(V.Local.dNow)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdPreparedNow_Click.End

Program.Sub.cmdCompletedNow_Click.Start
F.Intrinsic.Control.Try
V.Local.dNow.Declare
V.Local.dNow.Set(V.Ambient.Now)
Gui.FormJobSheet.txtDateCompleted.Text(V.Local.dNow)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdCompletedNow_Click.End

Program.Sub.cmdClearScheduled_Click.Start
F.Intrinsic.Control.Try
V.Local.dNow.Declare
V.Local.dNow.Set("1/1/1900 00:00:00 AM")
Gui.FormJobSheet.txtDateScheduled.Text(V.Local.dNow)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdClearScheduled_Click.End

Program.Sub.cmdClearPrepared_Click.Start
F.Intrinsic.Control.Try
V.Local.dNow.Declare
V.Local.dNow.Set("1/1/1900 00:00:00 AM")
Gui.FormJobSheet.txtDatePrepared.Text(V.Local.dNow)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdClearPrepared_Click.End

Program.Sub.cmdClearCompleted_Click.Start
F.Intrinsic.Control.Try
V.Local.dNow.Declare
V.Local.dNow.Set("1/1/1900 00:00:00 AM")
Gui.FormJobSheet.txtDateCompleted.Text(V.Local.dNow)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdClearCompleted_Click.End

Program.Sub.chkReleased_Change.Start
F.Intrinsic.Control.Try
v.Local.bChecked.Declare

V.Local.bChecked.Set(V.Screen.FormJobSheet!chkReleased.CheckedAsBoolean)
F.Intrinsic.Control.If(V.Local.bChecked)
F.Intrinsic.Control.AndIf(V.Screen.FormJobSheet!ddlResource.Text,=,"")
	F.Intrinsic.UI.Msgbox("Please select a Headrack before releasing the Job.")
	gui.FormJobSheet.chkReleased.Value(False)
F.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.chkReleased_Change.End
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


Program.Sub.GSGCJobCurrent_CellValueChanged.Start
F.Intrinsic.Control.Try
V.Local.sLID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.fRet.Declare
V.Local.sBit.Declare
V.Local.dNow.Declare
V.Local.sNow.Declare
V.Local.iLineQty.Declare
V.Local.sJobID.Declare

Gui.FormJobSheet.GSGCJobCurrent.GetCellValueByColumnName("gvJobCurrent","LID",V.Args.RowIndex,V.Local.sLID)

F.Intrinsic.Control.BlockEvents
F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
	F.Intrinsic.Control.Case("QUANTITYHUNG")
		F.Intrinsic.String.Build("Update GAB_6559_Job_Lines Set QUANTITYHUNG = '{0}' where LID = '{1}' and JobID = '{2}'",V.Args.Value,V.Local.sLID,V.Global.iJobID,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		
F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.UnBlockEvents

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.GSGCJobCurrent_CellValueChanged.End

Program.Sub.GSGCJobCurrent_RowCellClick.Start
f.Intrinsic.Control.Try
	v.Local.iRowIndex.Declare
	V.Local.iWOID.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.Local.sJobID.Declare
	
	
	F.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
	F.Intrinsic.Control.Case("WORKORDERID")
	'Try and open the WO in the WO details form if its not locked
		Gui.FormJobSheet.GSGCJobCurrent.GetCellValueByColumnName("gvJobCurrent","WorkOrderID",V.Args.RowIndex,V.Local.iWOID)
		'Check if the WOID is in use by checking the table (GAB_6559_TL)
		f.Intrinsic.String.Build("SELECT TOP 1 WOID FROM GAB_6559_TL WHERE WOID = '{0}'",V.Local.iWOID,v.Local.sSQL)
		f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
		F.Intrinsic.Control.If(v.Ambient.ExecuteAndReturnEOF)
		'If its not in use then open that WOID
			'insert WOID lock
			F.Intrinsic.Control.CallSub(InsertWOIDLock,"WOID",V.Local.iWOID)
			'Load WO header information
			F.Intrinsic.Control.CallSub(OpenExistingWorkOrder,"WOID",V.Local.iWOID)
			'Load WO Lines information
			F.Intrinsic.Control.CallSub(LoaddtOrderItemstab,"WOID",V.Local.iWOID)
			
			gui.FormWorkOrderDetails.tabWorkOrderDetails.SetTab(0)
			gui.FormWorkOrderDetails..Visible(True) ' Open new gui
			gui.FormWorkOrderDetails..WindowState(0)
			gui.FormWorkOrderDetails..SetFocus
		
		
		F.Intrinsic.Control.Else	
			'Display message that the WOID is locked
			F.Intrinsic.UI.Msgbox("Work Order ID is currently locked")
		F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.EndSelect
	F.Intrinsic.Control.UnBlockEvents
		

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.GSGCJobCurrent_RowCellClick.End

Program.Sub.GSGCJobAvailable_CellValueChanged.Start
F.Intrinsic.Control.Try

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.GSGCJobAvailable_CellValueChanged.End

Program.Sub.GSGCJobAvailable_RowCellClick.Start
f.Intrinsic.Control.Try
	v.Local.iRowIndex.Declare
	V.Local.iWOID.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.Local.sJobID.Declare
	
	
	F.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
	F.Intrinsic.Control.Case("WORKORDERID")
	'Try and open the WO in the WO details form if its not locked
		Gui.FormJobSheet.GSGCJobAvailable.GetCellValueByColumnName("gvJobAvailable","WorkOrderID",V.Args.RowIndex,V.Local.iWOID)
		'Check if the WOID is in use by checking the table (GAB_6559_TL)
		f.Intrinsic.String.Build("SELECT TOP 1 WOID FROM GAB_6559_TL WHERE WOID = '{0}'",V.Local.iWOID,v.Local.sSQL)
		f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
		F.Intrinsic.Control.If(v.Ambient.ExecuteAndReturnEOF)
		'If its not in use then open that WOID
			'insert WOID lock
			F.Intrinsic.Control.CallSub(InsertWOIDLock,"WOID",V.Local.iWOID)
			'Load WO header information
			F.Intrinsic.Control.CallSub(OpenExistingWorkOrder,"WOID",V.Local.iWOID)
			'Load WO Lines information
			F.Intrinsic.Control.CallSub(LoaddtOrderItemstab,"WOID",V.Local.iWOID)
			
			gui.FormWorkOrderDetails.tabWorkOrderDetails.SetTab(0)
			gui.FormWorkOrderDetails..Visible(True) ' Open new gui
			gui.FormWorkOrderDetails..WindowState(0)
			gui.FormWorkOrderDetails..SetFocus
		
		F.Intrinsic.Control.Else	
			'Display message that the WOID is locked
			F.Intrinsic.UI.Msgbox("Work Order ID is currently locked")
		F.Intrinsic.Control.EndIf
		
	
	F.Intrinsic.Control.EndSelect
	F.Intrinsic.Control.UnBlockEvents
		

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.GSGCJobAvailable_RowCellClick.End


Program.Sub.cmdRemoveJobLines_Click.Start
V.Local.sRet.Declare
V.Local.iCnt.Declare
v.Local.sLID.Declare
V.Local.sSQL.Declare
V.Local.sNow.Declare
V.Local.dNow.Declare
V.Local.sDeleted.Declare
V.Local.sMsg.Declare
V.Local.bchecked.Declare
V.Local.bNoQuench.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.dNow)
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)	

F.Intrinsic.Control.Try

'Warn the user with a msgbox the delete from the  
F.Intrinsic.ui.Msgbox("Are you sure you would like to delete the selected Job lines?","Delete","4",V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

'loop Backwards through dtJobCurrent and delete formt he DB table and the local DT
F.Intrinsic.Control.For(V.Local.iCnt,V.DataTable.dtJobCurrent.RowCount--,0,-1)
	V.Local.bchecked.Set(V.DataTable.dtJobCurrent(V.Local.iCnt).CheckedFlag!fieldval)
	F.Intrinsic.Control.If(V.DataTable.dtJobCurrent(V.Local.iCnt).Select!fieldval,=,"True")
		F.Intrinsic.Control.If(V.Local.bchecked)
			F.Intrinsic.String.Build("Cannot remove part {0}{1}because it has been marked as Checked.",V.DataTable.dtJobCurrent(V.Local.iCnt).Description!fieldvaltrim,V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg)
		F.Intrinsic.Control.Else
			v.Local.sLID.Set(V.DataTable.dtJobCurrent(V.Local.iCnt).LID!Fieldval)
			F.Intrinsic.String.Build("Delete from GAB_6559_Job_Lines where LID = '{0}' and JobID = '{1}'",V.Local.sLID,V.Global.iJobID,V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Data.DataTable.DeleteRow("dtJobCurrent",V.Local.iCnt)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iCnt)

'Show that someone made a change.
F.Intrinsic.String.Build("Update GAB_6559_Job_Header Set SysUserLastAccess = '{0}', SysUserLastAccessDateTime = '{1}' where JobID = '{2}'",V.Caller.User,V.Local.sNow,V.Global.iJobID,V.Local.sSQL)
F.ODBC.Connection!con.Execute(V.Local.sSQL)
'gui.FormTranNote.txtLastAccessUser.Text(V.Caller.User)
'gui.FormTranNote.txtLastAccessDateTime.Text(V.Local.dNow)

'Check to see if we removed all No quench lines the color background accordingly
F.Data.Datatable.AcceptChanges("dtJobCurrent")
'gui.FormJobSheet.SplitContainer1.BackColor("White")
F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtJobCurrent.RowCount--,1)
	F.Intrinsic.Control.If(V.DataTable.dtJobCurrent(V.Local.iCnt).NoQuenchFlag!FieldVal)
		V.Local.bNoQuench.Set(True)
		F.Intrinsic.Control.ExitFor(V.Local.iCnt)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iCnt)

F.Intrinsic.Control.If(V.Local.bNoQuench)
	F.Intrinsic.Control.If(V.Screen.FormJobSheet!SplitContainer1.BackColor,=,"DeepPink")
	F.Intrinsic.Control.Else
		gui.FormJobSheet.SplitContainer1.BackColor("DeepPink")
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	F.Intrinsic.Control.If(V.Screen.FormJobSheet!SplitContainer1.BackColor,=,"Transparent")
	F.Intrinsic.Control.Else
		gui.FormJobSheet.SplitContainer1.BackColor("Transparent")
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

'Dont need to reload this since we are removing rows
'F.Intrinsic.Control.CallSub(LoaddtJobCurrent)

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdRemoveJobLines_Click.End

Program.Sub.cmdAllocateJobLines_Click.Start
F.Intrinsic.Control.Try
V.Local.sSQL.Declare(String)
V.Local.iCnt.Declare
V.Local.sIOP.Declare
V.Local.sWOID.Declare
V.Local.sLID.Declare
V.Local.sColumn.Declare
V.Local.iRet.Declare
V.Local.iItemQty.Declare


'Allocate selected lines
F.Data.DataView.Create("dtJobAvailable","dvJobAvailable",22,"SELECT = True","")
'dt > Dv Select = true

'insert into, or update GAB_6559_Job_Lines
F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataView.dtJobAvailable!dvJobAvailable.RowCount--,1)
	
	V.Local.sWOID.Set(V.DataView.dtJobAvailable!dvJobAvailable(V.Local.iCnt).WorkOrderID!FieldVal)
	V.Local.sLID.Set(V.DataView.dtJobAvailable!dvJobAvailable(V.Local.iCnt).LID!FieldVal)
	V.Local.iItemQty.Set(V.DataView.dtJobAvailable!dvJobAvailable(V.Local.iCnt).Hang!FieldVal)
	
	F.Intrinsic.String.Build("select Top 1 QuantityHung from GAB_6559_Job_Lines where LID = '{0}' and JobID = '{1}'",V.Local.sLID,V.Global.iJobID,V.Local.sSQL)
	f.ODBC.Connection!con.executeandreturn(V.Local.sSQL,V.Local.iRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.not)
		F.Intrinsic.Math.Add(V.Local.iRet,V.Local.iItemQty,V.Local.iItemQty)
		F.Intrinsic.String.Build("Update GAB_6559_Job_Lines set QuantityHung = '{0}' where LID = '{1}' and JobID = '{2}'",V.Local.iItemQty,V.Local.sLID,V.Global.iJobID,V.Local.sSQL)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("Insert Into GAB_6559_Job_Lines (WorkOrderID,LID,JobID,QuantityHung,CheckedFlag) Values ('{0}','{1}','{2}','{3}','0')",V.Local.sWOID,V.Local.sLID,V.Global.iJobID,V.Local.iItemQty,V.Local.sSQL)
	F.Intrinsic.Control.EndIf
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	
F.Intrinsic.Control.Next(V.Local.iCnt)

F.Data.DataView.Close("dtJobAvailable","dvJobAvailable")
'reload TransportAvailable tab
F.Intrinsic.Control.CallSub(LoaddtJobAvailable)



f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry

Program.Sub.cmdAllocateJobLines_Click.End

Program.Sub.cmdQALog_Click.Start
V.Local.sLID.Declare
V.Local.sJobID.Declare
V.Local.sSQL.Declare
V.Local.sMsg.Declare
V.Local.sRet.Declare
V.Local.sNow.Declare
V.Local.sWOID.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
F.Intrinsic.Control.Try
'Open or create QA log for the WO-Line-JobID
	
	F.Data.DataView.Create("dtJobCurrent","dvQALog",22,"SELECT = True","")
	
	F.Intrinsic.Control.If(V.DataView.dtJobCurrent!dvQALog.RowCount,=,0)
		F.Data.DataView.Close("dtJobCurrent","dvQALog")
		F.Intrinsic.UI.Msgbox("No rows were selected!")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataView.dtJobCurrent!dvQALog.RowCount,>,1)
		F.Data.DataView.Close("dtJobCurrent","dvQALog")
		F.Intrinsic.UI.Msgbox("Multiple rows were selected! Please only select one and try again.")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	V.Local.sLID.Set(V.DataView.dtJobCurrent!dvQALog(0).LID!FieldValString)
	V.Local.sJobID.Set(V.DataView.dtJobCurrent!dvQALog(0).JobID!FieldValString)
	V.Local.sWOID.Set(V.DataView.dtJobCurrent!dvQALog(0).WorkOrderID!FieldValString)
	
	F.Data.DataView.Close("dtJobCurrent","dvQALog")
	
	F.Intrinsic.String.Build("Select TOP 1 QALogID From GAB_6559_QA_Log Where LID = '{0}' and JobID = '{1}'",V.Local.sLID,V.Local.sJobID,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
		'Need to Create New QALogID
		'Insert Statement on GAB_6559_QA_Log
		F.Intrinsic.String.Build("Insert Into GAB_6559_QA_Log (LID,WorkOrderID,JobID,MeasurementDeviceID,DateTimeLogged,SysUserLastAccess,SysUserLastAccessDateTime) Values ('{0}','{1}','{2}','{3}','{4}','{5}','{6}')",V.Local.sLID,V.Local.sWOID,V.Local.sJobID,"1",v.Local.sNow,V.Caller.User,V.Local.sNow,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		'Get the JOBID that was auto generated by PSQL... We will use that to then open the JOB Details form
		F.Intrinsic.String.Build("Select Top 1 QALogID from GAB_6559_QA_Log where SysUserLastAccess = '{0}' order by SysUserLastAccessDateTime Desc",V.Caller.User,v.Local.sSQL)
		F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,v.Local.sRet)
		V.Global.iQALogID.Set(V.Local.sRet.Long)
	
	F.Intrinsic.Control.Else
		'We already have one, lets load that one.
		V.Global.iQALogID.Set(V.Local.sRet.Long)
		
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.CallSub(LoadQALog)
	
	

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdQALog_Click.End

Program.Sub.cmdReworkLog_Click.Start
V.Local.sLID.Declare
V.Local.sJobID.Declare
V.Local.sSQL.Declare
V.Local.sMsg.Declare
V.Local.sRet.Declare
V.Local.sNow.Declare
V.Local.sWOID.Declare
V.Local.sServiceID.Declare
V.Local.sWOIDLine.Declare
V.Local.sWOIDLineNext.Declare
V.Local.sItemQty.Declare
V.Local.dNow.Declare
V.Local.dNow.Set(V.Ambient.Now)
V.Local.dNothing.Declare
V.Local.dNothing.Set("1/1/1900 00:00:00 AM")

F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
F.Intrinsic.Control.Try
'Open or create QA log for the WO-Line-JobID
	
	F.Data.DataView.Create("dtJobCurrent","dvReworkLog",22,"SELECT = True","")
	
	F.Intrinsic.Control.If(V.DataView.dtJobCurrent!dvReworkLog.RowCount,=,0)
		F.Data.DataView.Close("dtJobCurrent","dvReworkLog")
		F.Intrinsic.UI.Msgbox("No rows were selected!")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataView.dtJobCurrent!dvReworkLog.RowCount,>,1)
		F.Data.DataView.Close("dtJobCurrent","dvReworkLog")
		F.Intrinsic.UI.Msgbox("Multiple rows were selected! Please only select one and try again.")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	V.Local.sLID.Set(V.DataView.dtJobCurrent!dvReworkLog(0).LID!FieldValString)
	V.Local.sJobID.Set(V.DataView.dtJobCurrent!dvReworkLog(0).JobID!FieldValString)
	V.Local.sWOID.Set(V.DataView.dtJobCurrent!dvReworkLog(0).WorkOrderID!FieldValString)
	V.Local.sServiceID.Set(V.DataView.dtJobCurrent!dvReworkLog(0).ServiceID!FieldValString)
	V.Local.sWOIDLine.Set(V.DataView.dtJobCurrent!dvReworkLog(0).Line!FieldValString)
	V.Local.sItemQty.Set(V.DataView.dtJobCurrent!dvReworkLog(0).QuantityHung!FieldValString)
	
	
	F.Data.DataView.Close("dtJobCurrent","dvReworkLog")
	
	'Check to see if they selected the rework line
	F.Intrinsic.Control.If(V.Local.sServiceID,=,"ZZZZZZZZZZ")
		F.Intrinsic.String.Build("Select TOP 1 ReworkLogID From GAB_6559_Rework_Log Where LineNumber = '{0}' and WorkOrderID = '{1}' and JobID = '{2}'",V.Local.sWOIDLine,V.Local.sWOID,V.Local.sJobID,V.Local.sSQL)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("Select TOP 1 ReworkLogID From GAB_6559_Rework_Log Where OrgLineNumber = '{0}' and WorkOrderID = '{1}' and JobID = '{2}'",V.Local.sWOIDLine,V.Local.sWOID,V.Local.sJobID,V.Local.sSQL)
	F.Intrinsic.Control.EndIf
	
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
		'Gather information about the selected JobID line and fill the Rework screen with it.
		gui.FormRework.txtWOID.Text(V.Local.sWOID)
		'Get next WOID line
		F.Intrinsic.String.Build("select Max(Line) + 1 from GAB_6559_Lines where ID = '{0}'",V.Local.sWOID,V.Local.sSQL)
		F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
		V.Local.sWOIDLineNext.Set(V.Local.sRet)
		gui.FormRework.txtWOLine.Text(V.Local.sWOIDLineNext)		
		gui.FormRework.txtWOLineOrignial.Text(V.Local.sWOIDLine)		
		gui.FormRework.txtJobID.Text(V.Local.sJobID)		
		gui.FormRework.txtItemQty.Text(V.Local.sItemQty)		
		gui.FormRework.txtUnitQty.Text("0")
		gui.FormRework.txtTotalQty.Text("0")
		Gui.FormRework.txtDateLogged.Text(V.Local.dNow)
		gui.FormRework.txtDateClosed.Text(V.Local.dNothing)		
		gui.FormRework.txtNote.Text("")
		gui.FormRework.ddlInspectedby.Text("")
		gui.FormRework.ddlReworkType.Text("")
		
		V.Global.iReworkLogID.Set(0)
		'Show Screen
		Gui.FormRework..Visible(True)
		gui.FormRework..WindowState(0)
		Gui.FormRework..SetFocus
	F.Intrinsic.Control.Else
		'We already have one, lets load that one.
		V.Global.iReworkLogID.Set(V.Local.sRet.Long)
		
		F.Intrinsic.Control.CallSub(LoadReworkLog)
	F.Intrinsic.Control.EndIf
	
	
	

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdReworkLog_Click.End
#End Region ' JobSheet Detail Form

#Region "QA Log Form"

Program.Sub.LoadQALog.Start
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sRet2.Declare
V.Local.sEmployee.Declare
F.Intrinsic.Control.Try
	
	F.Intrinsic.String.Build("select QALogID, LID, WorkOrderID, JobID, MeasurementDeviceID, EmployeeID, DateTimeLogged, Value1, Value2, Value3, Value4, Value5, Value6, Value7, Value8, Value9, Value10, Value11, Value12, Value13, Value14, Value15, Value16, Value17, Value18, Value19, Value20, Value21, Value22, Value23, Value24, Value25, Value26, Value27, Value28, Value29, Value30 from GAB_6559_QA_Log Where QALogID = '{0}'",V.Global.iQALogID,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
		F.Intrinsic.UI.Msgbox("Cannot find QALogID")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	
	gui.FormQA.txtQAID.Text(V.Global.iQALogID)
	gui.FormQA.txtWOID.Text(V.Local.sRet(2))
	gui.FormQA.txtJobID.Text(V.Local.sRet(3))
	gui.FormQA.txtMeasurementID.Text(V.Local.sRet(4))
	gui.FormQA.ddlMeasurementDevice.Text(V.Dictionary.dictMeasurementDevices![V.Local.sRet(4)])
	gui.FormQA.txtLoggedByID.Text(V.Local.sRet(5))
	V.Local.sEmployee.Set(V.Dictionary.dictEmployeeActive![V.Local.sRet(5)])
	F.Intrinsic.Control.If(V.Local.sEmployee,=,"")
		gui.FormQA.ddlLoggedBy.AddItem(V.Dictionary.dictEmployee![V.Local.sRet(5)],0)
	F.Intrinsic.Control.EndIf
	gui.FormQA.ddlLoggedBy.Text(V.Dictionary.dictEmployee![V.Local.sRet(5)])
	gui.FormQA.txtDateMeasure.Text(V.Local.sRet(6))
	gui.FormQA.txtA1.Text(V.Local.sRet(7))
	gui.FormQA.txtA2.Text(V.Local.sRet(8))
	gui.FormQA.txtA3.Text(V.Local.sRet(9))
	gui.FormQA.txtA4.Text(V.Local.sRet(10))
	gui.FormQA.txtA5.Text(V.Local.sRet(11))
	gui.FormQA.txtA6.Text(V.Local.sRet(12))
	gui.FormQA.txtA7.Text(V.Local.sRet(13))
	gui.FormQA.txtA8.Text(V.Local.sRet(14))
	gui.FormQA.txtA9.Text(V.Local.sRet(15))
	gui.FormQA.txtA10.Text(V.Local.sRet(16))
	gui.FormQA.txtB1.Text(V.Local.sRet(17))
	gui.FormQA.txtB2.Text(V.Local.sRet(18))
	gui.FormQA.txtB3.Text(V.Local.sRet(19))
	gui.FormQA.txtB4.Text(V.Local.sRet(20))
	gui.FormQA.txtB5.Text(V.Local.sRet(21))
	gui.FormQA.txtB6.Text(V.Local.sRet(22))
	gui.FormQA.txtB7.Text(V.Local.sRet(23))
	gui.FormQA.txtB8.Text(V.Local.sRet(24))
	gui.FormQA.txtB9.Text(V.Local.sRet(25))
	gui.FormQA.txtB10.Text(V.Local.sRet(26))
	gui.FormQA.txtC1.Text(V.Local.sRet(27))
	gui.FormQA.txtC2.Text(V.Local.sRet(28))
	gui.FormQA.txtC3.Text(V.Local.sRet(29))
	gui.FormQA.txtC4.Text(V.Local.sRet(30))
	gui.FormQA.txtC5.Text(V.Local.sRet(31))
	gui.FormQA.txtC6.Text(V.Local.sRet(32))
	gui.FormQA.txtC7.Text(V.Local.sRet(33))
	gui.FormQA.txtC8.Text(V.Local.sRet(34))
	gui.FormQA.txtC9.Text(V.Local.sRet(35))
	gui.FormQA.txtC10.Text(V.Local.sRet(36))
	
	F.Intrinsic.String.Build("select TOP 1 Line From GAB_6559_Lines Where LID = '{0}'",V.Local.sRet(1),V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet2)	
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
		F.Intrinsic.UI.Msgbox("Cannot find WO Line")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	gui.FormQA.txtWOLine.Text(V.Local.sRet2)
	
	F.Intrinsic.Control.CallSub(QALogCalc)
	
	gui.FormQA.lblAvg.Caption(V.Global.sAvg)
	gui.FormQA.lblStdDev.Caption(V.Global.sStandDev)

	Gui.FormQA..Visible(True)
	gui.FormQA..WindowState(0)
	Gui.FormQA..SetFocus
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadQALog.End

Program.Sub.FormQA_UnLoad.Start
V.Global.bUnloading.Set(True)
gui.FormQA..Visible(False)
V.Global.bUnloading.Set(False)

Program.Sub.FormQA_UnLoad.End

Program.Sub.FormQA_UserButtonClicked.Start
V.Local.sSQL.Declare
V.Local.sMsg.Declare
V.Local.sRet.Declare
V.Local.sNow.Declare
V.Local.sDateTimeMeasure.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
V.Local.sLoggedByEmployeeID.Declare
V.Local.iValues.Declare
V.Local.fStandDev.Declare
V.Local.iCnt.Declare
V.Local.iCntB.Declare
V.Local.iCntC.Declare
V.Local.fAvg.Declare
V.Local.fAvgA.Declare
V.Local.fAvgB.Declare
V.Local.fAvgC.Declare
V.Local.sAvg.Declare
V.Local.sStandDev.Declare
V.Local.iA.Declare
V.Local.iB.Declare
V.Local.iC.Declare
V.Local.iTotal.Declare
V.Local.iNum.Declare

f.Intrinsic.Control.Try
	f.Intrinsic.Control.SelectCase(v.Args.Button)
		f.Intrinsic.Control.Case("Update")
		
'		F.Intrinsic.Control.CallSub(QALogCalc)
'		V.Local.iValues.Set(V.Global.iValues)
'		V.Local.sAvg.Set(V.Global.sAvg)
'		V.Local.sStandDev.Set(V.Global.sStandDev)
		
		
		V.Local.iValues.RedimPreserve(0,29)
		V.Local.iValues(0).Set(V.Screen.FormQA!txtA1.Text)
		V.Local.iValues(1).Set(V.Screen.FormQA!txtA2.Text)
		V.Local.iValues(2).Set(V.Screen.FormQA!txtA3.Text)
		V.Local.iValues(3).Set(V.Screen.FormQA!txtA4.Text)
		V.Local.iValues(4).Set(V.Screen.FormQA!txtA5.Text)
		V.Local.iValues(5).Set(V.Screen.FormQA!txtA6.Text)
		V.Local.iValues(6).Set(V.Screen.FormQA!txtA7.Text)
		V.Local.iValues(7).Set(V.Screen.FormQA!txtA8.Text)
		V.Local.iValues(8).Set(V.Screen.FormQA!txtA9.Text)
		V.Local.iValues(9).Set(V.Screen.FormQA!txtA10.Text)
		V.Local.iValues(10).Set(V.Screen.FormQA!txtB1.Text)
		V.Local.iValues(11).Set(V.Screen.FormQA!txtB2.Text)
		V.Local.iValues(12).Set(V.Screen.FormQA!txtB3.Text)
		V.Local.iValues(13).Set(V.Screen.FormQA!txtB4.Text)
		V.Local.iValues(14).Set(V.Screen.FormQA!txtB5.Text)
		V.Local.iValues(15).Set(V.Screen.FormQA!txtB6.Text)
		V.Local.iValues(16).Set(V.Screen.FormQA!txtB7.Text)
		V.Local.iValues(17).Set(V.Screen.FormQA!txtB8.Text)
		V.Local.iValues(18).Set(V.Screen.FormQA!txtB9.Text)
		V.Local.iValues(19).Set(V.Screen.FormQA!txtB10.Text)
		V.Local.iValues(20).Set(V.Screen.FormQA!txtC1.Text)
		V.Local.iValues(21).Set(V.Screen.FormQA!txtC2.Text)
		V.Local.iValues(22).Set(V.Screen.FormQA!txtC3.Text)
		V.Local.iValues(23).Set(V.Screen.FormQA!txtC4.Text)
		V.Local.iValues(24).Set(V.Screen.FormQA!txtC5.Text)
		V.Local.iValues(25).Set(V.Screen.FormQA!txtC6.Text)
		V.Local.iValues(26).Set(V.Screen.FormQA!txtC7.Text)
		V.Local.iValues(27).Set(V.Screen.FormQA!txtC8.Text)
		V.Local.iValues(28).Set(V.Screen.FormQA!txtC9.Text)
		V.Local.iValues(29).Set(V.Screen.FormQA!txtC10.Text)
		
		F.Intrinsic.Control.For(V.Local.iCnt,0,9,1)
			F.Intrinsic.Math.Add(V.Local.iCnt,10,V.Local.iCntB)
			F.Intrinsic.Math.Add(V.Local.iCnt,20,V.Local.iCntC)
			
			F.Intrinsic.Math.Add(V.Local.iA,V.Local.iValues(V.Local.iCnt),V.Local.iA)
			F.Intrinsic.Math.Add(V.Local.iB,V.Local.iValues(V.Local.iCntB),V.Local.iB)
			F.Intrinsic.Math.Add(V.Local.iC,V.Local.iValues(V.Local.iCntB),V.Local.iC)
		F.Intrinsic.Control.Next(V.Local.iCnt)
		
'		F.Intrinsic.Math.Div(V.Local.iA,10,V.Local.fAvgA)
'		F.Intrinsic.Math.Div(V.Local.iB,10,V.Local.fAvgB)
'		F.Intrinsic.Math.Div(V.Local.iC,10,V.Local.fAvgC)
		
		F.Intrinsic.Math.Add(V.Local.iA,V.Local.iB,V.Local.iC,V.Local.iTotal)
		F.Intrinsic.Math.Div(V.Local.iTotal,30,V.Local.fAvg)	
		F.Intrinsic.String.Format(V.Local.fAvg,##0.0,V.Local.sAvg)
		gui.FormQA.lblAvg.Caption(V.Local.sAvg)
	
		F.Intrinsic.Math.StandardDeviation(V.Local.iValues,V.Local.fStandDev)
		F.Intrinsic.String.Format(V.Local.fStandDev,##0.0,V.Local.sStandDev)
		gui.FormQA.lblStdDev.Caption(V.Local.sStandDev)
		
		F.Intrinsic.String.Format(V.Screen.FormQA!txtDateMeasure.Text, "YYYY-MM-DD HH:NN:SS", V.Local.sDateTimeMeasure)
		
		
		F.Intrinsic.String.Build("UPDATE GAB_6559_QA_Log SET MeasurementDeviceID = '{1}', MeasurementUnit = '{2}', EmployeeID = '{3}', DateTimeLogged = '{4}', SysUserLastAccess = '{5}', SysUserLastAccessDateTime = '{6}', Value1 = '{7}', Value2 = '{8}', Value3 = '{9}', Value4 = '{10}', Value5 = '{11}', Value6 = '{12}', Value7 = '{13}', Value8 = '{14}', Value9 = '{15}', Value10 = '{16}', Value11 = '{17}', Value12 = '{18}', Value13 = '{19}', Value14 = '{20}', Value15 = '{21}', Value16 = '{22}', Value17 = '{23}', Value18 = '{24}', Value19 = '{25}', Value20 = '{26}', Value21 = '{27}', Value22 = '{28}', Value23 = '{29}', Value24 = '{30}', Value25 = '{31}', Value26 = '{32}', Value27 = '{33}', Value28 = '{34}', Value29 = '{35}', Value30 = '{36}' Where QALogID = '{0}'",V.Global.iQALogID,V.Screen.FormQA!txtMeasurementID.Text,"Micrometer",V.Screen.FormQA!txtLoggedByID.Text,V.Local.sDateTimeMeasure,V.Caller.User,V.Local.sNow,V.Local.iValues(0),V.Local.iValues(1),V.Local.iValues(2),V.Local.iValues(3),V.Local.iValues(4),V.Local.iValues(5),V.Local.iValues(6),V.Local.iValues(7),V.Local.iValues(8),V.Local.iValues(9),V.Local.iValues(10),V.Local.iValues(11),V.Local.iValues(12),V.Local.iValues(13),V.Local.iValues(14),V.Local.iValues(15),V.Local.iValues(16),V.Local.iValues(17),V.Local.iValues(18),V.Local.iValues(19),V.Local.iValues(20),V.Local.iValues(21),V.Local.iValues(22),V.Local.iValues(23),V.Local.iValues(24),V.Local.iValues(25),V.Local.iValues(26),V.Local.iValues(27),V.Local.iValues(28),V.Local.iValues(29),V.Local.sSQL)
		f.ODBC.Connection!con.Execute(v.Local.sSQL)
		
		
		f.Intrinsic.Control.Case("Clear")
		
			F.Intrinsic.Control.For(V.Local.iCnt,1,10,1)
				Gui.FormQA.txtA[V.Local.iCnt].Text("")
				Gui.FormQA.txtB[V.Local.iCnt].Text("")
				Gui.FormQA.txtC[V.Local.iCnt].Text("")
			F.Intrinsic.Control.Next(V.Local.iCnt)
			
			gui.FormQA.lblAvg.Caption("0")
			gui.FormQA.lblStdDev.Caption("0")
			
			
		f.Intrinsic.Control.Case("Delete")

			'Add a check to see if the QA log/WO line has been Invoiced? or marked as Checked???
						
			'Warning Message
			F.Intrinsic.String.Build("Are you sure you would like to delete this QA Log?{0}{1}",V.Ambient.NewLine,V.Global.iQALogID,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"Delete","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf

			'Delete QA Log
			F.Intrinsic.String.Build("Delete From GAB_6559_QA_Log Where QALogID = '{0}'",V.Global.iQALogID,V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
			
			
			F.Intrinsic.Control.CallSub(FormQA_UnLoad)	
		
			
		
	f.Intrinsic.Control.EndSelect
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.FormQA_UserButtonClicked.End

Program.Sub.QALogCalc.Start
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.iValues.Declare
V.Local.fStandDev.Declare
V.Local.iCnt.Declare
V.Local.iCntB.Declare
V.Local.iCntC.Declare
V.Local.fAvg.Declare
V.Local.fAvgA.Declare
V.Local.fAvgB.Declare
V.Local.fAvgC.Declare
V.Local.sAvg.Declare
V.Local.sStandDev.Declare
V.Local.iA.Declare
V.Local.iB.Declare
V.Local.iC.Declare
V.Local.iTotal.Declare

F.Intrinsic.Control.Try
		V.Local.iValues.RedimPreserve(0,29)
		
		V.Local.iValues(0).Set(V.Screen.FormQA!txtA1.Text)
		V.Local.iValues(1).Set(V.Screen.FormQA!txtA2.Text)
		V.Local.iValues(2).Set(V.Screen.FormQA!txtA3.Text)
		V.Local.iValues(3).Set(V.Screen.FormQA!txtA4.Text)
		V.Local.iValues(4).Set(V.Screen.FormQA!txtA5.Text)
		V.Local.iValues(5).Set(V.Screen.FormQA!txtA6.Text)
		V.Local.iValues(6).Set(V.Screen.FormQA!txtA7.Text)
		V.Local.iValues(7).Set(V.Screen.FormQA!txtA8.Text)
		V.Local.iValues(8).Set(V.Screen.FormQA!txtA9.Text)
		V.Local.iValues(9).Set(V.Screen.FormQA!txtA10.Text)
		V.Local.iValues(10).Set(V.Screen.FormQA!txtB1.Text)
		V.Local.iValues(11).Set(V.Screen.FormQA!txtB2.Text)
		V.Local.iValues(12).Set(V.Screen.FormQA!txtB3.Text)
		V.Local.iValues(13).Set(V.Screen.FormQA!txtB4.Text)
		V.Local.iValues(14).Set(V.Screen.FormQA!txtB5.Text)
		V.Local.iValues(15).Set(V.Screen.FormQA!txtB6.Text)
		V.Local.iValues(16).Set(V.Screen.FormQA!txtB7.Text)
		V.Local.iValues(17).Set(V.Screen.FormQA!txtB8.Text)
		V.Local.iValues(18).Set(V.Screen.FormQA!txtB9.Text)
		V.Local.iValues(19).Set(V.Screen.FormQA!txtB10.Text)
		V.Local.iValues(20).Set(V.Screen.FormQA!txtC1.Text)
		V.Local.iValues(21).Set(V.Screen.FormQA!txtC2.Text)
		V.Local.iValues(22).Set(V.Screen.FormQA!txtC3.Text)
		V.Local.iValues(23).Set(V.Screen.FormQA!txtC4.Text)
		V.Local.iValues(24).Set(V.Screen.FormQA!txtC5.Text)
		V.Local.iValues(25).Set(V.Screen.FormQA!txtC6.Text)
		V.Local.iValues(26).Set(V.Screen.FormQA!txtC7.Text)
		V.Local.iValues(27).Set(V.Screen.FormQA!txtC8.Text)
		V.Local.iValues(28).Set(V.Screen.FormQA!txtC9.Text)
		V.Local.iValues(29).Set(V.Screen.FormQA!txtC10.Text)
		
		F.Intrinsic.Control.For(V.Local.iCnt,0,9,1)
			F.Intrinsic.Math.Add(V.Local.iCnt,10,V.Local.iCntB)
			F.Intrinsic.Math.Add(V.Local.iCnt,20,V.Local.iCntC)
			
			F.Intrinsic.Math.Add(V.Local.iA,V.Local.iValues(V.Local.iCnt),V.Local.iA)
			F.Intrinsic.Math.Add(V.Local.iB,V.Local.iValues(V.Local.iCntB),V.Local.iB)
			F.Intrinsic.Math.Add(V.Local.iC,V.Local.iValues(V.Local.iCntB),V.Local.iC)
		F.Intrinsic.Control.Next(V.Local.iCnt)
		
'		F.Intrinsic.Math.Div(V.Local.iA,10,V.Local.fAvgA)
'		F.Intrinsic.Math.Div(V.Local.iB,10,V.Local.fAvgB)
'		F.Intrinsic.Math.Div(V.Local.iC,10,V.Local.fAvgC)
		
		'Calc Total Average
		F.Intrinsic.Math.Add(V.Local.iA,V.Local.iB,V.Local.iC,V.Local.iTotal)
		F.Intrinsic.Math.Div(V.Local.iTotal,30,V.Local.fAvg)
		F.Intrinsic.String.Format(V.Local.fAvg,##0.0,V.Local.sAvg)
		'gui.FormQA.lblAvg.Caption(V.Local.sAvg)
		
		'Calc Standard Deviation
		F.Intrinsic.Math.StandardDeviation(V.Local.iValues,V.Local.fStandDev)
		F.Intrinsic.String.Format(V.Local.fStandDev,##0.0,V.Local.sStandDev)
		'gui.FormQA.lblStdDev.Caption(V.Local.sStandDev)
		
		V.Global.iValues.Set(V.Local.iValues)
		V.Global.sAvg.Set(V.Local.sAvg)
		V.Global.sStandDev.Set(V.Local.sStandDev)
		
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.QALogCalc.End

Program.Sub.ddlLoggedBy_Change.Start
V.Local.sRet.Declare
F.Intrinsic.Control.Try
	
	F.Intrinsic.Control.If(V.Screen.FormQA!ddlLoggedBy.Text,=,"")
		gui.FormQA.txtLoggedByID.Text("0")
	F.Intrinsic.Control.Else
		f.Data.Dictionary.ReturnKeyFromValue("dictEmployee",V.Screen.FormQA!ddlLoggedBy.Text,V.Local.sRet)
		gui.FormQA.txtLoggedByID.Text(V.Local.sRet)
	F.Intrinsic.Control.EndIf

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ddlLoggedBy_Change.End

Program.Sub.ddlMeasurementDevice_Change.Start
V.Local.sRet.Declare
F.Intrinsic.Control.Try
	
	F.Intrinsic.Control.If(V.Screen.FormQA!ddlMeasurementDevice.Text,=,"")
		gui.FormQA.txtMeasurementID.Text("0")
	F.Intrinsic.Control.Else
		f.Data.Dictionary.ReturnKeyFromValue("dictMeasurementDevices",V.Screen.FormQA!ddlMeasurementDevice.Text,V.Local.sRet)
		gui.FormQA.txtMeasurementID.Text(V.Local.sRet)
	F.Intrinsic.Control.EndIf

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ddlMeasurementDevice_Change.End

Program.Sub.cmdRefreshDateM_Click.Start
F.Intrinsic.Control.Try
V.Local.dNow.Declare
V.Local.dNow.Set(V.Ambient.Now)
Gui.FormQA.txtDateMeasure.Text(V.Local.dNow)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdRefreshDateM_Click.End

#End Region ' QA Log Form

#Region "QA Log View"

Program.Sub.Ac5_ElementClick.Start
f.Intrinsic.Control.Try
	v.Local.iRet.Declare
	V.Local.sSQL.Declare
	V.Local.sRet.Declare
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	v.Local.bAuth.Declare
	V.Local.iCnt.Declare
	v.Local.sReportID.Declare
	V.Local.sPrm.Declare
	V.Local.sval.Declare	
	V.Local.sTNID.Declare	
	V.Local.sShipToName.Declare	
	V.Local.sFm.Declare
	V.Local.sFilter.Declare
	V.Local.sCustomer.Declare
	
	'This will prevent from multi-clicking too fast the button
	f.Intrinsic.Control.If(v.Global.bLoading)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bLoading.Set(True)	
		
	
	f.Intrinsic.Control.SelectCase(v.Args.ElementID.UCase)
		f.Intrinsic.Control.Case("SERVICEWEB")
			F.Intrinsic.Task.ShellExec(0,"Open","https://www.gss-service.com/","","",0)	

		
		f.Intrinsic.Control.Case("PRINTQALOG")			
			
			F.Global.BI.GetRunID(V.Global.iBIRunID)
			F.Global.BI.GetIDFromName("GAB_6559_QALog.rpt",v.Global.iBIRptID)
			F.Global.BI.StartLogging(V.Global.iBIRunID,v.Global.iBIRptID,-1,"",V.Global.iBILogID)
			
			F.Intrinsic.Control.If(V.DataTable.dtQALog.RowCount,=,0)
				'No QALog lines
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'Prepare Datatable
			F.Data.DataView.Create("dtQALog","dvQALog",22,"Select = True","")
			F.Intrinsic.Control.If(V.DataView.dtQALog!dvQALog.RowCount,=,0)
				'No Rows Selected, Print all then
				F.Data.DataView.SetFilter("dtQALog","dvQALog","")
			F.Intrinsic.Control.EndIf
			F.Data.DataView.ToDataTable("dtQALog","dvQALog","dtSaveToDB",True)
			F.Data.DataView.Close("dtQALog","dvQALog")
			
			
			F.Intrinsic.String.Split(V.DataTable.dtSaveToDB(0).CustKey!FieldVal,"-",V.Local.sCustomer)
			F.Data.DataTable.AddColumn("dtSaveToDB","Customer","String",V.Local.sCustomer(0))
			
			F.Data.DataTable.AddColumn("dtSaveToDB","ADDRESS3","String","")
			F.Data.DataTable.AddColumn("dtSaveToDB","ADDRESS4","String","")
			
			
			'Filling in Customer ABN from V_CUSTOMER_INTL
			F.Data.DataTable.AddColumn("dtSaveToDB","CUSTOMER_ABN","String","")
			F.Data.Dictionary.CreateFromSQL("dictCustABN","con","Select RTRIM(CUSTOMER) as CUSTOMER, RTRIM(ADDRESS5) as ADDRESS5 FROM V_CUSTOMER_INTL")
			F.Data.Dictionary.SetDefaultReturn("dictCustABN","")
			F.Data.DataTable.FillFromDictionary("dtSaveToDB","dictCustABN","Customer","CUSTOMER_ABN")
			F.Data.Dictionary.Close("dictCustABN")
			
			'Filling in Customer Ref to Name from GAB_6559_Galvaware
			F.Data.DataTable.AddColumn("dtSaveToDB","CUSTOMER_REFERENCE","String","")
			F.Data.Dictionary.CreateFromSQL("dictCustRef","con","Select ID, RTRIM(CUSTOMER_REFERENCE) as CUSTOMER_REFERENCE FROM GAB_6559_Galvaware")
			F.Data.Dictionary.SetDefaultReturn("dictCustRef","")
			F.Data.DataTable.FillFromDictionary("dtSaveToDB","dictCustRef","WorkOrderID","CUSTOMER_REFERENCE")
			F.Data.Dictionary.Close("dictCustRef")
			
			'Filling in DateTimeCompleted from GAB_6559_Job_Header
			F.Data.DataTable.AddColumn("dtSaveToDB","DateTimeCompleted","Date")
			F.Data.Dictionary.CreateFromSQL("dictDateTimeCompleted","con","Select JobID, DateTimeCompleted FROM GAB_6559_Job_Header")
			F.Data.Dictionary.SetDefaultReturn("dictDateTimeCompleted","")
			F.Data.DataTable.FillFromDictionary("dtSaveToDB","dictDateTimeCompleted","JobID","DateTimeCompleted")
			F.Data.Dictionary.Close("dictDateTimeCompleted")
			
			'Filling in Resource Desc from GAB_6559_Job_Resource
			F.Data.DataTable.AddColumn("dtSaveToDB","Resource","String","")
			F.Data.Dictionary.CreateFromSQL("dictResource","con","select A.JobID, RTRIM(B.Description) as Resource from GAB_6559_Job_Header A Left Join GAB_6559_Job_Resource B on A.JobResourceID = B.JobResourceID")
			F.Data.Dictionary.SetDefaultReturn("dictResource","")
			F.Data.DataTable.FillFromDictionary("dtSaveToDB","dictResource","JobID","Resource")
			F.Data.Dictionary.Close("dictResource")
			
			F.Data.Datatable.AddColumn("dtSaveToDB","BIRunID","Long",V.Global.iBIRunID)
			
			
			
			'Save to DB0
			'Map to SQL Table
			V.Local.sFm.Set("BIRunID@!@BIRunID")
			V.Local.sFm.Append("*!*QALogID@!@QALogID")			
			V.Local.sFm.Append("*!*JobID@!@JobID")
			V.Local.sFm.Append("*!*WorkOrderID@!@WorkOrderID")
			V.Local.sFm.Append("*!*CustName@!@CustName")
			V.Local.sFm.Append("*!*CUSTOMER_REFERENCE@!@CUSTOMER_REFERENCE")
			V.Local.sFm.Append("*!*CUSTOMER_ABN@!@CUSTOMER_ABN")
			V.Local.sFm.Append("*!*ADDRESS3@!@ADDRESS3")
			V.Local.sFm.Append("*!*ADDRESS4@!@ADDRESS4")
			V.Local.sFm.Append("*!*MeasurementDevice@!@MeasurementDevice")
			V.Local.sFm.Append("*!*DateTimeLogged@!@DateTimeLogged")
			V.Local.sFm.Append("*!*Employee@!@Employee")
			V.Local.sFm.Append("*!*POS1@!@POS1")
			V.Local.sFm.Append("*!*POS2@!@POS2")
			V.Local.sFm.Append("*!*POS3@!@POS3")
			V.Local.sFm.Append("*!*TotalAVG@!@TotalAVG")
			V.Local.sFm.Append("*!*ServiceDesc@!@ServiceDesc")
			V.Local.sFm.Append("*!*Description@!@Description")
			V.Local.sFm.Append("*!*Resource@!@Resource")
			V.Local.sFm.Append("*!*DateTimeCompleted@!@DateTimeCompleted")
			V.Local.sFm.Append("*!*TagID@!@TagID")
			V.Local.sFm.Append("*!*Line@!@Line")
			V.Local.sFm.Append("*!*Value1@!@Value1")
			V.Local.sFm.Append("*!*Value2@!@Value2")
			V.Local.sFm.Append("*!*Value3@!@Value3")
			V.Local.sFm.Append("*!*Value4@!@Value4")
			V.Local.sFm.Append("*!*Value5@!@Value5")
			V.Local.sFm.Append("*!*Value6@!@Value6")
			V.Local.sFm.Append("*!*Value7@!@Value7")
			V.Local.sFm.Append("*!*Value8@!@Value8")
			V.Local.sFm.Append("*!*Value9@!@Value9")
			V.Local.sFm.Append("*!*Value10@!@Value10")
			V.Local.sFm.Append("*!*Value11@!@Value11")
			V.Local.sFm.Append("*!*Value12@!@Value12")
			V.Local.sFm.Append("*!*Value13@!@Value13")
			V.Local.sFm.Append("*!*Value14@!@Value14")
			V.Local.sFm.Append("*!*Value15@!@Value15")
			V.Local.sFm.Append("*!*Value16@!@Value16")
			V.Local.sFm.Append("*!*Value17@!@Value17")
			V.Local.sFm.Append("*!*Value18@!@Value18")
			V.Local.sFm.Append("*!*Value19@!@Value19")
			V.Local.sFm.Append("*!*Value20@!@Value20")
			V.Local.sFm.Append("*!*Value21@!@Value21")
			V.Local.sFm.Append("*!*Value22@!@Value22")
			V.Local.sFm.Append("*!*Value23@!@Value23")
			V.Local.sFm.Append("*!*Value24@!@Value24")
			V.Local.sFm.Append("*!*Value25@!@Value25")
			V.Local.sFm.Append("*!*Value26@!@Value26")
			V.Local.sFm.Append("*!*Value27@!@Value27")
			V.Local.sFm.Append("*!*Value28@!@Value28")
			V.Local.sFm.Append("*!*Value29@!@Value29")
			V.Local.sFm.Append("*!*Value30@!@Value30")
			
			F.Data.DataTable.SaveToDB("dtSaveToDB","con","GAB_6559_BI_QALog","",128,V.Local.sFm)
			
			F.Data.DataTable.Close("dtSaveToDB")
			f.Global.BI.StopLogging(v.Global.iBILogID)
			
			V.Local.sval.Set(V.Global.iBIRunID.String)
			V.Local.sPrm.Set("BIRunID")
			
			f.Global.BI.PrintReport(v.Global.iBIRptID,0,v.Local.sPrm,v.Local.sval,"",true)
			
			F.Intrinsic.String.Build("Delete From GAB_6559_BI_QALog where BIRunID = {0};",V.Global.iBIRunID,V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
			
			v.Global.bLoading.Set(False)
					
			f.Intrinsic.Control.EndSelect
			
			v.Global.bLoading.Set(False)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.Ac5_ElementClick.End

Program.Sub.GSGCQALog_CellValueChanged.Start
f.Intrinsic.Control.Try
	F.Intrinsic.Control.ExitSub
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry

Program.Sub.GSGCQALog_CellValueChanged.End

Program.Sub.GSGCQALog_RowCellClick.Start
f.Intrinsic.Control.Try
	v.Local.iRowIndex.Declare
	V.Local.iQALogID.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.Local.iWOID.Declare

	F.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
	F.Intrinsic.Control.Case("QALOGID")
		Gui.Form.GSGCQALog.GetCellValueByColumnName("gvQALog","QALogID",V.Args.RowIndex,V.Local.iQALogID)
		V.Global.iQALogID.Set(V.Local.iQALogID)
		F.Intrinsic.Control.CallSub(LoadQALog)
		
		
	F.Intrinsic.Control.EndSelect
	F.Intrinsic.Control.UnBlockEvents
		

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.GSGCQALog_RowCellClick.End


#End Region ' QA Log View

#Region "Material View"


Program.Sub.Ac3_ElementClick.Start
f.Intrinsic.Control.Try
	v.Local.iRet.Declare
	v.Local.sRet.Declare
	v.Local.bAuth.Declare
	V.Local.sCustomerKey.Declare
	V.Local.sQHID.Declare
	V.Local.sNow.Declare
	V.Local.sMsg.Declare
	V.Local.sSQL.Declare
	V.Local.sOrg.Declare
	V.Local.iCnt.Declare
	V.Local.iILID.Declare
	
	F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
	
	'This will prevent from multi-clicking too fast the button
	f.Intrinsic.Control.If(v.Global.bLoading)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bLoading.Set(True)	
	
	
	f.Intrinsic.Control.SelectCase(v.Args.ElementID.UCase)
		f.Intrinsic.Control.Case("SERVICEWEB")
			F.Intrinsic.Task.ShellExec(0,"Open","https://www.gss-service.com/","","",0)	
			
		f.Intrinsic.Control.Case("NEWLINE")
			F.Intrinsic.String.Build("Are you sure you would like to create a new Material Issue?{0}A new line will apear at the top of the grid.",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"New Material Issue","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.String.Build("Insert Into GAB_6559_Material_Log (DateTimeLogged,EmployeeID,MaterialID) Values ('{0}','','')",V.Local.sNow,V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","Material")
		
		f.Intrinsic.Control.Case("DELETE")
			'Make sure the user actually wants to delete.
			F.Intrinsic.String.Build("Are you sure you would like to delete the selected Material lines?",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"Delete Material","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'Filter down to selected rows.
			F.Data.DataView.Create("dtMaterial","dvMaterial",22,"SELECT = True","")
			F.Data.DataView.ToDataTable("dtMaterial","dvMaterial","dtDelete",True)
			F.Data.DataView.Close("dtMaterial","dvMaterial")
			
			'Delete
			F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtDelete.RowCount--,1)
				V.Local.iILID.Set(V.DataTable.dtDelete(v.Local.iCnt).MaterialLogID!FieldVal)
				F.Intrinsic.String.Build("Delete From GAB_6559_Material_Log where MaterialLogID = '{0}'",V.Local.iILID,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Next(V.Local.iCnt)
			F.Data.Datatable.Close("dtDelete")
			F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","Material")
			
	f.Intrinsic.Control.EndSelect
	
	v.Global.bLoading.Set(False)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Ac3_ElementClick.End

Program.Sub.GSGCMaterial_CellValueChanged.Start
F.Intrinsic.Control.Try
V.Local.iILID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.fRet.Declare
V.Local.sBit.Declare
V.Local.sNow.Declare
V.Local.sStart.Declare
V.Local.sEnd.Declare
V.Local.sNote.Declare
V.Local.iMaterial.Declare
V.Local.iEmployee.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)

gui.Form.GSGCMaterial.GetCellValueByColumnName("gvMaterial","MaterialLogID",V.Args.RowIndex,V.Local.iILID)
F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
		
	F.Intrinsic.Control.Case("DATELOGGED")		
		F.Intrinsic.String.Build("{0} {1}",V.DataTable.dtMaterial(V.Args.RowIndex).DateLogged!FieldVal,V.DataTable.dtMaterial(V.Args.RowIndex).TimeLogged!FieldVal,V.Local.sStart)
		F.Intrinsic.String.Format(V.Local.sStart, "YYYY-MM-DD HH:NN:SS", V.Local.sStart)
		F.Intrinsic.String.Build("Update GAB_6559_Material_Log Set DateTimeLogged = '{0}' where MaterialLogID = '{1}'",V.Local.sStart,V.Local.iILID,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("TIMELOGGED")
		F.Intrinsic.String.Build("{0} {1}",V.DataTable.dtMaterial(V.Args.RowIndex).DateLogged!FieldVal,V.DataTable.dtMaterial(V.Args.RowIndex).TimeLogged!FieldVal,V.Local.sStart)
		F.Intrinsic.String.Format(V.Local.sStart, "YYYY-MM-DD HH:NN:SS", V.Local.sStart)
		F.Intrinsic.String.Build("Update GAB_6559_Material_Log Set DateTimeLogged = '{0}' where MaterialLogID = '{1}'",V.Local.sStart,V.Local.iILID,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
	
	F.Intrinsic.Control.Case("NOTE")
		V.Local.sNote.Set(V.Args.Value)
		F.Intrinsic.String.Trim(V.Local.sNote,V.Local.sNote)
		F.Intrinsic.String.Build("Update GAB_6559_Material_Log Set Note = '{0}' where MaterialLogID = '{1}'",V.Local.sNote.PSQLFriendly,V.Local.iILID,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("MATERIAL")
		F.Data.Dictionary.ReturnKeyFromValue("dictMaterialDesc",V.Args.Value,V.Local.iMaterial)
		F.Data.DataTable.SetValue("dtMaterial",V.Args.rowindex,"MaterialID",V.Local.iMaterial,"Unit",V.Dictionary.dictMaterialUnit![V.Local.iMaterial])
		F.Intrinsic.String.Build("Update GAB_6559_Material_Log Set MaterialID = '{0}' where MaterialLogID = '{1}'",V.Local.iMaterial,V.Local.iILID,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
	
	F.Intrinsic.Control.Case("EMPLOYEE")
		F.Data.Dictionary.ReturnKeyFromValue("dictEmployee",V.Args.Value,V.Local.iEmployee)
		F.Data.DataTable.SetValue("dtMaterial",V.Args.rowindex,"EmployeeID",V.Local.iEmployee)
		F.Intrinsic.String.Build("Update GAB_6559_Material_Log Set EmployeeID = '{0}' where MaterialLogID = '{1}'",V.Local.iEmployee,V.Local.iILID,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("UNITQUANTITY")
		V.Local.sNote.Set(V.Args.Value)
		F.Intrinsic.String.Build("Update GAB_6559_Material_Log Set UNITQUANTITY = '{0}' where MaterialLogID = '{1}'",V.Local.sNote,V.Local.iILID,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
	
	F.Intrinsic.Control.Case("LOCATION")
		V.Local.sNote.Set(V.Args.Value)
		F.Intrinsic.String.Trim(V.Local.sNote,V.Local.sNote)
		F.Intrinsic.String.Build("Update GAB_6559_Material_Log Set Location = '{0}' where MaterialLogID = '{1}'",V.Local.sNote.PSQLFriendly,V.Local.iILID,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		
F.Intrinsic.Control.EndSelect
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.GSGCMaterial_CellValueChanged.End
Program.Sub.GSGCMaterial_RowCellClick.Start
Program.Sub.GSGCMaterial_RowCellClick.End

#End Region ' Material View

#Region "Issue View"

Program.Sub.Ac4_ElementClick.Start
f.Intrinsic.Control.Try
	v.Local.iRet.Declare
	v.Local.sRet.Declare
	v.Local.bAuth.Declare
	V.Local.sCustomerKey.Declare
	V.Local.sQHID.Declare
	V.Local.sNow.Declare
	V.Local.sMsg.Declare
	V.Local.sSQL.Declare
	V.Local.sOrg.Declare
	V.Local.iCnt.Declare
	V.Local.iILID.Declare
	
	F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
	
	'This will prevent from multi-clicking too fast the button
	f.Intrinsic.Control.If(v.Global.bLoading)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bLoading.Set(True)	
	
	
	f.Intrinsic.Control.SelectCase(v.Args.ElementID.UCase)
		f.Intrinsic.Control.Case("SERVICEWEB")
			F.Intrinsic.Task.ShellExec(0,"Open","https://www.gss-service.com/","","",0)	
			
		f.Intrinsic.Control.Case("NEWLINE")
			F.Intrinsic.String.Build("Are you sure you would like to create a new Issue?{0}A new line will apear at the top of the grid.",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"New Issue","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.String.Build("Insert Into GAB_6559_Issue_Log (DateTimeStart,DateTimeEnd,EmployeeID,IssueID) Values ('{0}','{0}','','9')",V.Local.sNow,V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","Issue")
		
		f.Intrinsic.Control.Case("DELETE")
			'Make sure the user actually wants to delete.
			F.Intrinsic.String.Build("Are you sure you would like to delete the selected Issue?",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"Delete Issues","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'Filter down to selected rows.
			F.Data.DataView.Create("dtIssue","dvIssue",22,"SELECT = True","")
			F.Data.DataView.ToDataTable("dtIssue","dvIssue","dtDelete",True)
			F.Data.DataView.Close("dtIssue","dvIssue")
			
			'Delete
			F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtDelete.RowCount--,1)
				V.Local.iILID.Set(V.DataTable.dtDelete(v.Local.iCnt).IssueLogID!FieldVal)
				F.Intrinsic.String.Build("Delete From GAB_6559_Issue_Log where IssueLogID = '{0}'",V.Local.iILID,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Next(V.Local.iCnt)
			F.Data.Datatable.Close("dtDelete")
			F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","Issue")
			
	f.Intrinsic.Control.EndSelect
	
	v.Global.bLoading.Set(False)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Ac4_ElementClick.End

Program.Sub.GSGCIssue_CellValueChanged.Start
F.Intrinsic.Control.Try
V.Local.iILID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.fRet.Declare
V.Local.sBit.Declare
V.Local.sNow.Declare
V.Local.sStart.Declare
V.Local.sEnd.Declare
V.Local.sNote.Declare
V.Local.iIssue.Declare
V.Local.iEmployee.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)

gui.Form.GSGCIssue.GetCellValueByColumnName("gvIssue","IssueLogID",V.Args.RowIndex,V.Local.iILID)
F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
		
	F.Intrinsic.Control.Case("DATESTART")		
		F.Intrinsic.String.Build("{0} {1}",V.DataTable.dtIssue(V.Args.RowIndex).DateStart!FieldVal,V.DataTable.dtIssue(V.Args.RowIndex).TimeStart!FieldVal,V.Local.sStart)
		F.Intrinsic.String.Format(V.Local.sStart, "YYYY-MM-DD HH:NN:SS", V.Local.sStart)
		F.Intrinsic.String.Build("Update GAB_6559_Issue_Log Set DateTimeStart = '{0}' where IssueLogID = '{1}'",V.Local.sStart,V.Local.iILID,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("DATEEND")
		F.Intrinsic.String.Build("{0} {1}",V.DataTable.dtIssue(V.Args.RowIndex).DateEnd!FieldVal,V.DataTable.dtIssue(V.Args.RowIndex).TimeEnd!FieldVal,V.Local.sEnd)
		F.Intrinsic.String.Format(V.Local.sEnd, "YYYY-MM-DD HH:NN:SS", V.Local.sEnd)
		F.Intrinsic.String.Build("Update GAB_6559_Issue_Log Set DateTimeEnd = '{0}' where IssueLogID = '{1}'",V.Local.sEnd,V.Local.iILID,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("TIMESTART")
		F.Intrinsic.String.Build("{0} {1}",V.DataTable.dtIssue(V.Args.RowIndex).DateStart!FieldVal,V.DataTable.dtIssue(V.Args.RowIndex).TimeStart!FieldVal,V.Local.sStart)
		F.Intrinsic.String.Format(V.Local.sStart, "YYYY-MM-DD HH:NN:SS", V.Local.sStart)
		F.Intrinsic.String.Build("Update GAB_6559_Issue_Log Set DateTimeStart = '{0}' where IssueLogID = '{1}'",V.Local.sStart,V.Local.iILID,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("TIMEEND")
		F.Intrinsic.String.Build("{0} {1}",V.DataTable.dtIssue(V.Args.RowIndex).DateEnd!FieldVal,V.DataTable.dtIssue(V.Args.RowIndex).TimeEnd!FieldVal,V.Local.sEnd)
		F.Intrinsic.String.Format(V.Local.sEnd, "YYYY-MM-DD HH:NN:SS", V.Local.sEnd)
		F.Intrinsic.String.Build("Update GAB_6559_Issue_Log Set DateTimeEnd = '{0}' where IssueLogID = '{1}'",V.Local.sEnd,V.Local.iILID,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
	
	F.Intrinsic.Control.Case("NOTE")
		V.Local.sNote.Set(V.Args.Value)
		F.Intrinsic.String.Trim(V.Local.sNote,V.Local.sNote)
		F.Intrinsic.String.Build("Update GAB_6559_Issue_Log Set Note = '{0}' where IssueLogID = '{1}'",V.Local.sNote.PSQLFriendly,V.Local.iILID,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("ISSUE")
		F.Data.Dictionary.ReturnKeyFromValue("dictIssue",V.Args.Value,V.Local.iIssue)
		F.Data.DataTable.SetValue("dtIssue",V.Args.rowindex,"IssueID",V.Local.iIssue)
		F.Intrinsic.String.Build("Update GAB_6559_Issue_Log Set IssueID = '{0}' where IssueLogID = '{1}'",V.Local.iIssue,V.Local.iILID,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
	
	F.Intrinsic.Control.Case("EMPLOYEE")
		F.Data.Dictionary.ReturnKeyFromValue("dictEmployee",V.Args.Value,V.Local.iEmployee)
		F.Data.DataTable.SetValue("dtIssue",V.Args.rowindex,"EmployeeID",V.Local.iEmployee)
		F.Intrinsic.String.Build("Update GAB_6559_Issue_Log Set EmployeeID = '{0}' where IssueLogID = '{1}'",V.Local.iEmployee,V.Local.iILID,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Case("CRANENUMBER")
		F.Intrinsic.String.Build("Update GAB_6559_Issue_Log Set CRANENUMBER = '{0}' where IssueLogID = '{1}'",V.Args.Value,V.Local.iILID,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		
F.Intrinsic.Control.EndSelect
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.GSGCIssue_CellValueChanged.End
Program.Sub.GSGCIssue_RowCellClick.Start
Program.Sub.GSGCIssue_RowCellClick.End

#End Region ' Issue View

#Region "Rework Log Form"

Program.Sub.LoadReworkLog.Start
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sRet2.Declare
V.Local.sEmployee.Declare
V.Local.fTotalWeight.Declare
F.Intrinsic.Control.Try
	
	F.Intrinsic.String.Build("select WorkOrderID, LineNumber, OrgLineNumber, JobID, EmployeeID, RTRIM(Note) as Note, DateLogged, DateClosed, ReworkTypeID from GAB_6559_Rework_Log where ReworkLogID = '{0}'",V.Global.iReworkLogID,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
		F.Intrinsic.UI.Msgbox("Cannot find ReworkLog")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)

	gui.FormRework.txtWOID.Text(V.Local.sRet(0))
	gui.FormRework.txtWOLine.Text(V.Local.sRet(1))		
	gui.FormRework.txtWOLineOrignial.Text(V.Local.sRet(2))
	gui.FormRework.txtJobID.Text(V.Local.sRet(3))		
	V.Local.sEmployee.Set(V.Dictionary.dictEmployeeActive![V.Local.sRet(4)])
	F.Intrinsic.Control.If(V.Local.sEmployee,=,"")
		gui.FormRework.ddlInspectedby.AddItem(V.Dictionary.dictEmployee![V.Local.sRet(4)],0)
	F.Intrinsic.Control.EndIf
	gui.FormRework.ddlInspectedby.Text(V.Dictionary.dictEmployee![V.Local.sRet(4)])
	gui.FormRework.txtNote.Text(V.Local.sRet(5))
	Gui.FormRework.txtDateLogged.Text(V.Local.sRet(6))
	gui.FormRework.txtDateClosed.Text(V.Local.sRet(7))
	gui.FormRework.ddlReworkType.Text(V.Dictionary.dictReworkType![V.Local.sRet(8)])
	
	'get Itemqty and UnitQty form the WO line in GAB_6559_Lines
	F.Intrinsic.String.Build("Select ItemQty, UnitQty From GAB_6559_Lines where ID = '{0}' and Line = '{1}'",v.Local.sRet(0),V.Local.sRet(1),V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
		F.Intrinsic.UI.Msgbox("Cannot find Work Order line for this rework log")
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		gui.FormRework.txtItemQty.Text(V.Local.sRet(0))		
		gui.FormRework.txtUnitQty.Text(V.Local.sRet(1))
		F.Intrinsic.Math.Mult(V.Local.sRet(0).Float,V.Local.sRet(1).Float,V.Local.fTotalWeight)
		gui.FormRework.txtTotalQty.Text(V.Local.fTotalWeight)
		
	F.Intrinsic.Control.EndIf

	Gui.FormRework..Visible(True)
	gui.FormRework..WindowState(0)
	Gui.FormRework..SetFocus
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadReworkLog.End

Program.Sub.FormRework_UnLoad.Start
V.Global.bUnloading.Set(True)
gui.FormRework..Visible(False)
V.Global.bUnloading.Set(False)
Program.Sub.FormRework_UnLoad.End

Program.Sub.FormRework_UserButtonClicked.Start
V.Local.sSQL.Declare
V.Local.sMsg.Declare
V.Local.sRet.Declare
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
V.Local.sNotes.Declare
V.Local.sDateLogged.Declare
V.Local.sDateClosed.Declare
V.Local.sJobID.Declare
V.Local.iInspectedby.Declare
v.Local.sWOID.Declare
V.Local.iReworkTypeID.Declare
v.Local.sWOLine.Declare
v.Local.sWOLineOriginal.Declare
v.Local.sItemQty.Declare
v.Local.sUnitQty.Declare
V.Local.sDescription.Declare
V.Local.sTagID.Declare
V.Local.sYard.Declare
V.Local.sYard2.Declare
V.Local.sUnit.Declare
V.Local.iRet.Declare

f.Intrinsic.Control.Try
	f.Intrinsic.Control.SelectCase(v.Args.Button)
		f.Intrinsic.Control.Case("Update")
			F.Intrinsic.Control.If(V.Global.iReworkLogID,=,0)
				F.Intrinsic.Control.CallSub(FormRework_UserButtonClicked,"Button","Create")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			V.Local.sNotes.Set(V.Screen.FormRework!txtNote.Text)
			F.Intrinsic.String.RTrim(V.Local.sNotes,V.Local.sNotes)
			V.Local.sDateLogged.Set(V.Screen.FormRework!txtDateLogged.Text)
			F.Intrinsic.String.Format(V.Local.sDateLogged, "YYYY-MM-DD HH:NN:SS", V.Local.sDateLogged)
			v.Local.sDateClosed.Set(V.Screen.FormRework!txtDateClosed.Text)
			F.Intrinsic.String.Format(V.Local.sDateClosed, "YYYY-MM-DD HH:NN:SS", V.Local.sDateClosed)
			F.Intrinsic.Control.If(V.Screen.FormRework!ddlInspectedby.Text,=,"")
				V.Local.iInspectedby.Set(0)
			F.Intrinsic.Control.Else
				F.Data.Dictionary.ReturnKeyFromValue("dictEmployee",V.Screen.FormRework!ddlInspectedby.Text,V.Local.iInspectedby)
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.If(V.Screen.FormRework!ddlReworkType.Text,=,"")
				F.Intrinsic.UI.Msgbox("Please input a Rework Type from the drop down. Nothing was saved!")
				F.Intrinsic.Control.ExitSub
				
			F.Intrinsic.Control.Else
				F.Data.Dictionary.ReturnKeyFromValue("dictReworkType",V.Screen.FormRework!ddlReworkType.Text,V.Local.iReworkTypeID)
			F.Intrinsic.Control.EndIf
			v.Local.sJobID.Set(V.Screen.FormRework!txtJobID.Text)
			v.Local.sWOID.Set(V.Screen.FormRework!txtWOID.Text)
			v.Local.sWOLine.Set(V.Screen.FormRework!txtWOLine.Text)
			v.Local.sWOLineOriginal.Set(V.Screen.FormRework!txtWOLineOrignial.Text)
			v.Local.sItemQty.Set(V.Screen.FormRework!txtItemQty.Text)
			v.Local.sUnitQty.Set(V.Screen.FormRework!txtUnitQty.Text)
		
			'update GAB_6559_Rework_Log
			F.Intrinsic.String.Build("Update GAB_6559_Rework_Log Set WorkOrderID = '{0}', LineNumber = '{1}', OrgLineNumber = '{2}', JobID = '{3}', EmployeeID = '{4}', Note = '{5}', SysUserLastAccess = '{6}', SysUserLastAccessDateTime = '{7}', DateLogged = '{8}', DateClosed = '{9}', ReworkTypeID = '{10}' where ReworkLogID = '{11}';",V.Local.sWOID,V.Local.sWOLine,V.Local.sWOLineOriginal,V.Local.sJobID,V.Local.iInspectedby,V.Local.sNotes.PSQLFriendly,V.Caller.User,V.Local.sNow,V.Local.sDateLogged,V.Local.sDateClosed,V.Local.iReworkTypeID,V.Global.iReworkLogID,V.Local.sSQL)
			f.ODBC.Connection!con.Execute(v.Local.sSQL)
			
			'Update ItemQty and UnitQty in GAB_6559_Lines
			F.Intrinsic.String.Build("Update GAB_6559_Lines Set ItemQty = '{0}', UnitQty = '{1}' where ID = '{2}' and Line = '{3}'",V.Local.sItemQty,V.Local.sUnitQty,V.Local.sWOID,V.Local.sWOLine,V.Local.sSQL)
			f.ODBC.Connection!con.Execute(v.Local.sSQL)
			
		f.Intrinsic.Control.Case("Create")
			F.Intrinsic.Control.If(V.Global.iReworkLogID,<>,0)
				F.Intrinsic.UI.Msgbox("Are you sure you want to create a new Rework log? One already exists...","",4,V.Local.iRet)
				F.Intrinsic.Control.If(V.Local.iRet,<>,6)
					F.Intrinsic.Control.ExitSub
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			
			V.Local.sNotes.Set(V.Screen.FormRework!txtNote.Text)
			F.Intrinsic.String.RTrim(V.Local.sNotes,V.Local.sNotes)
			V.Local.sDateLogged.Set(V.Screen.FormRework!txtDateLogged.Text)
			F.Intrinsic.String.Format(V.Local.sDateLogged, "YYYY-MM-DD HH:NN:SS", V.Local.sDateLogged)
			v.Local.sDateClosed.Set(V.Screen.FormRework!txtDateClosed.Text)
			F.Intrinsic.String.Format(V.Local.sDateClosed, "YYYY-MM-DD HH:NN:SS", V.Local.sDateClosed)
			F.Intrinsic.Control.If(V.Screen.FormRework!ddlInspectedby.Text,=,"")
				V.Local.iInspectedby.Set(0)
			F.Intrinsic.Control.Else
				F.Data.Dictionary.ReturnKeyFromValue("dictEmployee",V.Screen.FormRework!ddlInspectedby.Text,V.Local.iInspectedby)
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.If(V.Screen.FormRework!ddlReworkType.Text,=,"")
				F.Intrinsic.UI.Msgbox("Please input a Rework Type from the drop down. Nothing was saved!")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.Else
				F.Data.Dictionary.ReturnKeyFromValue("dictReworkType",V.Screen.FormRework!ddlReworkType.Text,V.Local.iReworkTypeID)
			F.Intrinsic.Control.EndIf
			v.Local.sJobID.Set(V.Screen.FormRework!txtJobID.Text)
			v.Local.sWOID.Set(V.Screen.FormRework!txtWOID.Text)
			v.Local.sWOLine.Set(V.Screen.FormRework!txtWOLine.Text)
			v.Local.sWOLineOriginal.Set(V.Screen.FormRework!txtWOLineOrignial.Text)
			v.Local.sItemQty.Set(V.Screen.FormRework!txtItemQty.Text)
			v.Local.sUnitQty.Set(V.Screen.FormRework!txtUnitQty.Text)
			
			F.Intrinsic.String.Build("Insert into GAB_6559_Rework_Log (WorkOrderID,LineNumber,OrgLineNumber,JobID,EmployeeID,Note,SysUserLastAccess,SysUserLastAccessDateTime,DateLogged,DateClosed,ReworkTypeID) Values ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}');",V.Local.sWOID,V.Local.sWOLine,V.Local.sWOLineOriginal,V.Local.sJobID,V.Local.iInspectedby,V.Local.sNotes.PSQLFriendly,V.Caller.User,V.Local.sNow,V.Local.sDateLogged,V.Local.sDateClosed,V.Local.iReworkTypeID,V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
			
			'Get Info from original Line to insert into GAB_6559_Lines for the new rework Line
			F.Intrinsic.String.Build("Select RTRIM(Description) as Description, RTRIM(TagID) as TagID, RTRIM(YARD) as YARD, RTRIM(YARD2) as YARD2, RTRIM(UNIT) as UNIT From GAB_6559_Lines where ID = '{0}' and Line = '{1}'",V.Local.sWOID,V.Local.sWOLineOriginal,V.Local.sSQL)
			F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
				V.Local.sDescription.Set("")
				V.Local.sTagID.Set("")
				V.Local.sYard.Set("")
				V.Local.sYard2.Set("")
				V.Local.sUnit.Set("")
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)	
				V.Local.sDescription.Set(V.Local.sRet(0))
				V.Local.sTagID.Set(V.Local.sRet(1))
				V.Local.sYard.Set(V.Local.sRet(2))
				V.Local.sYard2.Set(V.Local.sRet(3))
				V.Local.sUnit.Set(V.Local.sRet(4))
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.String.Build("Insert into GAB_6559_Lines (ID, LINE, WOStatusID, SERVICEID, QUOTEID, UnitPrice, PriorityFlag, Description, TagID, YARD, NoQuenchFlag, ItemQty, SysUserLastAccess, ItmQtyBasedFlag, SysUserLastAccessDateTime, UNIT, UNITQTY, PRICEMINCHARGE, PricePriority, Final, Yard2) Values ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','{14}','{15}','{16}','{17}','{18}','0','{19}')",v.Local.sWOID,V.Local.sWOLine,"1","ZZZZZZZZZZ","","0.00","0",V.Local.sDescription.PSQLFriendly,v.Local.sTagID.PSQLFriendly,V.Local.sYard.PSQLFriendly,"0",v.Local.sItemQty,V.Caller.User,"0",V.Local.sNow,v.Local.sUnit.PSQLFriendly,v.Local.sUnitQty,"0.00","0",V.Local.sYard2.PSQLFriendly,V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
			
			'Get the new ReworkLogID that we just created and set it as the global varriable.
			F.Intrinsic.String.Build("select top 1 ReworkLogID from GAB_6559_Rework_Log where SysUserLastAccess = '{0}' order by SysUserLastAccessDateTime desc",V.Caller.User,V.Local.sSQL)
			F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
				'Something went wrong
				F.Intrinsic.Control.CallSub(FormRework_UnLoad)
			F.Intrinsic.Control.Else
				V.Global.iReworkLogID.Set(V.Local.sRet)
			f.Intrinsic.Control.EndIf
			
		f.Intrinsic.Control.Case("Delete")
			F.Intrinsic.UI.Msgbox("Are you sure you want to delete the Rework Log?","",4,V.Local.iRet)
			F.Intrinsic.Control.If(V.Local.iRet,<>,6)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.String.Build("Delete from GAB_6559_Rework_Log Where ReworkLogID = '{0}'",V.Global.iReworkLogID,V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.CallSub(FormRework_UnLoad)
	f.Intrinsic.Control.EndSelect
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.FormRework_UserButtonClicked.End

Program.Sub.cmdDateLoggedUpdate_Click.Start
F.Intrinsic.Control.Try
V.Local.dNow.Declare
V.Local.dNow.Set(V.Ambient.Now)
Gui.FormRework.txtDateLogged.Text(V.Local.dNow)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdDateLoggedUpdate_Click.End

Program.Sub.cmdDateLoggedClear_Click.Start
F.Intrinsic.Control.Try
V.Local.dNow.Declare
V.Local.dNow.Set("1/1/1900 00:00:00 AM")
Gui.FormRework.txtDateLogged.Text(V.Local.dNow)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdDateLoggedClear_Click.End

Program.Sub.cmdDateClosedUpdate_Click.Start
F.Intrinsic.Control.Try
V.Local.dNow.Declare
V.Local.dNow.Set(V.Ambient.Now)
Gui.FormRework.txtDateClosed.Text(V.Local.dNow)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdDateClosedUpdate_Click.End

Program.Sub.cmdDateClosedClear_Click.Start
F.Intrinsic.Control.Try
V.Local.dNow.Declare
V.Local.dNow.Set("1/1/1900 00:00:00 AM")
Gui.FormRework.txtDateClosed.Text(V.Local.dNow)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdDateClosedClear_Click.End

Program.Sub.txtUnitQty_Change.Start
V.Local.fItemQty.Declare
V.Local.fUnitQty.Declare
V.Local.fTotalWeight.Declare
F.Intrinsic.Control.Try
	V.Local.fItemQty.Set(V.Screen.FormRework!txtItemQty.Text)
	V.Local.fUnitQty.Set(V.Screen.FormRework!txtUnitQty.Text)
	F.Intrinsic.Math.Mult(V.Local.fItemQty,V.Local.fUnitQty,V.Local.fTotalWeight)
	gui.FormRework.txtTotalQty.Text(V.Local.fTotalWeight)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.txtUnitQty_Change.End

Program.Sub.txtItemQty_Change.Start
V.Local.fItemQty.Declare
V.Local.fUnitQty.Declare
V.Local.fTotalWeight.Declare
F.Intrinsic.Control.Try
	V.Local.fItemQty.Set(V.Screen.FormRework!txtItemQty.Text)
	V.Local.fUnitQty.Set(V.Screen.FormRework!txtUnitQty.Text)
	F.Intrinsic.Math.Mult(V.Local.fItemQty,V.Local.fUnitQty,V.Local.fTotalWeight)
	gui.FormRework.txtTotalQty.Text(V.Local.fTotalWeight)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.txtItemQty_Change.End

#End Region ' Rework Log Form

#Region "Rework Tab"

Program.Sub.GSGCReworktab_RowCellClick.Start
f.Intrinsic.Control.Try
	v.Local.iRowIndex.Declare
	V.Local.iWOID.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.Local.sJobID.Declare
	
	Gui.FormWorkOrderDetails.GSGCReworktab.GetCellValueByColumnName("gvReworktab","ReworkLogID",V.Args.RowIndex,V.Global.iReworkLogID)
	
	F.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
	F.Intrinsic.Control.Case("REWORKLOGID")
		'Load Rework form with global varriable
		F.Intrinsic.Control.CallSub(LoadReworkLog)
	
	F.Intrinsic.Control.EndSelect
	F.Intrinsic.Control.UnBlockEvents
		

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.GSGCReworktab_RowCellClick.End

#End Region ' Rework Tab

#Region "Invoicing and SO Creation"

Program.Sub.GSGCInvoicing_CellValueChanged.Start
Program.Sub.GSGCInvoicing_CellValueChanged.End

Program.Sub.GSGCInvoicing_RowCellClick.Start
f.Intrinsic.Control.Try
	'f.Intrinsic.Debug.ShowCallerInfo
	v.Local.iRowIndex.Declare
	V.Local.iWOID.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
'	v.Local.iRowIndex.set(v.Screen.Form!txtMainYLineLocation.Text)
'	gui.Form.txtMainYLineLocation.Text(v.Args.RowIndex)

	F.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.SelectCase(V.Args.Column)
	F.Intrinsic.Control.Case("WorkOrderID")
		Gui.Form.GSGCInvoicing.GetCellValueByColumnName("gvInvoicing","WorkOrderID",V.Args.RowIndex,V.Local.iWOID)
		'Check if the WOID is in use by checking the table (GAB_6559_TL)
		f.Intrinsic.String.Build("SELECT TOP 1 WOID FROM GAB_6559_TL WHERE WOID = '{0}'",V.Local.iWOID,v.Local.sSQL)
		f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
		F.Intrinsic.Control.If(v.Ambient.ExecuteAndReturnEOF)
		'If its not in use then open that WOID
			'insert WOID lock
			F.Intrinsic.Control.CallSub(InsertWOIDLock,"WOID",V.Local.iWOID)
			'Load WO header information
			F.Intrinsic.Control.CallSub(OpenExistingWorkOrder,"WOID",V.Local.iWOID)
			'Load WO Lines information
			F.Intrinsic.Control.CallSub(LoaddtOrderItemstab,"WOID",V.Local.iWOID)
			
			gui.FormWorkOrderDetails.tabWorkOrderDetails.SetTab(0)
			gui.FormWorkOrderDetails..Visible(True) ' Open new gui
			gui.FormWorkOrderDetails..WindowState(0)
			Gui.FormWorkOrderDetails..SetFocus
		
		F.Intrinsic.Control.Else	
			'Display message that the WOID is locked
			F.Intrinsic.UI.Msgbox("Work Order ID is currently locked")
		F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.EndSelect
	F.Intrinsic.Control.UnBlockEvents
		

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.GSGCInvoicing_RowCellClick.End


Program.Sub.Ac6_ElementClick.Start
f.Intrinsic.Control.Try
	v.Local.iRet.Declare
	V.Local.sSQL.Declare
	V.Local.sRet.Declare
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	
	'This will prevent from multi-clicking too fast the button
	f.Intrinsic.Control.If(v.Global.bLoading)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bLoading.Set(True)	
		
	
	f.Intrinsic.Control.SelectCase(v.Args.ElementID.UCase)
		f.Intrinsic.Control.Case("SERVICEWEB")
			F.Intrinsic.Task.ShellExec(0,"Open","https://www.gss-service.com/","","",0)	

		
		f.Intrinsic.Control.Case("CREATESO")
			'F.Intrinsic.UI.Msgbox("I have not made this yet")
			
			F.Intrinsic.Control.CallSub(CreateSO)
			F.Intrinsic.Control.CallSub(LoaddtInvoiced)	
			
	f.Intrinsic.Control.EndSelect
	
	v.Global.bLoading.Set(False)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.Ac6_ElementClick.End

Program.Sub.CreateSO.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare
	V.Local.iCnt.Declare
	v.Local.fMyNewPrice.Declare
	v.Local.sMyNwQty.Declare
	v.Local.sSql.Declare
	v.Local.sPL.Declare
	v.Local.sPart.Declare
	v.Local.fFreight.Declare
	v.Local.sLine.Declare
	V.Local.sMyNewPrice.Declare
	v.Local.sTaxFreight.Declare
	v.Local.sCustShipTo.Declare
	v.Local.sMyDueDate.Declare
	v.Local.sret.Declare
	v.Local.sWO.Declare
	v.Local.dMyDueDue.Declare
	V.Local.sWhereFilter.Declare
	V.Local.fQty.Declare
	V.Local.iQty.Declare
	V.Local.fMyNwWeight.Declare
	V.Local.sMyNwWeight.Declare
	V.Local.bFreight.Declare
	V.Local.sUM.Declare
	V.Local.bQA.Declare
	V.Local.sDesc.Declare
	V.Local.sServDesc.Declare
	V.Local.sFile.Declare
	V.Local.sString.Declare
	V.Local.bSomethingWentWrong.Declare
	V.Local.sMSG.Declare
	V.Local.sFreightFilter.Declare
	V.Local.fFreight1.Declare
	V.Local.fFreight2.Declare
	V.Local.sFreightLine.Declare
	V.Local.sFreightHeader.Declare
	v.Local.sLocation.Declare
	V.Local.iRet.Declare
	V.Local.sWOID.Declare
	V.Local.fWOMinChargeRemainder.Declare
	V.Local.sQuote.Declare
	V.Local.sOrderMinChargeText.Declare
	V.Local.sWOMinCharge.Declare
	V.Local.sOrderNo.Declare
	V.Local.sRecordNo.Declare
	V.Local.bSkipLine.Declare
	V.Local.bRework.Declare
	V.Local.bSkipLine.Set(False)
	V.Local.sMyTotalWeight.Declare
	V.Local.sMyUnitPriceWithPrio.Declare
	V.Local.sLineMinCharge.Declare
	V.Local.sItemQty.Declare
	V.Local.sTagID.Declare
	V.Local.sErrorMessage.Declare
	V.Local.bZeroWeight.Declare
	V.Local.bZeroWeight.Set(False)
	
	V.Local.sNow.Declare
	F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
	V.Local.dNow.Declare
	F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD", V.Local.dNow)
	
	F.Data.DataView.Create("dtInvoicing","dvInvoicing",22,"Select = True","WorkOrderID ASC")
	F.Data.DataView.ToDataTable("dtInvoicing","dvInvoicing","dtSOHeader",True)
	F.Data.DataView.Close("dtInvoicing","dvInvoicing")
	
	F.Intrinsic.Control.If(V.DataTable.dtSOHeader.RowCount,=,0)
		F.Intrinsic.UI.Msgbox("Please select a row(s) to create a GSS SalesOrder for.")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtSOHeader.RowCount--,1)
		F.Intrinsic.Control.If(V.Local.iCnt,=,0)
			F.Intrinsic.String.Build("'{0}'",V.DataTable.dtSOHeader(V.Local.iCnt).WorkOrderID!FieldVal,V.Local.sWhereFilter)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0},'{1}'",V.Local.sWhereFilter,V.DataTable.dtSOHeader(V.Local.iCnt).WorkOrderID!FieldVal,V.Local.sWhereFilter)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	
	F.Intrinsic.String.Build("Select LID, Cast(ID as INTEGER) as WorkOrderID, Line, WOStatusID, '' as Status, RTRIM(ServiceID) as ServiceID, '' as ServiceDesc, RTRIM(QuoteID) as QuoteID, PriceMinCharge, UnitPrice, PricePriority, PriorityFlag, UnitQty, RTRIM(Unit) as Unit, ItemQty, RTRIM(Description) as DESCRIPTION, RTRIM(TagID) as TagID, RTRIM(Yard) as Yard, ItmQtyBasedFlag from GAB_6559_LINES where ID in ({0}) Order by WorkOrderID ASC, Line ASC",V.Local.sWhereFilter, V.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("dtLinesTemp","con",V.Local.sSQL,TRUE)
	
	'Dictionary for FreightFlag, QAFlag, ServiceDesc, Status
	F.Data.DataTable.AddColumn("dtLinesTemp","FreightFlag","Boolean",False)
	F.Data.DataTable.AddColumn("dtLinesTemp","QAFlag","Boolean",False)
	F.Data.Dictionary.CreateFromSQL("dictFreightFlag","con","Select RTRIM(ServiceID), Freight From GAB_6559_Service")
	F.Data.Dictionary.CreateFromSQL("dictQAFlag","con","Select RTRIM(ServiceID), QA From GAB_6559_Service")
	F.Data.DataTable.FillFromDictionary("dtLinesTemp","dictFreightFlag","ServiceID","FreightFlag")
	F.Data.DataTable.FillFromDictionary("dtLinesTemp","dictQAFlag","ServiceID","QAFlag")
	F.Data.DataTable.FillFromDictionary("dtLinesTemp","dictServiceDesc","ServiceID","ServiceDesc")
	F.Data.DataTable.FillFromDictionary("dtLinesTemp","dictStatus","WOStatusID","Status")
	F.Data.Dictionary.Close("dictFreightFlag")
	F.Data.Dictionary.Close("dictQAFlag")
	
	'Left Join  dtLinesTemp A dtSOHeader B into dtAPTempLines
	F.Data.Linq.Join(V.Enum.LinqJoinType!LeftJoin,V.Enum.LinqSourceType!DataTable,"dtLinesTemp*!*A",V.Enum.LinqSourceType!DataTable,"dtSOHeader*!*B","A.WorkOrderID = B.WorkOrderID","*","","","","dtSOLines",True)
	F.Data.DataTable.Close("dtLinesTemp")
	F.Data.DataTable.Close("dtSOHeader")
	
	'Set SO and SO line number
	F.Data.DataTable.AddExpressionColumn("dtSOLines","ORDER_NO_LONG","Long","[WorkOrderID] + 3000000")
	F.Data.DataTable.AddExpressionColumn("dtSOLines","ORDER_NO","String","[ORDER_NO_LONG]")
	
	'Calc total weight
	F.Data.DataTable.AddExpressionColumn("dtSOLines","TotalWeight","Float","[UnitQty] * [ItemQty]")
	
	
	'Calculate pricing, factoring in Priority pricing, and WO line min charge, and if the line is unit (kg) or item qty based.
	F.Data.Datatable.AddExpressionColumn("dtSOLines","UnitPrice_WithPrio","Float","IIF([PriorityFlag] = True, [UnitPrice] + [PricePriority], [UnitPrice])")
	F.Data.DataTable.AddExpressionColumn("dtSOLines","Extension_ItemQty","Float","[UnitPrice_WithPrio] * [ItemQty]")
	F.Data.DataTable.AddExpressionColumn("dtSOLines","Extension_UnitQty","Float","[UnitPrice_WithPrio] * [UnitQty] * [ItemQty]")
	F.Data.Datatable.AddExpressionColumn("dtSOLines","TotalPrice_ItemQty","Float","IIF([Extension_ItemQty] < [PriceMinCharge], [PriceMinCharge], [Extension_ItemQty])")
	F.Data.Datatable.AddExpressionColumn("dtSOLines","TotalPrice_UnitQty","Float","IIF([Extension_UnitQty] < [PriceMinCharge], [PriceMinCharge], [Extension_UnitQty])")
	
	'F.Data.Datatable.AddExpressionColumn("dtSOLines","TotalPrice_UnitQty","Float","IIF([Extension_UnitQty] < [PriceMinCharge], [PriceMinCharge], [Extension_UnitQty])")
	
	'Part will be static as 'Galvanizing'
	v.Local.sPart.set("Galvanizing")
	v.Local.sLocation.set("TV")
	
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtSOLines.RowCount--,1)
	
		'Check for DEFLT SHIP SEQ. Every customer has a ship sequence set up as 009999 so that the callwrapper can calculate the tax correctly... We needed to pass a ship sequence for this to happen.
		F.Intrinsic.Control.If(v.DataTable.dtSOLines(v.Local.i).SHIP_SEQ!FIELDVALTRIM,=,"DEFLT")
			V.Local.sCustShipTo.Set("009999")
		f.Intrinsic.Control.Else
			V.Local.sCustShipTo.Set(v.DataTable.dtSOLines(v.Local.i).SHIP_SEQ!FIELDVALTRIM)
		F.Intrinsic.Control.EndIf
		
		'Create SO header if we are on a new SO 
		f.Intrinsic.Control.If(v.Local.sOrderNo,<>,v.DataTable.dtSOLines(v.Local.i).ORDER_NO!FIELDVALTRIM)
			V.Local.sOrderNo.Set(V.DataTable.dtSOLines(v.Local.i).ORDER_NO!FIELDVALTRIM)
			
			'Get freight and put into V.Local.sFreightHeader as the summof all freight lines for the SO.
			v.Local.sTaxFreight.Set("Y")
			F.Intrinsic.String.Build("FreightFlag = True and ORDER_NO = {0}",V.Local.sOrderNo,V.Local.sFreightFilter)
			F.Data.DataView.Create("dtSOLines","dvFreight",22,V.Local.sFreightFilter,"")
			F.Data.DataView.ToDataTable("dtSOLines","dvFreight","dtFreight",True)
			F.Data.DataTable.Compute("dtFreight","SUM(TotalPrice_ItemQty)","ItmQtyBasedFlag = True",V.Local.fFreight1)
			F.Data.DataTable.Compute("dtFreight","SUM(TotalPrice_UnitQty)","ItmQtyBasedFlag = False",V.Local.fFreight2)
			F.Intrinsic.Math.Add(V.Local.fFreight1,V.Local.fFreight2,V.Local.fFreight)
			F.Intrinsic.Math.Round(V.Local.fFreight,3,V.Local.fFreight)
			F.Intrinsic.String.Format(V.local.fFreight,"00000000.00",V.Local.sFreightHeader)
			F.Intrinsic.String.Replace(V.Local.sFreightHeader,".","",V.Local.sFreightHeader)
			F.Intrinsic.String.Replace(V.Local.sFreightHeader,"-","",V.Local.sFreightHeader)
			F.Data.DataTable.Close("dtFreight")
			F.Data.DataView.Close("dtSOLines","dvFreight")
			
			f.Data.DataTable.AddRow("6004Header","Type","O","OrderType","X","CustNum",V.DataTable.dtSOLines(v.Local.i).Customer!FIELDVALTRIM,"PO",V.DataTable.dtSOLines(v.Local.i).CUSTOMER_REFERENCE!FIELDVALTRIM,"ShipToID",v.Local.sCustShipTo, "OrderNum",V.Local.sOrderNo,"OverrideAutoNum","1","TaxFreightFlag",v.Local.sTaxFreight,"Freight",v.Local.sFreightHeader,"FromLocation","TV","User1",V.DataTable.dtSOLines(v.Local.i).CUSTOMER_REFERENCE!FIELDVALTRIM)
			
			'Here we are adding in a SO line for the difference between the WOMinCharge and the WO value (not including tax). This was calculated as WOMinChargeRemainder in the dtInvoicing and accounts for WOMinChargeExempt.
			V.Local.fWOMinChargeRemainder.Set(V.DataTable.dtSOLines(v.Local.i).WOMinChargeRemainder!FIELDVAL)
			F.Intrinsic.Control.If(V.Local.fWOMinChargeRemainder,>=,0)
				F.Intrinsic.String.Format(V.local.fWOMinChargeRemainder,"0000000000.000000",V.Local.sMyNewPrice)
				f.Intrinsic.String.Replace(v.Local.sMyNewPrice,".","",v.Local.sMyNewPrice)
				V.Local.sWOID.Set(V.DataTable.dtSOLines(v.Local.i).WorkOrderID!FIELDVAL)
				F.Intrinsic.String.Build("select MAX(Line) + 1 from GAB_6559_Lines where ID = '{0}'",V.Local.sWOID,V.Local.sSQL)
				F.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSql,V.Local.iRet)
				F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.not)
					V.Local.sLine.Set(V.Local.iRet)
				F.Intrinsic.Control.Else
					V.Local.sLine.Set("100")
				F.Intrinsic.Control.EndIf
				'WorkOrderMinCharge
				F.Intrinsic.Control.If(V.DataTable.dtSOLines(v.Local.i).MinChargeExempt!FIELDVAL)
					V.Local.sWOMinCharge.Set("0.00")
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Format(V.DataTable.dtSOLines(v.Local.i).WorkOrderMinCharge!FIELDVALFLOAT,"#######0.00##",V.Local.sWOMinCharge)
				F.Intrinsic.Control.EndIf
				
				F.Intrinsic.String.Build("ORDER MIN CHARGE: ${0}",V.Local.sWOMinCharge,V.Local.sOrderMinChargeText)
				f.Data.DataTable.AddRow("6004Lines","OrderNum",V.Local.sOrderNo,"UM","EA","Part",V.Local.sPart,"Location",V.Local.sLocation,"PL","ZG","QuotedPrice",v.Local.sMyNewPrice,"QtyOrdered","0000000010000","Weight","0000000000","LineNumber",v.Local.sLine,"PartDescription",V.Local.sOrderMinChargeText,"Text1","","Text2","")
			F.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
		
		
		'See if we need to skip the line... We are skipping Rework lines and Freight lines. (freight lines are summed and added as one on the SO header)
		F.Intrinsic.Control.If(v.DataTable.dtSOLines(v.Local.i).ServiceID!FIELDVAL,=,"ZZZZZZZZZZ")
			V.Local.bRework.Set(True)
		F.Intrinsic.Control.Else
			V.Local.bRework.Set(False)
		F.Intrinsic.Control.EndIf
		V.Local.bFreight.Set(v.DataTable.dtSOLines(v.Local.i).FreightFlag!FIELDVAL)
		F.Intrinsic.Control.If(V.Local.bFreight)
			V.Local.bSkipLine.Set(True)
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.If(V.Local.bRework)
				V.Local.bSkipLine.Set(True)
			F.Intrinsic.Control.Else
				V.Local.bSkipLine.Set(False)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		
		'Mark the QA Flag if it is a QA line.
		V.Local.bQA.Set(v.DataTable.dtSOLines(v.Local.i).QAFlag!FIELDVAL)
		
		F.Intrinsic.Control.If(V.Local.bSkipLine.Not)
			v.Local.sLine.Set(v.DataTable.dtSOLines(v.Local.i).Line!FIELDVALTRIM)
			F.Intrinsic.Math.Round(v.DataTable.dtSOLines(v.Local.i).UnitQty!FIELDVALFLOAT,3,V.Local.fMyNwWeight)
			
			
			
			F.Intrinsic.Control.If(v.DataTable.dtSOLines(v.Local.i).ItmQtyBasedFlag!FIELDVAL,=,"True","or",V.Local.bQA,=,"True")
				'calc the quoted price, its just the UnitPrice since it is ItemQtyBased and should already be ($/part)
				V.Local.fQty.Set(v.DataTable.dtSOLines(v.Local.i).ItemQty!FIELDVALFLOAT)
				F.Intrinsic.Control.If(V.Local.fQty,=,0)
					V.Local.fMyNewPrice.Set(0)
				F.Intrinsic.Control.Else
					F.Intrinsic.Math.Div(V.DataTable.dtSOLines(v.Local.i).TotalPrice_ItemQty!FIELDVALFLOAT,V.Local.fQty,V.Local.fMyNewPrice)
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Math.Round(V.Local.fMyNewPrice,3,V.Local.fMyNewPrice)
				
				F.Intrinsic.Control.If(v.DataTable.dtSOLines(v.Local.i).Extension_ItemQty!FIELDVALFLOAT,<,v.DataTable.dtSOLines(v.Local.i).PriceMinCharge!FIELDVALFLOAT)
					F.Intrinsic.String.Format(v.DataTable.dtSOLines(v.Local.i).PriceMinCharge!FIELDVAL,"###,###,##0.00",V.Local.sLineMinCharge)
					F.Intrinsic.String.Build("Line Min Charge: ${0}",V.Local.sLineMinCharge,V.Local.sLineMinCharge)
				F.Intrinsic.Control.Else
					V.Local.sLineMinCharge.Set("")
				F.Intrinsic.Control.EndIf
				
			F.Intrinsic.Control.Else
				'calc the quoted price from weight(kg/part) * price ($/kg) = ($/part)
				V.Local.fQty.Set(v.DataTable.dtSOLines(v.Local.i).UnitQty!FIELDVALFLOAT)
				F.Intrinsic.Control.If(V.Local.fQty,=,0)
					V.Local.fMyNewPrice.Set(0)
				F.Intrinsic.Control.Else
					F.Intrinsic.Math.Div(v.DataTable.dtSOLines(v.Local.i).TotalPrice_UnitQty!FIELDVALFLOAT,V.Local.fQty,V.Local.fMyNewPrice)
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Math.Round(V.Local.fMyNewPrice,3,V.Local.fMyNewPrice)
				
				F.Intrinsic.Control.If(v.DataTable.dtSOLines(v.Local.i).Extension_UnitQty!FIELDVALFLOAT,<,v.DataTable.dtSOLines(v.Local.i).PriceMinCharge!FIELDVALFLOAT)
					F.Intrinsic.String.Format(v.DataTable.dtSOLines(v.Local.i).PriceMinCharge!FIELDVAL,"###,###,##0.00",V.Local.sLineMinCharge)
					F.Intrinsic.String.Build("Line Min Charge: ${0}",V.Local.sLineMinCharge,V.Local.sLineMinCharge)
				F.Intrinsic.Control.Else
					V.Local.sLineMinCharge.Set("")
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.If(V.Local.fMyNwWeight,=,0)
					V.Local.bZeroWeight.Set(true)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.String.UCase(V.Local.sLineMinCharge,V.Local.sLineMinCharge)
			
			V.Local.sUM.Set(V.DataTable.dtSOLines(V.Local.i).Unit!FIELDVALTRIM)
			
			'quantity Get WO line Qty from either Galv WO line weight*ItemQty or ItemQTY if flag ItemQuantitybased is true
			F.Intrinsic.String.Format(V.Local.fQty,"000000000.0000",V.Local.sMyNwQty)
			F.Intrinsic.String.Replace(V.Local.sMyNwQty,".","",V.Local.sMyNwQty)
			F.Intrinsic.String.Replace(V.Local.sMyNwQty,"-","",V.Local.sMyNwQty)
			
			'Weight
			F.Intrinsic.String.Format(V.Local.fMyNwWeight,"0000000.000",V.Local.sMyNwWeight)
			F.Intrinsic.String.Replace(V.Local.sMyNwWeight,".","",V.Local.sMyNwWeight)
			F.Intrinsic.String.Replace(V.Local.sMyNwWeight,"-","",V.Local.sMyNwWeight)
			
			'Total Weight
			F.Intrinsic.String.Format(v.DataTable.dtSOLines(v.Local.i).TotalWeight!FIELDVAL,"###,###,##0.00",V.Local.sMyTotalWeight)
			
			'Unit Price w/Prio
			F.Intrinsic.String.Format(v.DataTable.dtSOLines(v.Local.i).UnitPrice_WithPrio!FIELDVAL,"###,###,##0.00",V.Local.sMyUnitPriceWithPrio)
			
			'ItemQty
			F.Intrinsic.String.Format(v.DataTable.dtSOLines(v.Local.i).ItemQty!FIELDVALFLOAT,"###,###,##0",V.Local.sItemQty)
			
			
			'price Get from WO line Price per part
			F.Intrinsic.String.Format(V.local.fMyNewPrice,"0000000000.000000",V.Local.sMyNewPrice)
			f.Intrinsic.String.Replace(v.Local.sMyNewPrice,".","",v.Local.sMyNewPrice)
			
			'Get due date from Deliverydate on Galv WO header
			f.Intrinsic.String.Format(v.DataTable.dtSOLines(v.Local.i).DELIVERY_DATE!FIELDVAL,"YYYYMMDD",v.Local.sMyDueDate)
			
			'Get Part desc, Service desc, and quote
			F.Intrinsic.String.Left(v.DataTable.dtSOLines(v.Local.i).DESCRIPTION!FIELDVAL,30,V.Local.sDesc)
			F.Intrinsic.String.Left(v.DataTable.dtSOLines(v.Local.i).ServiceDesc!FIELDVAL,30,V.Local.sServDesc)
			F.Intrinsic.String.Left(v.DataTable.dtSOLines(v.Local.i).QuoteID!FIELDVAL,30,V.Local.sQuote)
			F.Intrinsic.Control.If(V.Local.sQuote,<>,"")
				F.Intrinsic.String.Build("QUOTE: {0}",V.Local.sQuote,V.Local.sQuote)
			F.Intrinsic.Control.EndIf
			
			'Tag ID
			F.Intrinsic.String.Left(v.DataTable.dtSOLines(v.Local.i).TagID!FIELDVAL,30,V.Local.sTagID)
			F.Intrinsic.Control.If(V.Local.sTagID,<>,"")
				F.Intrinsic.String.Build("TagID: {0}",V.Local.sTagID,V.Local.sTagID)
			F.Intrinsic.Control.EndIf
			
			'Make everything uppercase
			F.Intrinsic.String.UCase(V.Local.sDesc,V.Local.sDesc)
			F.Intrinsic.String.UCase(V.Local.sServDesc,V.Local.sServDesc)
			F.Intrinsic.Control.If(V.Local.sDesc,=,V.Local.sServDesc)
				'Part Desc = Service Description.... Lets not have duplicate data on the invoice. 
				V.Local.sDesc.Set("")
			F.Intrinsic.Control.EndIf
			
			'PriorityFlag
			'add 6004Lines row for SO line
			f.Data.DataTable.AddRow("6004Lines","OrderNum",V.Local.sOrderNo,"UM",V.Local.sUM.UCase,"Part",V.Local.sPart,"Location",V.Local.sLocation,"PL","ZG","QuotedPrice",v.Local.sMyNewPrice,"QtyOrdered",v.Local.sMyNwQty,"Weight",V.Local.sMyNwWeight,"LineNumber",v.Local.sLine,"PromiseDate",v.Local.sMyDueDate,"PartDescription",V.Local.sServDesc.RTrim,"Text1",V.Local.sDesc.RTrim,"Text2",V.Local.sQuote.RTrim,"Text3",V.Local.sLineMinCharge,"Text4",V.Local.sTagID.RTrim,"User1",V.Local.sMyTotalWeight,"User2",V.Local.sMyUnitPriceWithPrio,"User3",v.DataTable.dtSOLines(v.Local.i).ItmQtyBasedFlag!FIELDVALSTRING,"User4",v.DataTable.dtSOLines(v.Local.i).PriorityFlag!FIELDVALSTRING,"User5",V.Local.sItemQty)
		F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	
	f.Intrinsic.Control.CallSub(6004Sync)
	
	'Check for if the callwrapper was succesful with a return?
	'Maybe Check for what SO-Lines were created?
	
	F.Data.Dictionary.CreateFromSQL("dictSOCreated","con","select RTRIM(ORDER_NO) as ORDER_NO, cast(1 as bit) as True from V_ORDER_HEADER")
	F.Data.Dictionary.SetDefaultReturn("dictSOCreated",False)
	F.Data.DataTable.AddColumn("dtSOLines","Success","Boolean",False)
	F.Data.DataTable.FillFromDictionary("dtSOLines","dictSOCreated","ORDER_NO","Success")
	F.Data.Dictionary.Close("dictSOCreated")
	V.Local.sOrderNo.Set("")
	F.Intrinsic.Control.For(V.Local.i,0,V.DataTable.dtSOLines.RowCount--,1)
		'Pull SO and Line from either the dt or somewhere else like the return or somthing
		F.Intrinsic.Control.If(V.DataTable.dtSOLines(V.Local.i).Success!Fieldval)
			F.Intrinsic.Control.If(v.DataTable.dtSOLines(v.Local.i).ORDER_NO!FIELDVALTRIM,<>,V.Local.sOrderNo)
				'update header table GAB_6559_Galvaware setting DATE_INVOICED to the current date and the STATUS to CLOSED
				F.Intrinsic.String.Build("Update GAB_6559_Galvaware set DATE_INVOICED = '{0}', STATUS = 'CLOSED' where ID = '{1}'",V.Local.dNow.PervasiveDate,v.DataTable.dtSOLines(v.Local.i).WorkOrderID!FIELDVAL,V.Local.sSql)
				f.ODBC.Connection!con.execute(v.Local.sSql)
				'update Lines table GAB_6559_Lines setting WOStatus to CLOSED
				F.Intrinsic.String.Build("Update GAB_6559_Lines Set WOStatusID = '15' Where ID = '{0}'",v.DataTable.dtSOLines(v.Local.i).WorkOrderID!FIELDVAL,V.Local.sSql)
				f.ODBC.Connection!con.execute(v.Local.sSql)
			F.Intrinsic.Control.EndIf
			'Successfull
			V.Local.sOrderNo.Set(v.DataTable.dtSOLines(v.Local.i).ORDER_NO!FIELDVALTRIM)
			V.Local.sRecordNo.Set(v.DataTable.dtSOLines(v.Local.i).Line!FIELDVALTRIM)
			F.Intrinsic.String.Build("Insert Into GAB_6559_WOSO_Xref (WorkOrderID,LID,ORDER_NO,RECORD_NO,InvoicedQty,InvoicedDate) Values ('{0}','{1}','{2}','{3}','{4}','{5}')",V.DataTable.dtSOLines(V.Local.i).WorkOrderID!FieldVal,V.DataTable.dtSOLines(V.Local.i).LID!FieldVal,V.Local.sOrderNo,V.Local.sRecordNo,V.DataTable.dtSOLines(V.Local.i).ItemQty!FieldVal,V.Local.sNow,V.Local.sSql)
			f.ODBC.Connection!con.execute(v.Local.sSql)
			
			
		F.Intrinsic.Control.Else
			'Not successfull
			V.Local.bSomethingWentWrong.Set(True)
			'F.Intrinsic.String.Build(V.Local.sMSG)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.i)
	
	F.Intrinsic.Control.If(V.Local.bSomethingWentWrong)
		F.Intrinsic.UI.Msgbox("One or more Sales Order were not created.")
		F.Intrinsic.Control.If(V.Local.bZeroWeight)
			F.Intrinsic.UI.Msgbox("One or more Order Lines has a zero weight!")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox("SO/Invoice Upload Completed!")
	F.Intrinsic.Control.EndIf
	
	F.Data.Datatable.Close("dtSOLines")

'Leaving these incase we ever want to view the flat file.
'	v.Local.bExist.Declare
'	F.Intrinsic.String.Build("{0}\Files\ORDQTE.TXT",V.Caller.GlobalDir,V.Global.sFile)
'	f.Intrinsic.File.Exists(V.Local.sFile,v.Local.bExist)
'	f.Intrinsic.Control.If(v.Local.bExist.Not)
'		F.Intrinsic.UI.Msgbox("")
'	F.Intrinsic.Control.EndIf
'	F.Intrinsic.File.File2String(V.Local.sFile,V.Local.sString)


f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.CreateSO.End

#End Region ' Invoicing and SO Creation

#Region "AccordionControl"


Program.Sub.SetAccordionControl.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	V.Local.iElementID.Declare
	V.Local.iElementID.Set(0)
	V.Local.sKeys.Declare
	V.Local.iCnt.Declare
	V.Local.sViewIDName.Declare
	V.Local.sSerialize.Declare
	V.Local.sForm.Declare(String,"Form")
	v.Local.sGridView.Declare(String,"GVMAINGALVAWARE")
	V.Local.sREGID.Declare(String,"6559")
	
	'Create dtViewModes Datatable to store the IDName, Caption, and XML strings for later use
	F.Data.Datatable.Create("dtViewModes",True)
	F.Data.Datatable.AddColumn("dtViewModes","IDName","Long")
	F.Data.Datatable.AddColumn("dtViewModes","Caption","string")
	F.Data.Datatable.AddColumn("dtViewModes","XML","string")
	F.Data.Datatable.AddExpressionColumn("dtViewModes","Key","string","[IDName] + ':' + [Caption]")
	
	F.Data.Datatable.Create("dtStandardViewModes",True)
	F.Data.Datatable.AddColumn("dtStandardViewModes","IDName","Long")
	F.Data.Datatable.AddColumn("dtStandardViewModes","Caption","string")
	F.Data.Datatable.AddColumn("dtStandardViewModes","XML","string")
	F.Data.Datatable.AddExpressionColumn("dtStandardViewModes","Key","string","[IDName] + ':' + [Caption]")
	
	'Create Accordion control base elements
	Gui.[V.Local.sForm].AccordionControl1.AddElement(customViews,"View Modes","icon_view_banded_color",16,16,,-1,0,"",True,True,True,0)
	gui.[V.Local.sForm].AccordionControl1.AddElement(Save,"Save","icon_save_color",16,16,,-1,0,"customViews",False,True,False,1)
	gui.[V.Local.sForm].AccordionControl1.AddElement(StandardViewMode,"Standard Views","icon_show_color",16,16,,-1,0,"customViews",True,True,False,0)
	gui.[V.Local.sForm].AccordionControl1.AddElement(AccElemViewMode,"Custom Views","icon_show_color",16,16,,-1,0,"customViews",True,True,False,0)
	gui.[V.Local.sForm].AccordionControl1.AddElement("MainView","Main View (Reset Columns)","",16,16,,-1,0,"AccElemViewMode",False,True,False,1)
	'gui.Form.AccordionControl1.AddElement(V.Local.iElementID.++,"Main View","",16,16,,-1,0,"",False,True,1)
	
	'Load Custom view modes from GS registry and save them to the dtViewModes with their XML strings.
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,v.Local.sGridView,V.Local.sREGID,5000,5,"",V.Local.sKeys)
	F.Intrinsic.Control.If(V.Local.sKeys.Trim,<>,"")
		F.Intrinsic.String.Split(V.Local.sKeys,"!*!",V.Local.sKeys)
		F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sKeys.UBound,1)
			F.Intrinsic.String.Split(V.Local.sKeys(V.Local.iCnt),":",V.Local.sViewIDName)
			gui.[V.Local.sForm].AccordionControl1.AddElement(V.Local.sViewIDName(0),v.Local.sViewIDName(1),"",16,16,,-1,0,"AccElemViewMode",False,True,False,1)
			F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,v.Local.sGridView,V.Local.sREGID,V.Local.sViewIDName(0),6,"",V.Local.sSerialize)
			f.Data.Datatable.AddRow("dtViewModes","IDName",V.Local.sViewIDName(0),"Caption",V.Local.sViewIDName(1),"XML",V.Local.sSerialize)
		F.Intrinsic.Control.Next(v.Local.iCnt)
	F.Intrinsic.Control.EndIf
	
	'load Standard view modes
	F.Global.Registry.ReadValue(-1,V.Caller.CompanyCode,v.Local.sGridView,V.Local.sREGID,5000,5,"",V.Local.sKeys)
	F.Intrinsic.Control.If(V.Local.sKeys.Trim,<>,"")
		F.Intrinsic.String.Split(V.Local.sKeys,"!*!",V.Local.sKeys)
		F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sKeys.UBound,1)
			F.Intrinsic.String.Split(V.Local.sKeys(V.Local.iCnt),":",V.Local.sViewIDName)
			gui.[V.Local.sForm].AccordionControl1.AddElement(V.Local.sViewIDName(0),v.Local.sViewIDName(1),"",16,16,,-1,0,"StandardViewMode",False,True,False,1)
			F.Global.Registry.ReadValue(-1,V.Caller.CompanyCode,v.Local.sGridView,V.Local.sREGID,V.Local.sViewIDName(0),6,"",V.Local.sSerialize)
			f.Data.Datatable.AddRow("dtStandardViewModes","IDName",V.Local.sViewIDName(0),"Caption",V.Local.sViewIDName(1),"XML",V.Local.sSerialize)
		F.Intrinsic.Control.Next(v.Local.iCnt)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.SetAccordionControl.End

Program.Sub.SetViewModeContextMenu.Start
V.Local.sForm.Declare(String,"Form")

'Set up the Delete context menu for the custom view modes
gui.[V.Local.sForm]..ContextMenuCreate("ctxViewMode")
gui.[V.Local.sForm]..ContextMenuAddItem("ctxViewMode","DeleteViewMode",0,"Delete View Mode")
Gui.[V.Local.sForm]..ContextMenuSetItemEventHandler("ctxViewMode","DeleteViewMode","DeleteViewModeClick")
   
Program.Sub.SetViewModeContextMenu.End

Program.Sub.DeleteViewModeClick.Start
F.Intrinsic.Control.Try
 V.Local.sError.Declare
 v.Local.sQuery.Declare
 v.Local.iRowIndex.Declare
 v.Local.iUserID.Declare
 V.Local.icnt.Declare
 V.Local.sVAL.Declare
 V.Local.sDT.Declare
 V.Local.sForm.Declare(String,"Form")
 V.Local.sGsgc.Declare(String,"GSGCMainGalvaware")
 v.Local.sGridView.Declare(String,"GVMAINGALVAWARE")
 V.Local.sREGID.Declare(String,"6559")
	
 	F.Intrinsic.Control.If(V.Global.iViewModeIdDelete,>=,100)
 		'Standard View mode
 		V.Local.iUserID.Set(-1)
 		V.Local.sDT.Set("dtStandardViewModes")
 	F.Intrinsic.Control.Else
 		'User specific custom view mode
		Function.Global.Security.GetUserID(v.Caller.User, v.Caller.CompanyCode, v.Local.iUserID)
 		V.Local.sDT.Set("dtViewModes")
 	F.Intrinsic.Control.EndIf
 	
	'remove the view mode from the gs registry, dtViewModes, and the accordion control 
	f.Intrinsic.String.Build("IDName = {0}", v.Global.iViewModeIdDelete, v.Local.sQuery)
	f.Data.DataTable.Select(V.Local.sDT,v.Local.sQuery,v.Local.iRowIndex)
	
	F.Intrinsic.String.Build("DELETE FROM GS_REGISTRY where USER_ID = '{0}' and COMPANY = '{1}' and PROGRAM = '{3}' and REG_ID = '{4}' and SEQ = '{2}'",V.Local.iUserID,V.Caller.CompanyCode,v.Global.iViewModeIdDelete,v.Local.sGridView,V.Local.sREGID,v.Local.sQuery)
	Function.ODBC.Connection!conc.OpenCommonConnection
	f.ODBC.Connection!conc.Execute(v.local.sQuery)	
	f.ODBC.Connection!conc.Close
	
	F.Data.Datatable.DeleteRow(V.Local.sDT,V.Local.iRowIndex)
	gui.[V.Local.sForm].AccordionControl1.RemoveElement(v.Global.iViewModeIdDelete)
	
	'Adding IDs and captions as the key to the user specific gs_registry string value record
	F.Intrinsic.Control.For(V.Local.icnt,0,V.DataTable.[V.Local.sDT].RowCount--,1)
		F.Intrinsic.Control.If(V.Local.icnt,=,0)
			V.Local.sVAL.Set(V.DataTable.[V.Local.sDT](v.Local.icnt).Key!Fieldvaltrim)
		F.Intrinsic.Control.Else	
			F.Intrinsic.String.Build("{0}!*!{1}",V.Local.sVAL,V.DataTable.[V.Local.sDT](v.Local.icnt).Key!Fieldvaltrim,V.Local.sVAL)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.icnt)
	
	' .PsqlFriendly does not seem to work on null values.....
	F.Intrinsic.Control.If(V.Local.sVAL,<>,"")
		F.Global.Registry.AddValue(V.Local.iUserID,V.Caller.CompanyCode,v.Local.sGridView,V.Local.sREGID,5000,False,V.local.sVAL.PSQLFriendly,False,0,-999.0,1/1/1980,12:00:00 AM,"")
	F.Intrinsic.Control.Else
		F.Global.Registry.AddValue(V.Local.iUserID,V.Caller.CompanyCode,v.Local.sGridView,V.Local.sREGID,5000,False,V.local.sVAL,False,0,-999.0,1/1/1980,12:00:00 AM,"")
	F.Intrinsic.Control.EndIf
	
	
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.DeleteViewModeClick.End

Program.Sub.AccordionControl1_ElementClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.XMouse.Declare(Long)
	v.Local.YMouse.Declare(Long)
	V.Local.sForm.Declare(String,"Form")
	V.Local.sGsgc.Declare(String,"GSGCMainGalvaware")
    
Function.Intrinsic.Control.BlockEvents 
'Check to make sure group name wasn't clicked 
f.Intrinsic.Control.If(v.Args.ElementID,<>,"customViews","AND",v.Args.ElementID,<>,"Save")
f.Intrinsic.Control.If(v.Args.ElementID,<>,"AccElemViewMode")
f.Intrinsic.Control.If(v.Args.ElementID,<>,"StandardViewMode")
	
	f.Intrinsic.Control.If(v.Args.Button,=,"Right")      
		f.Intrinsic.Control.If(v.Args.ElementID,<>,"MainView")
			'Check if its a standard View mode (100 or greater) and if the have permission to delete standard view modes
			F.Intrinsic.Control.If(V.Args.ElementID,>=,100,"AND",V.Global.bEditViewMode,=,False)
				Function.Intrinsic.Control.UnBlockEvents
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
	  		F.Intrinsic.API.GetMousePosition(V.Local.XMouse,V.Local.YMouse)
	  		gui.[V.Local.sForm]..ContextMenuShow("ctxViewMode",v.Local.XMouse,v.Local.YMouse)
			v.Global.iViewModeIdDelete.Set(v.Args.ElementID)
		F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Else

	    f.Intrinsic.Control.If(v.Args.ElementStyle,<>,0)
	    	F.Intrinsic.Control.If(v.Args.ElementID,<>,"MainView")
	    		v.Global.iElementId.Set(v.Args.ElementId)
	    		gui.[V.Local.sForm].[v.Local.sGsgc].InvokeWait("Loading...","Please Wait")
				gui.[V.Local.sForm].[v.Local.sGsgc].enabled(false)
				f.Intrinsic.Control.CallSub(LoadSavedView,"LinkID",V.Args.ElementID)
				gui.[V.Local.sForm].[v.Local.sGsgc].enabled(true)
				
			F.Intrinsic.Control.Else
				'They clicked on Main view button so we will just treat this as column resetting				
				gui.[V.Local.sForm].[v.Local.sGsgc].enabled(false)
				F.Intrinsic.Control.CallSub(LoadgvMainGalvaware)
				gui.[V.Local.sForm].[v.Local.sGsgc].enabled(true)
				
			F.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
		
		gui.[V.Local.sForm].[v.Local.sGsgc].HideWait
	f.Intrinsic.Control.EndIf  
	
f.Intrinsic.Control.EndIf
f.Intrinsic.Control.EndIf
f.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(v.Args.ElementID,=,"Save")
	F.Intrinsic.Control.CallSub(cmdSave_Click)
F.Intrinsic.Control.EndIf

Function.Intrinsic.Control.UnBlockEvents
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.AccordionControl1_ElementClick.End

Program.Sub.LoadSavedView.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.SerializedText.Declare
	v.Local.sQuery.Declare
	v.Local.iRowIndex.Declare
	V.Local.sDT.Declare
	V.Local.iUserID.Declare
	V.Local.sForm.Declare(String,"Form")
	V.Local.sGsgc.Declare(String,"GSGCMainGalvaware")
	v.Local.sGridView.Declare(String,"GVMAINGALVAWARE")
		
		F.Intrinsic.Control.If(V.Global.iElementId,>=,100)
	 		'Standard View mode
	 		V.Local.sDT.Set("dtStandardViewModes")
	 	F.Intrinsic.Control.Else
	 		'User specific custom view mode
	 		V.Local.sDT.Set("dtViewModes")
	 	F.Intrinsic.Control.EndIf
		
		'Have they loaded data yet? Yes I do not allow for it to not be loaded yet in this program
		V.Global.bLoadData.Set(true)
		F.Intrinsic.Control.If(V.Global.bLoadData)
			'grab the already loaded XML string
			f.Intrinsic.String.Build("IDName = {0}", v.Global.iElementId, v.Local.sQuery)
			f.Data.DataTable.Select(V.Local.sDT,v.Local.sQuery,v.Local.iRowIndex)
			v.Local.SerializedText.Set(V.DataTable.[V.Local.sDT](v.Local.iRowIndex).XML!fieldvaltrim)
			
			'is the XML string blank?
			F.Intrinsic.Control.If(v.Local.SerializedText,<>,"")
				gui.[V.Local.sForm].[v.Local.sGsgc].ClearGrouping(v.Local.sGridView)
				gui.[V.Local.sForm].[v.Local.sGsgc].ClearSorting(v.Local.sGridView)
				gui.[V.Local.sForm].[v.Local.sGsgc].Deserialize(V.Local.SerializedText)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.If(V.Global.bCash.Not)
		Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","VALUE",V.Enum.ColumnPropertyNames!Visible,False)
		Gui.Form.GSGCMainGalvaware.SetColumnProperty("gvMainGALVAWARE","VALUE",V.Enum.ColumnPropertyNames!AllowShowHide,False)
	F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.LoadSavedView.End

Program.Sub.cmdSave_Click.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	V.Local.sRet.Declare
	v.Local.sSerialize.Declare
	v.Local.sTemp.Declare
	v.Local.iUserID.Declare
	v.local.sSQL.Declare
	v.Local.sQuery.Declare
	v.Local.sRowIndex.Declare
	V.Local.iMsgRet.Declare
	V.Local.iIDName.Declare(Long,-1)
	v.Local.icnt.Declare
	V.Local.sVAL.Declare
	V.Local.sDT.Declare
	V.Local.iIDStart.Declare
	V.Local.sParent.Declare
	V.Local.sForm.Declare(String,"Form")
	V.Local.sGsgc.Declare(String,"GSGCMainGalvaware")
	v.Local.sGridView.Declare(String,"GVMAINGALVAWARE")
	V.Local.sREGID.Declare(String,"6559")
	
	'User specific custom view mode
	Function.Global.Security.GetUserID(v.Caller.User, v.Caller.CompanyCode, v.Local.iUserID)
 	V.Local.sDT.Set("dtViewModes")
 	V.Local.iIDStart.Set(1)
 	V.Local.sParent.set("AccElemViewMode")
	
	f.Intrinsic.UI.Inputbox("Custom view mode name","Custom View Mode","",v.Local.sRet)
	
	f.Intrinsic.Control.If(V.Local.sRet.IsCancel, =, False)
		F.Intrinsic.String.Replace(V.Local.sRet,":","",V.Local.sRet)
		F.Intrinsic.String.Replace(V.Local.sRet,"!","",V.Local.sRet)
		F.Intrinsic.String.Replace(V.Local.sRet,"*","",V.Local.sRet)
		F.Intrinsic.String.Replace(V.Local.sRet,";","",V.Local.sRet)
	
		'Check to see if they are in the Standard view mode edit group
		F.Intrinsic.Control.If(V.Global.bEditViewMode)
		'Ask if this will be a Standard or custom view mode
			F.Intrinsic.UI.Msgbox("Will this be a Standard view mode? (Seen by all users)","",4,V.Local.iMsgRet)
			F.Intrinsic.Control.If(V.Local.iMsgRet,=,6)
				'Standard View mode
 				V.Local.iUserID.Set(-1)
 				V.Local.sDT.Set("dtStandardViewModes")
 				V.Local.iIDStart.Set(100)
 				V.Local.sParent.Set("StandardViewMode")
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		
		'Enforce Character limit of the caption to Char(15)
		f.Intrinsic.String.RTrim(V.Local.sRet,v.Local.sRet)
		F.Intrinsic.String.Left(V.Local.sRet,15,V.Local.sRet)
		
		'Check to see if the view name is already taken
		f.Intrinsic.String.Build("Caption = '{0}'", v.Local.sRet, v.Local.sQuery)
		f.Data.DataTable.Select(V.local.sDT,v.Local.sQuery,v.Local.sRowIndex)
		F.Intrinsic.Control.If(V.Local.sRowIndex,<>,"***NORETURN***")
			F.Intrinsic.UI.Msgbox("View Mode Name already exists, would you like to overwrite the existing view?","",4,V.Local.iMsgRet)
			F.Intrinsic.Control.If(V.Local.iMsgRet,=,6)
				V.Local.iIDName.Set(V.DataTable.[V.Local.sDT](V.Local.sRowIndex).IDName!fieldval)
			F.Intrinsic.Control.Else
				f.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		
		'Serialize gv
		gui.[V.Local.sForm].[V.Local.sGsgc].Serialize(v.Local.sGridView,v.Local.sSerialize)
		
		'Get Next element ID name saved as the SEQ in the GS registry, if we are not overwritting an existing ID
		F.Intrinsic.Control.If(V.Local.iIDName,=,-1)
			f.Data.DataView.Create(V.local.sDT,"dvViewModes",22,,"IDName DESC")
			F.Intrinsic.Control.If(V.DataView.[V.Local.sDT]!dvViewModes.RowCount,<>,0)
				V.Local.iIDName.Set(V.DataView.[V.Local.sDT]!dvViewModes(0).IDName!fieldVal)
				V.Local.iIDName.Set(V.Local.iIDName.++)
			F.Intrinsic.Control.Else
				V.Local.iIDName.Set(V.Local.iIDStart)
			F.Intrinsic.Control.EndIf
			F.Data.DataView.Close(V.local.sDT,"dvViewModes")
		F.Intrinsic.Control.EndIf

		'Adding serialized value to GS registry
		F.Global.Registry.AddValue(V.Local.iUserID,V.Caller.CompanyCode,v.Local.sGridView,V.Local.sREGID,V.Local.iIDName,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
		
		'Check if we are overwriting and existing value or not, then update DT and GS reg value
		F.Intrinsic.Control.If(V.Local.sRowIndex,=,"***NORETURN***")
			'adding the record to the dtViewModes Datatable
			F.Data.Datatable.AddRow(V.local.sDT,"IDName",V.Local.iIDName,"Caption",V.Local.sRet,"XML",V.Local.sSerialize)
			
			'Adding IDs and captions as the key to the user specific gs_registry string value record
			F.Intrinsic.Control.For(V.Local.icnt,0,V.DataTable.[V.Local.sDT].RowCount--,1)
				F.Intrinsic.Control.If(V.Local.icnt,=,0)
					V.Local.sVAL.Set(V.DataTable.[V.Local.sDT](v.Local.icnt).Key!Fieldvaltrim)
				F.Intrinsic.Control.Else	
					F.Intrinsic.String.Build("{0}!*!{1}",V.Local.sVAL,V.DataTable.[V.Local.sDT](v.Local.icnt).Key!Fieldvaltrim,V.Local.sVAL)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.icnt)
			F.Global.Registry.AddValue(V.Local.iUserID,V.Caller.CompanyCode,v.Local.sGridView,V.Local.sREGID,5000,False,V.local.sVAL.PSQLFriendly,False,0,-999.0,1/1/1980,12:00:00 AM,"")
			
			'adding the accordion element to the control
			gui.[V.Local.sForm].AccordionControl1.AddElement(V.Local.iIDName.String,v.Local.sRet,"",16,16,,-1,0,V.Local.sParent,False,True,False,1)
		F.Intrinsic.Control.Else
			F.Data.Datatable.SetValue(V.local.sDT,V.Local.sRowIndex.Long,"XML",V.Local.sSerialize)
		F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.EndIf
	
	
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.cmdSave_Click.End

Program.Sub.CheckGroupSecurityViewMode.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	V.Local.sREGID.Declare(String,"6559")
	
	F.Global.Security.IsInGroup(V.Caller.User, V.Local.sREGID, V.Caller.CompanyCode, V.Global.bEditViewMode)


F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.CheckGroupSecurityViewMode.End
#End Region ' Accordion Control Custom Gridview save feature




'the Loading of data based on the user click of each tab in the WO details screen 
Program.Sub.tabWorkOrderDetails_Click.Start
v.Local.sValue.Declare
v.Local.sValue.Set(v.Screen.FormWorkOrderDetails!tabWorkOrderDetails.tab)
V.Local.sWOID.Declare

'This will prevent from multi-clicking too fast the button
f.Intrinsic.Control.If(v.Global.bLoading)
	f.Intrinsic.Control.ExitSub
f.Intrinsic.Control.EndIf
v.Global.bLoading.Set(True)

F.Intrinsic.Control.SelectCase(V.Local.sValue)
F.Intrinsic.Control.Case("0")
	'Load order lines tab
	v.Local.sWOID.Set(v.Screen.FormWorkOrderDetails!txtWOID.Text)
	F.Intrinsic.Control.CallSub(LoaddtOrderItemsTab,"WOID",V.Local.sWOID)
F.Intrinsic.Control.Case("1")
	'Load Transport tab
	v.Local.sWOID.Set(v.Screen.FormWorkOrderDetails!txtWOID.Text)
	F.Intrinsic.Control.CallSub(LoaddtTransportDelivery,"WOID",V.Local.sWOID)
	F.Intrinsic.Control.CallSub(LoaddtTransportNoteItems,"WOID",V.Local.sWOID)
	F.Intrinsic.Control.If(V.DataTable.dtTransportNoteItems.RowCount,>,0)
		gui.FormWorkOrderDetails.cmdTransportNotesFinal.Visible(False)
	F.Intrinsic.Control.Else
		gui.FormWorkOrderDetails.cmdTransportNotesFinal.Visible(True)
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Case("2")
'Weights Overview
	Gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.Visible(False)
	Gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.Visible(False)
	f.Intrinsic.Control.CallSub(LoaddtWMLines)
	f.Intrinsic.Control.CallSub(LoaddtWMAggregate)
	Gui.FormWorkOrderDetails.GSGCWeightMeasurementsB.Visible(True)
	Gui.FormWorkOrderDetails.GSGCWeightMeasurementsTR.Visible(True)
	
F.Intrinsic.Control.Case("3")
'Job Allocation Tab
	Gui.FormWorkOrderDetails.GSGCJobAllocation.Visible(False)
	f.Intrinsic.Control.CallSub(LoaddtJobAllocation)
	Gui.FormWorkOrderDetails.GSGCJobAllocation.Visible(True)

F.Intrinsic.Control.Case("4")
'Billing Info
	f.Intrinsic.Control.CallSub(LoadBillingInfo)

F.Intrinsic.Control.Case("5")
'Receipting Info
	f.Intrinsic.Control.CallSub(LoadReceiptingInfo)
	
F.Intrinsic.Control.Case("6")
'Contact Allocation Tab
	f.Intrinsic.Control.CallSub(LoaddtContactAllocate)
	
F.Intrinsic.Control.Case("7")
'Notification Log Tab
	f.Intrinsic.Control.CallSub(LoaddtNotificationLog)

F.Intrinsic.Control.Case("8")
'QA Log Details
	f.Intrinsic.Control.CallSub(LoaddtQALogDetails)
	
F.Intrinsic.Control.Case("9")
'Rework tab
	f.Intrinsic.Control.CallSub(LoaddtReworktab)
	
	
F.Intrinsic.Control.EndSelect

v.Global.bLoading.Set(False)


'THE ISSUE IS HERE
f.Intrinsic.Control.if(v.Local.sValue,=,"1")
	'f.Intrinsic.Debug.ShowCallerInfo
f.Intrinsic.Control.EndIf


Program.Sub.tabWorkOrderDetails_Click.End

'Not sure what this sub is?????
Program.Sub.UpdateHeaderExistingWorkOrder.Start
f.Intrinsic.Control.Try
'GSGCOrderItemstab dtOrderItemstab
	
	'f.Data.Datatable.SetValue("dtOrderItemstab",v.Args.RowNumber,v.args.columnName1,v.Args.columnvalue1)
	'v.Caller.User

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.UpdateHeaderExistingWorkOrder.End

'Not sure what this sub is?????
Program.Sub.GUICrystalReportHideTemp.Start
f.Intrinsic.Control.Try
	gui.FormCrystalReportTemp..Visible(False)
f.Intrinsic.Control.Catch
	'f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	'f.ODBC.Connection!con.Close
	'f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.GUICrystalReportHideTemp.End

'Not using this sub since it is replaced with standard customer browser
Program.Sub.OpenCustomerSearch.Start
gui.FormLabel..Visible(True)
Program.Sub.OpenCustomerSearch.End

Program.Sub.lblOrderItemPriorityFlag_Click.Start
Program.Sub.lblOrderItemPriorityFlag_Click.End
Program.Sub.tabQuotesAndPricing_Click.Start
Program.Sub.tabQuotesAndPricing_Click.End
Program.Sub.txtInspectedTime_Change.Start
Program.Sub.txtInspectedTime_Change.End

Program.Sub.Comments.Start
${$5$}$20.1.8615.24403$}$1
${$6$}$sstanka$}$20230815144217068$}$mP+zz5Tw3sT2/nyap+FbWm4triMPqjXDYP0s+Dg/EAFRnMKh//9vJQ1iaMlblI72iGsRKPnBXBk=
Program.Sub.Comments.End