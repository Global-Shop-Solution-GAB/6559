Program.Sub.ScreenSU.Start
Gui.Form..Create(DashForm)
Gui.Form..Caption("Galvaware Transport Maintenance Menu 6559 v.2023.02.14")
Gui.Form..Size(1024,720)
Gui.Form..MinX(0)
Gui.Form..MinY(0)
Gui.Form..Position(0,0)
Gui.Form..AlwaysOnTop(False)
Gui.Form..FontName("Tahoma")
Gui.Form..FontSize(8.25)
Gui.Form..ControlBox(True)
Gui.Form..MaxButton(True)
Gui.Form..MinButton(True)
Gui.Form..MousePointer(0)
Gui.Form..Moveable(True)
Gui.Form..Sizeable(True)
Gui.Form..ShowInTaskBar(True)
Gui.Form..TitleBar(True)
Gui.Form..BarHelpButton(True,"","Galvaware Transport Maintenance Menu 6559","",1.0.1,"2/14/2023 12:00:00 AM","",0,0,False)
Gui.Form..BarRefreshButton(False)
Gui.Form..BarExportButton(True)
Gui.Form..Event(UnLoad,Form_UnLoad)
Gui.Form..AccentColor(3)
Gui.Form..Event(ExportClick,Form_ExportClick)
Gui.Form..Event(UserButtonClicked,Form_UserButtonClicked)
Gui.Form.ac2.Create(AccordionControl)
Gui.Form.ac2.Enabled(True)
Gui.Form.ac2.Visible(False)
Gui.Form.ac2.Size(130,654)
Gui.Form.ac2.Position(130,0)
Gui.Form.ac2.Dock(3)
Gui.Form.ac2.Minimized(False)
Gui.Form.ac2.Event(ElementClick,ac2_ElementClick)
Gui.Form.ac1.Create(AccordionControl)
Gui.Form.ac1.Enabled(True)
Gui.Form.ac1.Visible(True)
Gui.Form.ac1.Size(130,654)
Gui.Form.ac1.Position(130,0)
Gui.Form.ac1.Minimized(False)
Gui.Form.ac1.Dock(3)
Gui.Form.ac1.Event(ElementClick,ac1_ElementClick)
Gui.Form.SplitContainer1.Create(SplitContainer)
Gui.Form.SplitContainer1.Enabled(True)
Gui.Form.SplitContainer1.Visible(True)
Gui.Form.SplitContainer1.Zorder(0)
Gui.Form.SplitContainer1.Size(764,654)
Gui.Form.SplitContainer1.Position(260,0)
Gui.Form.SplitContainer1.Orientation(1)
Gui.Form.SplitContainer1.SplitterPosition(60)
Gui.Form.SplitContainer1.Collapsed(False)
Gui.Form.SplitContainer1.CollapsiblePanel(0)
Gui.Form.SplitContainer1.Dock(5)
Gui.Form.SplitContainer1.FixedPanel(0)
Gui.Form.tab2.Create(Tab)
Gui.Form.tab2.Enabled(True)
Gui.Form.tab2.Visible(False)
Gui.Form.tab2.Zorder(0)
Gui.Form.tab2.Size(634,607)
Gui.Form.tab2.Position(0,0)
Gui.Form.tab2.Dock(5)
Gui.Form.tab2.FontName("Tahoma")
Gui.Form.tab2.FontSize(8.25)
Gui.Form.tab2.Parent("SplitContainer1",1)
Gui.Form.tab2.Tabs(1)
Gui.Form.tab2.SetTab(0)
Gui.Form.tab2.Caption("Transport Manifest")
Gui.Form.gsManifest.Create(GsGridControl)
Gui.Form.gsManifest.Enabled(True)
Gui.Form.gsManifest.Visible(True)
Gui.Form.gsManifest.Zorder(0)
Gui.Form.gsManifest.Size(762,578)
Gui.Form.gsManifest.Position(0,0)
Gui.Form.gsManifest.Parent("tab2",0)
Gui.Form.gsManifest.Dock(5)
Gui.Form.gsManifest.Event(RowCellClick,gsManifest_RowCellClick)
Gui.Form.tab1.Create(Tab)
Gui.Form.tab1.Enabled(True)
Gui.Form.tab1.Visible(True)
Gui.Form.tab1.Zorder(0)
Gui.Form.tab1.Size(764,607)
Gui.Form.tab1.Position(0,0)
Gui.Form.tab1.FontName("Tahoma")
Gui.Form.tab1.FontSize(8.25)
Gui.Form.tab1.Parent("SplitContainer1",1)
Gui.Form.tab1.Dock(5)
Gui.Form.tab1.Tabs(1)
Gui.Form.tab1.SetTab(0)
Gui.Form.tab1.Caption("Transport Notes")
Gui.Form.gsTransport.Create(GsGridControl)
Gui.Form.gsTransport.Enabled(True)
Gui.Form.gsTransport.Visible(True)
Gui.Form.gsTransport.Zorder(0)
Gui.Form.gsTransport.Size(762,578)
Gui.Form.gsTransport.Position(0,0)
Gui.Form.gsTransport.Parent("tab1",0)
Gui.Form.gsTransport.Dock(5)
Gui.Form.gsTransport.Event(RowCellClick,gsTransport_RowCellClick)
Gui.Form.frTop.Create(Frame)
Gui.Form.frTop.Enabled(True)
Gui.Form.frTop.Visible(True)
Gui.Form.frTop.Zorder(0)
Gui.Form.frTop.Size(764,60)
Gui.Form.frTop.Position(0,0)
Gui.Form.frTop.Caption("")
Gui.Form.frTop.FontName("Tahoma")
Gui.Form.frTop.FontSize(8.25)
Gui.Form.frTop.Parent("SplitContainer1",0)
Gui.Form.frTop.Dock(5)
Gui.Form.frTop.Anchor(15)
Gui.Form.lbl1.Create(Label,"Last Refresh:",True,65,13,0,12,4,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lbl1.BorderStyle(0)
Gui.Form.lbl1.Parent("frTop")
Gui.Form.lblPleaseWait.Create(Label,"Please wait...",False,66,13,0,501,3,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lblPleaseWait.BorderStyle(0)
Gui.Form.lblPleaseWait.ForeColor(7504122)
Gui.Form.lblPleaseWait.Parent("frTop")
Gui.Form.lblPleaseWait.Dock(0)
Gui.Form.lblPleaseWait.Anchor(1)
Gui.Form.lblLastRefresh.Create(Label,"",True,1,13,0,100,4,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lblLastRefresh.BorderStyle(0)
Gui.Form.lblLastRefresh.Parent("frTop")
Gui.Form.proBar1.Create(ProgressBar)
Gui.Form.proBar1.Visible(False)
Gui.Form.proBar1.Size(65,9)
Gui.Form.proBar1.Position(577,5)
Gui.Form.proBar1.Parent("frTop")
Gui.Form.proBar1.Anchor(1)
Gui.Form.ddlTransportArrangement.Create(DropDownList)
Gui.Form.ddlTransportArrangement.Enabled(True)
Gui.Form.ddlTransportArrangement.Visible(True)
Gui.Form.ddlTransportArrangement.Zorder(0)
Gui.Form.ddlTransportArrangement.Size(293,20)
Gui.Form.ddlTransportArrangement.Position(133,35)
Gui.Form.ddlTransportArrangement.FontName("Tahoma")
Gui.Form.ddlTransportArrangement.FontSize(8.25)
Gui.Form.ddlTransportArrangement.Parent("frTop")
Gui.Form.ddlTransportArrangement.Event(Change,ddlTransportArrangement_Change)
Gui.Form.lbl2.Create(Label,"Transport Arrangement:",True,117,13,0,12,37,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lbl2.BorderStyle(0)
Gui.Form.lbl2.Parent("frTop")
Gui.Form.chkCompletedOrders.Create(CheckBox)
Gui.Form.chkCompletedOrders.Enabled(True)
Gui.Form.chkCompletedOrders.Visible(True)
Gui.Form.chkCompletedOrders.Zorder(0)
Gui.Form.chkCompletedOrders.Size(149,20)
Gui.Form.chkCompletedOrders.Position(7,35)
Gui.Form.chkCompletedOrders.Caption("Show Completed Orders")
Gui.Form.chkCompletedOrders.FontName("Tahoma")
Gui.Form.chkCompletedOrders.FontSize(8.25)
Gui.Form.chkCompletedOrders.Event(Change,chkCompletedOrders_Change)
Gui.Form.chkCompletedOrders.Parent("frTop")
Gui.FormAddService..Create(BaseForm)
Gui.FormAddService..Caption("Service - Record Maintenance")
Gui.FormAddService..Size(564,396)
Gui.FormAddService..MinX(0)
Gui.FormAddService..MinY(0)
Gui.FormAddService..Position(0,0)
Gui.FormAddService..AlwaysOnTop(False)
Gui.FormAddService..FontName("Tahoma")
Gui.FormAddService..FontSize(8.25)
Gui.FormAddService..ControlBox(True)
Gui.FormAddService..MaxButton(True)
Gui.FormAddService..MinButton(True)
Gui.FormAddService..MousePointer(0)
Gui.FormAddService..Moveable(True)
Gui.FormAddService..Sizeable(True)
Gui.FormAddService..ShowInTaskBar(True)
Gui.FormAddService..TitleBar(True)
Gui.FormAddService..Event(UnLoad,FormAddService_UnLoad)
Gui.FormTranNote..Create(DashForm)
Gui.FormTranNote..Caption("Transport Note - 6559")
Gui.FormTranNote..Size(910,591)
Gui.FormTranNote..MinX(0)
Gui.FormTranNote..MinY(0)
Gui.FormTranNote..Position(0,0)
Gui.FormTranNote..AlwaysOnTop(False)
Gui.FormTranNote..FontName("Tahoma")
Gui.FormTranNote..FontSize(8.25)
Gui.FormTranNote..ControlBox(True)
Gui.FormTranNote..MaxButton(True)
Gui.FormTranNote..MinButton(True)
Gui.FormTranNote..MousePointer(0)
Gui.FormTranNote..Moveable(True)
Gui.FormTranNote..Sizeable(True)
Gui.FormTranNote..ShowInTaskBar(True)
Gui.FormTranNote..TitleBar(True)
Gui.FormTranNote..Event(UnLoad,FormTranNote_UnLoad)
Gui.FormTranNote..Event(UserButtonClicked,FormTranNote_UserButtonClicked)
Gui.FormTranNote.SplitContainer1.Create(SplitContainer)
Gui.FormTranNote.SplitContainer1.Enabled(True)
Gui.FormTranNote.SplitContainer1.Visible(True)
Gui.FormTranNote.SplitContainer1.Zorder(0)
Gui.FormTranNote.SplitContainer1.Size(910,561)
Gui.FormTranNote.SplitContainer1.Position(0,0)
Gui.FormTranNote.SplitContainer1.Orientation(1)
Gui.FormTranNote.SplitContainer1.SplitterPosition(147)
Gui.FormTranNote.SplitContainer1.Collapsed(False)
Gui.FormTranNote.SplitContainer1.Dock(5)
Gui.FormTranNote.cmdAllocate.Create(Button)
Gui.FormTranNote.cmdAllocate.Enabled(True)
Gui.FormTranNote.cmdAllocate.Visible(False)
Gui.FormTranNote.cmdAllocate.Zorder(0)
Gui.FormTranNote.cmdAllocate.Size(75,23)
Gui.FormTranNote.cmdAllocate.Position(1,0)
Gui.FormTranNote.cmdAllocate.Caption("Allocate")
Gui.FormTranNote.cmdAllocate.FontName("Tahoma")
Gui.FormTranNote.cmdAllocate.FontSize(8.25)
Gui.FormTranNote.cmdAllocate.Parent("SplitContainer1",1)
Gui.FormTranNote.cmdAllocate.Event(Click,cmdAllocate_Click)
Gui.FormTranNote.lbl12.Create(Label,"Estimate kg:",True,59,13,0,226,9,True,0,"Tahoma",8.25,,0,0)
Gui.FormTranNote.lbl12.BorderStyle(0)
Gui.FormTranNote.lbl12.Parent("SplitContainer1",0)
Gui.FormTranNote.txtRegNum.Create(TextBox,"",True,100,20,0,119,87,True,0,"Tahoma",8.25,,1)
Gui.FormTranNote.txtRegNum.Parent("SplitContainer1",0)
Gui.FormTranNote.lbl7.Create(Label,"Created By:",True,58,13,0,487,7,True,0,"Tahoma",8.25,,0,0)
Gui.FormTranNote.lbl7.BorderStyle(0)
Gui.FormTranNote.lbl7.Parent("SplitContainer1",0)
Gui.FormTranNote.txtDriverName.Create(TextBox,"",True,100,20,0,120,115,True,0,"Tahoma",8.25,,1)
Gui.FormTranNote.txtDriverName.Parent("SplitContainer1",0)
Gui.FormTranNote.lbl15.Create(Label,"Note:",True,27,13,0,517,32,True,0,"Tahoma",8.25,,0,0)
Gui.FormTranNote.lbl15.BorderStyle(0)
Gui.FormTranNote.lbl15.Parent("SplitContainer1",0)
Gui.FormTranNote.lbl4.Create(Label,"Registration Number:",True,102,13,0,14,89,True,0,"Tahoma",8.25,,0,0)
Gui.FormTranNote.lbl4.BorderStyle(0)
Gui.FormTranNote.lbl4.Parent("SplitContainer1",0)
Gui.FormTranNote.txtEstimate.Create(TextBox,"",True,91,20,0,288,6,False,0,"Tahoma",8.25,,1)
Gui.FormTranNote.txtEstimate.Parent("SplitContainer1",0)
Gui.FormTranNote.txtEstimate.NumericOnly(1)
Gui.FormTranNote.txtTransportNoteID.Create(TextBox,"",True,100,20,0,119,5,False,0,"Tahoma",8.25,,1)
Gui.FormTranNote.txtTransportNoteID.Parent("SplitContainer1",0)
Gui.FormTranNote.lbl1.Create(Label,"Transport Note ID:",True,91,13,0,26,9,True,0,"Tahoma",8.25,,0,0)
Gui.FormTranNote.lbl1.BorderStyle(0)
Gui.FormTranNote.lbl1.Parent("SplitContainer1",0)
Gui.FormTranNote.lbl2.Create(Label,"Transport Arrangement:",True,117,13,0,2,35,True,0,"Tahoma",8.25,,0,0)
Gui.FormTranNote.lbl2.BorderStyle(0)
Gui.FormTranNote.lbl2.Parent("SplitContainer1",0)
Gui.FormTranNote.txtNote.Create(TextboxM)
Gui.FormTranNote.txtNote.Enabled(True)
Gui.FormTranNote.txtNote.Visible(True)
Gui.FormTranNote.txtNote.Zorder(0)
Gui.FormTranNote.txtNote.Size(336,70)
Gui.FormTranNote.txtNote.Position(546,30)
Gui.FormTranNote.txtNote.FontName("Tahoma")
Gui.FormTranNote.txtNote.FontSize(8.25)
Gui.FormTranNote.txtNote.Parent("SplitContainer1",0)
Gui.FormTranNote.cmdRemove.Create(Button)
Gui.FormTranNote.cmdRemove.Enabled(True)
Gui.FormTranNote.cmdRemove.Visible(True)
Gui.FormTranNote.cmdRemove.Zorder(0)
Gui.FormTranNote.cmdRemove.Size(75,23)
Gui.FormTranNote.cmdRemove.Position(3,0)
Gui.FormTranNote.cmdRemove.Caption("Remove")
Gui.FormTranNote.cmdRemove.FontName("Tahoma")
Gui.FormTranNote.cmdRemove.FontSize(8.25)
Gui.FormTranNote.cmdRemove.Parent("SplitContainer1",1)
Gui.FormTranNote.cmdRemove.Event(Click,cmdRemove_Click)
Gui.FormTranNote.txtTransportArrangement.Create(TextBox,"",True,293,20,0,119,33,False,0,"Tahoma",8.25,,1)
Gui.FormTranNote.txtTransportArrangement.Parent("SplitContainer1",0)
Gui.FormTranNote.txtTransportArrangementID.Create(TextBox,"",True,29,20,0,383,58,False,0,"Tahoma",8.25,,1)
Gui.FormTranNote.txtTransportArrangementID.Parent("SplitContainer1",0)
Gui.FormTranNote.txtDateTimeDelivery.Create(TextBox,"",True,140,20,0,119,60,True,0,"Tahoma",8.25,,1)
Gui.FormTranNote.txtDateTimeDelivery.Parent("SplitContainer1",0)
Gui.FormTranNote.lbl3.Create(Label,"Date Time Delivery:",True,94,13,0,21,61,True,0,"Tahoma",8.25,,0,0)
Gui.FormTranNote.lbl3.BorderStyle(0)
Gui.FormTranNote.lbl3.Parent("SplitContainer1",0)
Gui.FormTranNote.lbl5.Create(Label,"Driver Name:",True,63,13,0,53,118,True,0,"Tahoma",8.25,,0,0)
Gui.FormTranNote.lbl5.BorderStyle(0)
Gui.FormTranNote.lbl5.Parent("SplitContainer1",0)
Gui.FormTranNote.txtLastAccessUser.Create(TextBox,"",True,140,20,0,546,115,False,0,"Tahoma",8.25,,1)
Gui.FormTranNote.txtLastAccessUser.Parent("SplitContainer1",0)
Gui.FormTranNote.txtLastAccessDateTime.Create(TextBox,"",True,140,20,0,697,114,False,0,"Tahoma",8.25,,1)
Gui.FormTranNote.txtLastAccessDateTime.Parent("SplitContainer1",0)
Gui.FormTranNote.txtCreatedBy.Create(TextBox,"",True,145,20,0,546,4,False,0,"Tahoma",8.25,,1)
Gui.FormTranNote.txtCreatedBy.Parent("SplitContainer1",0)
Gui.FormTranNote.tabItems.Create(Tab)
Gui.FormTranNote.tabItems.Enabled(True)
Gui.FormTranNote.tabItems.Visible(True)
Gui.FormTranNote.tabItems.Zorder(0)
Gui.FormTranNote.tabItems.Size(907,378)
Gui.FormTranNote.tabItems.Position(1,23)
Gui.FormTranNote.tabItems.FontName("Tahoma")
Gui.FormTranNote.tabItems.FontSize(8.25)
Gui.FormTranNote.tabItems.Parent("SplitContainer1",1)
Gui.FormTranNote.tabItems.Anchor(15)
Gui.FormTranNote.tabItems.Event(Click,tabItems_Click)
Gui.FormTranNote.tabItems.Tabs(2)
Gui.FormTranNote.tabItems.SetTab(0)
Gui.FormTranNote.tabItems.Caption("Items")
Gui.FormTranNote.tabItems.SetTab(1)
Gui.FormTranNote.tabItems.Caption("Available")
Gui.FormTranNote.GsTransportLines.Create(GsGridControl)
Gui.FormTranNote.GsTransportLines.Enabled(True)
Gui.FormTranNote.GsTransportLines.Visible(True)
Gui.FormTranNote.GsTransportLines.Zorder(0)
Gui.FormTranNote.GsTransportLines.Size(905,349)
Gui.FormTranNote.GsTransportLines.Position(0,0)
Gui.FormTranNote.GsTransportLines.Parent("tabItems",0)
Gui.FormTranNote.GsTransportLines.Dock(5)
Gui.FormTranNote.GsTransportLines.Event(CellValueChanged,GsTransportLines_CellValueChanged)
Gui.FormTranNote.GsTransportLines.Event(RowCellClick,GsTransportLines_RowCellClick)
Gui.FormTranNote.GsTransportAvailable.Create(GsGridControl)
Gui.FormTranNote.GsTransportAvailable.Enabled(True)
Gui.FormTranNote.GsTransportAvailable.Visible(True)
Gui.FormTranNote.GsTransportAvailable.Zorder(0)
Gui.FormTranNote.GsTransportAvailable.Size(905,349)
Gui.FormTranNote.GsTransportAvailable.Position(-2,-210)
Gui.FormTranNote.GsTransportAvailable.Dock(5)
Gui.FormTranNote.GsTransportAvailable.Parent("tabItems",1)
Gui.FormTranNote.GsTransportAvailable.Event(RowCellClick,GsTransportAvailable_RowCellClick)
Gui.FormTranNote.cmdTansportALookup.Create(Button)
Gui.FormTranNote.cmdTansportALookup.Enabled(True)
Gui.FormTranNote.cmdTansportALookup.Visible(True)
Gui.FormTranNote.cmdTansportALookup.Zorder(0)
Gui.FormTranNote.cmdTansportALookup.Size(25,23)
Gui.FormTranNote.cmdTansportALookup.Position(417,31)
Gui.FormTranNote.cmdTansportALookup.Caption("")
Gui.FormTranNote.cmdTansportALookup.FontName("Tahoma")
Gui.FormTranNote.cmdTansportALookup.FontSize(8.25)
Gui.FormTranNote.cmdTansportALookup.SvgPicture("icon_browser_color")
Gui.FormTranNote.cmdTansportALookup.Event(Click,cmdTansportALookup_Click)
Gui.FormTranNote.cmdDateTime.Create(Button)
Gui.FormTranNote.cmdDateTime.Enabled(True)
Gui.FormTranNote.cmdDateTime.Visible(True)
Gui.FormTranNote.cmdDateTime.Zorder(0)
Gui.FormTranNote.cmdDateTime.Size(25,23)
Gui.FormTranNote.cmdDateTime.Position(266,59)
Gui.FormTranNote.cmdDateTime.Caption("")
Gui.FormTranNote.cmdDateTime.FontName("Tahoma")
Gui.FormTranNote.cmdDateTime.FontSize(8.25)
Gui.FormTranNote.cmdDateTime.SvgPicture("icon_refresh_black")
Gui.FormTranNote.cmdDateTime.Event(Click,cmdDateTime_Click)
Gui.FormTest..Create(DashForm)
Gui.FormTest..Caption("Form")
Gui.FormTest..Size(1024,720)
Gui.FormTest..MinX(0)
Gui.FormTest..MinY(0)
Gui.FormTest..Position(0,0)
Gui.FormTest..AlwaysOnTop(False)
Gui.FormTest..FontName("Tahoma")
Gui.FormTest..FontSize(8.25)
Gui.FormTest..ControlBox(True)
Gui.FormTest..MaxButton(True)
Gui.FormTest..MinButton(True)
Gui.FormTest..MousePointer(0)
Gui.FormTest..Moveable(True)
Gui.FormTest..Sizeable(True)
Gui.FormTest..ShowInTaskBar(True)
Gui.FormTest..TitleBar(True)
Gui.FormIOP..Create(BaseForm)
Gui.FormIOP..Caption("IOP")
Gui.FormIOP..Size(1228,475)
Gui.FormIOP..MinX(0)
Gui.FormIOP..MinY(0)
Gui.FormIOP..Position(0,0)
Gui.FormIOP..AlwaysOnTop(False)
Gui.FormIOP..FontName("Tahoma")
Gui.FormIOP..FontSize(8.25)
Gui.FormIOP..ControlBox(True)
Gui.FormIOP..MaxButton(True)
Gui.FormIOP..MinButton(True)
Gui.FormIOP..MousePointer(0)
Gui.FormIOP..Moveable(True)
Gui.FormIOP..Sizeable(True)
Gui.FormIOP..ShowInTaskBar(True)
Gui.FormIOP..TitleBar(True)
Gui.FormIOP..Event(UnLoad,FormIOP_UnLoad)
Gui.FormIOP.cmdIOP.Create(Button)
Gui.FormIOP.cmdIOP.Enabled(True)
Gui.FormIOP.cmdIOP.Visible(True)
Gui.FormIOP.cmdIOP.Zorder(0)
Gui.FormIOP.cmdIOP.Size(75,23)
Gui.FormIOP.cmdIOP.Position(1093,412)
Gui.FormIOP.cmdIOP.Caption("")
Gui.FormIOP.cmdIOP.FontName("Tahoma")
Gui.FormIOP.cmdIOP.FontSize(8.25)
Gui.FormIOP.cmdIOP.Event(Click,cmdIOP_Click)
Gui.FormIOP.cmdIOP.Anchor(10)
Gui.FormIOP.GSGCIOP.Create(GsGridControl)
Gui.FormIOP.GSGCIOP.Enabled(True)
Gui.FormIOP.GSGCIOP.Visible(True)
Gui.FormIOP.GSGCIOP.Zorder(0)
Gui.FormIOP.GSGCIOP.Size(1223,403)
Gui.FormIOP.GSGCIOP.Position(2,2)
Gui.FormIOP.GSGCIOP.Anchor(15)
Gui.FormIOP.GSGCIOP.Event(CellValueChanged,GSGCIOP_CellValueChanged)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
v.Global.bPassedFirstLoad.Declare
v.Global.bLoading.Declare
v.Global.bCreatingPO.Declare
v.Global.bResetting.Declare
v.Global.bResetColumn.Declare
v.Global.bExporting.Declare
v.Global.iCurrentRowIndex.Declare
v.Global.bIsInGroup.Declare
v.Global.iRunIDToApprove.Declare
V.Global.bLoadingRunID.Declare
v.Global.iRunIDToView.Declare

V.Global.iBILogID.Declare
V.Global.iBIRunID.Declare
v.Global.iBIRptID.Declare

V.Global.iQHID.Declare
V.Global.iTNID.Declare
V.Global.sQuoteID.Declare
V.Global.sShipToID.Declare
V.Global.sCustID.Declare
V.Global.sTNIDFilter.Declare

Program.Sub.Preflight.End

Program.Sub.Main.Start
'SS, October 2022
'Customer: Australian Prof Galv 
'Buisness Purpose:Maintenance menu for the Galvaware project 


Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout
f.Intrinsic.Control.Try	
	
	F.Intrinsic.UI.SetBrowserHotTypeAhead(true)
	f.Intrinsic.Control.CallSub(CheckFolder)
	
	
	f.ODBC.Connection!conx.OpenCompanyConnection(300)	
	F.Intrinsic.Task.SetEnvironmentVariable("USEDARKTHEME",False)
	gui.Form..applytheme()
	
	F.Intrinsic.Control.CallSub(BarAddButton)
	F.Intrinsic.Control.CallSub(LoadInitialDictionaries)
	F.Intrinsic.Control.CallSub(LoadAllAcordionControls)
	

	
	f.Intrinsic.Control.CallSub(Create_ContextMenu)
	
	F.Intrinsic.Control.If(V.Caller.Switches,=,"N")
		F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","TransportManifest")
		
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","IOP")
		
	F.Intrinsic.Control.EndIf
	Gui.Form..ApplySavedSettings
	gui.Form..Show
	gui.Form.tab1.SetTab(0)
	gui.Form..SetFocus
	V.Global.bPassedFirstLoad.Set(True)
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Main.End

#Region "UnloadCatch"
Program.Sub.Catching.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	
	F.Intrinsic.String.Build("Project: {5} {0}Subroutine: {1}{0}Error Occurred {2} with description {3}{0}GAB Version: {4}",V.Ambient.Newline,V.Args.SUB,V.Args.errorno,V.Args.errordesc,V.Ambient.GABVersion,v.Caller.ScriptFile,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	
	f.Intrinsic.Control.CallSub(Unload)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.Catching.End

Program.Sub.Form_UnLoad.Start
f.Intrinsic.Control.Try

	f.Intrinsic.Control.If(v.DataTable.dtTransport.Exists)
		F.Intrinsic.Control.CallSub(Serialize, "Form", "Form", "GridControl", "gsTransport", "GridView", "gvTransport", "RegID", 6559)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataTable.dtManifest.Exists)
		F.Intrinsic.Control.CallSub(Serialize, "Form", "Form", "GridControl", "gsManifest", "GridView", "gvManifest", "RegID", 6559)
	f.Intrinsic.Control.EndIf

	f.Intrinsic.Control.CallSub(Unload)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry	
Program.Sub.Form_UnLoad.End

Program.Sub.Unload.Start
F.Intrinsic.Control.Try	

	f.Intrinsic.Control.If(v.ODBC.conx.Exists)
		F.ODBC.Connection!conx.Close
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.ODBC.conSQL.Exists)
		F.ODBC.Connection!conSQL.Close
	f.Intrinsic.Control.EndIf
	
	Gui.Form..SaveSettings
	F.Intrinsic.Control.End 
	
f.Intrinsic.Control.Catch
	F.Intrinsic.Control.End 
f.Intrinsic.Control.EndTry	
Program.Sub.Unload.End

Program.Sub.FormAddService_UnLoad.Start
gui.FormAddService..Visible(False)
gui.Form..SetFocus
gui.Form..Enabled(True)

Program.Sub.FormAddService_UnLoad.End
#End Region 'UnloadCatch

#Region "Initialize"

Program.Sub.CheckFolder.Start
f.Intrinsic.Control.Try
	v.Local.sDir.Declare
	v.Local.bExist.Declare
	
	f.Intrinsic.String.Build("{0}\Custom\6559\{1}",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Local.sDir)
	f.Intrinsic.File.DirExists(v.Local.sDir,v.Local.bExist)
	f.Intrinsic.Control.If(v.Local.bExist.Not)
		f.Intrinsic.File.CreateDir(v.Local.sDir)
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.CheckFolder.End

Program.Sub.BarAddButton.Start
f.Intrinsic.Control.Try
	gui.Form..BarAddButton("IOP","Inbound/Outbound/Possession")
	gui.Form..BarAddButton("TransportManifest","Transport Manifest")
	'gui.Form..BarAddButton("Possession","Possession")
	
	gui.FormTranNote..BarAddButton("UpdateTransport","Update")
	gui.FormTranNote..BarAddButton("DeleteTransport","Delete")
	gui.FormTranNote..BarAddButton("PreviewTransport","Preview")
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.BarAddButton.End

Program.Sub.LoadInitialDictionaries.Start
F.Intrinsic.Control.Try
	
	'Load static Dictionaries
	
	'Dict for Customer Bill to Name
	F.Data.Dictionary.CreateFromSQL("dictCustomerBillName","Conx","select RTRIM(Customer) as Customer, RTRIM(Name_Customer) as Name_Customer from V_CUSTOMER_MASTER")
	F.Data.Dictionary.SetDefaultReturn("dictCustomerBillName","")
	
	'Dictionary for TransportNoteID Description
	F.Data.Dictionary.CreateFromSQL("dictTransportID","Conx","Select TransportNoteID, RTRIM(Description) as Description FROM GAB_6559_TransportNoteId")
	F.Data.Dictionary.SetDefaultReturn("dictTransportID","")
	
	'Reverse dictionary for TransportArrangement desc, TransportArrangementID
	F.Data.Dictionary.CreateFromSQL("dictTransportDESC","Conx","Select RTRIM(Description) as Description, TransportNoteID FROM GAB_6559_TransportNoteId")
	F.Data.Dictionary.SetDefaultReturn("dictTransportDESC","")
	
	'dictionary for TransportArrangementID, TransportArrangement
	F.Data.Dictionary.CreateFromSQL("dictTransArrangement","conx","select TransportNoteID, RTRIM(Description) as Description from GAB_6559_TransportNoteId")
	F.Data.Dictionary.SetDefaultReturn("dictTransArrangement","")
	
	Gui.Form.ddlTransportArrangement.AddItem("","0")
	gui.Form.ddlTransportArrangement.AddItems("Dictionary","dictTransArrangement")
	
	
	'dictionary for TransportArrangementID, MovementType
	F.Data.Dictionary.CreateFromSQL("dictTransMovement","conx","select TransportNoteID, RTRIM(MovementType) as MovementType from GAB_6559_TransportNoteId")
	F.Data.Dictionary.SetDefaultReturn("dictTransMovement","")

	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadInitialDictionaries.End

Program.Sub.LoadAllAcordionControls.Start
f.Intrinsic.Control.Try
	'Add Item to ac1 (IOP)
	Gui.Form.ac1.Visible(False)
	Gui.Form.ac1.AddElement(ServiceWeb,"Service Web","logo_g_green_32",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac1.AddElement(Inbound,"Inbound","icon_functions_black",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac1.AddElement(Outbound,"Outbound","icon_functions_black",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac1.AddElement(Possession,"Possession","icon_functions_black",16,16,,-1,0,"",True,True,False,1)
	
	'Add Item to ac2 (Manifest)
	Gui.Form.ac2.AddElement(ServiceWeb,"Service Web","logo_g_green_32",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac2.AddElement(TransportManifest,"Print Transport Manifest","icon_functions_black",16,16,,-1,0,"",True,True,False,1)
	Gui.Form.ac2.AddElement(TransportNote,"Print Transport Notes","icon_functions_black",16,16,,-1,0,"",True,True,False,1)
	
	
	'Add Item to ac3 (Customer)
	'Gui.Form.ac3.AddElement(ServiceWeb,"Service Web","logo_g_green_32",16,16,,-1,0,"",True,True,False,1)
	
	'Add Item to ac4 (Quote)
	'Gui.Form.ac4.AddElement(ServiceWeb,"Service Web","logo_g_green_32",16,16,,-1,0,"",True,True,False,1)
	'Gui.Form.ac4.AddElement(AddLine,"Add New Quote","icon_functions_black",16,16,,-1,0,"",True,True,False,1)
	'Gui.Form.ac4.AddElement(DuplicateLine,"Duplicate Quote","icon_functions_black",16,16,,-1,0,"",True,True,False,1)
	'Gui.Form.ac4.AddElement(DeleteLine,"Delete Quote","icon_functions_black",16,16,,-1,0,"",True,True,False,1)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.LoadAllAcordionControls.End

'Currently dont want to use user button (Leaving it here for possible future features)
Program.Sub.Form_UserButtonClicked.Start
f.Intrinsic.Control.Try	

	'Disable form
	F.Intrinsic.Control.BlockEvents
	'Hide Other Acordion controls
	Gui.Form.ac1.Visible(False)
	Gui.Form.ac2.Visible(False)
	
	gui.Form.chkCompletedOrders.Visible(False)
	
	Gui.Form.ddlTransportArrangement.Visible(False)
	gui.Form.lbl2.Visible(False)
	
	'Gui.Form.gsCategory.Visible(False)
	gui.Form.tab1.Visible(False)
	gui.Form.tab2.Visible(False)

	f.Intrinsic.Control.If(v.DataTable.dtTransport.Exists)
		F.Intrinsic.Control.CallSub(Serialize, "Form", "Form", "GridControl", "gsTransport", "GridView", "gvTransport", "RegID", 6559)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataTable.dtManifest.Exists)
		F.Intrinsic.Control.CallSub(Serialize, "Form", "Form", "GridControl", "gsManifest", "GridView", "gvManifest", "RegID", 6559)
	f.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.SelectCase(V.Args.Button)			

		
		F.Intrinsic.Control.Case("IOP")
			'Load DT -> GV
			F.Intrinsic.Control.CallSub(Load_Transport)
			'Show Accordion control
			F.Intrinsic.Control.CallSub(Deserialize, "Form", "Form", "GridControl", "gsTransport", "GridView", "gvTransport", "RegID", 6559)
			
			Gui.Form.ac1.Visible(True)
			gui.Form.tab1.Visible(True)
			gui.Form.chkCompletedOrders.Visible(True)
			
		F.Intrinsic.Control.Case("TransportManifest")
			F.Intrinsic.Control.CallSub(Load_Manifest)
			F.Intrinsic.Control.CallSub(Deserialize, "Form", "Form", "GridControl", "gsManifest", "GridView", "gvManifest", "RegID", 6559)
			
			gui.Form.ac2.Visible(True)
			gui.Form.tab2.Visible(True)
			Gui.Form.ddlTransportArrangement.Visible(True)
			gui.Form.lbl2.Visible(True)
			
	F.Intrinsic.Control.EndSelect
	
	gui.Form.lblLastRefresh.Text(v.Ambient.Now)
	
	'Enable form
	F.Intrinsic.Control.UnBlockEvents
	
'		
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Form_UserButtonClicked.End

Program.Sub.ddlTransportArrangement_Change.Start
V.Local.bTabVisible.Declare

'See which Tab is visible and refresh that one
V.Local.bTabVisible.Set(V.Screen.Form!tab1.Visible)
F.Intrinsic.Control.If(V.Local.bTabVisible)
	F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","IOP")
F.Intrinsic.Control.Else
	F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","TransportManifest")
F.Intrinsic.Control.EndIf
Program.Sub.ddlTransportArrangement_Change.End

'Currently dont want to use context menus (Leaving it here for possible future features)
Program.Sub.Create_ContextMenu.Start
f.Intrinsic.Control.Try
	
	'Service grid
'	Gui.Form..ContextMenuCreate("ctxTransport")
'	gui.Form.gsTransport.ContextMenuAttach("ctxTransport")
'	Gui.Form..ContextMenuAddItem("ctxTransport","SelectAll",0,"Select All")
'	Gui.Form..ContextMenuSetItemEventHandler("ctxTransport","SelectAll","SelectAll")
'	
'	Gui.Form..ContextMenuAddItem("ctxTransport","DeselectAll",0,"Deselect All")
'	Gui.Form..ContextMenuSetItemEventHandler("ctxTransport","DeselectAll","DeselectAll")
'	
'	'Category grid
'	Gui.Form..ContextMenuCreate("ctxManifest")
'	gui.Form.gsManifest.ContextMenuAttach("ctxManifest")
'	Gui.Form..ContextMenuAddItem("ctxManifest","SelectAll",0,"Select All")
'	Gui.Form..ContextMenuSetItemEventHandler("ctxManifest","SelectAll","SelectAll")
'	
'	Gui.Form..ContextMenuAddItem("ctxManifest","DeselectAll",0,"Deselect All")
'	Gui.Form..ContextMenuSetItemEventHandler("ctxManifest","DeselectAll","DeselectAll")
	
	Gui.Form..ContextMenuCreate("ctxTransport")
	Gui.Form.gsTransport.ContextMenuAttach("ctxTransport")
	
	Gui.Form..ContextMenuAddItem("ctxTransport","ResetColumns",0,"Reset Columns")
	Gui.Form..ContextMenuSetItemEventHandler("ctxTransport","ResetColumns","MenuClickResetColumns")
	
	Gui.Form..ContextMenuCreate("ctxManifest")
	Gui.Form.gsManifest.ContextMenuAttach("ctxManifest")
	
	Gui.Form..ContextMenuAddItem("ctxManifest","ResetColumns",0,"Reset Columns")
	Gui.Form..ContextMenuSetItemEventHandler("ctxManifest","ResetColumns","MenuClickResetColumns")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.Create_ContextMenu.End

Program.Sub.MenuClickResetColumns.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	

	F.Intrinsic.Control.SelectCase(V.Args.MenuName.UCase)
		F.Intrinsic.Control.Case("CTXTRANSPORT")
			F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvTrasnport",6559,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
			F.Intrinsic.Control.CallSub(Load_Transport)
			
		F.Intrinsic.Control.Case("CTXMANIFEST")
			F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvManifest",6559,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
			F.Intrinsic.Control.CallSub(Load_Manifest)
			
	F.Intrinsic.Control.EndSelect
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickResetColumns.End

Program.Sub.Deserialize.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare
V.Local.sSerialize.Declare
V.Local.sForm.Declare
V.Local.sGridControl.Declare
V.Local.sGridView.Declare
V.Local.sREGID.Declare
V.Local.bEditOpt.Declare

V.Local.sForm.Set(V.Args.Form.Trim)
V.Local.sGridControl.Set(V.Args.GridControl.Trim)
V.Local.sGridView.Set(V.Args.GridView.Trim)
V.Local.sREGID.Set(V.Args.REGID.Trim)
'V.Local.bEditOpt.Set(V.Args.EditOpt)

F.Global.Registry.ReadValue(V.Caller.User, V.Caller.CompanyCode, V.Local.sGridView, V.Local.sREGID, 1000, 6, "", V.Local.sSerialize)
F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
	Gui.[V.Local.sForm].[V.Local.sGridControl].Deserialize(V.Local.sSerialize)
F.Intrinsic.Control.EndIf

'View/Edit Radio button Deserialize 
'F.Intrinsic.Control.If(V.Local.bEditOpt)
'	F.Global.Registry.ReadValue(V.Caller.User, V.Caller.CompanyCode, V.Local.sGridView, V.Local.sREGID, 1000, 0, "", V.Local.bEditOpt)
'	F.Intrinsic.Control.If(V.Local.bEditOpt)
'		Gui.F_Dash.opt_Edit.Value(True)
'	F.Intrinsic.Control.Else
'		Gui.F_Dash.opt_View.Value(True)
'	F.Intrinsic.Control.EndIf
'F.Intrinsic.Control.EndIf



F.Intrinsic.Control.Catch

	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} at {6} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Ambient.Now, V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End()

F.Intrinsic.Control.EndTry
Program.Sub.Deserialize.End

Program.Sub.Serialize.Start
F.Intrinsic.Control.Try

V.Local.sError.Declare
V.Local.sSerialize.Declare
V.Local.sForm.Declare
V.Local.sGridControl.Declare
V.Local.sGridView.Declare
V.Local.sREGID.Declare
V.Local.bEditOpt.Declare

V.Local.sForm.Set(V.Args.Form.Trim)
V.Local.sGridControl.Set(V.Args.GridControl.Trim)
V.Local.sGridView.Set(V.Args.GridView.Trim)
V.Local.sREGID.Set(V.Args.REGID.Trim)
'V.Local.bEditOpt.Set(V.Args.EditOpt)

GUI.[V.Local.sForm].[V.Local.sGridControl].Serialize(V.Local.sGridView, V.Local.sSerialize)
F.Global.Registry.AddValue(V.Caller.User, V.Caller.CompanyCode, V.Local.sGridView, V.Local.sREGID, 1000, False, "Serialize", V.Local.bEditOpt, 0, -999.0 , 1/1/1980, 12:00:00 AM, V.Local.sSerialize)

F.Intrinsic.Control.Catch

	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} at {6} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Ambient.Now, V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End()

F.Intrinsic.Control.EndTry
Program.Sub.Serialize.End
#End Region 'Initialize
'not using
Program.Sub.SelectAll.Start
V.Local.bTabVisible.Declare
f.Intrinsic.Control.Try

	V.Local.bTabVisible.Set(V.Screen.Form!tab1.Visible)
F.Intrinsic.Control.If(V.Local.bTabVisible)
	F.Data.DataTable.SetValue("dtTransport",-1,"Select",true)
F.Intrinsic.Control.Else
	F.Data.DataTable.SetValue("dtManifest",-1,"Select",true)
F.Intrinsic.Control.EndIf


f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.SelectAll.End

'not using
Program.Sub.DeselectAll.Start
V.Local.bTabVisible.Declare
f.Intrinsic.Control.Try

	V.Local.bTabVisible.Set(V.Screen.Form!tab1.Visible)
F.Intrinsic.Control.If(V.Local.bTabVisible)
	F.Data.DataTable.SetValue("dtTransport",-1,"Select",False)
F.Intrinsic.Control.Else
	F.Data.DataTable.SetValue("dtManifest",-1,"Select",False)
F.Intrinsic.Control.EndIf

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.DeselectAll.End

Program.Sub.Form_ExportClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare
	V.Local.sControl.Declare
	
	F.Intrinsic.Control.If(V.Screen.Form!Ac1.Visible)
		V.Local.sControl.Set("gsTransport")
	F.Intrinsic.Control.ElseIf(V.Screen.Form!Ac2.Visible)
		V.Local.sControl.Set("gsManifest")
	F.Intrinsic.Control.EndIf

	F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
	F.Intrinsic.Control.If(V.Local.bExcel)
		F.Intrinsic.String.Build("{0}\GAB_6559_{1}_Export.xlsx",V.Caller.LocalGssTempDir,V.Local.sControl,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.Form.[V.Local.sControl].Export(V.Local.sFileExport,"xlsx")
			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}\GAB_6559_{1}_Export.csv",V.Caller.LocalGssTempDir,V.Local.sControl,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.Form.[V.Local.sControl].Export(V.Local.sFileExport,"csv")
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
	F.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Form_ExportClick.End


#Region "Tab Transport"
Program.Sub.Load_Transport.Start
f.Intrinsic.Control.Try
	V.Local.sBegDate.Declare
	V.Local.sEndDate.Declare
	V.Local.dBegDate.Declare
	V.Local.dEndDate.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.local.iCnt.Declare
	v.Local.sSerialize.Declare
	v.Local.sProgrammedBy.Declare
	V.Local.bExists.Declare
	V.Local.sTest.Declare
	V.Local.sCompletedFilter.Declare
	
	f.Intrinsic.Control.If(v.DataTable.dtTransport.Exists)
		f.Data.DataTable.Close("dtTransport")
		gui.Form.gsTransport.ClearRows("gvTransport")		
	f.Intrinsic.Control.EndIf

	F.Data.Dictionary.Exists("dictInboundQTY",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictInboundQTY")
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictOutboundQTY",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictOutboundQTY")
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictPossQTY",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictPossQTY")
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictCustName",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictCustName")
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictInboundIndex",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictInboundIndex")
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictOutboundIndex",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictOutboundIndex")
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictPosIndex",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictPosIndex")
	f.Intrinsic.Control.EndIf
	
	
	'F.Intrinsic.String.Build("select ID, LID, Line, ItemQty, UnitQty, Rtrim(Unit) as Unit, Rtrim(Description) as Description, PriorityFlag, WOStatusID, RTRIM(ServiceID) as ServiceID from GAB_6559_Lines Where ID in (Select ID from GAB_6559_Galvaware where DATE_INVOICED = '1900-01-01') and ServiceID <> 'ZZZZZZZZZZ' and ServiceID not in (Select RTRIM(ServiceID) as ServiceID From GAB_6559_Service where Freight = '1' or QA = '1' )",v.Local.sProgrammedBy,V.Local.sSQL)
	F.Intrinsic.String.Build("select ID, LID, Line, ItemQty, UnitQty, Rtrim(Unit) as Unit, Rtrim(Description) as Description, PriorityFlag, WOStatusID, RTRIM(ServiceID) as ServiceID from GAB_6559_Lines Where ServiceID <> 'ZZZZZZZZZZ' and ServiceID not in (Select RTRIM(ServiceID) as ServiceID From GAB_6559_Service where Freight = '1' or QA = '1' )",v.Local.sProgrammedBy,V.Local.sSQL)
	F.Data.Datatable.CreateFromSQL("dtTransport0","conx",V.Local.sSQL,True)
	
	F.Data.Datatable.AddColumn("dtTransport0","SELECT","Boolean",False)
	
	F.Data.Datatable.AddColumn("dtTransport0","InboundItemQuantity","Long",0)
	F.Data.Dictionary.CreateFromSQL("dictInboundQTY","conx","select LID, Sum(ItemQuantity) as InboundItemQuantity from GAB_6559_Transport_WO where TransportNoteID in (Select TransportNoteID from GAB_6559_TransportNote where TransportArrangementID in (Select TransportNoteID from GAB_6559_TransportNoteId where MovementType = 'I')) group by LID;")
	F.Data.Dictionary.SetDefaultReturn("dictInboundQTY",0)
	F.Data.DataTable.FillFromDictionary("dtTransport0","dictInboundQTY","LID","InboundItemQuantity")
	
	
	F.Data.Datatable.AddColumn("dtTransport0","OutboundItemQuantity","Long",0)
	F.Data.Dictionary.CreateFromSQL("dictOutboundQTY","conx","select LID, Sum(ItemQuantity) as OutboundItemQuantity from GAB_6559_Transport_WO where TransportNoteID in (Select TransportNoteID from GAB_6559_TransportNote where TransportArrangementID in (Select TransportNoteID from GAB_6559_TransportNoteId where MovementType = 'O')) group by LID;")
	F.Data.Dictionary.SetDefaultReturn("dictOutboundQTY",0)
	F.Data.DataTable.FillFromDictionary("dtTransport0","dictOutboundQTY","LID","OutboundItemQuantity")
	
	
	F.Data.Datatable.AddColumn("dtTransport0","PossItemQuantity","Long",0)
	F.Data.Dictionary.CreateFromSQL("dictPossQTY","conx","select LID, Sum(ItemQuantity) as PossItemQuantity from GAB_6559_Transport_WO where TransportNoteID in (Select TransportNoteID from GAB_6559_TransportNote where TransportArrangementID in (Select TransportNoteID from GAB_6559_TransportNoteId where MovementType = 'P')) group by LID;")
	F.Data.Dictionary.SetDefaultReturn("dictPossQTY",0)
	F.Data.DataTable.FillFromDictionary("dtTransport0","dictPossQTY","LID","PossItemQuantity")
	
	
	F.Data.Datatable.AddExpressionColumn("dtTransport0","Inbound_Needed","Long","[ItemQty] - [InboundItemQuantity]")
	F.Data.Datatable.AddExpressionColumn("dtTransport0","Outbound_Needed","Long","[ItemQty] - [OutboundItemQuantity]")
	F.Data.Datatable.AddExpressionColumn("dtTransport0","Possesson_Needed","Long","[ItemQty] - [PossItemQuantity]")
	
	
	F.Intrinsic.Control.If(v.Screen.Form!chkCompletedOrders.CheckedAsBoolean)
		V.Local.sCompletedFilter.Set("")
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("[Possesson_Needed] > 0",V.Local.sTest,V.Local.sCompletedFilter)
	F.Intrinsic.Control.EndIf
	
	F.Data.DataView.Create("dtTransport0","dvTransport",22,V.Local.sCompletedFilter,"")
	F.Data.DataView.ToDataTable("dtTransport0","dvTransport","dtTransport",True)
	F.Data.DataTable.Close("dtTransport0")
	
	'Fill in the Customer Code and Ship Seq from the WO we just added above.
	F.Data.Datatable.AddColumn("dtTransport","CUSTOMER_CODE","String","")	
	F.Data.Datatable.AddColumn("dtTransport","SHIP_SEQ","String","")
	F.Data.Datatable.AddColumn("dtTransport","RECEIPTED","Date")	
	F.Data.DataTable.CreateFromSQL("dtCustomerShip","conx","Select ID, RTRIM(CUSTOMER) as CUSTOMER, RTRIM(SHIP_SEQ) as SHIP_SEQ, RECEIPTED From GAB_6559_Galvaware",True)
	F.Data.Dictionary.CreateFromDataTable("dictCustomer","dtCustomerShip","ID","CUSTOMER")	
	F.Data.Dictionary.CreateFromDataTable("dictShipSeq","dtCustomerShip","ID","SHIP_SEQ")
	F.Data.Dictionary.CreateFromDataTable("dictDateRecipted","dtCustomerShip","ID","RECEIPTED")
	F.Data.Dictionary.SetDefaultReturn("dictCustomer","")
	F.Data.Dictionary.SetDefaultReturn("dictShipSeq","")
	F.Data.DataTable.FillFromDictionary("dtTransport","dictCustomer","ID","CUSTOMER_CODE")
	F.Data.DataTable.FillFromDictionary("dtTransport","dictShipSeq","ID","SHIP_SEQ")
	F.Data.DataTable.FillFromDictionary("dtTransport","dictDateRecipted","ID","RECEIPTED")
	F.Data.Dictionary.Close("dictCustomer")
	F.Data.Dictionary.Close("dictShipSeq")
	F.Data.Dictionary.Close("dictDateRecipted")
	F.Data.DataTable.Close("dtCustomerShip")
	
	F.Data.DataTable.AddExpressionColumn("dtTransport","Customer_Key","String","[CUSTOMER_CODE] + '-' + [SHIP_SEQ]")
	
	'Filling in Customer Ship to Name from GAB_6559_Customer_Xref
	F.Data.DataTable.AddColumn("dtTransport","CUSTOMER_SHIPNAME","String","")
	F.Data.Dictionary.CreateFromSQL("dictCustName","Conx","Select RTRIM(SHIP_KEY) as SHIP_KEY, RTRIM(CUSTOMER_NAME) as CUSTOMER_NAME FROM GAB_6559_Customer_Xref")
	F.Data.Dictionary.SetDefaultReturn("dictCustName","")
	F.Data.DataTable.FillFromDictionary("dtTransport","dictCustName","Customer_Key","CUSTOMER_SHIPNAME")
	
	'Dict for Customer Bill to Name
	F.Data.DataTable.AddColumn("dtTransport","Bill_To_Name","String","")
	F.Data.DataTable.FillFromDictionary("dtTransport","dictCustomerBillName","CUSTOMER_CODE","Bill_To_Name")
	
	'Add in default Inbound, Outbound, and Possession
	F.Data.DataTable.AddColumn("dtTransport","InboundDefault","Long",0)
	F.Data.DataTable.AddColumn("dtTransport","OutboundDefault","Long",0)
	F.Data.DataTable.AddColumn("dtTransport","PossessionDefault","Long",0)
	F.Data.DataTable.CreateFromSQL("dtArrangementDefault","Conx","select ID, INBOUND, OUTBOUND, POSSESSION from GAB_6559_Galvaware",True)
	F.Data.Dictionary.CreateFromDataTable("dictInboundIndex","dtArrangementDefault","ID","INBOUND")
	F.Data.Dictionary.CreateFromDataTable("dictOutboundIndex","dtArrangementDefault","ID","OUTBOUND")
	F.Data.Dictionary.CreateFromDataTable("dictPosIndex","dtArrangementDefault","ID","POSSESSION")
	F.Data.DataTable.FillFromDictionary("dtTransport","dictInboundIndex","ID","InboundDefault")
	F.Data.DataTable.FillFromDictionary("dtTransport","dictOutboundIndex","ID","OutboundDefault")
	F.Data.DataTable.FillFromDictionary("dtTransport","dictPosIndex","ID","PossessionDefault")
	F.Data.DataTable.Close("dtArrangementDefault")
	
	'Transport Arrangement Descriptions
	F.Data.DataTable.AddColumn("dtTransport","Inbound_Def_Desc","String","")
	F.Data.DataTable.AddColumn("dtTransport","Outbound_Def_Desc","String","")
	F.Data.DataTable.AddColumn("dtTransport","Pos_Def_Desc","String","")
	F.Data.DataTable.FillFromDictionary("dtTransport","dictTransArrangement","InboundDefault","Inbound_Def_Desc")
	F.Data.DataTable.FillFromDictionary("dtTransport","dictTransArrangement","OutboundDefault","Outbound_Def_Desc")
	F.Data.DataTable.FillFromDictionary("dtTransport","dictTransArrangement","PossessionDefault","Pos_Def_Desc")
	
	'Filling in Credit Hold from V_Customer_MASTER
	F.Data.Datatable.AddColumn("dtTransport","CreditHold","Boolean",False)
	F.Data.Dictionary.CreateFromSQL("dictCreditHold","Conx","select RTRIM(CUSTOMER) as CUSTOMER, Cast(IF(FLAG_CREDIT_HOLD = 'Y', '1', '0') as bit) as FLAG_CREDIT_HOLD from V_CUSTOMER_MASTER")
	F.Data.Dictionary.SetDefaultReturn("dictCreditHold",False)
	F.Data.DataTable.FillFromDictionary("dtTransport","dictCreditHold","CUSTOMER_CODE","CreditHold")
	F.Data.Dictionary.Close("dictCreditHold")
	
	'Fill Inbound Transport Note ID from WOID
	F.Data.Dictionary.CreatefromSQL("dictTNIDInbound","Conx","select WorkOrderID, TransportNoteID from GAB_6559_Transport_WO Where TransportNoteID in (Select TransportNoteID from GAB_6559_TransportNote where TransportArrangementID in (Select TransportNoteID from GAB_6559_TransportNoteId where MovementType = 'I'))")
	F.Data.Dictionary.SetDefaultReturn("dictTNIDInbound","")
	F.Data.Datatable.AddColumn("dtTransport","TNID_INB","STRING","")
	F.Data.Datatable.FillFromDictionary("dtTransport","dictTNIDInbound","ID","TNID_INB")
	F.Data.Dictionary.Close("dictTNIDInbound")
	
	'Fill Transport Note ID Date Time Delivery from TNID
	F.Data.Dictionary.CreatefromSQL("dictTNIDDate","Conx","select TransportNoteID, DateTimeDelivery from GAB_6559_TransportNote")
	'F.Data.Dictionary.SetDefaultReturn("dictTNIDDate",)
	F.Data.Datatable.AddColumn("dtTransport","DATETIMEDELIVERY_I","Date")
	F.Data.Datatable.FillFromDictionary("dtTransport","dictTNIDDate","TNID_INB","DATETIMEDELIVERY_I")
	F.Data.Dictionary.Close("dictTNIDDate")
	
	
	
	gui.Form.gsTransport.AddGridviewFromDatatable("gvTransport","dtTransport")
	
	f.Intrinsic.Control.CallSub(Format_Transport)
	
	gui.Form.gsTransport.MainView("gvTransport")	
	gui.Form.tab1.SetTab(0)


f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Load_Transport.End

Program.Sub.Format_Transport.Start
	V.Local.sProp.Declare
	v.Local.sValue.Declare	
	V.Local.iRet.Declare
	V.Local.iCnt.Declare
	v.Local.sValue2.Declare
	v.Local.sValue3.Declare
	
	gui.Form.gsTransport.SuspendLayout()
	
	gui.Form.gsTransport.SetGridViewProperty("gvTransport","AllowSort",True)
	gui.Form.gsTransport.SetGridViewProperty("gvTransport","AllowFilter",True)
	gui.Form.gsTransport.SetGridViewProperty("gvTransport","OptionsDetailShowDetailTabs",False)
	gui.Form.gsTransport.SetGridViewProperty("gvTransport","OptionsViewShowGroupPanel",True)
	gui.Form.gsTransport.SetGridViewProperty("gvTransport","EnableAppearanceOddRow",True)
	gui.Form.gsTransport.SetGridviewProperty("gvTransport",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.gsTransport.SetGridviewProperty("gvTransport","OptionsViewColumnAutoWidth",False)
	gui.Form.gsTransport.SetGridviewProperty("gvTransport","AllowColumnResizing",True)	
	gui.Form.gsTransport.SetGridviewProperty("gvTransport","ColumnPanelRowHeight","50")
	gui.Form.gsTransport.SetGridviewProperty("gvTransport",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)	
	gui.Form.gsTransport.SetGridviewProperty("gvTransport", "ShowConditionalFormattingItem", True)
	
	gui.Form.gsTransport.Setgridviewproperty("gvTransport","multiselect",true)
	gui.Form.gsTransport.Setgridviewproperty("gvTransport","multiselectmode",2)
	gui.Form.gsTransport.Setgridviewproperty("gvTransport","CheckBoxSelectorField","SELECT")
	
	f.Intrinsic.Control.CallSub(Bulk_Format_Transport,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Transport,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Transport,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_Transport,"sProp","HeaderVAlignment","sValue","Top")	
	f.Intrinsic.Control.CallSub(Bulk_Format_Transport,"sProp","MinWidth","sValue","40")
	
	Gui.Form.gsTransport.SetColumnProperty("gvTransport","SELECT","Visible",False)
	Gui.Form.gsTransport.SetColumnProperty("gvTransport","LID","Visible",False)
	Gui.Form.gsTransport.SetColumnProperty("gvTransport","InboundDefault","Visible",False)
	Gui.Form.gsTransport.SetColumnProperty("gvTransport","OutboundDefault","Visible",False)
	Gui.Form.gsTransport.SetColumnProperty("gvTransport","PossessionDefault","Visible",False)
	Gui.Form.gsTransport.SetColumnProperty("gvTransport","ServiceID","Visible",False)
	
'SELECT
'ID
'LID
'Line
'ItemQty
'UnitQty
'Unit
'Description
'PriorityFlag
'WOStatusID
'InboundItemQuantity
'OutboundItemQuantity
'PossItemQuantity
'Inbound_Needed
'Outbound_Needed
'Possesson_Needed
'CUSTOMER_CODE
'SHIP_SEQ
'Customer_Key
'CUSTOMER_SHIPNAME
'Bill_To_Name
'Inbound_Def_Desc
'Outbound_Def_Desc
'Pos_Def_Desc
'InboundDefault
'OutboundDefault
'PossessionDefault

	v.Local.sProp.Set("VisibleIndex")
	v.Local.iCnt.Set(-1)	
	gui.Form.gsTransport.SetColumnProperty("gvTransport","ID",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Line",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","CUSTOMER_SHIPNAME",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","RECEIPTED",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","ItemQty",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Description",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","InboundItemQuantity",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Inbound_Needed",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","OutboundItemQuantity",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Outbound_Needed",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","PossItemQuantity",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Possesson_Needed",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","CreditHold",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","UnitQty",v.Local.sProp,v.Local.iCnt.++)	
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Unit",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","PriorityFlag",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","WOStatusID",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Inbound_Def_Desc",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Outbound_Def_Desc",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Pos_Def_Desc",v.Local.sProp,v.Local.iCnt.++)


	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","ID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","LID",v.Local.sProp,v.Local.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Line",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","ItemQty",v.Local.sProp,v.Local.sValue3)	
	gui.Form.gsTransport.SetColumnProperty("gvTransport","InboundItemQuantity",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Inbound_Needed",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","OutboundItemQuantity",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Outbound_Needed",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","PossItemQuantity",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Possesson_Needed",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","UnitQty",v.Local.sProp,v.Local.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Unit",v.Local.sProp,v.Local.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Description",v.Local.sProp,v.Local.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","PriorityFlag",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","WOStatusID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","CreditHold",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","RECEIPTED",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","TNID_INB",v.Local.sProp,v.Local.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","DATETIMEDELIVERY_I",v.Local.sProp,v.Local.sValue2)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","ID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","LID",v.Local.sProp,v.Local.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Line",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","ItemQty",v.Local.sProp,v.Local.sValue3)	
	gui.Form.gsTransport.SetColumnProperty("gvTransport","InboundItemQuantity",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Inbound_Needed",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","OutboundItemQuantity",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Outbound_Needed",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","PossItemQuantity",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Possesson_Needed",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","UnitQty",v.Local.sProp,v.Local.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Unit",v.Local.sProp,v.Local.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Description",v.Local.sProp,v.Local.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","PriorityFlag",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","WOStatusID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","CreditHold",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","RECEIPTED",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","TNID_INB",v.Local.sProp,v.Local.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","DATETIMEDELIVERY_I",v.Local.sProp,v.Local.sValue2)
	
	v.Local.sProp.Set("Caption")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","SELECT",v.Local.sProp,"Select")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","ID",v.Local.sProp,"Order ID")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","LID",v.Local.sProp,"LID")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Line",v.Local.sProp,"Line #")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","ItemQty",v.Local.sProp,"Order Line Qty")	
	gui.Form.gsTransport.SetColumnProperty("gvTransport","InboundItemQuantity",v.Local.sProp,"Inbounded Item Qty")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Inbound_Needed",v.Local.sProp,"Inbound Needed")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","OutboundItemQuantity",v.Local.sProp,"Outbound Item Qty")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Outbound_Needed",v.Local.sProp,"Outbound Needed")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","PossItemQuantity",v.Local.sProp,"Possesson Item Qty")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Possesson_Needed",v.Local.sProp,"Possesson Needed")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","UnitQty",v.Local.sProp,"Unit Qty (Order Line)")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Unit",v.Local.sProp,"Unit")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Description",v.Local.sProp,"Part Description")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","PriorityFlag",v.Local.sProp,"Priority Flad")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","WOStatusID",v.Local.sProp,"WO Status ID")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","CUSTOMER_CODE",v.Local.sProp,"Customer Code")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","SHIP_SEQ",v.Local.sProp,"Ship Seq")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Customer_Key",v.Local.sProp,"Customer Key")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","CUSTOMER_SHIPNAME",v.Local.sProp,"Ship To Name")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Bill_To_Name",v.Local.sProp,"Bill To Name")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Inbound_Def_Desc",v.Local.sProp,"Inbound Default")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Outbound_Def_Desc",v.Local.sProp,"Outbound Default")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Pos_Def_Desc",v.Local.sProp,"Possession Deault")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","CreditHold",v.Local.sProp,"Credit Hold")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","RECEIPTED",v.Local.sProp,"Receipted Date")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","TNID_INB",v.Local.sProp,"Inb. Transport Note ID")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","DATETIMEDELIVERY_I",v.Local.sProp,"Inb. DateTime Delivery")
	
	
	v.Local.sProp.Set("Width")
'	gui.Form.gsTransport.SetColumnProperty("gvTransport","SELECT",v.Local.sProp,"70")
'	gui.Form.gsTransport.SetColumnProperty("gvTransport","SERVICEID",v.Local.sProp,"70")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","CUSTOMER_CODE",v.Local.sProp,"70")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","SHIP_SEQ",v.Local.sProp,"70")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Customer_Key",v.Local.sProp,"100")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","CUSTOMER_SHIPNAME",v.Local.sProp,"150")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Bill_To_Name",v.Local.sProp,"150")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","RECEIPTED",v.Local.sProp,"125")
	
	
'	For RowCellClick and CellValueChanged
	v.Local.sProp.Set("AllowEdit")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","SELECT",v.Local.sProp,True)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","RECEIPTED",v.Local.sProp,False)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","TNID_INB",v.Local.sProp,False)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","DATETIMEDELIVERY_I",v.Local.sProp,False)
'	gui.Form.gsTransport.SetColumnProperty("gvTransport","SERVICEID",v.Local.sProp,False)


	v.Local.sProp.Set("ReadOnly")
	gui.Form.gsTransport.SetColumnProperty("gvTransport","SELECT",v.Local.sProp,False)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","RECEIPTED",v.Local.sProp,True)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","TNID_INB",v.Local.sProp,True)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","DATETIMEDELIVERY_I",v.Local.sProp,True)
'	gui.Form.gsTransport.SetColumnProperty("gvTransport","SERVICEID",v.Local.sProp,True)
	
	Gui.Form.gsTransport.SetColumnProperty("gvTransport","UNITQTY","DisplayCustomNumeric","###,###,##0.00")
	
	'BackForeColor
'	v.Local.sProp.Set("CellBackColor")
'	v.Local.sValue.Set("LightYellow")
	'gui.Form.gsTransport.SetColumnProperty("gvTransport","Note",v.Local.sProp,v.Local.sValue)
	
'	v.Local.sProp.Set("DisplayCustomDatetime")
'	v.Local.sValue.Set("d")	
'	gui.Form.gsTransport.SetColumnProperty("gvTransport","DueDate",v.Local.sProp,v.Local.sValue)
'	

	gui.Form.gsTransport.AddStyleFormatCondition("gvTransport","CreditHold","CreditHold","Expression","[CreditHold] = True")
	gui.Form.gsTransport.SetStyleFormatConditionProperty("gvTransport","CreditHold","CreditHold","backcolor","Red")
	
	gui.Form.gsTransport.AddStyleFormatCondition("gvTransport","Inbound_Needed","Inbound_Needed","Expression","[Inbound_Needed] > 0")
	gui.Form.gsTransport.SetStyleFormatConditionProperty("gvTransport","Inbound_Needed","Inbound_Needed","backcolor","Pink")
		gui.Form.gsTransport.AddStyleFormatCondition("gvTransport","Outbound_Needed","Outbound_Needed","Expression","[Outbound_Needed] > 0")
	gui.Form.gsTransport.SetStyleFormatConditionProperty("gvTransport","Outbound_Needed","Outbound_Needed","backcolor","Pink")
		gui.Form.gsTransport.AddStyleFormatCondition("gvTransport","Possesson_Needed","Possesson_Needed","Expression","[Possesson_Needed] > 0")
	gui.Form.gsTransport.SetStyleFormatConditionProperty("gvTransport","Possesson_Needed","Possesson_Needed","backcolor","Pink")
	gui.Form.gsTransport.ResumeLayout()

Program.Sub.Format_Transport.End

Program.Sub.Bulk_Format_Transport.Start
	gui.Form.gsTransport.SetColumnProperty("gvTransport","SELECT",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","ID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","LID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Line",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","ItemQty",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","UnitQty",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Unit",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Description",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","PriorityFlag",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","WOStatusID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","InboundItemQuantity",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","OutboundItemQuantity",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","PossItemQuantity",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Inbound_Needed",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Outbound_Needed",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Possesson_Needed",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","CUSTOMER_CODE",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","SHIP_SEQ",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Customer_Key",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","CUSTOMER_SHIPNAME",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Bill_To_Name",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Inbound_Def_Desc",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Outbound_Def_Desc",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","Pos_Def_Desc",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","InboundDefault",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","OutboundDefault",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","PossessionDefault",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","CreditHold",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","ServiceID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","RECEIPTED",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","TNID_INB",v.Args.sProp,v.Args.sValue)
	gui.Form.gsTransport.SetColumnProperty("gvTransport","DATETIMEDELIVERY_I",v.Args.sProp,v.Args.sValue)

Program.Sub.Bulk_Format_Transport.End

Program.Sub.ac1_ElementClick.Start
f.Intrinsic.Control.Try
	v.Local.iRet.Declare
	v.Local.bAuth.Declare
	
	
	'This will prevent from multi-clicking too fast the button
	f.Intrinsic.Control.If(v.Global.bLoading)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bLoading.Set(True)	
	
	gui.Form.lblPleasewait.Visible(True)
	gui.Form.lblpleasewait.Text("Please wait ...")		
	
	f.Intrinsic.Control.SelectCase(v.Args.ElementID.UCase)
		f.Intrinsic.Control.Case("SERVICEWEB")
			F.Intrinsic.Task.ShellExec(0,"Open","https://www.gss-service.com/","","",0)	
	
		f.Intrinsic.Control.Case("INBOUND")
			F.Intrinsic.Control.CallSub("LoaddtIOP","IOP","INBOUND")
			
		f.Intrinsic.Control.Case("OUTBOUND")
			F.Intrinsic.Control.CallSub("LoaddtIOP","IOP","OUTBOUND")
			
		f.Intrinsic.Control.Case("POSSESSION")
			F.Intrinsic.Control.CallSub("LoaddtIOP","IOP","POSSESSION")
			

		
	f.Intrinsic.Control.EndSelect
	
	v.Global.bPassedFirstLoad.Set(True)
	gui.Form.lblPleasewait.Visible(False)	
	
	v.Global.bLoading.Set(False)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ac1_ElementClick.End

Program.Sub.chkCompletedOrders_Change.Start
F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","IOP")
Program.Sub.chkCompletedOrders_Change.End

#End Region 'Tab Transport

#Region "Tab Manifest"
Program.Sub.Load_Manifest.Start
f.Intrinsic.Control.Try
	V.Local.sBegDate.Declare
	V.Local.sEndDate.Declare
	V.Local.dBegDate.Declare
	V.Local.dEndDate.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.local.iCnt.Declare
	v.Local.sSerialize.Declare
	v.Local.sProgrammedBy.Declare
	V.Local.bExists.Declare
	V.Local.sFilter.Declare
	
	f.Intrinsic.Control.If(v.DataTable.dtManifest.Exists)
		f.Data.DataTable.Close("dtManifest")
		gui.Form.gsManifest.ClearRows("gvManifest")		
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictCustName",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictCustName")
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictCustomerBillName",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictCustomerBillName")
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictCustShipName",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictCustShipName")
	f.Intrinsic.Control.EndIf
	
	'Building Where filter for TransportArrangementID based on DDL
	F.Intrinsic.Control.If(v.Screen.Form!ddlTransportArrangement.Value,<>,"")
		F.Intrinsic.String.Build("where TransportArrangementID = '{0}'",v.Screen.Form!ddlTransportArrangement.ListIndex,V.Local.sFilter)
	F.Intrinsic.Control.Else
		V.Local.sFilter.Set("")
		F.Intrinsic.Control.If(V.Global.sTNIDFilter,<>,"")
			'This means we just created transport notes from the IOP screen, Lets only those ones by applying a where filter from the V.Global.sTNIDFilter varriable.
			F.Intrinsic.String.Build("Where TransportNoteID in ({0})",V.Global.sTNIDFilter,V.Local.sFilter)
			V.Global.sTNIDFilter.Set("")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("Select TransportNoteID, DateTimeDelivery, RTRIM(RegistrationNumber) as RegistrationNumber, RTRIM(DriverName) as DriverName, RTRIM(GS_USER) as GS_USER, TransportArrangementID, '' as TransportArrangement, '' as MovementType, '' as MovementDesc, RTRIM(Note) as Note, RTRIM(SysUserLastAccess) as SysUserLastAccess, SysUserLastAccessDateTime FROM GAB_6559_TransportNote {0} Order by TransportNoteID DESC ",V.Local.sFilter,V.Local.sSQL)
	F.Data.Datatable.CreateFromSQL("dtManifest","conx",V.Local.sSQL,True)
	
	F.Data.Datatable.AddColumn("dtManifest","SELECT","Boolean",False)
	
	'Total weight for each transportnote, need to sum wieght for each LID's ItemQuantity on the transportnote 
	F.Data.Datatable.AddColumn("dtManifest","Weight","Long",0)	
	F.Data.Dictionary.CreateFromSQL("dictWeight","conx","Select TransportNoteID, Sum(A.ItemQuantity * UnitQty) as Weight from GAB_6559_Transport_WO A left join GAB_6559_Lines B on A.LID = B.LID group by TransportNoteID")
	F.Data.Dictionary.SetDefaultReturn("dictWeight",0.00)
	F.Data.DataTable.FillFromDictionary("dtManifest","dictWeight","TransportNoteID","Weight")
	F.Data.Dictionary.Close("dictWeight")
	
	'dictionary for TransportArrangementID, TransportArrangement
	F.Data.DataTable.FillFromDictionary("dtManifest","dictTransArrangement","TransportArrangementID","TransportArrangement")
	
	
	'dictionary for TransportArrangementID, MovementType
	F.Data.DataTable.FillFromDictionary("dtManifest","dictTransMovement","TransportArrangementID","MovementType")
	
	'dictionary for Movement Desc
	F.Data.Dictionary.Create("dictMovementDesc")
	F.Data.Dictionary.AddItem("dictMovementDesc","I","Inbound")
	F.Data.Dictionary.AddItem("dictMovementDesc","O","Outbound")
	F.Data.Dictionary.AddItem("dictMovementDesc","P","Possession")
	F.Data.Dictionary.SetDefaultReturn("dictMovementDesc","")
	F.Data.DataTable.FillFromDictionary("dtManifest","dictMovementDesc","MovementType","MovementDesc")
	F.Data.Dictionary.Close("dictMovementDesc")
	
	'Add the first WO on the Transport ID to then get the Customer name.
	F.Data.Datatable.AddColumn("dtManifest","WorkOrderID","Long",0)
	F.Data.Dictionary.CreateFromSQL("dictTransportWO","conx","select TransportNoteID, WorkOrderID from GAB_6559_Transport_WO Order by WorkOrderID ASC;")
	F.Data.Dictionary.SetDefaultReturn("dictTransportWO",0)
	F.Data.DataTable.FillFromDictionary("dtManifest","dictTransportWO","TransportNoteID","WorkOrderID")
	F.Data.Dictionary.Close("dictTransportWO")
	
	'Fill in the Customer Code and Ship Seq from the WO we just added above.
	F.Data.Datatable.AddColumn("dtManifest","CUSTOMER_CODE","String","")	
	F.Data.Datatable.AddColumn("dtManifest","SHIP_SEQ","String","")
	F.Data.DataTable.CreateFromSQL("dtCustomerShip","conx","Select ID, RTRIM(CUSTOMER) as CUSTOMER, RTRIM(SHIP_SEQ) as SHIP_SEQ From GAB_6559_Galvaware",True)
	F.Data.Dictionary.CreateFromDataTable("dictCustomer","dtCustomerShip","ID","CUSTOMER")	
	F.Data.Dictionary.CreateFromDataTable("dictShipSeq","dtCustomerShip","ID","SHIP_SEQ")
	F.Data.Dictionary.SetDefaultReturn("dictCustomer","")
	F.Data.Dictionary.SetDefaultReturn("dictShipSeq","")
	F.Data.DataTable.FillFromDictionary("dtManifest","dictCustomer","WorkOrderID","CUSTOMER_CODE")
	F.Data.DataTable.FillFromDictionary("dtManifest","dictShipSeq","WorkOrderID","SHIP_SEQ")
	F.Data.Dictionary.Close("dictCustomer")
	F.Data.Dictionary.Close("dictShipSeq")
	F.Data.DataTable.Close("dtCustomerShip")
	
	F.Data.DataTable.AddExpressionColumn("dtManifest","Customer_Key","String","[CUSTOMER_CODE] + '-' + [SHIP_SEQ]")
	
	'Filling in Customer Ship to Name from GAB_6559_Customer_Xref
	F.Data.DataTable.AddColumn("dtManifest","CUSTOMER_SHIPNAME","String","")
	F.Data.Dictionary.CreateFromSQL("dictCustName","Conx","Select RTRIM(SHIP_KEY) as SHIP_KEY, RTRIM(CUSTOMER_NAME) as CUSTOMER_NAME FROM GAB_6559_Customer_Xref")
	F.Data.Dictionary.SetDefaultReturn("dictCustName","")
	F.Data.DataTable.FillFromDictionary("dtManifest","dictCustName","Customer_Key","CUSTOMER_SHIPNAME")
	
	'Dict for Customer Bill to Name
	F.Data.DataTable.AddColumn("dtManifest","Bill_To_Name","String","")
	F.Data.Dictionary.CreateFromSQL("dictCustomerBillName","Conx","select RTRIM(Customer) as Customer, RTRIM(Name_Customer) as Name_Customer from V_CUSTOMER_MASTER")
	F.Data.Dictionary.SetDefaultReturn("dictCustomerBillName","")
	F.Data.DataTable.FillFromDictionary("dtManifest","dictCustomerBillName","CUSTOMER_CODE","Bill_To_Name")
	
	'Dict from datatable for TNID, CUSTOMER_SHIPNAME... used in Crystal report parameters
	F.Data.Dictionary.CreateFromDataTable("dictCustShipName","dtManifest","TransportNoteID","CUSTOMER_SHIPNAME")	
	
	gui.Form.gsManifest.AddGridviewFromDatatable("gvManifest","dtManifest")
	
	
	'SELECT
	'TransportNoteID
	'DateTimeDelivery
	'RegistrationNumber
	'DriverName
	'GS_USER
	'TransportArrangementID
	'TransportArrangement
	'MovementType
	'MovementDesc
	'Note
	'SysUserLastAccess
	'SysUserLastAccessDateTime
	'Weight
	'WorkOrderID
	'CUSTOMER_CODE
	'SHIP_SEQ
	'Customer_Key
	'Bill_To_Name
	'CUSTOMER_SHIPNAME
	f.Intrinsic.Control.CallSub(Format_Manifest)
	
	gui.Form.gsManifest.MainView("gvManifest")	
	gui.Form.tab1.SetTab(0)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Load_Manifest.End

Program.Sub.Format_Manifest.Start
	V.Local.sProp.Declare
	v.Local.sValue.Declare	
	V.Local.iRet.Declare
	V.Local.iCnt.Declare
	v.Local.sValue2.Declare
	v.Local.sValue3.Declare
	
	gui.Form.gsManifest.SuspendLayout()
	
	gui.Form.gsManifest.SetGridViewProperty("gvManifest","MultiSelect",True)
	gui.Form.gsManifest.SetGridViewProperty("gvManifest","AllowSort",True)
	gui.Form.gsManifest.SetGridViewProperty("gvManifest","AllowFilter",True)
	gui.Form.gsManifest.SetGridViewProperty("gvManifest","OptionsDetailShowDetailTabs",False)
	gui.Form.gsManifest.SetGridViewProperty("gvManifest","OptionsViewShowGroupPanel",True)
	gui.Form.gsManifest.SetGridViewProperty("gvManifest","EnableAppearanceOddRow",True)
	gui.Form.gsManifest.SetGridviewProperty("gvManifest",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.gsManifest.SetGridviewProperty("gvManifest","OptionsViewColumnAutoWidth",False)
	gui.Form.gsManifest.SetGridviewProperty("gvManifest","AllowColumnResizing",True)	
	gui.Form.gsManifest.SetGridviewProperty("gvManifest","ColumnPanelRowHeight","50")
	gui.Form.gsManifest.SetGridviewProperty("gvManifest",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.Form.gsManifest.SetGridviewProperty("gvManifest", "ShowConditionalFormattingItem", True)
	
	gui.Form.gsManifest.Setgridviewproperty("gvManifest","multiselect",true)
	gui.Form.gsManifest.Setgridviewproperty("gvManifest","multiselectmode",2)
	gui.Form.gsManifest.Setgridviewproperty("gvManifest","CheckBoxSelectorField","SELECT")
	
	f.Intrinsic.Control.CallSub(Bulk_Format_Manifest,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Manifest,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Manifest,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_Manifest,"sProp","HeaderVAlignment","sValue","Top")	
	f.Intrinsic.Control.CallSub(Bulk_Format_Manifest,"sProp","MinWidth","sValue","40")

	gui.Form.gsManifest.SetColumnProperty("gvManifest","SELECT",v.Enum.ColumnPropertyNames!ShowCaption,False)
	Gui.Form.gsManifest.SetColumnProperty("gvManifest","SELECT","Visible",False)

	
	v.Local.sProp.Set("VisibleIndex")
	v.Local.iCnt.Set(-1)	
	gui.Form.gsManifest.SetColumnProperty("gvManifest","TransportNoteID",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Customer_Key",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","DateTimeDelivery",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","RegistrationNumber",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","DriverName",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","GS_USER",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","TransportArrangement",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","MovementDesc",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Note",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Weight",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","WorkOrderID",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","CUSTOMER_CODE",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","SHIP_SEQ",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Bill_To_Name",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","CUSTOMER_SHIPNAME",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","SysUserLastAccess",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","SysUserLastAccessDateTime",v.Local.sProp,v.Local.iCnt.++)

	'SELECT
	'TransportNoteID
	'Customer_Key
	'DateTimeDelivery
	'RegistrationNumber
	'DriverName
	'GS_USER
	'TransportArrangementID
	'TransportArrangement
	'MovementType
	'MovementDesc
	'Note
	'Weight
	'WorkOrderID
	'CUSTOMER_CODE
	'SHIP_SEQ
	'SysUserLastAccess
	'SysUserLastAccessDateTime
	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","TransportNoteID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Customer_Key",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","DateTimeDelivery",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","RegistrationNumber",v.Local.sProp,v.Local.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","DriverName",v.Local.sProp,v.Local.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","GS_USER",v.Local.sProp,v.Local.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","TransportArrangementID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","TransportArrangement",v.Local.sProp,v.Local.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","MovementType",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","MovementDesc",v.Local.sProp,v.Local.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Note",v.Local.sProp,v.Local.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Weight",v.Local.sProp,v.Local.sValue3)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","WorkOrderID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","CUSTOMER_CODE",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","SHIP_SEQ",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Bill_To_Name",v.Local.sProp,v.Local.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","CUSTOMER_SHIPNAME",v.Local.sProp,v.Local.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","SysUserLastAccess",v.Local.sProp,v.Local.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)
	
	v.Local.sProp.Set("CellHAlignment")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","TransportNoteID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Customer_Key",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","DateTimeDelivery",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","RegistrationNumber",v.Local.sProp,v.Local.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","DriverName",v.Local.sProp,v.Local.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","GS_USER",v.Local.sProp,v.Local.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","TransportArrangementID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","TransportArrangement",v.Local.sProp,v.Local.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","MovementType",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","MovementDesc",v.Local.sProp,v.Local.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Note",v.Local.sProp,v.Local.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Weight",v.Local.sProp,v.Local.sValue3)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","WorkOrderID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","CUSTOMER_CODE",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","SHIP_SEQ",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Bill_To_Name",v.Local.sProp,v.Local.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","CUSTOMER_SHIPNAME",v.Local.sProp,v.Local.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","SysUserLastAccess",v.Local.sProp,v.Local.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)

	
	v.Local.sProp.Set("Caption")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","SELECT",v.Local.sProp,"Select")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","TransportNoteID",v.Local.sProp,"Transport Note ID")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Customer_Key",v.Local.sProp,"Customer Key")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","DateTimeDelivery",v.Local.sProp,"DateTime Delivery")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","RegistrationNumber",v.Local.sProp,"Registration Number")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","DriverName",v.Local.sProp,"Driver Name")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","GS_USER",v.Local.sProp,"GS User")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","TransportArrangementID",v.Local.sProp,"Transport Arrangement ID")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","TransportArrangement",v.Local.sProp,"Transport Arrangement")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","MovementType",v.Local.sProp,"Movement Type")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","MovementDesc",v.Local.sProp,"Movement Desc")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Note",v.Local.sProp,"Note")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Weight",v.Local.sProp,"Weight")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","WorkOrderID",v.Local.sProp,"First Work Order ID")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","CUSTOMER_CODE",v.Local.sProp,"Customer Code")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","SHIP_SEQ",v.Local.sProp,"Ship Seq")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Bill_To_Name",v.Local.sProp,"Bill To Name")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","CUSTOMER_SHIPNAME",v.Local.sProp,"Ship To Name")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","SysUserLastAccess",v.Local.sProp,"SysUser Last Access")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","SysUserLastAccessDateTime",v.Local.sProp,"SysUser Last Access DateTime")

			
	
	v.Local.sProp.Set("Width")
'	gui.Form.gsManifest.SetColumnProperty("gvManifest","PLUS",v.Local.sProp,"40")
'	gui.Form.gsManifest.SetColumnProperty("gvManifest","SELECT",v.Local.sProp,"70")
'	gui.Form.gsManifest.SetColumnProperty("gvManifest","PriceGroupID",v.Local.sProp,"100")
'	gui.Form.gsManifest.SetColumnProperty("gvManifest","Description",v.Local.sProp,"250")
'	gui.Form.gsManifest.SetColumnProperty("gvManifest","WorkOrderMinCharge",v.Local.sProp,"90")
'	gui.Form.gsManifest.SetColumnProperty("gvManifest","SysUserLastAccess",v.Local.sProp,"110")	
'	gui.Form.gsManifest.SetColumnProperty("gvManifest","SysUserLastAccessDateTime",v.Local.sProp,"120")

	gui.Form.gsManifest.SetColumnProperty("gvManifest","SELECT",v.Local.sProp,"70")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","TransportNoteID",v.Local.sProp,"75")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Customer_Key",v.Local.sProp,"100")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","DateTimeDelivery",v.Local.sProp,"125")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","RegistrationNumber",v.Local.sProp,"75")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","DriverName",v.Local.sProp,"75")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","GS_USER",v.Local.sProp,"80")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","TransportArrangement",v.Local.sProp,"175")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","MovementDesc",v.Local.sProp,"125")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Note",v.Local.sProp,"150")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Weight",v.Local.sProp,"75")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","WorkOrderID",v.Local.sProp,"75")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","CUSTOMER_CODE",v.Local.sProp,"80")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","SHIP_SEQ",v.Local.sProp,"80")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Bill_To_Name",v.Local.sProp,"150")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","CUSTOMER_SHIPNAME",v.Local.sProp,"150")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","SysUserLastAccess",v.Local.sProp,"75")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","SysUserLastAccessDateTime",v.Local.sProp,"100")
	
	
'	For RowCellClick and CellValueChanged
	v.Local.sProp.Set("AllowEdit")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Select",v.Local.sProp,True)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","TransportNoteID",v.Local.sProp,False)


	v.Local.sProp.Set("ReadOnly")
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Select",v.Local.sProp,False)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","TransportNoteID",v.Local.sProp,False)
	
	
	gui.Form.gsManifest.SetColumnProperty("gvManifest","TransportNoteID",V.Enum.ColumnPropertyNames!IsHyperlink,True)

	
	'BackForeColor
'	v.Local.sProp.Set("CellBackColor")
'	v.Local.sValue.Set("LightYellow")
	'gui.Form.gsManifest.SetColumnProperty("gvManifest","Note",v.Local.sProp,v.Local.sValue)
	
'	v.Local.sProp.Set("DisplayCustomDatetime")
'	v.Local.sValue.Set("d")	
'	gui.Form.gsManifest.SetColumnProperty("gvManifest","DueDate",v.Local.sProp,v.Local.sValue)
'	
'	gui.Form.gsManifest.AddStyleFormatCondition("gvManifest","NEW_PART","NEW_PART","Expression","[NEW_PART] = 0")
'	gui.Form.gsManifest.SetStyleFormatConditionProperty("gvManifest","NEW_PART","NEW_PART","backcolor","Red")
	
	gui.Form.gsManifest.ResumeLayout()

Program.Sub.Format_Manifest.End

Program.Sub.Bulk_Format_Manifest.Start
	gui.Form.gsManifest.SetColumnProperty("gvManifest","SELECT",v.Args.sProp,v.Args.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","TransportNoteID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","DateTimeDelivery",v.Args.sProp,v.Args.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","RegistrationNumber",v.Args.sProp,v.Args.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","DriverName",v.Args.sProp,v.Args.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","GS_USER",v.Args.sProp,v.Args.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","TransportArrangementID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","TransportArrangement",v.Args.sProp,v.Args.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","MovementType",v.Args.sProp,v.Args.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","MovementDesc",v.Args.sProp,v.Args.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Note",v.Args.sProp,v.Args.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Weight",v.Args.sProp,v.Args.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","WorkOrderID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","CUSTOMER_CODE",v.Args.sProp,v.Args.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","SHIP_SEQ",v.Args.sProp,v.Args.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Customer_Key",v.Args.sProp,v.Args.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","SysUserLastAccess",v.Args.sProp,v.Args.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","SysUserLastAccessDateTime",v.Args.sProp,v.Args.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","Bill_To_Name",v.Args.sProp,v.Args.sValue)
	gui.Form.gsManifest.SetColumnProperty("gvManifest","CUSTOMER_SHIPNAME",v.Args.sProp,v.Args.sValue)
	

Program.Sub.Bulk_Format_Manifest.End

Program.Sub.ac2_ElementClick.Start
f.Intrinsic.Control.Try
	v.Local.iRet.Declare
	v.Local.bAuth.Declare
	V.Local.iCnt.Declare
	v.Local.sReportID.Declare
	V.Local.sPrm.Declare
	V.Local.sval.Declare	
	V.Local.sTNID.Declare	
	V.Local.sShipToName.Declare	
	V.Local.sSQL.Declare
	V.Local.sFm.Declare
	V.Local.sFilter.Declare
	
	'This will prevent from multi-clicking too fast the button
	f.Intrinsic.Control.If(v.Global.bLoading)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bLoading.Set(True)	
	
	gui.Form.lblPleasewait.Visible(True)
	gui.Form.lblpleasewait.Text("Please wait ...")		
	
	f.Intrinsic.Control.SelectCase(v.Args.ElementID.UCase)
		f.Intrinsic.Control.Case("SERVICEWEB")
			F.Intrinsic.Task.ShellExec(0,"Open","https://www.gss-service.com/","","",0)	

		
		f.Intrinsic.Control.Case("TRANSPORTMANIFEST")
			'Create Crystal report
			F.Global.BI.GetRunID(V.Global.iBIRunID)
			F.Global.BI.GetIDFromName("GAB_6559_Transport_Manifest.rpt",v.Global.iBIRptID)
			F.Global.BI.StartLogging(V.Global.iBIRunID,v.Global.iBIRptID,-1,"",V.Global.iBILogID)
			
			
			F.Intrinsic.String.Build("select A.TransportNoteID, A.WorkOrderID, SUM(A.ItemQuantity) as NoteQty, SUM(A.ItemQuantity * B.UnitQty) as NoteWeight from GAB_6559_Transport_WO A Left Join GAB_6559_Lines B on A.LID = B.LID Group by A.WorkOrderID, A.TransportNoteID;","",V.Local.sSQL)
			F.Data.DataTable.CreateFromSQL("dtNoteWeight0","conx",V.Local.sSQL,True)
			
			'Left Join dtNoteWeight0 A dtManifest B into dtNoteWeight1
			F.Data.Linq.Join(V.Enum.LinqJoinType!LeftJoin,V.Enum.LinqSourceType!DataTable,"dtNoteWeight0*!*A",V.Enum.LinqSourceType!DataTable,"dtManifest*!*B","A.TransportNoteID = B.TransportNoteID","B.SELECT*!*A.TransportNoteID*!*A.WorkOrderID*!*A.NoteQty*!*A.NoteWeight*!*B.CUSTOMER_SHIPNAME*!*B.DateTimeDelivery*!*B.DriverName*!*B.TransportArrangement","","","A.TransportNoteID ASC","dtNoteWeight1",True)
			F.Data.DataTable.Close("dtNoteWeight0")
			
			F.Data.DataView.Create("dtNoteWeight1","dvNoteWeight",22,"SELECT = True","")
			F.Data.DataView.ToDataTable("dtNoteWeight1","dvNoteWeight","dtNoteWeight",True)
			F.Data.DataTable.Close("dtNoteWeight1")
			
			F.Data.Datatable.AddColumn("dtNoteWeight","BIRunID","Long",V.Global.iBIRunID)
			
			
			'Map to SQL Table
			V.Local.sFm.Set("BIRunID@!@BIRunID")
			V.Local.sFm.Append("*!*TransportNoteID@!@TransportNoteID")
			V.Local.sFm.Append("*!*WorkOrderID@!@WorkOrderID")
			V.Local.sFm.Append("*!*CUSTOMER_SHIPNAME@!@CUSTOMER_SHIPNAME")
			V.Local.sFm.Append("*!*DateTimeDelivery@!@DateTimeDelivery")
			V.Local.sFm.Append("*!*DriverName@!@DriverName")
			V.Local.sFm.Append("*!*NoteQty@!@NoteQty")
			V.Local.sFm.Append("*!*NoteWeight@!@NoteWeight")
			V.Local.sFm.Append("*!*TransportArrangement@!@TransportArrangement")
			
			F.Data.DataTable.SaveToDB("dtNoteWeight","conx","GAB_6559_BI_Manifest","",128,V.Local.sFm)
			
			F.Data.Datatable.Close("dtNoteWeight")
			f.Global.BI.StopLogging(v.Global.iBILogID)
			
			'BIRunID
			'TransportNoteID.GAB_6559_Transport_WO *Already have
			'WorkOrderID.GAB_6559_Transport_WO
			'CUSTOMER_SHIPNAME.GAB_6559_Customer_Xref *Already have
			'DateTimeDeliverey.GAB_6559_TransportNote *Already have
			'DriverName.GAB_6559_TransportNote *Already have
			'NoteQty
			'NoteWeight
			'TransportArrangement Desc *Already have (header field)
			
			V.Local.sval.Set(V.Global.iBIRunID.String)
			V.Local.sPrm.Set("BIRunID")
			
			f.Global.BI.PrintReport(v.Global.iBIRptID,0,v.Local.sPrm,v.Local.sval,"",true)
			
			F.Intrinsic.String.Build("Delete From GAB_6559_BI_Manifest where BIRunID = {0};",V.Global.iBIRunID,V.Local.sSQL)
			F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			
			
			
		f.Intrinsic.Control.Case("TRANSPORTNOTE")
			F.Global.BI.GetRunID(V.Global.iBIRunID)
			F.Global.BI.GetIDFromName("GAB_6559_TransportNote.rpt",v.Global.iBIRptID)
			F.Global.BI.StartLogging(V.Global.iBIRunID,v.Global.iBIRptID,-1,"",V.Global.iBILogID)
			
			'Create Crystal report
			F.Data.DataView.Create("dtManifest","dvManifest",22,"Select = True","TransportNoteID ASC")
			F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataView.dtManifest!dvManifest.RowCount--,1)
				F.Intrinsic.Control.If(V.Local.iCnt,=,0)
					F.Intrinsic.String.Build("'{0}'",V.DataView.dtManifest!dvManifest(V.Local.iCnt).TransportNoteID!FieldVal,V.Local.sFilter)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("{0},'{1}'",V.Local.sFilter,V.DataView.dtManifest!dvManifest(V.Local.iCnt).TransportNoteID!FieldVal,V.Local.sFilter)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.iCnt)
			F.Data.DataView.Close("dtManifest","dvManifest")
			
			F.Intrinsic.String.Build("select Rtrim(Cast(TransportNoteID as Char(10))) TransportNoteID, LID, SUM(ItemQuantity) as NoteQty from GAB_6559_Transport_WO where TransportNoteID in ({0}) Group by LID, TransportNoteID;",V.Local.sFilter,V.Local.sSQL)
			F.Data.DataTable.CreateFromSQL("dtTNoteLines","conx",V.Local.sSQL,True)
			
			F.Data.DataTable.CreateFromSQL("dtLines","conx","select LID, Rtrim(Cast(ID as Char(10))) as WorkOrderID, Line, UnitQty, ItemQty, RTRIM(Description) as PartDescription, RTRIM(TagID) as TagID, RTRIM(Yard2) as Yard from GAB_6559_Lines",True)
			
			F.Intrinsic.String.Build("select Rtrim(Cast(TransportNoteID as Char(10))) TNID, DateTimeDelivery, RTRIM(RegistrationNumber) as Registration, RTRIM(DriverName) as DriverName, Rtrim(GS_User) as GS_User, TransportArrangementID, Rtrim(Note) as Note from GAB_6559_TransportNote where TransportNoteID in ({0});",V.Local.sFilter,V.Local.sSQL)
			F.Data.DataTable.CreateFromSQL("dtTNoteHeader","conx",V.Local.sSQL,True)
			
			'Left Join dtTNoteLines A dtLines B dtTNoteHeader C
			F.Data.Linq.Join(V.Enum.LinqJoinType!LeftJoin,V.Enum.LinqSourceType!DataTable,"dtTNoteLines*!*A",V.Enum.LinqSourceType!DataTable,"dtLines*!*B","A.LID = B.LID",V.Enum.LinqSourceType!DataTable,"dtTNoteHeader*!*C","A.TransportNoteID = C.TNID","*","","","","dtNoteWeight1",True)
			'F.Data.Linq.Join(V.Enum.LinqJoinType!LeftJoin,V.Enum.LinqSourceType!DataTable,"dtTNoteLines*!*A",V.Enum.LinqSourceType!DataTable,"dtLines*!*B","A.LID = B.LID",V.Enum.LinqSourceType!DataTable,"dtTNoteHeader*!*C","A.LID = B.LID","B.SELECT*!*A.TransportNoteID*!*A.WorkOrderID*!*A.NoteQty*!*A.NoteWeight*!*B.CUSTOMER_SHIPNAME*!*B.DateTimeDelivery*!*B.DriverName*!*B.TransportArrangement","","","A.TransportNoteID ASC","dtNoteWeight1",True)
			F.Data.DataTable.Close("dtTNoteLines")
			F.Data.DataTable.Close("dtLines")
			F.Data.DataTable.Close("dtTNoteHeader")
			
			
			'dictTransArrangement
			F.Data.DataTable.AddColumn("dtNoteWeight1","TransportArrangement","String","")
			F.Data.DataTable.FillFromDictionary("dtNoteWeight1","dictTransArrangement","TransportArrangementID","TransportArrangement")
		
			'Fill in the Customer Code and Ship Seq and Cust ref.
			F.Data.Datatable.AddColumn("dtNoteWeight1","CUSTOMER_CODE","String","")	
			F.Data.Datatable.AddColumn("dtNoteWeight1","SHIP_SEQ","String","")
			F.Data.Datatable.AddColumn("dtNoteWeight1","CUSTOMER_REFERENCE","String","")
			F.Data.DataTable.CreateFromSQL("dtCustomerShip","conx","Select ID, RTRIM(CUSTOMER) as CUSTOMER, RTRIM(SHIP_SEQ) as SHIP_SEQ, RTRIM(CUSTOMER_REFERENCE) as CUSTOMER_REFERENCE From GAB_6559_Galvaware",True)
			F.Data.Dictionary.CreateFromDataTable("dictCustomer","dtCustomerShip","ID","CUSTOMER")	
			F.Data.Dictionary.CreateFromDataTable("dictShipSeq","dtCustomerShip","ID","SHIP_SEQ")
			F.Data.Dictionary.CreateFromDataTable("dictCustRef","dtCustomerShip","ID","CUSTOMER_REFERENCE")
			F.Data.Dictionary.SetDefaultReturn("dictCustomer","")
			F.Data.Dictionary.SetDefaultReturn("dictShipSeq","")
			F.Data.Dictionary.SetDefaultReturn("dictCustRef","")
			F.Data.DataTable.FillFromDictionary("dtNoteWeight1","dictCustomer","WorkOrderID","CUSTOMER_CODE")
			F.Data.DataTable.FillFromDictionary("dtNoteWeight1","dictShipSeq","WorkOrderID","SHIP_SEQ")
			F.Data.DataTable.FillFromDictionary("dtNoteWeight1","dictCustRef","WorkOrderID","CUSTOMER_REFERENCE")
			F.Data.Dictionary.Close("dictCustomer")
			F.Data.Dictionary.Close("dictShipSeq")
			F.Data.Dictionary.Close("dictCustRef")
			F.Data.DataTable.Close("dtCustomerShip")

			F.Data.DataTable.AddExpressionColumn("dtNoteWeight1","Customer_Key","String","[CUSTOMER_CODE] + '-' + [SHIP_SEQ]")
			F.Data.DataTable.AddExpressionColumn("dtNoteWeight1","Estimate","Float","[NoteQty] * [UnitQty]")
			
			'Filling in Customer Ship to Name from GAB_6559_Customer_Xref
			F.Data.DataTable.AddColumn("dtNoteWeight1","CUSTOMER_SHIPNAME","String","")
			F.Data.Dictionary.CreateFromSQL("dictCustName1","Conx","Select RTRIM(SHIP_KEY) as SHIP_KEY, RTRIM(CUSTOMER_NAME) as CUSTOMER_NAME FROM GAB_6559_Customer_Xref")
			F.Data.Dictionary.SetDefaultReturn("dictCustName1","")
			F.Data.DataTable.FillFromDictionary("dtNoteWeight1","dictCustName1","Customer_Key","CUSTOMER_SHIPNAME")
			F.Data.Dictionary.Close("dictCustName1")
			
			F.Data.Datatable.AddColumn("dtNoteWeight1","BIRunID","Long",V.Global.iBIRunID)

			'Save to DB
			'Map to SQL Table
			V.Local.sFm.Set("BIRunID@!@BIRunID")
			V.Local.sFm.Append("*!*TransportNoteID@!@TransportNoteID")			
			V.Local.sFm.Append("*!*WorkOrderID@!@WorkOrderID")
			V.Local.sFm.Append("*!*CUSTOMER_SHIPNAME@!@CUSTOMER_SHIPNAME")
			V.Local.sFm.Append("*!*DateTimeDelivery@!@DateTimeDelivery")
			V.Local.sFm.Append("*!*DriverName@!@DriverName")
			V.Local.sFm.Append("*!*Registration@!@Registration")
			V.Local.sFm.Append("*!*TransportArrangement@!@TransportArrangement")
			V.Local.sFm.Append("*!*Customer_Reference@!@Customer_Reference")
			V.Local.sFm.Append("*!*GS_User@!@GS_User")
			V.Local.sFm.Append("*!*Note@!@Note")
			V.Local.sFm.Append("*!*NoteQty@!@NoteQty")
			V.Local.sFm.Append("*!*Estimate@!@Estimate")
			V.Local.sFm.Append("*!*PartDescription@!@PartDescription")
			V.Local.sFm.Append("*!*TagID@!@TagID")
			V.Local.sFm.Append("*!*Yard@!@Yard")
			V.Local.sFm.Append("*!*Line@!@Line")
			V.Local.sFm.Append("*!*ItemQty@!@ItemQty")
			
			F.Data.DataTable.SaveToDB("dtNoteWeight1","conx","GAB_6559_BI_TNote","",128,V.Local.sFm)
			
			F.Data.DataTable.Close("dtNoteWeight1")
			f.Global.BI.StopLogging(v.Global.iBILogID)
			
			V.Local.sval.Set(V.Global.iBIRunID.String)
			V.Local.sPrm.Set("BIRunID")
			
			f.Global.BI.PrintReport(v.Global.iBIRptID,0,v.Local.sPrm,v.Local.sval,"",true)
			
			F.Intrinsic.String.Build("Delete From GAB_6559_BI_TNote where BIRunID = {0};",V.Global.iBIRunID,V.Local.sSQL)
			F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			
'			f.Global.BI.GetIDFromName("GAB_6559_TransportNote.rpt",v.Local.sReportID)
'			'f.Intrinsic.String.Split("TNID*!*CustomerName","*!*",v.Local.sPrm)
'			f.Intrinsic.String.Split("TNID","*!*",v.Local.sPrm)
			
'			F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataView.dtManifest!dvManifest.RowCount--,1)
'				F.Intrinsic.Control.If(V.Local.iCnt,=,0)
'					F.Intrinsic.String.Concat(V.Ambient.DblQuote,V.DataView.dtManifest!dvManifest(V.Local.iCnt).TransportNoteID!FieldVal,V.Ambient.DblQuote,V.Local.sTNID)
'					
'				F.Intrinsic.Control.Else
'					F.Intrinsic.String.Concat(V.Local.sTNID," ",V.Ambient.DblQuote,V.DataView.dtManifest!dvManifest(V.Local.iCnt).TransportNoteID!FieldVal,V.Ambient.DblQuote,V.Local.sTNID)
'				
'				F.Intrinsic.Control.EndIf
'				'V.Local.sTNID.Set(V.DataView.dtManifest!dvManifest(V.Local.iCnt).TransportNoteID!FieldVal)
'				'F.Intrinsic.String.Concat(V.Local.sTNID,V.Ambient.DblQuote,V.DataView.dtManifest!dvManifest(V.Local.iCnt).TransportNoteID!FieldVal,V.Ambient.DblQuote," ",V.Local.sTNID)
'				'F.Intrinsic.String.Concat(V.Local.sShipToName,V.Ambient.DblQuote,V.DataView.dtManifest!dvManifest(V.Local.iCnt).CUSTOMER_SHIPNAME!FieldVal,V.Ambient.DblQuote," ",V.Local.sShipToName)
'				'V.Local.sShipToName.Set(V.DataView.dtManifest!dvManifest(V.Local.iCnt).CUSTOMER_SHIPNAME!FieldVal)
'				
'			F.Intrinsic.Control.Next(V.Local.iCnt)
			
'			'f.Intrinsic.String.Concat(V.Local.sTNID,"*!*",V.Local.sShipToName,v.Local.sval)
'			f.Intrinsic.String.Split(v.Local.sTNID,"*!*",v.Local.sval)
'			f.Global.BI.PrintReport(v.Local.sReportID,0,v.Local.sPrm,v.Local.sval,"",true)

			
	f.Intrinsic.Control.EndSelect
	
	v.Global.bPassedFirstLoad.Set(True)
	gui.Form.lblPleasewait.Visible(False)	
	
	v.Global.bLoading.Set(False)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ac2_ElementClick.End

Program.Sub.gsManifest_CellValueChanged.Start
Program.Sub.gsManifest_CellValueChanged.End

Program.Sub.gsManifest_RowCellClick.Start
'Row cell click to the Transport note lines Form. this will have all the transpoprt note header information editable as well as the lines which will be editable.
F.Intrinsic.Control.Try
v.Local.iRowIndex.Declare
	V.Local.iTNID.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	
	F.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
	F.Intrinsic.Control.Case("TRANSPORTNOTEID")
		
		Gui.Form.gsManifest.GetCellValueByColumnName("gvManifest","TRANSPORTNOTEID",V.Args.RowIndex,V.Local.iTNID)
		
			F.Intrinsic.Control.CallSub(LoadFormTransportHeader,"TNID",V.Local.iTNID)
			F.Intrinsic.Control.CallSub(Load_TransportLines)
			
			gui.FormTranNote..Visible(True)
			gui.FormTranNote..SetFocus
		
	F.Intrinsic.Control.EndSelect
	F.Intrinsic.Control.UnBlockEvents
		

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!conx.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.gsManifest_RowCellClick.End


#End Region 'Tab Manifest

'will use parts of this region to develope the creation of Transport Notes
#Region "Tab Quotes"

Program.Sub.Load_Quote.Start
f.Intrinsic.Control.Try
	V.Local.sBegDate.Declare
	V.Local.sEndDate.Declare
	V.Local.dBegDate.Declare
	V.Local.dEndDate.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	V.local.iCnt.Declare
	v.Local.sSerialize.Declare
	v.Local.sProgrammedBy.Declare
	V.Local.bExists.Declare
	
	f.Intrinsic.Control.If(v.DataTable.dtQuote.Exists)
		f.Data.DataTable.Close("dtQuote")
		gui.Form.gsQuote.ClearRows("gvQuote")		
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictCustName",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictCustName")
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictActual",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictActual")
	f.Intrinsic.Control.EndIf
	
	
	'QHID
	'QuoteID
	'CustomerKey
	'CustomerID
	'CUSTOMER_NAME
	'CustomerReference
	'CustomerContactID
	'CustomerAddressID
	'QuotedBy
	'Description
	'ValidFrom
	'ValidUntil
	'Estimate
	'Actual_Weight
	'AcceptedFlag
	'SysUserLastAccess
	'SysUserLastAccessDateTime
	
	
	F.Intrinsic.String.Build("Select QHID, RTRIM(QuoteID) as QuoteID, RTRIM(CustomerKey) as CustomerKey, CustomerID, RTRIM(CustomerReference) as CustomerReference, CustomerContactID, CustomerAddressID, RTRIM(QuotedBy) as QuotedBy, RTRIM(Description) as Description, ValidFrom, ValidUntil, Estimate, AcceptedFlag, SysUserLastAccess, SysUserLastAccessDateTime From GAB_6559_Quote_Head",v.Local.sProgrammedBy,V.Local.sSQL)
	F.Data.Datatable.CreateFromSQL("dtQuote","conx",V.Local.sSQL,True)
	
	'Filling in Customer Ship to Name from GAB_6559_Customer_Xref
	F.Data.DataTable.AddColumn("dtQuote","CUSTOMER_NAME","String","")
	F.Data.Dictionary.CreateFromSQL("dictCustName","Conx","Select RTRIM(SHIP_KEY) as SHIP_KEY, RTRIM(CUSTOMER_NAME) as CUSTOMER_NAME FROM GAB_6559_Customer_Xref")
	F.Data.Dictionary.SetDefaultReturn("dictCustName","")
	F.Data.DataTable.FillFromDictionary("dtQuote","dictCustName","CustomerKey","CUSTOMER_NAME")
	
	'Filling in Actual Weight booked onto a SO by Quote ID
	F.Data.DataTable.AddColumn("dtQuote","Actual_Weight","Float",0.00)
	F.Data.Dictionary.CreateFromSQL("dictActual","Conx","select RTRIM(QuoteID) as QuoteID, Sum(UnitQty) as UnitQty from GAB_6559_Lines where ItmQtyBasedFlag <> '1' group by QuoteID")
	F.Data.Dictionary.SetDefaultReturn("dictActual",0.00)
	F.Data.DataTable.FillFromDictionary("dtQuote","dictActual","QuoteID","Actual_Weight")
	
	
	gui.Form.gsQuote.AddGridviewFromDatatable("gvQuote","dtQuote")
	
	f.Intrinsic.Control.CallSub(Format_Quote)
	
	gui.Form.gsQuote.MainView("gvQuote")		
	gui.Form.tab4.SetTab(0)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Load_Quote.End

Program.Sub.Format_Quote.Start
F.Intrinsic.Control.Try
	V.Local.sSql.Declare
	V.Local.sProp.Declare
	v.Local.sValue.Declare	
	V.Local.iRet.Declare
	V.Local.iCnt.Declare
	v.Local.sValue2.Declare
	v.Local.sValue3.Declare
	
	gui.Form.gsQuote.SuspendLayout()
	
	gui.Form.gsQuote.SetGridViewProperty("gvQuote","MultiSelect",False)
	gui.Form.gsQuote.SetGridViewProperty("gvQuote","AllowSort",True)
	gui.Form.gsQuote.SetGridViewProperty("gvQuote","AllowFilter",True)
	gui.Form.gsQuote.SetGridViewProperty("gvQuote","OptionsDetailShowDetailTabs",False)
	gui.Form.gsQuote.SetGridViewProperty("gvQuote","OptionsViewShowGroupPanel",True)
	gui.Form.gsQuote.SetGridViewProperty("gvQuote","EnableAppearanceOddRow",True)
	gui.Form.gsQuote.SetGridviewProperty("gvQuote",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.Form.gsQuote.SetGridviewProperty("gvQuote","OptionsViewColumnAutoWidth",False)
	gui.Form.gsQuote.SetGridviewProperty("gvQuote","AllowColumnResizing",True)	
	gui.Form.gsQuote.SetGridviewProperty("gvQuote","ColumnPanelRowHeight","50")
	gui.Form.gsQuote.SetGridviewProperty("gvQuote",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_Quote,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Quote,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_Quote,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_Quote,"sProp","HeaderVAlignment","sValue","Top")
	
	
		'QHID
	'QuoteID
	'CustomerKey
	'CustomerID
	'CUSTOMER_NAME
	'CustomerReference
	'CustomerContactID
	'CustomerAddressID
	'QuotedBy
	'Description
	'ValidFrom
	'ValidUntil
	'Estimate
	'Actual_Weight
	'AcceptedFlag
	'SysUserLastAccess
	'SysUserLastAccessDateTime

	gui.Form.gsQuote.SetColumnProperty("gvQuote","QHID",v.Enum.ColumnPropertyNames!Visible,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerContactID",v.Enum.ColumnPropertyNames!Visible,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerAddressID",v.Enum.ColumnPropertyNames!Visible,False)


	v.Local.sProp.Set("VisibleIndex")
	v.Local.iCnt.Set(-1)	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","QuoteID",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerKey",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerID",v.Local.sProp,v.Local.iCnt.++)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CUSTOMER_NAME",v.Local.sProp,v.Local.iCnt.++)


	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","QuoteID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerKey",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CUSTOMER_NAME",v.Local.sProp,v.Local.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerReference",v.Local.sProp,v.Local.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Description",v.Local.sProp,v.Local.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidFrom",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidUntil",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Estimate",v.Local.sProp,v.Local.sValue3)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Actual_Weight",v.Local.sProp,v.Local.sValue3)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","AcceptedFlag",v.Local.sProp,v.Local.sValue2)	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccess",v.Local.sProp,v.Local.sValue)	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)	

	
	v.Local.sProp.Set("CellHAlignment")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","QuoteID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerKey",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerID",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CUSTOMER_NAME",v.Local.sProp,v.Local.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerReference",v.Local.sProp,v.Local.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Description",v.Local.sProp,v.Local.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidFrom",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidUntil",v.Local.sProp,v.Local.sValue2)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Estimate",v.Local.sProp,v.Local.sValue3)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Actual_Weight",v.Local.sProp,v.Local.sValue3)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","AcceptedFlag",v.Local.sProp,v.Local.sValue2)	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccess",v.Local.sProp,v.Local.sValue)	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccessDateTime",v.Local.sProp,v.Local.sValue2)

	
	v.Local.sProp.Set("Caption")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","QuoteID",v.Local.sProp,"Quote ID")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerKey",v.Local.sProp,"Cust. Key")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerID",v.Local.sProp,"Cust. ID")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CUSTOMER_NAME",v.Local.sProp,"Cust. Name (Ship To)")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerReference",v.Local.sProp,"Customer Reference")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Description",v.Local.sProp,"Description (Int.)")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidFrom",v.Local.sProp,"Valid From")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidUntil",v.Local.sProp,"Valid Until")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Estimate",v.Local.sProp,"Estimate (kg)")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Actual_Weight",v.Local.sProp,"Actual Weight (kg)")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","AcceptedFlag",v.Local.sProp,"Accepted Flag")	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccess",v.Local.sProp,"SysUser LastAccess")	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccessDateTime",v.Local.sProp,"SysUser LastAccess Date Time")
	

			
	
	v.Local.sProp.Set("Width")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","QuoteID",v.Local.sProp,"75")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerKey",v.Local.sProp,"100")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerID",v.Local.sProp,"75")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CUSTOMER_NAME",v.Local.sProp,"150")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerReference",v.Local.sProp,"150")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Description",v.Local.sProp,"150")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidFrom",v.Local.sProp,"100")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidUntil",v.Local.sProp,"100")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Estimate",v.Local.sProp,"100")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Actual_Weight",v.Local.sProp,"100")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","AcceptedFlag",v.Local.sProp,"50")	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccess",v.Local.sProp,"75")	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccessDateTime",v.Local.sProp,"100")
	
	
'	For RowCellClick and CellValueChanged
	v.Local.sProp.Set("AllowEdit")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","QuoteID",v.Local.sProp,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerKey",v.Local.sProp,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerID",v.Local.sProp,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CUSTOMER_NAME",v.Local.sProp,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerReference",v.Local.sProp,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Description",v.Local.sProp,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidFrom",v.Local.sProp,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidUntil",v.Local.sProp,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Estimate",v.Local.sProp,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Actual_Weight",v.Local.sProp,False)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","AcceptedFlag",v.Local.sProp,False)	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccess",v.Local.sProp,False)	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccessDateTime",v.Local.sProp,False)
		

	v.Local.sProp.Set("ReadOnly")
	gui.Form.gsQuote.SetColumnProperty("gvQuote","QuoteID",v.Local.sProp,True)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerKey",v.Local.sProp,True)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerID",v.Local.sProp,True)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CUSTOMER_NAME",v.Local.sProp,True)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerReference",v.Local.sProp,True)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Description",v.Local.sProp,True)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidFrom",v.Local.sProp,True)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidUntil",v.Local.sProp,True)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Estimate",v.Local.sProp,True)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Actual_Weight",v.Local.sProp,True)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","AcceptedFlag",v.Local.sProp,True)	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccess",v.Local.sProp,True)	
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccessDateTime",v.Local.sProp,True)	
	
	Gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidFrom",V.Enum.ColumnPropertyNames!DisplayCustomDateTime,"dd/MM/yyyy")
	Gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidUntil",V.Enum.ColumnPropertyNames!DisplayCustomDateTime,"dd/MM/yyyy")
	Gui.Form.gsQuote.SetColumnProperty("gvQuote","QuoteID",V.Enum.ColumnPropertyNames!IsHyperlink,True)
	

	

	gui.Form.gsQuote.ResumeLayout()
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Format_Quote.End

Program.Sub.Bulk_Format_Quote.Start
	gui.Form.gsQuote.SetColumnProperty("gvQuote","QHID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","QuoteID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerKey",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CUSTOMER_NAME",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerReference",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerContactID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","CustomerAddressID",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","QuotedBy",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Description",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidFrom",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","ValidUntil",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Estimate",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","Actual_Weight",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","AcceptedFlag",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccess",v.Args.sProp,v.Args.sValue)
	gui.Form.gsQuote.SetColumnProperty("gvQuote","SysUserLastAccessDateTime",v.Args.sProp,v.Args.sValue)
Program.Sub.Bulk_Format_Quote.End

Program.Sub.gsQuote_RowCellClick.Start
F.Intrinsic.Control.Try
V.Local.sQHID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare

F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
	
	F.Intrinsic.Control.Case("SELECT")
	
	F.Intrinsic.Control.Case("QUOTEID")
		F.Intrinsic.Control.BlockEvents
		
		'Load values into the FORMQUOTE
		gui.Form.gsQuote.GetCellValueByColumnName("gvQuote","QHID",V.Args.RowIndex,V.Local.sQHID)
		F.Intrinsic.Control.CallSub(LoadFormTransportHeader,"QHID",V.Local.sQHID)
		F.Intrinsic.Control.CallSub(Load_TransportLines,"QHID",V.Local.sQHID)
		F.Intrinsic.Control.UnBlockEvents
		gui.FormTranNote..Visible(True)
		
F.Intrinsic.Control.EndSelect
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsQuote_RowCellClick.End
Program.Sub.ac4_ElementClick.Start
f.Intrinsic.Control.Try
	v.Local.iRet.Declare
	v.Local.bAuth.Declare
	V.Local.sCustomerKey.Declare
	V.Local.sQHID.Declare
	V.Local.sTNID.Declare
	
	'This will prevent from multi-clicking too fast the button
	f.Intrinsic.Control.If(v.Global.bLoading)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	v.Global.bLoading.Set(True)	
	
	gui.Form.lblPleasewait.Visible(True)
	gui.Form.lblpleasewait.Text("Please wait ...")		
	
	f.Intrinsic.Control.SelectCase(v.Args.ElementID.UCase)
		f.Intrinsic.Control.Case("SERVICEWEB")
			F.Intrinsic.Task.ShellExec(0,"Open","https://www.gss-service.com/","","",0)	
			
		f.Intrinsic.Control.Case("ADDLINE")
			'Clear Quote header boxes
			
			F.Intrinsic.Control.CallSub(ClearQuoteHeaderBoxes)
			F.Intrinsic.Control.CallSub(CustomerShipLookUp)
			
			V.Local.sCustomerKey.Set(V.Args.CustomerKey)
			F.Intrinsic.Control.If(V.Local.sCustomerKey,=,"")
				v.Global.bLoading.Set(False)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			'Create New quote header line.
			F.Intrinsic.Control.CallSub(CreateQuote,"CustomerKey",V.Local.sCustomerKey,"CustRef","","CustContact","1","CustAddress","","Desc","","Esitmate","0")
			
			'load New Quote header
			V.Local.sQHID.Set(V.Args.QHID)
			F.Intrinsic.Control.CallSub(LoadFormTransportHeader,"TNID",V.Local.sTNID)
			F.Intrinsic.Control.CallSub(Load_TransportLines)
			
			gui.FormTranNote..Visible(True)
			gui.FormTranNote..SetFocus
			
'		f.Intrinsic.Control.Case("DUPLICATELINE")
'			F.Intrinsic.UI.Msgbox("Feature not ready yet.")
			
			'Check to see if there is more than one lines selected.
			
			
			
'		f.Intrinsic.Control.Case("DELETELINE")
'			'Warning message
'			F.Intrinsic.UI.Msgbox("Feature not ready yet.")
			
	f.Intrinsic.Control.EndSelect
	
	v.Global.bPassedFirstLoad.Set(True)
	gui.Form.lblPleasewait.Visible(False)	
	
	v.Global.bLoading.Set(False)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ac4_ElementClick.End

#End Region 'Tab Quotes

#Region "Transport Note Form"

Program.Sub.FormTranNote_UnLoad.Start
V.Local.bTabVisible.Declare
F.Intrinsic.Control.BlockEvents
gui.FormTranNote..Visible(False)

'See which Tab is visible and refresh that one
V.Local.bTabVisible.Set(V.Screen.Form!tab1.Visible)
F.Intrinsic.Control.If(V.Local.bTabVisible)
	F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","IOP")
F.Intrinsic.Control.Else
	'F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","TransportManifest")
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.UnBlockEvents
gui.Form..SetFocus
Program.Sub.FormTranNote_UnLoad.End

Program.Sub.FormTranNote_UserButtonClicked.Start
V.Local.sQHID.Declare
V.Local.sQuoteID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.local.iCnt.Declare
V.Local.sMsg.Declare
v.Local.sReportID.Declare
v.Local.sPrm.Declare
v.Local.sval.Declare
V.Local.sCustomerKey.Declare
V.Local.sARTerms.Declare
V.Local.sCust.Declare
V.Local.sShipToName.Declare
V.Local.sFm.Declare
V.Local.sFilter.Declare

f.Intrinsic.Control.Try	

	'Disable form
	F.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.SelectCase(V.Args.Button)			
		F.Intrinsic.Control.Case("UpdateTransport")
			'Update DB
			F.Intrinsic.Control.CallSub(SaveFormTransportHeader)
			
			
		F.Intrinsic.Control.Case("DeleteTransport")
		
		
			'Should we do any checks to see if Transport Note shouldnt be Deleted? Maybe when we create Transport Manifest perminance.

			'Warning Message
			F.Intrinsic.String.Build("Are you sure you would like to delete this Transport Note and its lines?{0}{1}",V.Ambient.NewLine,V.Global.iTNID,V.Local.sMsg)
			F.Intrinsic.ui.Msgbox(V.Local.sMsg,"Delete","4",V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf

			
			'Delete Transport Note
			F.Intrinsic.String.Build("Delete From GAB_6559_Transport_WO Where TransportNoteID = '{0}'",V.Global.iTNID,V.Local.sSQL)
			F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			F.Intrinsic.String.Build("Delete From GAB_6559_TransportNote Where TransportNoteID = '{0}'",V.Global.iTNID,V.Local.sSQL)			
			F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			
			
			F.Intrinsic.Control.CallSub(FormTranNote_UnLoad)			
			F.Intrinsic.Control.CallSub(ClearQuoteHeaderBoxes)
			
			
		F.Intrinsic.Control.Case("PreviewTransport")
			F.Intrinsic.Control.UnBlockEvents
			
			'Print Transport Note Report.....
			F.Global.BI.GetRunID(V.Global.iBIRunID)
			F.Global.BI.GetIDFromName("GAB_6559_TransportNote.rpt",v.Global.iBIRptID)
			F.Global.BI.StartLogging(V.Global.iBIRunID,v.Global.iBIRptID,-1,"",V.Global.iBILogID)
			
			F.Intrinsic.String.Build("'{0}'",V.Global.iTNID,V.Local.sFilter)
			F.Intrinsic.String.Build("select Rtrim(Cast(TransportNoteID as Char(10))) TransportNoteID, LID, SUM(ItemQuantity) as NoteQty from GAB_6559_Transport_WO where TransportNoteID in ({0}) Group by LID, TransportNoteID;",V.Local.sFilter,V.Local.sSQL)
			F.Data.DataTable.CreateFromSQL("dtTNoteLines","conx",V.Local.sSQL,True)
			
			F.Data.DataTable.CreateFromSQL("dtLines","conx","select LID, Rtrim(Cast(ID as Char(10))) as WorkOrderID, Line, UnitQty, ItemQty, RTRIM(Description) as PartDescription, RTRIM(TagID) as TagID, RTRIM(Yard) as Yard from GAB_6559_Lines",True)
			
			F.Intrinsic.String.Build("select Rtrim(Cast(TransportNoteID as Char(10))) TNID, DateTimeDelivery, RTRIM(RegistrationNumber) as Registration, RTRIM(DriverName) as DriverName, Rtrim(GS_User) as GS_User, TransportArrangementID, Rtrim(Note) as Note from GAB_6559_TransportNote where TransportNoteID in ({0});",V.Local.sFilter,V.Local.sSQL)
			F.Data.DataTable.CreateFromSQL("dtTNoteHeader","conx",V.Local.sSQL,True)
			
			'Left Join dtTNoteLines A dtLines B dtTNoteHeader C
			F.Data.Linq.Join(V.Enum.LinqJoinType!LeftJoin,V.Enum.LinqSourceType!DataTable,"dtTNoteLines*!*A",V.Enum.LinqSourceType!DataTable,"dtLines*!*B","A.LID = B.LID",V.Enum.LinqSourceType!DataTable,"dtTNoteHeader*!*C","A.TransportNoteID = C.TNID","*","","","","dtNoteWeight1",True)
			'F.Data.Linq.Join(V.Enum.LinqJoinType!LeftJoin,V.Enum.LinqSourceType!DataTable,"dtTNoteLines*!*A",V.Enum.LinqSourceType!DataTable,"dtLines*!*B","A.LID = B.LID",V.Enum.LinqSourceType!DataTable,"dtTNoteHeader*!*C","A.LID = B.LID","B.SELECT*!*A.TransportNoteID*!*A.WorkOrderID*!*A.NoteQty*!*A.NoteWeight*!*B.CUSTOMER_SHIPNAME*!*B.DateTimeDelivery*!*B.DriverName*!*B.TransportArrangement","","","A.TransportNoteID ASC","dtNoteWeight1",True)
			F.Data.DataTable.Close("dtTNoteLines")
			F.Data.DataTable.Close("dtLines")
			F.Data.DataTable.Close("dtTNoteHeader")
			
			
			'dictTransArrangement
			F.Data.DataTable.AddColumn("dtNoteWeight1","TransportArrangement","String","")
			F.Data.DataTable.FillFromDictionary("dtNoteWeight1","dictTransArrangement","TransportArrangementID","TransportArrangement")
		
			'Fill in the Customer Code and Ship Seq and Cust ref.
			F.Data.Datatable.AddColumn("dtNoteWeight1","CUSTOMER_CODE","String","")	
			F.Data.Datatable.AddColumn("dtNoteWeight1","SHIP_SEQ","String","")
			F.Data.Datatable.AddColumn("dtNoteWeight1","CUSTOMER_REFERENCE","String","")
			F.Data.DataTable.CreateFromSQL("dtCustomerShip","conx","Select ID, RTRIM(CUSTOMER) as CUSTOMER, RTRIM(SHIP_SEQ) as SHIP_SEQ, RTRIM(CUSTOMER_REFERENCE) as CUSTOMER_REFERENCE From GAB_6559_Galvaware",True)
			F.Data.Dictionary.CreateFromDataTable("dictCustomer","dtCustomerShip","ID","CUSTOMER")	
			F.Data.Dictionary.CreateFromDataTable("dictShipSeq","dtCustomerShip","ID","SHIP_SEQ")
			F.Data.Dictionary.CreateFromDataTable("dictCustRef","dtCustomerShip","ID","CUSTOMER_REFERENCE")
			F.Data.Dictionary.SetDefaultReturn("dictCustomer","")
			F.Data.Dictionary.SetDefaultReturn("dictShipSeq","")
			F.Data.Dictionary.SetDefaultReturn("dictCustRef","")
			F.Data.DataTable.FillFromDictionary("dtNoteWeight1","dictCustomer","WorkOrderID","CUSTOMER_CODE")
			F.Data.DataTable.FillFromDictionary("dtNoteWeight1","dictShipSeq","WorkOrderID","SHIP_SEQ")
			F.Data.DataTable.FillFromDictionary("dtNoteWeight1","dictCustRef","WorkOrderID","CUSTOMER_REFERENCE")
			F.Data.Dictionary.Close("dictCustomer")
			F.Data.Dictionary.Close("dictShipSeq")
			F.Data.Dictionary.Close("dictCustRef")
			F.Data.DataTable.Close("dtCustomerShip")

			F.Data.DataTable.AddExpressionColumn("dtNoteWeight1","Customer_Key","String","[CUSTOMER_CODE] + '-' + [SHIP_SEQ]")
			F.Data.DataTable.AddExpressionColumn("dtNoteWeight1","Estimate","Float","[NoteQty] * [UnitQty]")
			
			'Filling in Customer Ship to Name from GAB_6559_Customer_Xref
			F.Data.DataTable.AddColumn("dtNoteWeight1","CUSTOMER_SHIPNAME","String","")
			F.Data.Dictionary.CreateFromSQL("dictCustName1","Conx","Select RTRIM(SHIP_KEY) as SHIP_KEY, RTRIM(CUSTOMER_NAME) as CUSTOMER_NAME FROM GAB_6559_Customer_Xref")
			F.Data.Dictionary.SetDefaultReturn("dictCustName1","")
			F.Data.DataTable.FillFromDictionary("dtNoteWeight1","dictCustName1","Customer_Key","CUSTOMER_SHIPNAME")
			F.Data.Dictionary.Close("dictCustName1")
			
			F.Data.Datatable.AddColumn("dtNoteWeight1","BIRunID","Long",V.Global.iBIRunID)

			'Save to DB
			'Map to SQL Table
			V.Local.sFm.Set("BIRunID@!@BIRunID")
			V.Local.sFm.Append("*!*TransportNoteID@!@TransportNoteID")			
			V.Local.sFm.Append("*!*WorkOrderID@!@WorkOrderID")
			V.Local.sFm.Append("*!*CUSTOMER_SHIPNAME@!@CUSTOMER_SHIPNAME")
			V.Local.sFm.Append("*!*DateTimeDelivery@!@DateTimeDelivery")
			V.Local.sFm.Append("*!*DriverName@!@DriverName")
			V.Local.sFm.Append("*!*Registration@!@Registration")
			V.Local.sFm.Append("*!*TransportArrangement@!@TransportArrangement")
			V.Local.sFm.Append("*!*Customer_Reference@!@Customer_Reference")
			V.Local.sFm.Append("*!*GS_User@!@GS_User")
			V.Local.sFm.Append("*!*Note@!@Note")
			V.Local.sFm.Append("*!*NoteQty@!@NoteQty")
			V.Local.sFm.Append("*!*Estimate@!@Estimate")
			V.Local.sFm.Append("*!*PartDescription@!@PartDescription")
			V.Local.sFm.Append("*!*TagID@!@TagID")
			V.Local.sFm.Append("*!*Yard@!@Yard")
			V.Local.sFm.Append("*!*Line@!@Line")
			V.Local.sFm.Append("*!*ItemQty@!@ItemQty")
			
			F.Data.DataTable.SaveToDB("dtNoteWeight1","conx","GAB_6559_BI_TNote","",128,V.Local.sFm)
			
			F.Data.DataTable.Close("dtNoteWeight1")
			f.Global.BI.StopLogging(v.Global.iBILogID)
			
			V.Local.sval.Set(V.Global.iBIRunID.String)
			V.Local.sPrm.Set("BIRunID")
			
			f.Global.BI.PrintReport(v.Global.iBIRptID,0,v.Local.sPrm,v.Local.sval,"",true)
			
			F.Intrinsic.String.Build("Delete From GAB_6559_BI_TNote where BIRunID = {0};",V.Global.iBIRunID,V.Local.sSQL)
			F.ODBC.Connection!conx.Execute(V.Local.sSQL)
			
			
	F.Intrinsic.Control.EndSelect
	
	'Enable form
	F.Intrinsic.Control.UnBlockEvents
	
'		
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.FormTranNote_UserButtonClicked.End

Program.Sub.LoadFormTransportHeader.Start
V.Local.sTNID.Declare
V.Local.sTNID.Set(V.Args.TNID)
V.Global.iTNID.Set(v.Local.sTNID.Long)
V.Local.sSQL.Declare
V.Local.sRet.Declare


F.Intrinsic.Control.Try
'Load Transport Note header values into the FormTranNote text boxes

	F.Intrinsic.String.Build("Select TransportNoteID, DateTimeDelivery, Rtrim(RegistrationNumber) as RegistrationNumber, RTRIM(DriverName) as DriverName, RTRIM(GS_USER) as GS_USER, TransportArrangementID, RTRIM(Note) as Note, ContactID, AddressID, SysUserLastAccess, SysUserLastAccessDateTime From GAB_6559_TransportNote where TransportNoteID = '{0}'",V.Local.sTNID,V.Local.sSQL)
	F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	
	gui.FormTranNote.txtTransportNoteID.Text(V.Local.sTNID)
	gui.FormTranNote.txtDateTimeDelivery.Text(V.Local.sRet(1))
	gui.FormTranNote.txtRegNum.Text(V.Local.sRet(2))
	gui.FormTranNote.txtDriverName.Text(V.Local.sRet(3))
	gui.FormTranNote.txtCreatedBy.Text(V.Local.sRet(4))
	gui.FormTranNote.txtTransportArrangementID.Text(V.Local.sRet(5))
	gui.FormTranNote.txtTransportArrangement.Text(V.Dictionary.dictTransportID![V.Local.sRet(5)])
	gui.FormTranNote.txtNote.Text(V.Local.sRet(6))
	
	gui.FormTranNote.txtLastAccessUser.Text(V.Local.sRet(9))
	gui.FormTranNote.txtLastAccessDateTime.Text(V.Local.sRet(10))
	
	gui.FormTranNote.txtEstimate.Text("Calculate This From Dictionary")

'	V.Global.sQuoteID.Set(V.Local.sRet(1))
'	V.Global.sShipToID.Set(V.Local.sRet(2))
'	V.Global.sCustID.Set(V.Local.sRet(3))
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadFormTransportHeader.End

Program.Sub.SaveFormTransportHeader.Start
V.Local.sTNID.Declare
'V.Local.sQHID.Set(V.Args.QHID)
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sNow.Declare
V.Local.sDateTimeDelivery.Declare
V.Local.sRegNum.Declare
V.Local.sDriverName.Declare
V.Local.sCreatedBy.Declare
V.Local.sTransportArrangementID.Declare
V.Local.sNote.Declare


F.Intrinsic.Control.Try
'Save Quote header values from FORMQUOTE text boxes into the Table GAB_6559_Quote_Head
	
	'Make sure Date time is a valid date time before saving it to the DB
	
	V.Local.sDateTimeDelivery.Set(V.Screen.FormTranNote!txtDateTimeDelivery.Text)
	F.Intrinsic.String.Format(V.Local.sDateTimeDelivery, "YYYY-MM-DD HH:NN:SS", V.Local.sDateTimeDelivery)
	F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)	
	V.Local.sRegNum.Set(V.Screen.FormTranNote!txtRegNum.Text)
	V.Local.sDriverName.Set(V.Screen.FormTranNote!txtDriverName.Text)
	V.Local.sCreatedBy.Set(V.Screen.FormTranNote!txtCreatedBy.Text)
	V.Local.sTransportArrangementID.Set(V.Screen.FormTranNote!txtTransportArrangementID.Text)
	V.Local.sNote.Set(V.Screen.FormTranNote!txtNote.Text)
	'F.Intrinsic.String.Format(V.Local.dNow,YYYY-MM-)
	'2023-02-14 00:00:00.000 AM
	F.Intrinsic.String.RTrim(V.Local.sNote,V.Local.sNote)
	F.Intrinsic.String.RTrim(V.Local.sDriverName,V.Local.sDriverName)
	F.Intrinsic.String.RTrim(V.Local.sRegNum,V.Local.sRegNum)
	
	F.Intrinsic.String.Build("Update GAB_6559_TransportNote Set DateTimeDelivery = '{0}', RegistrationNumber = '{1}', DriverName = '{2}', GS_USER = '{3}', TransportArrangementID = '{4}', Note = '{5}', SysUserLastAccess = '{6}', SysUserLastAccessDateTime = '{7}' where TransportNoteID = '{8}'",V.Local.sDateTimeDelivery,V.Local.sRegNum.PSQLFriendly,V.Local.sDriverName.PSQLFriendly,V.Local.sCreatedBy.PSQLFriendly,V.Local.sTransportArrangementID,V.Local.sNote.PSQLFriendly,V.Caller.User,V.Local.sNow,V.Global.iTNID,V.Local.sSQL)

	F.ODBC.Connection!conx.Execute(V.Local.sSQL)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.SaveFormTransportHeader.End

Program.Sub.CreateTransportNoteID.Start
V.Local.sTNID.Declare

V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.sContactID.Declare
V.Local.sAddressID.Declare
V.Local.dNow.Declare
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)	

V.Local.sCustRef.Declare
V.Local.sCustContact.Declare
V.Local.sCustAddress.Declare
V.Local.sQuotedBy.Declare
V.Local.sEsitmate.Declare
V.Local.sAcceptedFlag.Declare
V.Local.sTransportArrangementID.Declare
V.Local.sDriver.Declare
V.Local.sRegNum.Declare
V.Local.sDesc.Declare

F.Intrinsic.Control.Try

	
	V.Local.sContactID.Set("0")
	V.Local.sAddressID.Set("0")
	V.Local.sDesc.Set(V.Args.Desc)
	V.Local.sTransportArrangementID.Set(V.Args.TransportArrangementID)
	V.Local.sDriver.Set(V.Args.Driver)
	V.Local.sRegNum.Set(V.Args.RegNum)
	
	'Insert Statement on GAB_6559_Quote_Head
	F.Intrinsic.String.Build("Insert Into GAB_6559_TransportNote (DateTimeDelivery,GS_USER,ContactID,AddressID,TransportArrangementID,SysUserLastAccess,SysUserLastAccessDateTime,Note,RegistrationNumber,DriverName) Values ('{0}','{1}','{2}','{3}','{4}','{1}','{0}','{5}','{6}','{7}')",V.Local.sNow,V.Caller.User,V.Local.sContactID,V.Local.sAddressID,V.Local.sTransportArrangementID,V.Local.sDesc.PSQLFriendly,V.Local.sRegNum.PSQLFriendly,V.Local.sDriver.PSQLFriendly,V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	
	'Get the QHID that was auto generated by PSQL... We will use that to then open the quote form
	F.Intrinsic.String.Build("Select Top 1 TransportNoteID from GAB_6559_TransportNote where GS_USER = '{0}' order by SysUserLastAccessDateTime Desc",V.Caller.User,v.Local.sSQL)
	F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,v.Local.sRet)
	
	f.Intrinsic.Variable.AddRV("TNID",V.Local.sRet.Trim)
	
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.CreateTransportNoteID.End

Program.Sub.Load_TransportLines.Start
V.Local.sTNID.Declare
V.Local.sTNID.Set(V.Global.iTNID)
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.bRet.Declare
V.Local.fRet.Declare

F.Intrinsic.Control.Try

	f.Intrinsic.Control.If(v.DataTable.dtTransportLines.Exists)
		f.Data.DataTable.Close("dtTransportLines")
		gui.FormTranNote.GsTransportLines.ClearRows("gvTransportLines")		
	f.Intrinsic.Control.EndIf
	
	f.Data.Dictionary.Exists("dictLineNum",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictLineNum")
	F.Intrinsic.Control.EndIf
	
	f.Data.Dictionary.Exists("dictLineQTY",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictLineQTY")
	F.Intrinsic.Control.EndIf
	
	f.Data.Dictionary.Exists("dictLineDesc",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictLineDesc")
	F.Intrinsic.Control.EndIf
	
		f.Data.Dictionary.Exists("dictUnitQTY",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Data.Dictionary.Close("dictUnitQTY")
	F.Intrinsic.Control.EndIf

	'Select
	'WorkOrderID
	'LID
	'Line
	'NoteQty
	'LineQty
	'PartDescription
	'UnitQty
	
	F.Intrinsic.String.Build("Select Cast(0 as bit) as Sel, WorkOrderID, LID, '' as Line, ItemQuantity as NoteQty From GAB_6559_Transport_WO where TransportNoteID = '{0}' order by WorkOrderID, LID ASC",V.Global.iTNID,V.Local.sSQL)
	F.Data.Datatable.CreateFromSQL("dtTransportLines","conx",V.Local.sSQL,True)
	
	'Dictionary for WorkOrder LID, Line From GAB_6559_Lines... 
	F.Data.Dictionary.CreatefromSQL("dictLineNum","conx","Select LID, Line From GAB_6559_Lines")
	F.Data.Dictionary.SetDefaultReturn("dictLineNum","")
	F.Data.DataTable.FillFromDictionary("dtTransportLines","dictLineNum","LID","Line")
	
	'Dictionary for LineQty LID, ItemQTY From GAB_6559_Lines...
	F.Data.DataTable.AddColumn("dtTransportLines","LineQty","Long",0)
	F.Data.Dictionary.CreatefromSQL("dictLineQTY","conx","Select LID, ItemQTY From GAB_6559_Lines")
	F.Data.Dictionary.SetDefaultReturn("dictLineQTY",0)
	F.Data.DataTable.FillFromDictionary("dtTransportLines","dictLineQTY","LID","LineQty")
	
	'Dictionary for LineQty LID, Description From GAB_6559_Lines...
	F.Data.DataTable.AddColumn("dtTransportLines","PartDescription","String","")
	F.Data.Dictionary.CreatefromSQL("dictLineDesc","conx","Select LID, Description From GAB_6559_Lines")
	F.Data.Dictionary.SetDefaultReturn("dictLineDesc","")
	F.Data.DataTable.FillFromDictionary("dtTransportLines","dictLineDesc","LID","PartDescription")
	
	'Dictionary for LineQty LID, ItemQTY From GAB_6559_Lines...
	F.Data.DataTable.AddColumn("dtTransportLines","UnitQty","Float",0.00)
	F.Data.Dictionary.CreatefromSQL("dictUnitQTY","conx","Select LID, UnitQty From GAB_6559_Lines")
	F.Data.Dictionary.SetDefaultReturn("dictUnitQTY",0.00)
	F.Data.DataTable.FillFromDictionary("dtTransportLines","dictUnitQTY","LID","UnitQty")
	
	'Compute Total Weight on Transport Note
	F.Data.DataTable.AddExpressionColumn("dtTransportLines","TransportNoteLineWeight","Float","[NoteQty] * [UnitQty]")
	F.Data.DataTable.Compute("dtTransportLines","Sum([TransportNoteLineWeight])","",V.Local.fRet)
	F.Intrinsic.Math.Round(V.Local.fRet,2,V.Local.fRet)
	gui.FormTranNote.txtEstimate.Text(V.Local.fRet)
		
	gui.FormTranNote.GsTransportLines.AddGridviewFromDatatable("gvTransportLines","dtTransportLines")
	
	f.Intrinsic.Control.CallSub(Format_TransportLines)
	
	gui.FormTranNote.cmdRemove.Visible(True)
	gui.FormTranNote.cmdAllocate.Visible(False)
	gui.FormTranNote.GsTransportLines.MainView("gvTransportLines")		
	gui.FormTranNote.tabItems.SetTab(0)
		
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Load_TransportLines.End

Program.Sub.Format_TransportLines.Start
V.Local.sSql.Declare
V.Local.sProp.Declare
v.Local.sValue.Declare	
V.Local.iRet.Declare
V.Local.iCnt.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare
F.Intrinsic.Control.Try

	
	
	gui.FormTranNote.GsTransportLines.SuspendLayout()
	
	gui.FormTranNote.GsTransportLines.SetGridViewProperty("gvTransportLines","MultiSelect",False)
	gui.FormTranNote.GsTransportLines.SetGridViewProperty("gvTransportLines","AllowSort",True)
	gui.FormTranNote.GsTransportLines.SetGridViewProperty("gvTransportLines","AllowFilter",True)
	gui.FormTranNote.GsTransportLines.SetGridViewProperty("gvTransportLines","OptionsDetailShowDetailTabs",False)
	gui.FormTranNote.GsTransportLines.SetGridViewProperty("gvTransportLines","OptionsViewShowGroupPanel",True)
	gui.FormTranNote.GsTransportLines.SetGridViewProperty("gvTransportLines","EnableAppearanceOddRow",True)
	gui.FormTranNote.GsTransportLines.SetGridviewProperty("gvTransportLines",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.FormTranNote.GsTransportLines.SetGridviewProperty("gvTransportLines","OptionsViewColumnAutoWidth",False)
	gui.FormTranNote.GsTransportLines.SetGridviewProperty("gvTransportLines","AllowColumnResizing",True)	
	gui.FormTranNote.GsTransportLines.SetGridviewProperty("gvTransportLines","ColumnPanelRowHeight","50")
	gui.FormTranNote.GsTransportLines.SetGridviewProperty("gvTransportLines",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	
	
	'Sel
	'WorkOrderID
	'LID
	'Line
	'NoteQty
	'LineQty
	'PartDescription
	'UnitQty
	
	f.Intrinsic.Control.CallSub(Bulk_Format_TransportLines,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_TransportLines,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_TransportLines,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_TransportLines,"sProp","HeaderVAlignment","sValue","Top")
	


	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","LID",v.Enum.ColumnPropertyNames!Visible,False)


	v.Local.sProp.Set("VisibleIndex")
	v.Local.iCnt.Set(-1)	
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","Sel",v.Local.sProp,v.Local.iCnt.++)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","WorkOrderID",v.Local.sProp,v.Local.iCnt.++)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","Line",v.Local.sProp,v.Local.iCnt.++)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","NoteQty",v.Local.sProp,v.Local.iCnt.++)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","LineQty",v.Local.sProp,v.Local.iCnt.++)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","PartDescription",v.Local.sProp,v.Local.iCnt.++)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","UnitQty",v.Local.sProp,v.Local.iCnt.++)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","TransportNoteLineWeight",v.Local.sProp,v.Local.iCnt.++)


	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","Sel",v.Local.sProp,v.Local.sValue2)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","WorkOrderID",v.Local.sProp,v.Local.sValue2)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","Line",v.Local.sProp,v.Local.sValue2)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","NoteQty",v.Local.sProp,v.Local.sValue3)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","LineQty",v.Local.sProp,v.Local.sValue3)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","PartDescription",v.Local.sProp,v.Local.sValue)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","UnitQty",v.Local.sProp,v.Local.sValue3)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","TransportNoteLineWeight",v.Local.sProp,v.Local.sValue3)
	


	
	v.Local.sProp.Set("CellHAlignment")
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","Sel",v.Local.sProp,v.Local.sValue2)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","WorkOrderID",v.Local.sProp,v.Local.sValue2)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","Line",v.Local.sProp,v.Local.sValue2)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","NoteQty",v.Local.sProp,v.Local.sValue3)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","LineQty",v.Local.sProp,v.Local.sValue3)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","PartDescription",v.Local.sProp,v.Local.sValue)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","UnitQty",v.Local.sProp,v.Local.sValue3)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","TransportNoteLineWeight",v.Local.sProp,v.Local.sValue3)

	
	v.Local.sProp.Set("Caption")
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","Sel",v.Local.sProp,"Select")
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","WorkOrderID",v.Local.sProp,"Work Order")
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","Line",v.Local.sProp,"Line #")
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","NoteQty",v.Local.sProp,"Note Qty")
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","LineQty",v.Local.sProp,"Line Qty")
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","PartDescription",v.Local.sProp,"Part Description")
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","UnitQty",v.Local.sProp,"Unit Weight (kg/Part)")
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","TransportNoteLineWeight",v.Local.sProp,"Note Qty * Unit Weight (kg)")

			

	v.Local.sProp.Set("Width")
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","Sel",v.Local.sProp,"50")
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","WorkOrderID",v.Local.sProp,"75")
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","Line",v.Local.sProp,"50")
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","NoteQty",v.Local.sProp,"75")
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","LineQty",v.Local.sProp,"75")
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","PartDescription",v.Local.sProp,"200")
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","UnitQty",v.Local.sProp,"100")
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","TransportNoteLineWeight",v.Local.sProp,"100")
	
	
'	For RowCellClick and CellValueChanged
	v.Local.sProp.Set("AllowEdit")
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","Sel",v.Local.sProp,True)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","WorkOrderID",v.Local.sProp,False)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","Line",v.Local.sProp,False)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","NoteQty",v.Local.sProp,True)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","LineQty",v.Local.sProp,False)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","PartDescription",v.Local.sProp,False)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","UnitQty",v.Local.sProp,False)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","TransportNoteLineWeight",v.Local.sProp,False)
		

	v.Local.sProp.Set("ReadOnly")
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","Sel",v.Local.sProp,False)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","WorkOrderID",v.Local.sProp,True)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","Line",v.Local.sProp,True)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","NoteQty",v.Local.sProp,False)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","LineQty",v.Local.sProp,True)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","PartDescription",v.Local.sProp,False)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","UnitQty",v.Local.sProp,True)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","TransportNoteLineWeight",v.Local.sProp,True)
	
	'gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","QuoteID",V.Enum.ColumnPropertyNames!IsHyperlink,True)
	
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("LightYellow")
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","NoteQty",v.Local.sProp,v.Local.sValue)
	
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","UnitQty",V.Enum.ColumnPropertyNames!DisplayCustomNumeric,"###,###,##0.00")
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","TransportNoteLineWeight",V.Enum.ColumnPropertyNames!DisplayCustomNumeric,"###,###,##0.00")

	gui.FormTranNote.GsTransportLines.ResumeLayout()

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Format_TransportLines.End

Program.Sub.Bulk_Format_TransportLines.Start
F.Intrinsic.Control.Try
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","Sel",v.Args.sProp,v.Args.sValue)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","WorkOrderID",v.Args.sProp,v.Args.sValue)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","NoteQty",v.Args.sProp,v.Args.sValue)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","Line",v.Args.sProp,v.Args.sValue)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","LineQty",v.Args.sProp,v.Args.sValue)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","PartDescription",v.Args.sProp,v.Args.sValue)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","UnitQty",v.Args.sProp,v.Args.sValue)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","LID",v.Args.sProp,v.Args.sValue)
	gui.FormTranNote.GsTransportLines.SetColumnProperty("gvTransportLines","TransportNoteLineWeight",v.Args.sProp,v.Args.sValue)
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Bulk_Format_TransportLines.End

'Tranpost available tab
Program.Sub.tabItems_Click.Start
v.Local.sValue.Declare
v.Local.sValue.Set(v.Screen.FormTranNote!tabItems.tab)

F.Intrinsic.Control.SelectCase(V.Local.sValue)
F.Intrinsic.Control.Case("0")
	F.Intrinsic.Control.CallSub(Load_TransportLines)
F.Intrinsic.Control.Case("1")
	F.Intrinsic.Control.CallSub(Load_TransportAvailable)
F.Intrinsic.Control.EndSelect

Program.Sub.tabItems_Click.End

Program.Sub.Load_TransportAvailable.Start
V.Local.bExists.Declare
V.Local.sTNID.Declare
V.Local.sTNID.Set(V.Global.iTNID)
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.bRet.Declare
V.Local.fRet.Declare
V.Local.sCust.Declare
V.Local.sShipSeq.Declare
V.Local.sIOP.Declare
V.Local.sFilter.Declare
v.Local.sDVFilter.Declare
v.Local.sDVFilter.Set("")
F.Intrinsic.Control.Try

	f.Intrinsic.Control.If(v.DataTable.dtTransportAvailable.Exists)
		f.Data.DataTable.Close("dtTransportAvailable")
		gui.FormTranNote.GsTransportAvailable.ClearRows("gvTransportAvailable")		
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictInboundQTY0",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictInboundQTY0")
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictOutboundQTY0",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictOutboundQTY0")
	f.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.Exists("dictPossQTY0",V.Local.bExists)
	f.Intrinsic.Control.If(V.Local.bExists)
		F.Data.Dictionary.Close("dictPossQTY0")
	f.Intrinsic.Control.EndIf

	'SELECT
	'ID
	'LID
	'Line
	'ItemQty
	'Description
	'InboundItemQuantity
	'OutboundItemQuantity 
	'PossItemQuantity 	
	'Inbound_Needed
	'Outbound_Needed
	'Possesson_Needed
	
	'Pull in all data for that customer that has a needed QTY > 0 and is not already on that transport note
	'Then Filter down to a second screen that only contains rows from the same WO
	
	
	'Get Customer, Ship_seq from WO ID on the Tnote
	F.Intrinsic.String.Build("select TOP 1 RTRIM(CUSTOMER) CUSTOMER, RTRIM(SHIP_SEQ) SHIP_SEQ from GAB_6559_Galvaware where ID in (Select WorkOrderID From GAB_6559_Transport_WO where TransportNoteID = '{0}')",V.Global.iTNID,V.Local.sSQL)
	f.ODBC.Connection!conx.executeandreturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.not)
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		V.Local.sRet.RedimPreserve(0,1)
		V.Local.sCust.Set(V.Local.sRet(0))
		V.Local.sShipSeq.Set(V.Local.sRet(1))
		F.Intrinsic.String.Build("where CUSTOMER = '{0}' and SHIP_SEQ = '{1}'",V.Local.sCust,V.Local.sShipSeq,V.Local.sFilter)
	F.Intrinsic.Control.Else
		V.Local.sFilter.Set("")
	F.Intrinsic.Control.EndIf
	
	
	'Are we Inbounding, Outbounding, or Possessioning? Get this from the Header
	V.Local.sIOP.Set(V.Dictionary.dictTransMovement![v.Screen.FormTranNote!txtTransportArrangementID.Text])
	
	
	F.Intrinsic.String.Build("select ID, LID, Line, ItemQty, Rtrim(Description) as Description from GAB_6559_Lines where ID in (select ID from GAB_6559_Galvaware {0})",V.Local.sFilter,V.Local.sSQL)
	F.Data.Datatable.CreateFromSQL("dtTransportAvailable0","conx",V.Local.sSQL,True)
	
	
	F.Data.Datatable.AddColumn("dtTransportAvailable0","SELECT","Boolean",False)
	
	F.Data.Datatable.AddColumn("dtTransportAvailable0","InboundItemQuantity","Long",0)
	F.Data.Dictionary.CreateFromSQL("dictInboundQTY0","conx","select LID, Sum(ItemQuantity) as InboundItemQuantity from GAB_6559_Transport_WO where TransportNoteID in (Select TransportNoteID from GAB_6559_TransportNote where TransportArrangementID in (Select TransportNoteID from GAB_6559_TransportNoteId where MovementType = 'I')) group by LID;")
	F.Data.Dictionary.SetDefaultReturn("dictInboundQTY0",0)
	F.Data.DataTable.FillFromDictionary("dtTransportAvailable0","dictInboundQTY0","LID","InboundItemQuantity")
	
	
	F.Data.Datatable.AddColumn("dtTransportAvailable0","OutboundItemQuantity","Long",0)
	F.Data.Dictionary.CreateFromSQL("dictOutboundQTY0","conx","select LID, Sum(ItemQuantity) as OutboundItemQuantity from GAB_6559_Transport_WO where TransportNoteID in (Select TransportNoteID from GAB_6559_TransportNote where TransportArrangementID in (Select TransportNoteID from GAB_6559_TransportNoteId where MovementType = 'O')) group by LID;")
	F.Data.Dictionary.SetDefaultReturn("dictOutboundQTY0",0)
	F.Data.DataTable.FillFromDictionary("dtTransportAvailable0","dictOutboundQTY0","LID","OutboundItemQuantity")
	
	
	F.Data.Datatable.AddColumn("dtTransportAvailable0","PossItemQuantity","Long",0)
	F.Data.Dictionary.CreateFromSQL("dictPossQTY0","conx","select LID, Sum(ItemQuantity) as PossItemQuantity from GAB_6559_Transport_WO where TransportNoteID in (Select TransportNoteID from GAB_6559_TransportNote where TransportArrangementID in (Select TransportNoteID from GAB_6559_TransportNoteId where MovementType = 'P')) group by LID;")
	F.Data.Dictionary.SetDefaultReturn("dictPossQTY0",0)
	F.Data.DataTable.FillFromDictionary("dtTransportAvailable0","dictPossQTY0","LID","PossItemQuantity")
	
	
	F.Data.Datatable.AddExpressionColumn("dtTransportAvailable0","Inbound_Needed","Long","[ItemQty] - [InboundItemQuantity]")
	F.Data.Datatable.AddExpressionColumn("dtTransportAvailable0","Outbound_Needed","Long","[ItemQty] - [OutboundItemQuantity]")
	F.Data.Datatable.AddExpressionColumn("dtTransportAvailable0","Possesson_Needed","Long","[ItemQty] - [PossItemQuantity]")
	
	
	'DT to DV to new DT to get rid of expression column
	F.Intrinsic.Control.SelectCase(V.Local.sIOP)
	F.Intrinsic.Control.Case("I")
		v.Local.sDVFilter.Set("Inbound_Needed > 0")
	F.Intrinsic.Control.Case("O")
		v.Local.sDVFilter.Set("Outbound_Needed > 0")
	F.Intrinsic.Control.Case("P")
		v.Local.sDVFilter.Set("Possesson_Needed > 0")
	F.Intrinsic.Control.EndSelect
	
	'v.Local.sDVFilter.set("")
	F.Data.DataView.Create("dtTransportAvailable0","dvTransportAvailable",22,V.Local.sDVFilter,"ID Desc, Line Asc")
	F.Data.DataView.ToDataTable("dtTransportAvailable0","dvTransportAvailable","dtTransportAvailable",True)
	
	F.Data.DataTable.Close("dtTransportAvailable0")
	
	gui.FormTranNote.GsTransportAvailable.AddGridviewFromDatatable("gvTransportAvailable","dtTransportAvailable")
	
	f.Intrinsic.Control.CallSub(Format_TransportAvailable,"IOP",V.Local.sIOP)
	
	gui.FormTranNote.cmdRemove.Visible(False)
	gui.FormTranNote.cmdAllocate.Visible(True)
	gui.FormTranNote.GsTransportAvailable.MainView("gvTransportAvailable")		
	gui.FormTranNote.tabItems.SetTab(1)
	
	'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Load_TransportAvailable.End

Program.Sub.Format_TransportAvailable.Start
V.Local.sSql.Declare
V.Local.sProp.Declare
v.Local.sValue.Declare	
V.Local.iRet.Declare
V.Local.iCnt.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare
V.Local.sIOP.Declare
V.Local.sIOP.Set(V.Args.IOP)
F.Intrinsic.Control.Try

	
	
	gui.FormTranNote.GsTransportAvailable.SuspendLayout()
	
	gui.FormTranNote.GsTransportAvailable.SetGridViewProperty("gvTransportAvailable","MultiSelect",False)
	gui.FormTranNote.GsTransportAvailable.SetGridViewProperty("gvTransportAvailable","AllowSort",True)
	gui.FormTranNote.GsTransportAvailable.SetGridViewProperty("gvTransportAvailable","AllowFilter",True)
	gui.FormTranNote.GsTransportAvailable.SetGridViewProperty("gvTransportAvailable","OptionsDetailShowDetailTabs",False)
	gui.FormTranNote.GsTransportAvailable.SetGridViewProperty("gvTransportAvailable","OptionsViewShowGroupPanel",True)
	gui.FormTranNote.GsTransportAvailable.SetGridViewProperty("gvTransportAvailable","EnableAppearanceOddRow",True)
	gui.FormTranNote.GsTransportAvailable.SetGridviewProperty("gvTransportAvailable",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.FormTranNote.GsTransportAvailable.SetGridviewProperty("gvTransportAvailable","OptionsViewColumnAutoWidth",False)
	gui.FormTranNote.GsTransportAvailable.SetGridviewProperty("gvTransportAvailable","AllowColumnResizing",True)	
	gui.FormTranNote.GsTransportAvailable.SetGridviewProperty("gvTransportAvailable","ColumnPanelRowHeight","50")
	gui.FormTranNote.GsTransportAvailable.SetGridviewProperty("gvTransportAvailable",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.FormTranNote.GsTransportAvailable.SetGridviewProperty("gvTransportAvailable", "ShowConditionalFormattingItem", True)
	
	
	'SELECT
	'ID
	'LID
	'Line
	'ItemQty
	'Description
	'InboundItemQuantity
	'OutboundItemQuantity 
	'PossItemQuantity 	
	'Inbound_Needed
	'Outbound_Needed
	'Possesson_Needed
	
	f.Intrinsic.Control.CallSub(Bulk_Format_TransportAvailable,"sProp","Visible","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_TransportAvailable,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_TransportAvailable,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_TransportAvailable,"sProp","HeaderVAlignment","sValue","Top")
	


	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","LID",v.Enum.ColumnPropertyNames!Visible,False)
	
	F.Intrinsic.Control.SelectCase(V.Local.sIOP)
	F.Intrinsic.Control.Case("I")
		gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","OutboundItemQuantity",v.Enum.ColumnPropertyNames!Visible,False)
		gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","PossItemQuantity",v.Enum.ColumnPropertyNames!Visible,False)
		gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Outbound_Needed",v.Enum.ColumnPropertyNames!Visible,False)
		gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Possesson_Needed",v.Enum.ColumnPropertyNames!Visible,False)
	F.Intrinsic.Control.Case("O")
		gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","InboundItemQuantity",v.Enum.ColumnPropertyNames!Visible,False)
		gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","PossItemQuantity",v.Enum.ColumnPropertyNames!Visible,False)
		gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Inbound_Needed",v.Enum.ColumnPropertyNames!Visible,False)
		gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Possesson_Needed",v.Enum.ColumnPropertyNames!Visible,False)
	F.Intrinsic.Control.Case("P")
		gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","OutboundItemQuantity",v.Enum.ColumnPropertyNames!Visible,False)
		gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","InboundItemQuantity",v.Enum.ColumnPropertyNames!Visible,False)
		gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Outbound_Needed",v.Enum.ColumnPropertyNames!Visible,False)
		gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Inbound_Needed",v.Enum.ColumnPropertyNames!Visible,False)
	F.Intrinsic.Control.EndSelect
	
	'SELECT
	'ID
	'LID
	'Line
	'ItemQty
	'Description
	'InboundItemQuantity
	'OutboundItemQuantity 
	'PossItemQuantity 	
	'Inbound_Needed
	'Outbound_Needed
	'Possesson_Needed

	v.Local.sProp.Set("VisibleIndex")
	v.Local.iCnt.Set(-1)	
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","SELECT",v.Local.sProp,v.Local.iCnt.++)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","ID",v.Local.sProp,v.Local.iCnt.++)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Line",v.Local.sProp,v.Local.iCnt.++)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","ItemQty",v.Local.sProp,v.Local.iCnt.++)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Description",v.Local.sProp,v.Local.iCnt.++)


	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","ID",v.Local.sProp,v.Local.sValue2)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","LID",v.Local.sProp,v.Local.sValue2)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Line",v.Local.sProp,v.Local.sValue2)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","ItemQty",v.Local.sProp,v.Local.sValue2)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Description",v.Local.sProp,v.Local.sValue)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","InboundItemQuantity",v.Local.sProp,v.Local.sValue2)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","OutboundItemQuantity",v.Local.sProp,v.Local.sValue2)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","PossItemQuantity",v.Local.sProp,v.Local.sValue2)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Inbound_Needed",v.Local.sProp,v.Local.sValue3)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Outbound_Needed",v.Local.sProp,v.Local.sValue3)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Possesson_Needed",v.Local.sProp,v.Local.sValue3)
	


	
	v.Local.sProp.Set("CellHAlignment")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","SELECT",v.Local.sProp,v.Local.sValue2)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","ID",v.Local.sProp,v.Local.sValue2)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","LID",v.Local.sProp,v.Local.sValue2)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Line",v.Local.sProp,v.Local.sValue2)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","ItemQty",v.Local.sProp,v.Local.sValue2)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Description",v.Local.sProp,v.Local.sValue)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","InboundItemQuantity",v.Local.sProp,v.Local.sValue2)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","OutboundItemQuantity",v.Local.sProp,v.Local.sValue2)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","PossItemQuantity",v.Local.sProp,v.Local.sValue2)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Inbound_Needed",v.Local.sProp,v.Local.sValue3)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Outbound_Needed",v.Local.sProp,v.Local.sValue3)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Possesson_Needed",v.Local.sProp,v.Local.sValue3)

	
	v.Local.sProp.Set("Caption")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","SELECT",v.Local.sProp,"Select")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","ID",v.Local.sProp,"Work Order")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","LID",v.Local.sProp,"LID")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Line",v.Local.sProp,"Line #")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","ItemQty",v.Local.sProp,"Line Qty")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Description",v.Local.sProp,"Part Description")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","InboundItemQuantity",v.Local.sProp,"Inbounded Qty")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","OutboundItemQuantity",v.Local.sProp,"Outbounded Qty")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","PossItemQuantity",v.Local.sProp,"Pos'ed Qty")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Inbound_Needed",v.Local.sProp,"Inbound Needed")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Outbound_Needed",v.Local.sProp,"Outbound Needed")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Possesson_Needed",v.Local.sProp,"Possession Needed")

			

	v.Local.sProp.Set("Width")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","SELECT",v.Local.sProp,"50")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","ID",v.Local.sProp,"75")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Line",v.Local.sProp,"50")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","ItemQty",v.Local.sProp,"75")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Description",v.Local.sProp,"200")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","InboundItemQuantity",v.Local.sProp,"75")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","OutboundItemQuantity",v.Local.sProp,"75")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","PossItemQuantity",v.Local.sProp,"75")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","PossItemQuantity",v.Local.sProp,"75")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Inbound_Needed",v.Local.sProp,"75")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Outbound_Needed",v.Local.sProp,"75")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Possesson_Needed",v.Local.sProp,"75")
	
	
'	For RowCellClick and CellValueChanged
	v.Local.sProp.Set("AllowEdit")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","SELECT",v.Local.sProp,True)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Inbound_Needed",v.Local.sProp,True)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Outbound_Needed",v.Local.sProp,True)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Possesson_Needed",v.Local.sProp,True)
		

	v.Local.sProp.Set("ReadOnly")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","SELECT",v.Local.sProp,False)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Inbound_Needed",v.Local.sProp,False)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Outbound_Needed",v.Local.sProp,False)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Possesson_Needed",v.Local.sProp,False)
	
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("LightYellow")
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Inbound_Needed",v.Local.sProp,v.Local.sValue)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Outbound_Needed",v.Local.sProp,v.Local.sValue)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Possesson_Needed",v.Local.sProp,v.Local.sValue)
	

	gui.FormTranNote.GsTransportAvailable.ResumeLayout()

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Format_TransportAvailable.End

Program.Sub.Bulk_Format_TransportAvailable.Start
F.Intrinsic.Control.Try
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","SELECT",v.Args.sProp,v.Args.sValue)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","ID",v.Args.sProp,v.Args.sValue)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","LID",v.Args.sProp,v.Args.sValue)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Line",v.Args.sProp,v.Args.sValue)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","ItemQty",v.Args.sProp,v.Args.sValue)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Description",v.Args.sProp,v.Args.sValue)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","InboundItemQuantity",v.Args.sProp,v.Args.sValue)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","OutboundItemQuantity",v.Args.sProp,v.Args.sValue)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","PossItemQuantity",v.Args.sProp,v.Args.sValue)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Inbound_Needed",v.Args.sProp,v.Args.sValue)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Outbound_Needed",v.Args.sProp,v.Args.sValue)
	gui.FormTranNote.GsTransportAvailable.SetColumnProperty("gvTransportAvailable","Possesson_Needed",v.Args.sProp,v.Args.sValue)
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Bulk_Format_TransportAvailable.End

Program.Sub.cmdAllocate_Click.Start
F.Intrinsic.Control.Try
V.Local.sSQL.Declare(String)
V.Local.iCnt.Declare
V.Local.sIOP.Declare
V.Local.sWOID.Declare
V.Local.sLID.Declare
V.Local.sColumn.Declare
V.Local.iRet.Declare
V.Local.iItemQty.Declare
V.Local.sIOP.Set(V.Dictionary.dictTransMovement![v.Screen.FormTranNote!txtTransportArrangementID.Text])

	F.Intrinsic.Control.SelectCase(V.Local.sIOP)
	F.Intrinsic.Control.Case("I")
		v.Local.sColumn.Set("Inbound_Needed")
	F.Intrinsic.Control.Case("O")
		v.Local.sColumn.Set("Outbound_Needed")
	F.Intrinsic.Control.Case("P")
		v.Local.sColumn.Set("Possesson_Needed")
	F.Intrinsic.Control.EndSelect

'Allocate selected lines
F.Data.DataView.Create("dtTransportAvailable","dvTransportAvailable",22,"SELECT = True","")
'dt > Dv Select = true

'insert into, or update GAB_6559_Transport_WO
F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataView.dtTransportAvailable!dvTransportAvailable.RowCount--,1)
	
	V.Local.sWOID.Set(V.DataView.dtTransportAvailable!dvTransportAvailable(V.Local.iCnt).ID!FieldVal)
	V.Local.sLID.Set(V.DataView.dtTransportAvailable!dvTransportAvailable(V.Local.iCnt).LID!FieldVal)
	V.Local.iItemQty.Set(V.DataView.dtTransportAvailable!dvTransportAvailable(V.Local.iCnt).[V.Local.sColumn]!FieldVal)
	
	F.Intrinsic.String.Build("select Top 1 ItemQuantity from GAB_6559_Transport_WO where LID = '{0}' and TransportNoteID = '{1}'",V.Local.sLID,V.Global.iTNID,V.Local.sSQL)
	f.ODBC.Connection!conx.executeandreturn(V.Local.sSQL,V.Local.iRet)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.not)
		F.Intrinsic.Math.Add(V.Local.iRet,V.Local.iItemQty,V.Local.iItemQty)
		F.Intrinsic.String.Build("Update GAB_6559_Transport_WO set ItemQuantity = '{0}' where LID = '{1}' and TransportNoteID = '{2}'",V.Local.iItemQty,V.Local.sLID,V.Global.iTNID,V.Local.sSQL)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("Insert Into GAB_6559_Transport_WO (WorkOrderID,LID,TransportNoteID,ItemQuantity) Values ('{0}','{1}','{2}','{3}')",V.Local.sWOID,V.Local.sLID,V.Global.iTNID,V.Local.iItemQty,V.Local.sSQL)
	F.Intrinsic.Control.EndIf
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	
F.Intrinsic.Control.Next(V.Local.iCnt)

F.Data.DataView.Close("dtTransportAvailable","dvTransportAvailable")
'reload TransportAvailable tab
F.Intrinsic.Control.CallSub(Load_TransportAvailable)


f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdAllocate_Click.End


Program.Sub.cmdRemove_Click.Start
V.Local.sRet.Declare
V.Local.iCnt.Declare
v.Local.sLID.Declare
V.Local.sSQL.Declare
V.Local.sNow.Declare
V.Local.dNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.dNow)
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)	

F.Intrinsic.Control.Try

'Warn the user with a msgbox the delete from the  
F.Intrinsic.ui.Msgbox("Are you sure you would like to delete the selected Tansport Note lines?","Delete","4",V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet,<>,"6")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Data.DataView.Create("dtTransportLines","dvTransportLines",22,"Sel = True","")


F.Intrinsic.Control.If(V.DataTable.dtTransportLines.RowCount,=,V.DataView.dtTransportLines!dvTransportLines.RowCount)
	F.Intrinsic.UI.Msgbox("You cannot delete all lines on a transport note with out deleteing the transport note header. Please use the Delete header button instead or an leave existing line")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

'loop backwards through dtTransportLines and delete formt he DB table and the local DT
F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtTransportLines.RowCount--,1)
	F.Intrinsic.Control.If(V.DataTable.dtTransportLines(V.Local.iCnt).Sel!fieldval,=,"True")
		v.Local.sLID.Set(V.DataTable.dtTransportLines(V.Local.iCnt).LID!Fieldval)
		F.Intrinsic.String.Build("Delete from GAB_6559_Transport_WO where LID = '{0}' and TransportNoteID = '{1}'",V.Local.sLID,V.Global.iTNID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iCnt)

'Show that someone made a change.
F.Intrinsic.String.Build("Update GAB_6559_TransportNote Set SysUserLastAccess = '{0}', SysUserLastAccessDateTime = '{1}' where TransportNoteID = '{2}'",V.Caller.User,V.Local.sNow,V.Global.iTNID,V.Local.sSQL)
F.ODBC.Connection!conx.Execute(V.Local.sSQL)
gui.FormTranNote.txtLastAccessUser.Text(V.Caller.User)
gui.FormTranNote.txtLastAccessDateTime.Text(V.Local.dNow)

F.Data.DataView.Close("dtTransportLines","dvTransportLines")
F.Intrinsic.Control.CallSub(Load_TransportLines)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdRemove_Click.End

Program.Sub.cmdTansportALookup_Click.Start
F.Intrinsic.Control.Try
V.Local.sSQL.Declare(String)
V.Local.sCol.Declare(String)
V.Local.sColW.Declare(String)
V.Local.sRet.Declare(String)

V.Local.sSQL.Set("SELECT RTRIM(Description) as Description, MovementType, CustomerPossessionFlag, TransportNoteID as TransportArrangementID FROM GAB_6559_TransportNoteId")
'Split Column Names into an array (*!* delimited string)
F.Intrinsic.String.Split("Trasnport Arrangement*!*MovementType*!*Cust. Poss.*!*Arrangement ID","*!*",V.Local.sCol)
'Split Column widths into an array (*!* delimited string)
F.Intrinsic.String.Split("2000*!*500*!*500*!*500","*!*",V.Local.sColW)
F.Intrinsic.UI.Browser("Transport Arrangement Browser","Conx",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	gui.FormTranNote.txtTransportArrangement.Text(V.Local.sRet(0))
	gui.FormTranNote.txtTransportArrangementID.Text(V.Local.sRet(3))
F.Intrinsic.Control.EndIf

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdTansportALookup_Click.End

Program.Sub.cmdDateTime_Click.Start
F.Intrinsic.Control.Try
V.Local.dNow.Declare
V.Local.dNow.Set(V.Ambient.Now)
Gui.FormTranNote.txtDateTimeDelivery.Text(V.Local.dNow)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdDateTime_Click.End


Program.Sub.GsTransportLines_CellValueChanged.Start
F.Intrinsic.Control.Try
V.Local.sLID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.fRet.Declare
V.Local.sBit.Declare
V.Local.dNow.Declare
V.Local.sNow.Declare
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.sNow)
F.Intrinsic.String.Format(V.Ambient.Now, "YYYY-MM-DD HH:NN:SS", V.Local.dNow)
V.Local.iLineQty.Declare

gui.FormTranNote.GsTransportLines.GetCellValueByColumnName("gvTransportLines","LID",V.Args.RowIndex,V.Local.sLID)
gui.FormTranNote.GsTransportLines.GetCellValueByColumnName("gvTransportLines","LineQty",V.Args.RowIndex,V.Local.iLineQty)
F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
		
	F.Intrinsic.Control.Case("NOTEQTY")
		F.Intrinsic.Control.If(V.Args.Value,>,V.Local.iLineQty)
			F.Intrinsic.UI.Msgbox("Caution! Note Qty is greater than the WO Line Qty.")
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.If(V.Args.Value,<=,0)
			F.Intrinsic.UI.Msgbox("Caution! Note Qty is less than or equal to zero.")
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.String.Build("Update GAB_6559_Transport_WO Set ItemQuantity = '{0}' where LID = '{1}' and TransportNoteID = '{2}'",V.Args.Value,V.Local.sLID,V.Global.iTNID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
		F.Intrinsic.String.Build("Update GAB_6559_TransportNote Set SysUserLastAccess = '{0}', SysUserLastAccessDateTime = '{1}' where TransportNoteID = '{2}'",V.Caller.User,V.Local.sNow,V.Global.iTNID,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
		F.Data.DataTable.Compute("dtTransportLines","Sum([TransportNoteLineWeight])","",V.Local.fRet)
		F.Intrinsic.Math.Round(V.Local.fRet,2,V.Local.fRet)
		
		gui.FormTranNote.txtEstimate.Text(V.Local.fRet)
		gui.FormTranNote.txtLastAccessUser.Text(V.Caller.User)
		gui.FormTranNote.txtLastAccessDateTime.Text(V.Local.dNow)
	
F.Intrinsic.Control.EndSelect
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.GsTransportLines_CellValueChanged.End

Program.Sub.GsTransportLines_RowCellClick.Start
F.Intrinsic.Control.Try
V.Local.sTNID.Declare
V.Local.sSQL.Declare
V.Local.sRet.Declare
'F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
	
	'Not currently using this.... might not ever
	'F.Intrinsic.Control.Case("SERVICEID")
		'Show Look up for Service ID from Price group
		
'F.Intrinsic.Control.EndSelect
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry

Program.Sub.GsTransportLines_RowCellClick.End


Program.Sub.GsTransportAvailable_RowCellClick.Start
Program.Sub.GsTransportAvailable_RowCellClick.End

Program.Sub.ClearQuoteHeaderBoxes.Start
F.Intrinsic.Control.Try

gui.FormTranNote.txtCreatedBy.Text("")
gui.FormTranNote.txtDateTimeDelivery.Text("")
gui.FormTranNote.txtDriverName.Text("")
gui.FormTranNote.txtEstimate.Text("")
gui.FormTranNote.txtLastAccessDateTime.Text("")
gui.FormTranNote.txtLastAccessUser.Text("")
gui.FormTranNote.txtNote.Text("")
gui.FormTranNote.txtRegNum.Text("")
gui.FormTranNote.txtTransportArrangement.Text("")
gui.FormTranNote.txtTransportArrangementID.Text("")
gui.FormTranNote.txtTransportNoteID.Text("")


f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.ClearQuoteHeaderBoxes.End


#End Region ' Transport Note Form

#Region "IOP Form"

Program.Sub.LoaddtIOP.Start
f.Intrinsic.Control.Try

	f.Intrinsic.Control.If(v.DataTable.dtIOP.Exists)
		f.Data.DataTable.Close("dtIOP")
		gui.FormIOP.GSGCIOP.ClearRows("gvIOP")		
	f.Intrinsic.Control.EndIf

	'Pull data straight from dtTransport 
	'F.Data.DataView.Create("dtTransport","dvTransport","22","SELECT = True","")
	F.Intrinsic.Control.If(V.Args.IOP,=,"POSSESSION")
		'Check to see if any of the lines are on credit hold.
		F.Data.DataView.Create("dtTransport","dvCreditHold","22","SELECT = True and CreditHold = True","")
		F.Intrinsic.Control.If(V.DataView.dtTransport!dvCreditHold.RowCount,>,0)
			F.Intrinsic.UI.Msgbox("One or more Customers are on credit hold and cannot receive goods.")
		F.Intrinsic.Control.EndIf
		F.Data.DataView.Close("dtTransport","dvCreditHold")
		
		F.Data.DataView.Create("dtTransport","dvTransport","22","SELECT = True and CreditHold = False","")
	F.Intrinsic.Control.Else
		F.Data.DataView.Create("dtTransport","dvTransport","22","SELECT = True","")
	F.Intrinsic.Control.EndIf
	
	f.Data.DataView.ToDataTable("dtTransport","dvTransport","dtIOP0",True)
	'f.Data.DataView.ToDataTableDistinct("dtTransport","dvTransport","dtIOP","LID",True)
	F.Data.Dictionary.CreateFromDataView("dictInb","dtTransport","dvTransport","LID","Inbound_Needed")
	F.Data.Dictionary.CreateFromDataView("dictOut","dtTransport","dvTransport","LID","Outbound_Needed")
	F.Data.Dictionary.CreateFromDataView("dictPos","dtTransport","dvTransport","LID","Possesson_Needed")
	F.Data.DataView.Close("dtTransport","dvTransport")
	
	F.Data.DataView.Create("dtIOP0","dvIOP0","22","","")
	f.Data.DataView.ToDataTable("dtIOP0","dvIOP0","dtIOP",True)
	F.Data.DataTable.Close("dtIOP0")
	
	'F.Data.DataTable.Create("dtIOP")
	'F.Data.DataTable.AddExpressionColumn("dtIOP","Inbound_Needed0","String","[Inbound_Needed]")
	F.Data.Datatable.AddColumn("dtIOP","Inbound_Needed0","String","")
	F.Data.Datatable.AddColumn("dtIOP","Outbound_Needed0","String","")
	F.Data.Datatable.AddColumn("dtIOP","Possesson_Needed0","String","")
	F.Data.Datatable.AddColumn("dtIOP","Note","String","")
	F.Data.Datatable.AddColumn("dtIOP","DriverName","String","")
	F.Data.Datatable.AddColumn("dtIOP","RegNum","String","")
	F.Data.DataTable.FillFromDictionary("dtIOP","dictInb","LID","Inbound_Needed0")
	F.Data.DataTable.FillFromDictionary("dtIOP","dictOut","LID","Outbound_Needed0")
	F.Data.DataTable.FillFromDictionary("dtIOP","dictPos","LID","Possesson_Needed0")
	F.Data.Dictionary.Close("dictInb")
	F.Data.Dictionary.Close("dictOut")
	F.Data.Dictionary.Close("dictPos")
	'F.Data.Datatable.AddColumn("dtIOP","RegNum","String","")
	'F.Data.Datatable.AddColumn("dtIOP","RegNum","String","")
	'F.Data.DataView.Create("dtIOP","dvIOP","22","","")
	F.Data.DataTable.AcceptChanges("dtIOP")
	
	'gui.FormIOP.GSGCIOP.AddGridviewFromDataview("gvIOP","dtIOP","dvIOP")
	
	gui.FormIOP.GSGCIOP.AddGridviewFromDatatable("gvIOP","dtIOP")
	
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","LID","Visible","False")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","WOStatusID","Visible","False")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Bill_To_Name","Visible","False")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","CUSTOMER_CODE","Visible","False")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","SHIP_SEQ","Visible","False")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","InboundDefault","Visible","False")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","OutboundDefault","Visible","False")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","PossessionDefault","Visible","False")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Inbound_Needed","Visible","False")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Outbound_Needed","Visible","False")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Possesson_Needed","Visible","False")

	
	F.Intrinsic.Control.SelectCase(V.Args.IOP)
	F.Intrinsic.Control.Case("INBOUND")
		'Set form name and button caption to Inbound, hide certain columns that are not needed
		gui.FormIOP.cmdIOP.Caption("Inbound")
		gui.FormIOP..Caption("Inbound Transport Notes 6559")
		gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","OutboundItemQuantity","Visible","False")
		gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","PossItemQuantity","Visible","False")
		gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Outbound_Needed0","Visible","False")
		gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Possesson_Needed0","Visible","False")
		gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Outbound_Def_Desc","Visible","False")
		gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Pos_Def_Desc","Visible","False")
		
	F.Intrinsic.Control.Case("OUTBOUND")
		'Set form name and button caption to Inbound
		gui.FormIOP.cmdIOP.Caption("Outbound")
		gui.FormIOP..Caption("Outbound Transport Notes 6559")
		gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","PossItemQuantity","Visible","False")
		gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","InboundItemQuantity","Visible","False")
		gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Possesson_Needed0","Visible","False")
		gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Inbound_Needed0","Visible","False")
		gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Inbound_Def_Desc","Visible","False")
		gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Pos_Def_Desc","Visible","False")
		
	F.Intrinsic.Control.Case("POSSESSION")
		'Set form name and button caption to Inbound
		gui.FormIOP.cmdIOP.Caption("Possession")
		gui.FormIOP..Caption("Possession Transport Notes 6559")
		gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","OutboundItemQuantity","Visible","False")
		gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","InboundItemQuantity","Visible","False")
		gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Outbound_Needed0","Visible","False")
		gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Inbound_Needed0","Visible","False")
		gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Outbound_Def_Desc","Visible","False")
		gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Inbound_Def_Desc","Visible","False")
		
	F.Intrinsic.Control.EndSelect
	
	
	F.Intrinsic.Control.CallSub(LoadgvIOP)
	Gui.FormIOP..Visible(True)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoaddtIOP.End

Program.Sub.LoadgvIOP.Start
f.Intrinsic.Control.Try
v.Local.sProp.Declare
v.Local.sValue.Declare
v.Local.sValue2.Declare
v.Local.sValue3.Declare
V.Local.sSQL.Declare

	gui.FormIOP.GSGCIOP.SetGridViewProperty("gvIOP","MultiSelect",False)
	gui.FormIOP.GSGCIOP.SetGridViewProperty("gvIOP","AllowSort",False)
	gui.FormIOP.GSGCIOP.SetGridViewProperty("gvIOP","AllowFilter",False)
	gui.FormIOP.GSGCIOP.SetGridViewProperty("gvIOP","OptionsDetailShowDetailTabs",False)
	gui.FormIOP.GSGCIOP.SetGridViewProperty("gvIOP","OptionsViewShowGroupPanel",False)
	gui.FormIOP.GSGCIOP.SetGridViewProperty("gvIOP","EnableAppearanceOddRow",True)
	gui.FormIOP.GSGCIOP.SetGridviewProperty("gvIOP",v.Enum.GridViewPropertyNames!ShowAutoFilterRow,True)
	gui.FormIOP.GSGCIOP.SetGridviewProperty("gvIOP","OptionsViewColumnAutoWidth",False)
	gui.FormIOP.GSGCIOP.SetGridviewProperty("gvIOP","AllowColumnResizing",True)	
	gui.FormIOP.GSGCIOP.SetGridviewProperty("gvIOP","ColumnPanelRowHeight","50")
	gui.FormIOP.GSGCIOP.SetGridviewProperty("gvIOP",v.Enum.GridViewPropertyNames!SuppressNothingDates,True)
	gui.FormIOP.GSGCIOP.SetGridviewProperty("gvIOP", "ShowConditionalFormattingItem", True)
	
	
	f.Intrinsic.Control.CallSub(Bulk_Format_gvIOP,"sProp","HeaderFontBold","sValue","True")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvIOP,"sProp","HeaderWordWrap","sValue","wrap")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvIOP,"sProp","HeaderVAlignment","sValue","Top")
	f.Intrinsic.Control.CallSub(Bulk_Format_gvIOP,"sProp","MinWidth","sValue","40")
	'f.Intrinsic.Control.CallSub(Bulk_Format_gvIOP,"sProp","AllowEdit","sValue","False")
	'f.Intrinsic.Control.CallSub(Bulk_Format_gvIOP,"sProp","ReadOnly","sValue","True")
	
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","SELECT","VisibleIndex",0)
	
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","CreditHold","Visible",False)
	
	
	v.Local.sProp.Set("Caption")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","SELECT",v.Local.sProp,"Sel")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","ID",v.Local.sProp,"Work Order ID")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","LID",v.Local.sProp,"LID")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Line",v.Local.sProp,"Line #")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","ItemQty",v.Local.sProp,"Item Qty")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Unit",v.Local.sProp,"Unit")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Description",v.Local.sProp,"Part Desc.")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","PriorityFlag",v.Local.sProp,"Priority Flag")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Bill_To_Name",v.Local.sProp,"Bill To Name")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","CUSTOMER_CODE",v.Local.sProp,"Cust. Code")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","SHIP_SEQ",v.Local.sProp,"Ship Seq")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","OutboundItemQuantity",v.Local.sProp,"Already Out. Item Qty")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","PossItemQuantity",v.Local.sProp,"Already Poss Item Qty")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Outbound_Needed",v.Local.sProp,"Out. Needed")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Outbound_Needed0",v.Local.sProp,"Out. Needed")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","InboundItemQuantity",v.Local.sProp,"Already Inb. Item Qty")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Inbound_Needed",v.Local.sProp,"Inb. Needed")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Inbound_Needed0",v.Local.sProp,"Inb. Needed")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Possesson_Needed",v.Local.sProp,"Poss Needed")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Possesson_Needed0",v.Local.sProp,"Poss Needed")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","CUSTOMER_SHIPNAME",v.Local.sProp,"Cust. Shipto Name")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Inbound_Def_Desc",v.Local.sProp,"Arrangement (Inb.)")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Outbound_Def_Desc",v.Local.sProp,"Arrangement (Out.)")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Pos_Def_Desc",v.Local.sProp,"Arrangement (Pos.)")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Note",v.Local.sProp,"Note")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","DriverName",v.Local.sProp,"Driver Name")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","RegNum",v.Local.sProp,"Reg Number")
'	
'Inbound_Def_Desc
'Outbound_Def_Desc
'Pos_Def_Desc
'InboundDefault
'OutboundDefault
'PossessionDefault
	v.Local.sProp.Set("HeaderHAlignment")
	v.Local.sValue.Set("Near")
	v.Local.sValue2.Set("Center")
	v.Local.sValue3.Set("Far")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","ID",v.Local.sProp,v.Local.sValue2)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","LINE",v.Local.sProp,v.Local.sValue2)
'	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","PriorityFlag",v.Local.sProp,v.Local.sValue2)
'	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Description",v.Local.sProp,v.Local.sValue)
'	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","ItemQty",v.Local.sProp,v.Local.sValue3)
'	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","LABEL_COPY",v.Local.sProp,v.Local.sValue2)
'	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","PrintButton",v.Local.sProp,v.Local.sValue2)
'	
'	v.Local.sProp.Set("CellHAlignment")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","ID",v.Local.sProp,v.Local.sValue2)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","LINE",v.Local.sProp,v.Local.sValue2)
'	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","LID",v.Local.sProp,v.Local.sValue2)
'	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","PriorityFlag",v.Local.sProp,v.Local.sValue2)
'	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Description",v.Local.sProp,v.Local.sValue)
'	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","ItemQty",v.Local.sProp,v.Local.sValue3)
'	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","LABEL_COPY",v.Local.sProp,v.Local.sValue2)
'	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","PrintButton",v.Local.sProp,v.Local.sValue2)

'	
'	v.Local.sProp.Set("Width")
'	
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","ID",v.Local.sProp,"75")
'	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","LINE",v.Local.sProp,"50")
'	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","PriorityFlag",v.Local.sProp,"75")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Description",v.Local.sProp,"100")
'	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","ItemQty",v.Local.sProp,"75")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","InboundItemQuantity",v.Local.sProp,"75")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","OutboundItemQuantity",v.Local.sProp,"75")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","PossItemQuantity",v.Local.sProp,"75")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Note",v.Local.sProp,"125")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","DriverName",v.Local.sProp,"75")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","RegNum",v.Local.sProp,"75")
	
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","SELECT","AllowEdit",True)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","SELECT","Readonly",False)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Inbound_Needed0","AllowEdit",True)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Inbound_Needed0","Readonly",False)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Inbound_Needed","AllowEdit",True)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Inbound_Needed","Readonly",False)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Outbound_Needed","AllowEdit",True)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Outbound_Needed0","AllowEdit",True)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Outbound_Needed","Readonly",False)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Outbound_Needed0","Readonly",False)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Possesson_Needed0","AllowEdit",True)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Possesson_Needed","AllowEdit",True)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Possesson_Needed0","Readonly",False)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Possesson_Needed","Readonly",False)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Inbound_Def_Desc","AllowEdit",True)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Inbound_Def_Desc","Readonly",False)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Outbound_Def_Desc","AllowEdit",True)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Outbound_Def_Desc","Readonly",False)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Pos_Def_Desc","AllowEdit",True)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Pos_Def_Desc","Readonly",False)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Note","AllowEdit",True)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Note","Readonly",False)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","DriverName","AllowEdit",True)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","DriverName","Readonly",False)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","RegNum","AllowEdit",True)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","RegNum","Readonly",False)
	'Color
	v.Local.sProp.Set("CellBackColor")
	v.Local.sValue.Set("LightYellow")
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Inbound_Needed",v.Local.sProp,v.Local.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Inbound_Needed0",v.Local.sProp,v.Local.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Outbound_Needed",v.Local.sProp,v.Local.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Outbound_Needed0",v.Local.sProp,v.Local.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Possesson_Needed",v.Local.sProp,v.Local.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Possesson_Needed0",v.Local.sProp,v.Local.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Inbound_Def_Desc",v.Local.sProp,v.Local.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Outbound_Def_Desc",v.Local.sProp,v.Local.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Pos_Def_Desc",v.Local.sProp,v.Local.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Note",v.Local.sProp,v.Local.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","DriverName",v.Local.sProp,v.Local.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","RegNum",v.Local.sProp,v.Local.sValue)
		
	Gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","UNITQTY","DisplayCustomNumeric","###,###,##0.00")
	
	
	
	'Making Inbound_Def_Desc a DDL
	V.Local.sSql.Set("Select RTRIM(Description) as Description FROM GAB_6559_TransportNoteId where MovementType = 'I' order by TransportNoteID DESC")
	F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSql,V.Local.sSql)
	F.Intrinsic.String.Replace(V.Local.sSql,"#$#","*!*",V.Local.sSql)
	Gui.FormIOP.GSGCIOP.ColumnEdit("gvIOP","Inbound_Def_Desc","Dropdownlist",V.Local.sSql)
	
	'Making Outbound_Def_Desc a DDL
	V.Local.sSql.Set("Select RTRIM(Description) as Description FROM GAB_6559_TransportNoteId where MovementType = 'O' order by TransportNoteID DESC")
	F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSql,V.Local.sSql)
	F.Intrinsic.String.Replace(V.Local.sSql,"#$#","*!*",V.Local.sSql)
	Gui.FormIOP.GSGCIOP.ColumnEdit("gvIOP","Outbound_Def_Desc","Dropdownlist",V.Local.sSql)
	
	'Making Pos_Def_Desc a DDL
	V.Local.sSql.Set("Select RTRIM(Description) as Description FROM GAB_6559_TransportNoteId where MovementType = 'P' order by TransportNoteID DESC")
	F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSql,V.Local.sSql)
	F.Intrinsic.String.Replace(V.Local.sSql,"#$#","*!*",V.Local.sSql)
	Gui.FormIOP.GSGCIOP.ColumnEdit("gvIOP","Pos_Def_Desc","Dropdownlist",V.Local.sSql)
	
	
	'Gui.FormIOP.GSGCIOP.BestFitColumns("gvIOP")
	Gui.FormIOP.GSGCIOP.MainView("gvIOP")

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.LoadgvIOP.End

Program.Sub.Bulk_Format_gvIOP.Start
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","SELECT",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","ID",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","LID",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Line",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","ItemQty",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Unit",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Description",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","PriorityFlag",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Bill_To_Name",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","CUSTOMER_CODE",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","SHIP_SEQ",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","OutboundItemQuantity",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","PossItemQuantity",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Outbound_Needed",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Outbound_Needed0",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","InboundItemQuantity",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Inbound_Needed",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Inbound_Needed0",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Possesson_Needed",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Possesson_Needed0",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","CUSTOMER_SHIPNAME",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","CUSTOMER_KEY",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","UNITQTY",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Inbound_Def_Desc",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Outbound_Def_Desc",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Pos_Def_Desc",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","InboundDefault",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","OutboundDefault",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","PossessionDefault",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","Note",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","DriverName",v.Args.sProp,v.Args.sValue)
	gui.FormIOP.GSGCIOP.SetColumnProperty("gvIOP","RegNum",v.Args.sProp,v.Args.sValue)


Program.Sub.Bulk_Format_gvIOP.End

Program.Sub.GSGCIOP_CellValueChanged.Start
V.Local.sInboundID.Declare
V.Local.sOutboundID.Declare
V.Local.sPossessionID.Declare
V.Local.sCUSTOMER_KEY.Declare
V.Local.sNote.Declare
V.Local.sDriver.Declare
V.Local.sRegNum.Declare

F.Intrinsic.Control.Try

'F.Intrinsic.Control.BlockEvents
'gui.FormIOP.GSGCIOP.Visible(False)
Gui.FormIOP.GSGCIOP.GetCellValueByColumnName("gvIOP","CUSTOMER_KEY",V.Args.RowIndex,V.Local.sCUSTOMER_KEY)

F.Intrinsic.Control.SelectCase(V.Args.column.UCase)
	F.Intrinsic.Control.Case("INBOUND_DEF_DESC")
		V.Local.sInboundID.Set(V.Dictionary.dictTransportDESC![V.Args.Value])
		F.Data.Dictionary.Create("dictArrangementIndex")
		F.Data.Dictionary.AddItem("dictArrangementIndex",V.Local.sCUSTOMER_KEY,V.Local.sInboundID)
		F.Data.DataTable.FillFromDictionary("dtIOP","dictArrangementIndex","CUSTOMER_KEY","InboundDefault")
		F.Data.Dictionary.Close("dictArrangementIndex")
		F.Data.DataTable.FillFromDictionary("dtIOP","dictTransArrangement","InboundDefault","Inbound_Def_Desc")
		
	F.Intrinsic.Control.Case("OUTBOUND_DEF_DESC")
		V.Local.sOutboundID.Set(V.Dictionary.dictTransportDESC![V.Args.Value])
		F.Data.Dictionary.Create("dictArrangementIndex")
		F.Data.Dictionary.AddItem("dictArrangementIndex",V.Local.sCUSTOMER_KEY,V.Local.sOutboundID)
		F.Data.DataTable.FillFromDictionary("dtIOP","dictArrangementIndex","CUSTOMER_KEY","OutboundDefault")
		F.Data.Dictionary.Close("dictArrangementIndex")
		F.Data.DataTable.FillFromDictionary("dtIOP","dictTransArrangement","OutboundDefault","Outbound_Def_Desc")
		
	F.Intrinsic.Control.Case("POS_DEF_DESC")
		V.Local.sPossessionID.Set(V.Dictionary.dictTransportDESC![V.Args.Value])
		F.Data.Dictionary.Create("dictArrangementIndex")
		F.Data.Dictionary.AddItem("dictArrangementIndex",V.Local.sCUSTOMER_KEY,V.Local.sPossessionID)
		F.Data.DataTable.FillFromDictionary("dtIOP","dictArrangementIndex","CUSTOMER_KEY","PossessionDefault")
		F.Data.Dictionary.Close("dictArrangementIndex")
		F.Data.DataTable.FillFromDictionary("dtIOP","dictTransArrangement","PossessionDefault","PossessionDefault")
	
	F.Intrinsic.Control.Case("NOTE")
		V.Local.sNote.Set(v.Args.Value.Left400)
		F.Data.Dictionary.Create("dictFill")
		F.Data.Dictionary.AddItem("dictFill",V.Local.sCUSTOMER_KEY,V.Local.sNote.Trim)
		F.Data.DataTable.FillFromDictionary("dtIOP","dictFill","CUSTOMER_KEY","NOTE")
		F.Data.Dictionary.Close("dictFill")
		
	F.Intrinsic.Control.Case("DRIVERNAME")
		V.Local.sDriver.Set(v.Args.Value.Left50)
		F.Data.Dictionary.Create("dictFill")
		F.Data.Dictionary.AddItem("dictFill",V.Local.sCUSTOMER_KEY,V.Local.sDriver.Trim)
		F.Data.DataTable.FillFromDictionary("dtIOP","dictFill","CUSTOMER_KEY","DRIVERNAME")
		F.Data.Dictionary.Close("dictFill")
		
	F.Intrinsic.Control.Case("REGNUM")
		V.Local.sRegNum.Set(v.Args.Value.Left10)
		F.Data.Dictionary.Create("dictFill")
		F.Data.Dictionary.AddItem("dictFill",V.Local.sCUSTOMER_KEY,V.Local.sRegNum.Trim)
		F.Data.DataTable.FillFromDictionary("dtIOP","dictFill","CUSTOMER_KEY","REGNUM")
		F.Data.Dictionary.Close("dictFill")
	
	F.Intrinsic.Control.Case("SELECT")
		
	F.Intrinsic.Control.Case("INBOUND_NEEDED")
	
	F.Intrinsic.Control.Case("OUTBOUND_NEEDED")
	
	F.Intrinsic.Control.Case("POSSESSON_NEEDED")
	
F.Intrinsic.Control.EndSelect

'gui.FormIOP.GSGCIOP.Visible(True)
'F.Intrinsic.Control.UnBlockEvents

f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.GSGCIOP_CellValueChanged.End

Program.Sub.FormIOP_UnLoad.Start
F.Intrinsic.Control.Try
	
	F.Data.DataTable.Close("dtIOP")
	Gui.FormIOP..Visible(False)
	gui.Form..SetFocus
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.FormIOP_UnLoad.End

Program.Sub.cmdIOP_Click.Start
V.Local.iCnt.Declare
V.Local.sCustomerKey.Declare
V.Local.iTransportArrangement.Declare
V.Local.sTNID.Declare
V.Local.sColumn.Declare
V.Local.sColumn2.Declare
V.Local.sSQL.Declare
V.Local.sDriver.Declare
V.Local.sRegNum.Declare
V.Local.sDesc.Declare
	
F.Intrinsic.Control.Try
	F.Intrinsic.Control.BlockEvents
	
	f.Intrinsic.Control.If(v.DataTable.dtIOPCreate.Exists)
		f.Data.DataTable.Close("dtIOPCreate")
	f.Intrinsic.Control.EndIf
	
	'Create Transport Notes and their lines
	F.Data.DataView.Create("dtIOP","dvIOP","22","SELECT = True","ID ASC")
	f.Data.DataView.ToDataTable("dtIOP","dvIOP","dtIOPCreate",True)
	F.Data.DataView.Close("dtIOP","dvIOP")
	F.Data.DataTable.Close("dtIOP")
	'Find out if we are Inbounding, Outbounding, or Possessioning. This will let us choose which column to get the qty to be added to the Transport Lines
	
	F.Intrinsic.Control.SelectCase(V.Screen.FormIOP!cmdIOP.Caption)
	F.Intrinsic.Control.Case("Inbound")
		V.Local.sColumn.Set("Inbound_Needed0")
		V.Local.sColumn2.Set("InboundDefault")
	F.Intrinsic.Control.Case("Outbound")
		V.Local.sColumn.Set("Outbound_Needed0")
		V.Local.sColumn2.Set("OutboundDefault")
	F.Intrinsic.Control.Case("Possession")
		V.Local.sColumn.Set("Possesson_Needed0")
		V.Local.sColumn2.Set("PossessionDefault")
	F.Intrinsic.Control.EndSelect
	
	V.Global.sTNIDFilter.Set("")
	V.Local.sCustomerKey.Set("")
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtIOPCreate.RowCount--,1)
		F.Intrinsic.Control.If(V.Local.sCustomerKey,<>,V.DataTable.dtIOPCreate(V.Local.iCnt).Customer_Key!FieldValTrim)
			'New Customer, Lets make a new Transport Note ID
			V.Local.iTransportArrangement.Set(V.DataTable.dtIOPCreate(V.Local.iCnt).[V.Local.sColumn2]!Fieldval)
			V.Local.sDriver.Set(V.DataTable.dtIOPCreate(V.Local.iCnt).DriverName!FieldValTrim)
			V.Local.sRegNum.Set(V.DataTable.dtIOPCreate(V.Local.iCnt).RegNum!FieldValTrim)
			V.Local.sDesc.Set(V.DataTable.dtIOPCreate(V.Local.iCnt).Note!FieldValTrim)
			F.Intrinsic.Control.CallSub(CreateTransportNoteID,"TransportArrangementID",V.Local.iTransportArrangement,"Desc",V.Local.sDesc,"Driver",V.Local.sDriver,"RegNum",V.Local.sRegNum)
			V.Local.sTNID.Set(V.Args.TNID)
			
			'Build the Where in filter to use later when we display the transport notes that we just created here....
			F.Intrinsic.Control.If(V.Global.sTNIDFilter,=,"")
				F.Intrinsic.String.Build("'{0}'",V.Local.sTNID,V.Global.sTNIDFilter)	
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0},'{1}'",V.Global.sTNIDFilter,V.Local.sTNID,V.Global.sTNIDFilter)	
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		V.Local.sCustomerKey.Set(V.DataTable.dtIOPCreate(V.Local.iCnt).Customer_Key!FieldValTrim)
		
		'Add the line to the Transport Note
		F.Intrinsic.String.Build("Insert Into GAB_6559_Transport_WO (WorkOrderID,LID,TransportNoteID,ItemQuantity) Values ('{0}','{1}','{2}','{3}')",V.DataTable.dtIOPCreate(V.Local.iCnt).ID!FieldVal,V.DataTable.dtIOPCreate(V.Local.iCnt).LID!FieldVal,V.Local.sTNID,V.DataTable.dtIOPCreate(V.Local.iCnt).[V.Local.sColumn]!FieldVal,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
		
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	'Clear the DDL so that the user cant disrupt the load of the new Transport Notes.... 
	gui.Form.ddlTransportArrangement.Text("")
	
	F.Intrinsic.Control.UnBlockEvents
	Gui.FormIOP..Visible(False)
	'Add in a Argument to filter the Transport manifest gv to the TransportNotes that were just created.... Its a Global varriable instead V.Global.sTNIDFilter
	F.Intrinsic.Control.CallSub(Form_UserButtonClicked,"Button","TransportManifest")
	gui.Form..SetFocus
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdIOP_Click.End

#End Region ' IOP Form

Program.Sub.cmdCustomerLookUp_Click.Start
f.Intrinsic.Control.Try

V.Local.sSQL.Declare(String)
V.Local.sCol.Declare(String)
V.Local.sColW.Declare(String)
V.Local.sRet.Declare(String)

V.Local.sSQL.Set("SELECT RTRIM(CUSTOMER) as CUSTOMER, NAME_CUSTOMER FROM V_CUSTOMER_MASTER")
'Split Column Names into an array (*!* delimited string)
F.Intrinsic.String.Split("Customer Number*!*Name Customer","*!*",V.Local.sCol)
'Split Column widths into an array (*!* delimited string)
F.Intrinsic.String.Split("600*!*3000","*!*",V.Local.sColW)
F.Intrinsic.UI.Browser("CUSTOMER BROWSER","Conx",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	gui.Form.txtCustomer.Text(V.Local.sRet(0))
F.Intrinsic.Control.EndIf


f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdCustomerLookUp_Click.End

Program.Sub.CustomerShipLookUp.Start
f.Intrinsic.Control.Try

V.Local.sSQL.Declare(String)
V.Local.sCol.Declare(String)
V.Local.sColW.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sCustomerKey.Declare
V.Local.sCustomerKey.Set("")
'V.Local.sPriceGroupID.Declare
'V.Local.sPriceGroupID.Set("")


V.Local.sSQL.Set("select RTRIM(SHIP_KEY) as SHIP_KEY, RTRIM(CUSTOMER_NAME) as CUSTOMER_NAME, RTRIM(PriceGroupID) as PriceGroupID from GAB_6559_Customer_Xref")
'Split Column Names into an array (*!* delimited string)
F.Intrinsic.String.Split("Customer Key*!*Customer Name*!*Price Group","*!*",V.Local.sCol)
'Split Column widths into an array (*!* delimited string)
F.Intrinsic.String.Split("700*!*3000*!*600","*!*",V.Local.sColW)
F.Intrinsic.UI.Browser("Customer Browser","Conx",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	V.Local.sCustomerKey.Set(V.Local.sRet(0))
'	V.Local.sPriceGroupID.Set(V.Local.sRet(2))
F.Intrinsic.Control.EndIf

F.Intrinsic.Variable.AddRV("CustomerKey",V.Local.sCustomerKey)
'F.Intrinsic.Variable.AddRV("PriceGroupID",V.Local.sPriceGroupID)


f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.CustomerShipLookUp.End


Program.Sub.gsTransport_RowCellClick.Start
Program.Sub.gsTransport_RowCellClick.End

Program.Sub.Comments.Start
${$5$}$20.1.8577.26074$}$1
${$6$}$sstanka$}$20230718134902771$}$mP+zz5Tw3sT2/nyap+FbWm4triMPqjXDmoAVYWtNVyc0wOC0szJbe1q1YelrkSkzniFrL60iEg8=
Program.Sub.Comments.End
